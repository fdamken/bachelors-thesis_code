{
  "artifacts": [
    "loglikelihood.png",
    "sampled_states.png",
    "states.png"
  ],
  "command": "main",
  "experiment": {
    "base_dir": "/home/fabian/bachelor-thesis/lgds/src",
    "dependencies": [
      "matplotlib==3.2.1",
      "numpy==1.18.4",
      "sacred==0.8.1"
    ],
    "mainfile": "experiment.py",
    "name": "state3d_observation6d_multisequence",
    "repositories": [
      {
        "commit": "e82cb58f22e17955dfbbc35516a6d7ec57b03ed5",
        "dirty": false,
        "url": "ssh://github-fdamken/fdamken/lgds.git"
      },
      {
        "commit": "e82cb58f22e17955dfbbc35516a6d7ec57b03ed5",
        "dirty": false,
        "url": "ssh://github-fdamken/fdamken/lgds.git"
      },
      {
        "commit": "e82cb58f22e17955dfbbc35516a6d7ec57b03ed5",
        "dirty": false,
        "url": "ssh://github-fdamken/fdamken/lgds.git"
      },
      {
        "commit": "e82cb58f22e17955dfbbc35516a6d7ec57b03ed5",
        "dirty": false,
        "url": "ssh://github-fdamken/fdamken/lgds.git"
      }
    ],
    "sources": [
      [
        "__init__.py",
        "_sources/__init___d41d8cd98f00b204e9800998ecf8427e.py"
      ],
      [
        "em.py",
        "_sources/em_fbe9d79ac952d79b65becb7dae88005e.py"
      ],
      [
        "experiment.py",
        "_sources/experiment_25a34bdaaaabfabd3b179e68471329f8.py"
      ],
      [
        "util.py",
        "_sources/util_c09411da402310b39da38fd10aca6b35.py"
      ]
    ]
  },
  "heartbeat": "2020-05-17T14:04:13.786039",
  "host": {
    "ENV": {},
    "cpu": "Intel(R) Core(TM) i5-4690 CPU @ 3.50GHz",
    "gpus": {
      "driver_version": "440.64.00",
      "gpus": [
        {
          "model": "GeForce GTX 970",
          "persistence_mode": false,
          "total_memory": 4039
        }
      ]
    },
    "hostname": "H97-D3H",
    "os": [
      "Linux",
      "Linux-4.4.0-176-generic-x86_64-with-Ubuntu-16.04-xenial"
    ],
    "python_version": "3.7.7"
  },
  "meta": {
    "command": "main",
    "options": {
      "--beat-interval": null,
      "--capture": null,
      "--comment": null,
      "--debug": true,
      "--enforce_clean": false,
      "--file_storage": null,
      "--force": false,
      "--help": false,
      "--loglevel": null,
      "--mongo_db": null,
      "--name": "state3d_observation6d_multisequence",
      "--pdb": false,
      "--print-config": false,
      "--priority": null,
      "--queue": false,
      "--s3": null,
      "--sql": null,
      "--tiny_db": null,
      "--unobserved": false
    }
  },
  "resources": [],
  "result": {
    "estimations": {
      "A": {
        "base": {
          "dtype": "float64",
          "py/object": "numpy.ndarray",
          "values": [
            [
              0.6782815015870503,
              -0.7289747457999879,
              -1.0120944549935302
            ],
            [
              0.02475183369546817,
              1.1430582961740503,
              0.05945006005144024
            ],
            [
              0.11623974333489556,
              0.20070268227280272,
              1.3789436724462023
            ]
          ]
        },
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "shape": [
          3,
          3
        ],
        "strides": [
          8,
          24
        ],
        "values": [
          [
            0.6782815015870503,
            0.02475183369546817,
            0.11623974333489556
          ],
          [
            -0.7289747457999879,
            1.1430582961740503,
            0.20070268227280272
          ],
          [
            -1.0120944549935302,
            0.05945006005144024,
            1.3789436724462023
          ]
        ]
      },
      "C": {
        "byteorder": "<",
        "dtype": "float64",
        "order": "F",
        "py/object": "numpy.ndarray",
        "shape": [
          6,
          3
        ],
        "values": "eJwBkABv/xz152O9LlK/kFT12SW9vr+/EMsk7xm0vyQkR6IcjlK/tebroWu9vr9z1SoRyRu0v0aUUN/2B8I//ZnBRGGe3T+GWGTquD/hP3/RgqUbCcI/xoT9dHie3T9uijbcFUDhP5bXYqTcJ9A/el4ysMsz2z9+mHew26fmPzah5fabJ9A/1QDcCLkz2z8PTD8Gt6fmP/emS9w="
      },
      "Q": {
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "values": [
          [
            3.290706259502592e-07,
            0.0,
            0.0
          ],
          [
            0.0,
            0.0005681510897096703,
            0.0
          ],
          [
            0.0,
            0.0,
            0.00019022838416870455
          ]
        ]
      },
      "R": {
        "byteorder": "<",
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "shape": [
          6,
          6
        ],
        "values": "eJxjYGBgeHj6rR0D6eCAecND0vU5TOH/rnfLngz7Ypq/fyDHnQWBv16Qru9AQliS4S17AJsrEZY="
      },
      "V1": {
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "values": [
          [
            4.785566096523167e-05,
            -0.0002966716241784868,
            0.00033282935323871826
          ],
          [
            -0.0002966716241784868,
            0.003458040392850151,
            -0.0030820141728154036
          ],
          [
            0.00033282935323871826,
            -0.0030820141728154036,
            0.0029574764666103356
          ]
        ]
      },
      "pi1": {
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "values": [
          -26.521763688730438,
          -45.55818858474036,
          -62.92304106566621
        ]
      },
      "x": {
        "byteorder": "<",
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "shape": [
          10,
          3,
          50
        ],
        "values": "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"
      }
    },
    "iterations": 1125,
    "log_likelihood": {
      "dtype": "float64",
      "py/object": "numpy.float64",
      "value": 15263.311467083206
    },
    "losses": {
      "A": {
        "dtype": "float64",
        "py/object": "numpy.float64",
        "value": 1.3679143447333009
      },
      "C": {
        "dtype": "float64",
        "py/object": "numpy.float64",
        "value": 4.28811725223876
      },
      "Q": {
        "dtype": "float64",
        "py/object": "numpy.float64",
        "value": 0.0005866075658215741
      },
      "R": {
        "dtype": "float64",
        "py/object": "numpy.float64",
        "value": 0.5786684022676255
      },
      "V0": {
        "dtype": "float64",
        "py/object": "numpy.float64",
        "value": 0.006322438984112471
      },
      "m0": {
        "dtype": "float64",
        "py/object": "numpy.float64",
        "value": 83.73331224735719
      },
      "x": {
        "dtype": "float64",
        "py/object": "numpy.float64",
        "value": 1655.1943586189968
      }
    }
  },
  "start_time": "2020-05-17T14:04:01.072394",
  "status": "COMPLETED",
  "stop_time": "2020-05-17T14:04:13.784658"
}