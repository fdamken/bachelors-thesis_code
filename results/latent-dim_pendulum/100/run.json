{
  "artifacts": [
    "checkpoint_00001.json",
    "checkpoint_00005.json",
    "checkpoint_00010.json",
    "checkpoint_00015.json",
    "checkpoint_00020.json",
    "checkpoint_00025.json",
    "checkpoint_00030.json",
    "checkpoint_00035.json",
    "checkpoint_00040.json",
    "checkpoint_00045.json",
    "checkpoint_00050.json",
    "checkpoint_00055.json",
    "checkpoint_00060.json",
    "checkpoint_00065.json",
    "checkpoint_00070.json",
    "checkpoint_00075.json",
    "checkpoint_00080.json",
    "checkpoint_00085.json",
    "checkpoint_00090.json",
    "checkpoint_00095.json",
    "checkpoint_00100.json"
  ],
  "command": "_main",
  "experiment": {
    "base_dir": "/home/fdamken/Development/study/bachelors-thesis/code/src",
    "dependencies": [
      "jsonpickle==1.4.1",
      "numpy==1.19.1",
      "sacred==0.8.1",
      "torch==1.6.0"
    ],
    "mainfile": "experiment.py",
    "name": "vae-koopman",
    "repositories": [
      {
        "commit": "8847dd3f0a02004354b89588aea588ae67430fab",
        "dirty": false,
        "url": "ssh://github/fdamken/bachelors-thesis_code.git"
      },
      {
        "commit": "8847dd3f0a02004354b89588aea588ae67430fab",
        "dirty": false,
        "url": "ssh://github/fdamken/bachelors-thesis_code.git"
      },
      {
        "commit": "8847dd3f0a02004354b89588aea588ae67430fab",
        "dirty": false,
        "url": "ssh://github/fdamken/bachelors-thesis_code.git"
      },
      {
        "commit": "8847dd3f0a02004354b89588aea588ae67430fab",
        "dirty": false,
        "url": "ssh://github/fdamken/bachelors-thesis_code.git"
      }
    ],
    "sources": [
      [
        "__init__.py",
        "_sources/__init___f9f4d0d38a85c45bc7c1d0995109976e.py"
      ],
      [
        "em.py",
        "_sources/em_0dfb562a29ce00f1d2e5ceca9acf917e.py"
      ],
      [
        "experiment.py",
        "_sources/experiment_a3a6bff46e5ec172a3575105ea736b68.py"
      ],
      [
        "util.py",
        "_sources/util_58e067b29e6cc05bacf1af9314bea9b2.py"
      ]
    ]
  },
  "heartbeat": "2020-11-11T04:58:06.317111",
  "host": {
    "ENV": {},
    "cpu": "Intel(R) Core(TM) i7-10700K CPU @ 3.80GHz",
    "gpus": {
      "driver_version": "455.23.05",
      "gpus": [
        {
          "model": "GeForce GTX 970",
          "persistence_mode": true,
          "total_memory": 4040
        }
      ]
    },
    "hostname": "crush",
    "os": [
      "Linux",
      "Linux-5.4.0-52-generic-x86_64-with-glibc2.10"
    ],
    "python_version": "3.8.5"
  },
  "meta": {
    "command": "_main",
    "options": {
      "--beat-interval": null,
      "--capture": null,
      "--comment": null,
      "--debug": false,
      "--enforce_clean": false,
      "--file_storage": null,
      "--force": false,
      "--help": false,
      "--loglevel": null,
      "--mongo_db": null,
      "--name": null,
      "--pdb": false,
      "--print-config": false,
      "--priority": null,
      "--queue": false,
      "--s3": null,
      "--sql": null,
      "--tiny_db": null,
      "--unobserved": false,
      "COMMAND": null,
      "UPDATE": [
        "latent_dim=2",
        "seed=1234",
        "pendulum"
      ],
      "help": false,
      "with": true
    }
  },
  "resources": [],
  "result": {
    "estimations": {
      "A": {
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "values": [
          [
            0.9952199399992763,
            -0.012151123424974826
          ],
          [
            0.03735850231043775,
            0.9953194370702151
          ]
        ]
      },
      "B": null,
      "Q": {
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "values": [
          [
            0.02724728479804211,
            0.0
          ],
          [
            0.0,
            0.003641597556480576
          ]
        ]
      },
      "R": {
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "values": [
          [
            0.009360790857914253,
            0.0
          ],
          [
            0.0,
            0.007917334100605104
          ]
        ]
      },
      "V0": {
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "values": [
          [
            9.117104312172941e-06,
            0.0
          ],
          [
            0.0,
            6.688584925251817e-06
          ]
        ]
      },
      "V_hat": {
        "byteorder": "<",
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "shape": [
          1,
          2,
          2,
          500
        ],
        "values": ""
      },
      "g_params": {
        "py/reduce": [
          {
            "py/type": "collections.OrderedDict"
          },
          {
            "py/tuple": []
          },
          null,
          null,
          {
            "py/tuple": [
              {
                "py/tuple": [
                  "0.weight",
                  {
                    "py/reduce": [
                      {
                        "py/function": "torch._utils._rebuild_tensor_v2"
                      },
                      {
                        "py/tuple": [
                          {
                            "py/reduce": [
                              {
                                "py/function": "torch.storage._load_from_bytes"
                              },
                              {
                                "py/tuple": [
                                  {
                                    "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWA4AAAA5MzkzNDM1MjkxNjA5NnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDgAAADkzOTM0MzUyOTE2MDk2cQFhLmQAAAAAAAAAemdGMH538z8HKrkZsTfwv3PAgExNK6k/HfEcUeaYwb8p8fmxx7f3v+gtPmJxI/O/QzCe3J5J0b9R1XVh1nH0v3K35kHC67u/fBM9AiVs7D+nnx/V2s/dP3vXC5cjJsq/7+FHWi4l7L/0VdyWvRH3v6AD6MCrAuK/0qJEBXlR9z8qixv/0k+/P5gUq6ZPX+M/QlPzZvNX0L+zgQdTOMmbvzUD6cgywNU/Mh5jclCszD/1eFTQULLFvzZ5WY5+gQDAvcDZPLk9tL9ln54NYM3rv+33ar3yPfs/x7YKdwS/6L/HXwiwZsTpP/BTcjCamOo/zy0k3PLX8D9z/mTZuxq+v2nyqP0/h+A/KHA/wjak5D9ptA5FgtkBwFqRXP9mbdQ/UJJtrO0bvL+7CbXXJMnGv7hSaw2O4PI/G1a3QHVCA8CGv7t2yIHwP2gqorsRWPe/czadwZvYAUBCmGnoXdz0v4AlTkavpMw/0FCzx959zT9XELbHB2zMv3Gr7Dxyku8/n6yNm19D8b8akVcFqxS0P3+vnL9p4fW/2iEZ5i+42r8dY8DvsxCMv4yJavdfz8G/fcklAOde87+ercCwAozlP1gDSMW+ifY/+M8pcyGsxL9WepzlMVLyvxf3+fqhmPa/TaiVBFlo4b8XxT6/0yv1P2dtgbd9N/C/BCamq4An5z85aO6xPa33P7ihBAftmPY/vBrSfkN0/z8A18XAoTHYPyhnkxX8Jfa/TBCyl3qu8r8cfkSKkLzIv2jYQ5FKmOi/Ylz2WzMV7L+QTsqiqnvgv2WZ/8zsTO2/KCDPx9mD3j9XiSSL/w/6vxz0r9CQFsK/Y5wxaRgC5r9LG7XmZa/1P/aLK4eTOc4/MMEMGhuD7L/zIboU2bjiP2Yajb+DuOK/RFYV/063zL/xKTAgUBS+v6PCL5Pc0m6/JIoQSFBXuz8Zt4wbhZTZP12Ymhy8JgfA1e3fOua7678rKt1UMWPoP7TNJ6UBi/g/ljlLTo0V4b/NdAzuXtjdv7l97FKItfi/3q8xYtWZ5j8EEljoCnb9v5Uxr/jwWOU/mrPR6B+ru78="
                                  }
                                ]
                              }
                            ]
                          },
                          0,
                          {
                            "py/tuple": [
                              50,
                              2
                            ]
                          },
                          {
                            "py/tuple": [
                              2,
                              1
                            ]
                          },
                          false,
                          {
                            "py/reduce": [
                              {
                                "py/type": "collections.OrderedDict"
                              },
                              {
                                "py/tuple": []
                              },
                              null,
                              null,
                              {
                                "py/tuple": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "py/tuple": [
                  "0.bias",
                  {
                    "py/reduce": [
                      {
                        "py/function": "torch._utils._rebuild_tensor_v2"
                      },
                      {
                        "py/tuple": [
                          {
                            "py/reduce": [
                              {
                                "py/function": "torch.storage._load_from_bytes"
                              },
                              {
                                "py/tuple": [
                                  {
                                    "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWA4AAAA5MzkzNDM1MTM0NzA0MHECWAMAAABjcHVxA0syTnRxBFEugAJdcQBYDgAAADkzOTM0MzUxMzQ3MDQwcQFhLjIAAAAAAAAAWyNqknLmCcCwSur7MGL5v/RyEQeUAQ9A2Zc79oZi3r8R22q6bEAQwCMS1A36EsM/olZv/wtx5r/Ft6uh7MznPyE7vvPT7fK/8Dwpa33vpD8UM/JA04bDPxLHcY0PNwDAH0MLFdYFBEBTj16ItbMIwJ1X3+ljnhDAgpXyOsTZB0CJYMWOgHH0v43d/o9jjwlA1eog9wzLBUCni67tRB/wP1HJZM8NOw/ATveKcKeDGUCdLk+7WDELQPwsifibyQXA2/3ws5nq9r+rhag2LoT5PwQ9WUYclBHAaNztyG5pC8AelTykWJj9v/oNZ0NWJNO/IGeYXARUAEC04cJGLDL5PyVfop6XpglAO107hoQw/78Lrzj+u/oRwAqADcCXVABANm3ZeAYpBcD9PiRDADQBwD8VFl7YpgTAtclS6s0J4z+sN0zlK8AHwBUi/xjyUA5AqjJg/KXsAcBQDCCnMcEBQH7XoImqOvO/3Z0yEfwfA0B8hQjnb/YLQMc2a40FagBAEf8+DT/i+7+ADp+B3uEFQA=="
                                  }
                                ]
                              }
                            ]
                          },
                          0,
                          {
                            "py/tuple": [
                              50
                            ]
                          },
                          {
                            "py/tuple": [
                              1
                            ]
                          },
                          false,
                          {
                            "py/reduce": [
                              {
                                "py/type": "collections.OrderedDict"
                              },
                              {
                                "py/tuple": []
                              },
                              null,
                              null,
                              {
                                "py/tuple": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "py/tuple": [
                  "2.weight",
                  {
                    "py/reduce": [
                      {
                        "py/function": "torch._utils._rebuild_tensor_v2"
                      },
                      {
                        "py/tuple": [
                          {
                            "py/reduce": [
                              {
                                "py/function": "torch.storage._load_from_bytes"
                              },
                              {
                                "py/tuple": [
                                  {
                                    "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWA4AAAA5MzkzNDM0NzIzMjI4OHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDgAAADkzOTM0MzQ3MjMyMjg4cQFhLmQAAAAAAAAAxMQBVzQe1D/Qle7ZUs/gv7A+JAlhk/G/VJVpnO3P8T9ZL+APQsEBwI4OaqpWctw/1CAMMJDe6D+Eq1SDvEzWv0BGCJDQBPI/wAef5M2Shj9CH11am13Av4z0NnLKRe2/Ag6FMZJV8b/i89W1a+llP0hyG9YcHbI/+F9OdvYZ6z91nIF0p1/Tv521hBWhWOS/dmooTJ+H7T/KpVtA60viv84G4k5Ej9S/x2/lj3e5578DAHh1Wgrlv8A3+7STydu/D8/xJUKJrT+wmiQ4XD6XvwombYuv/bI/hj98c2258T9yLmQN0lf7vypssGdaXOs/0CEYdpjT4b9vr/53gxDHP7vo/302g9e/U0McNAZK7j/GkkkhaIL/P9++8mlhUeu/ss1Hz4FD5T+e45Xcly/hPwrkazxFPuW/7jw6goTA0L/Sjra9Ia8DwEsxO5fHqsy/walatJYSy7/9TL7eB0rmP4KPM+r85/A/TOi2jUu+xr+2fL42Cnj3P6rpSJXje+k/yL2o9ZaN8b+Bt+QW/CTvP+FoZc6jHdu/JzOu096D2D9mbVCnwDfnv9gnzbn8hZk/lR7ObZsw1L90R06ZbGmmv+2Vh58RedY/pxjFfEwb2D8ZUpzl8rrEv4tNhEujZIS/1l1NNpv8x7/6Ou38wTTgv7OxBQmC19w/uzOLQw4M4D/Dls0xlXC7v3utacDzT7g/OnDmzXYZy7/uAKZ9eji5v716Nc/VNt4/BrI4aJd24r/GUY1W3rPwP37Lpvdo1tE/cRMb1eJxzL/kIrjz9Xnzv6mt/6s9n98/Aarrs4pnzr+anQoPagPeP1YBE+I8wfE/EsQQzhVv3L8Mgkas7ErnPzdEzvq7A70/I/jLLwYl1D9H/6jwmYPUvyuEl3KLNuE/G3Hh8NJrsT/yXPEvZvfDvxUsEg0kxZC/IP5ffK/j579hZdQU9qb0v1alpt8xzt8/RDjhRVQD5T8EKEobl0TrP8bWwEzBUOM/pT0zcy4P378dhCNgONLBvzJF02mLYL4/utb9YKjx3b+X5eeYraK4P33ZDroIusi/9GT0JzTs2z8="
                                  }
                                ]
                              }
                            ]
                          },
                          0,
                          {
                            "py/tuple": [
                              2,
                              50
                            ]
                          },
                          {
                            "py/tuple": [
                              50,
                              1
                            ]
                          },
                          false,
                          {
                            "py/reduce": [
                              {
                                "py/type": "collections.OrderedDict"
                              },
                              {
                                "py/tuple": []
                              },
                              null,
                              null,
                              {
                                "py/tuple": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "py/tuple": [
                  "2.bias",
                  {
                    "py/reduce": [
                      {
                        "py/function": "torch._utils._rebuild_tensor_v2"
                      },
                      {
                        "py/tuple": [
                          {
                            "py/reduce": [
                              {
                                "py/function": "torch.storage._load_from_bytes"
                              },
                              {
                                "py/tuple": [
                                  {
                                    "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWA4AAAA5MzkzNDM1ODE2MzIwMHECWAMAAABjcHVxA0sCTnRxBFEugAJdcQBYDgAAADkzOTM0MzU4MTYzMjAwcQFhLgIAAAAAAAAAdqx2llq87D8rs9+Hmty/Pw=="
                                  }
                                ]
                              }
                            ]
                          },
                          0,
                          {
                            "py/tuple": [
                              2
                            ]
                          },
                          {
                            "py/tuple": [
                              1
                            ]
                          },
                          false,
                          {
                            "py/reduce": [
                              {
                                "py/type": "collections.OrderedDict"
                              },
                              {
                                "py/tuple": []
                              },
                              null,
                              null,
                              {
                                "py/tuple": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "latents": {
        "byteorder": "<",
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "shape": [
          1,
          2,
          500
        ],
        "values": ""
      },
      "m0": {
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "values": [
          1.0144009939688867,
          0.572687451251959
        ]
      }
    },
    "iterations": 100,
    "log_likelihood": {
      "dtype": "float64",
      "py/object": "numpy.float64",
      "value": 2730.4604478383467
    },
    "observations_train_noisy": {
      "byteorder": "<",
      "dtype": "float64",
      "py/object": "numpy.ndarray",
      "shape": [
        1,
        500,
        2
      ],
      "values": ""
    },
    "preprocessing": {
      "u_scale": null,
      "u_shift": null,
      "y_scale": null,
      "y_shift": null
    }
  },
  "start_time": "2020-11-11T04:57:20.619348",
  "status": "COMPLETED",
  "stop_time": "2020-11-11T04:58:06.313806"
}