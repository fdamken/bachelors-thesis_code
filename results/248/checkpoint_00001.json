{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        [
                            0.9943113100552593,
                            -0.029688744359989503,
                            0.03134809584808648
                        ],
                        [
                            -0.019319668085904632,
                            0.9334970083095251,
                            0.0568296293108658
                        ],
                        [
                            0.024331801353220533,
                            0.05942254122731863,
                            0.9622534089053854
                        ]
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    3,
                    3
                ],
                "strides": [
                    8,
                    24
                ],
                "values": [
                    [
                        0.9943113100552593,
                        -0.019319668085904632,
                        0.024331801353220533
                    ],
                    [
                        -0.029688744359989503,
                        0.9334970083095251,
                        0.05942254122731863
                    ],
                    [
                        0.03134809584808648,
                        0.0568296293108658,
                        0.9622534089053854
                    ]
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    1.0059448389190446,
                    0.9339418553163805,
                    0.9533427701099215
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.002694528506048748,
                    0.0015342449198635854
                ]
            },
            "V0": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    [
                        0.9287067299751406,
                        -0.06678766719464058,
                        0.027017658084899754
                    ],
                    [
                        -0.06678766719464058,
                        0.883650126395479,
                        0.12279953045870329
                    ],
                    [
                        0.027017658084899754,
                        0.12279953045870329,
                        0.7993693603313021
                    ]
                ]
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWA4AAAA5NDkwMTg3Mjc0MTI2NHECWAMAAABjcHVxA0seTnRxBFEugAJdcQBYDgAAADk0OTAxODcyNzQxMjY0cQFhLh4AAAAAAAAApSaGDffbzb8McALtYtHJv1B/9QVL6MK/WHoN2CaT4b/Vud+n6V6Ev2vgYFgNPa6/wAfi9Zek5D/ThJ/yY3nkPz2JUD1lH9a/74UnKu3M4r/iLF5ltGXiv0SZXKyml9S/Wx1gP6B94D+HyHMUwrXgP8SEsG1CJKC/lf33+UTD0z88VbjhFFXVvwdN47edG9E/GV2v/Gevnz9ynORhoIPMv8QmWDtH1OK/GwGWsXEIwz+mxbkpm2vFv659V1lRXtK/YN7INzj15L9EKfJ/PWDlvwiSQaH24tc/EXBuwddq4r9GJRA1k7rgvzT9sjYsC9K/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            10,
                                                            3
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            3,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWA4AAAA5NDkwMTg3MjUwMzQwOHECWAMAAABjcHVxA0sKTnRxBFEugAJdcQBYDgAAADk0OTAxODcyNTAzNDA4cQFhLgoAAAAAAAAAKDWzNdh/dT8gnEp0t9vbvzJ8aaG2A8e/xFM1zceJ2b/tkfO2bEzTP0CPBvQPA9I/aNwfIaFzzT+zmOqDeHXkv6GMA+bbjtO/sqRcPncgw78="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            10
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWA4AAAA5NDkwMTg3MzE1NzMyOHECWAMAAABjcHVxA0sUTnRxBFEugAJdcQBYDgAAADk0OTAxODczMTU3MzI4cQFhLhQAAAAAAAAAhq3IgjIj0D9HSDw6o5XPvwJ7KMY21qe/4WF5OaoFxL/VsTlYuTPUP4eRm/HTNMQ/wFBlsT1usr+uYdnXmLjKv0OOfGos9rg/P+VkSLJNnj9q/a4jHvXFP9ja0R+xVri/FpxFGTwruL8IgTLHTN+4P2V1owrQ254/QCnE6gE8xD+XQNasAz6av1Q8+jZ8sLK/2ceb2gkPtb+FuTkXSmC6vw=="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            10
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            10,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWA4AAAA5NDkwMTg3MzE4MDUxMnECWAMAAABjcHVxA0sCTnRxBFEugAJdcQBYDgAAADk0OTAxODczMTgwNTEycQFhLgIAAAAAAAAAzGumijgf0r8KhJu0CGW8Pw=="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    3,
                    50
                ],
                "values": "eJwNyH040wkAB/CpaGPmNy+bl2E/2+/ouiOLWXnZl673IhXRuaxQJq7btYc52XVRLU4vdEe6XHIKletF4R6pVNLbo0fL1FW6bqTdtWgXQnb99XmeT3jkp2U9omFpuipPoJw3IVVUNgbst7GAdvuSotPaqUhJMjplqa1Qpws/ucSGgfsVJRxNrg3elgwEzdHZglKx48aZBBL2yhq2CtjwyS5wS/WzR+GBjnVcfweYyKIDp3wcsax5b9pyjhPyy80RwjEnTIZlTSRpOeg/dvzHBdVcvCzWyBkZzuj1t8w2zHTBqaye+Z+8cEFawErJyD5XbHR6nvxToBtG24ij4gduGOt5VMeS89D0oH191AgPxS62L33U7lgYQWu/9cEd3e50dmKmB268MuY4DniA5yhROq7yhLT4qkTT6ImZiiujd6z5UK8zJF0Q82Fd/fD7kkQ+KuI76dk7+VjDI5JUNXzQq/trqjr4yAkraGb282HcVr/oBo2EfvuI8ZkzCV3Xt8GbfUn06oPbc8JJmJTKL7xWkliuaTryjYzE6N3ZU7PTSfT55dAjM0kMtixunaImkd8a3FmXRyJXW1GxdjcJ1SG53HsPiXJVaGBG/qA0NE+SYnw6JKX1HX6t+tUk9U4tjasseyeNbd5Uee3MiFTUG7Ch6tF7aZfz0RbKekKaYFb/NhA8KZ1OtHCmBNLwnUPV17MWWaApThx9MWYKrlipbzISpiL5vaDIGD8NmzJCxDsiLfGkyy1GMscKd/sWj3a4TMc9/q1Ct8Hp2DUrNDOwhY5TjKAsXzUDqWV9DTPE1hAN322L1lvjcoRwRbfGBvpw81mDgIkn9befXr/ABLzPV/4SZovnq4utTrba4mrVO+0MMQuDWo+QVdUslOuGy9cz7WA8G522b7MdHqv1C7jX7FBuDmeWMwjETxprCV8CBIZqbaMIzMmYrf89nUB0IpPH3U1Afg5LkisI/BF0403zOQIjhihFyHUCBd7ENvsHBL6fRilTegmk7y97vf4VgdbAjlmSIQKicfEd3ggBxabOzxePE3h2sjx+4gMBbdk/h3PMBJJ73qx1oLHh3ldg4n50fuvy2v6PP/xZQu6yifdS5oYXNW3BFuiWBUgGaJbQHN9i9URBR7r+nt/IMRvE3F91v/EoC6UOndX1zQTmqsSTXxH2YJmXmipiHSDqiXkl2esIyiCOrG1ywsr6hRJfHQfHLh1ouGbgov3Muzjhf86gtISHzuSC1Eszd8wzuMKn+kTjFZ0bgngJMUdaeOBeZq7xOuSOZ4kdxMEMD+Q2qVNEcz2R5xdyXWL2hGz1IHPLOj4+hNkn1TXzoQi1XJbCJmGW2MkbUkiEZ15yrbtI4rbRYk/sNC/4/U0/fTPSCzLRX18yfvaC3N81mnrshaf3dkkEbgJ0qZMu0uMFiFD6ZDwqEYBdtJZWekcA89vzDuE0IQoPWix46C9EGp/jHSUT4lCD2KemUIjicfku3Xkh8lXOvl09QpgUytKCMSEEHjMODzpT8LX/M2xoNoVYMys7cymFE2OcfzcmUqiVnS2t3kKhfivrB/Y2CsltYyt25lPYMGF62a2h8D+D+vjR"
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        1.3874135917620978,
                        1.0323307113353963,
                        1.6240963837506661
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    3
                ],
                "values": [
                    1.3874135917620978,
                    1.0323307113353963,
                    1.6240963837506661
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    50,
                    2
                ],
                "values": "eJwNzY1L03kcB3BNtDVn1oTUzJutVraC7Elnqe+ktFooEmKYSd6UBMthJUm3Ij2lB0/MoCfLyuhRraZpVix2YWc4U7fv77fttH1+TrNZmHRyV9b01LvXP/AaN482tm4WsLrvy0xstx1TJa6zG6MFXEjY7c68bsfS3PCkV2sEFJr9PZK1dgz7qia2KQWIOz1E4s12mBZdrmJyARPKZ0GVUjsy9nf4Z4YISCnPSbK7bIi0JReNBAgoljut/S9sKMh/9OaYREDezV7crrThe2zulNhbQEWvQRuaY8OOKzMLb0wRFnWGhqg32qAfc/+0bpxQc+1byrL5Npx91yfq/EIItA/K9Z+sSBMt6dV8JATlhNcPvrLi0c70iikn4fH5Vh9DtRVbLnoorvYSDkgW71MdsWL4a80tFSPkDt0eSEuyoqT6iWefibDptPz3gHArgln7Vl0bwatz+YaDXlaYRRl5MgNB43SVZjp5OLvGD7U3E37ZG/nPBwOP2o7QjPyHhK9RV9nMFR5lb1IVgXcJE6bowoajPIIawyxt1wkxXR8iXak8fCp9MgouET6nS4/Xr+MhPfNbu+wcwfjXwMMfUh4LXev92WnC6IEF0d1/cwj2PRNVVkxYOzfssoLnoDgpjos+RmBF0q0zzRy0rnj52CFCRUPd690XOcR7tgw9yCPU++2oXVXEwfvpcEl2NuFb9mSeLp1D7Kysf2V7CQbbYUN8DIdTc+7t6k8l9HwWRZyQcagWo+xGEuHXKmP+Si8O6pymqqxEQqN/TJj6I0P5hdKipSC0LGBu+1sGjSpGNRJF0LYUNpsbGX74arimCEJcertk7SWGyhFdgm4FQfKnqGtSx1DcM+98opyw5edVRqWGIYHdbwkI+f+v+KP15XaGgpUd+vcBBFmKX5V+NYN+vbukWUJQeo0oPQMZ3ma3KU95E/bvc2n10xbUJTfU7Zl2wHxyjfr5sAXb6zdNR3x3YGjgflOw2YLX6snlc8YcuJNlqmXPLEhZcnjZ0CcHquOMwf21FsQnhruNgw6YQtIUseUWzHLdvVnzzoG2idn86BEL/gMUFZSa"
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    50,
                    2
                ],
                "values": "eJwNzY1L03kcB3BNtDVn1oTUzJutVraC7Elnqe+ktFooEmKYSd6UBMthJUm3Ij2lB0/MoCfLyuhRraZpVix2YWc4U7fv77fttH1+TrNZmHRyV9b01LvXP/AaN482tm4WsLrvy0xstx1TJa6zG6MFXEjY7c68bsfS3PCkV2sEFJr9PZK1dgz7qia2KQWIOz1E4s12mBZdrmJyARPKZ0GVUjsy9nf4Z4YISCnPSbK7bIi0JReNBAgoljut/S9sKMh/9OaYREDezV7crrThe2zulNhbQEWvQRuaY8OOKzMLb0wRFnWGhqg32qAfc/+0bpxQc+1byrL5Npx91yfq/EIItA/K9Z+sSBMt6dV8JATlhNcPvrLi0c70iikn4fH5Vh9DtRVbLnoorvYSDkgW71MdsWL4a80tFSPkDt0eSEuyoqT6iWefibDptPz3gHArgln7Vl0bwatz+YaDXlaYRRl5MgNB43SVZjp5OLvGD7U3E37ZG/nPBwOP2o7QjPyHhK9RV9nMFR5lb1IVgXcJE6bowoajPIIawyxt1wkxXR8iXak8fCp9MgouET6nS4/Xr+MhPfNbu+wcwfjXwMMfUh4LXev92WnC6IEF0d1/cwj2PRNVVkxYOzfssoLnoDgpjos+RmBF0q0zzRy0rnj52CFCRUPd690XOcR7tgw9yCPU++2oXVXEwfvpcEl2NuFb9mSeLp1D7Kysf2V7CQbbYUN8DIdTc+7t6k8l9HwWRZyQcagWo+xGEuHXKmP+Si8O6pymqqxEQqN/TJj6I0P5hdKipSC0LGBu+1sGjSpGNRJF0LYUNpsbGX74arimCEJcertk7SWGyhFdgm4FQfKnqGtSx1DcM+98opyw5edVRqWGIYHdbwkI+f+v+KP15XaGgpUd+vcBBFmKX5V+NYN+vbukWUJQeo0oPQMZ3ma3KU95E/bvc2n10xbUJTfU7Zl2wHxyjfr5sAXb6zdNR3x3YGjgflOw2YLX6snlc8YcuJNlqmXPLEhZcnjZ0CcHquOMwf21FsQnhruNgw6YQtIUseUWzHLdvVnzzoG2idn86BEL/gMUFZSa"
            }
        },
        "iterations": 1
    }
}