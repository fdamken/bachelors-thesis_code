{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        [
                            0.9707351227351236,
                            -0.02355936058977483,
                            0.03188752357239022
                        ],
                        [
                            -0.04626478824640352,
                            1.0188662939332394,
                            0.006062887264047065
                        ],
                        [
                            0.01482724850531976,
                            0.037041736674104854,
                            1.0228262439708118
                        ]
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    3,
                    3
                ],
                "strides": [
                    8,
                    24
                ],
                "values": [
                    [
                        0.9707351227351236,
                        -0.04626478824640352,
                        0.01482724850531976
                    ],
                    [
                        -0.02355936058977483,
                        1.0188662939332394,
                        0.037041736674104854
                    ],
                    [
                        0.03188752357239022,
                        0.006062887264047065,
                        1.0228262439708118
                    ]
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.019398989964501272,
                    0.006782692961506859,
                    0.007688353623609368
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    1.0195144177771454e-08,
                    1.0824694191668981e-07
                ]
            },
            "V0": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    [
                        0.0015417703650584258,
                        0.00027742530135999033,
                        -0.0010249664418271465
                    ],
                    [
                        0.00027742530135999033,
                        0.012502134017124092,
                        -0.004351933027942179
                    ],
                    [
                        -0.0010249664418271465,
                        -0.004351933027942179,
                        0.002152142743720553
                    ]
                ]
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWA4AAAA5NDkwMTg3Mjc0MTI2NHECWAMAAABjcHVxA0seTnRxBFEugAJdcQBYDgAAADk0OTAxODcyNzQxMjY0cQFhLh4AAAAAAAAAfhnW+L1nwL+izsg820mqv9AVyMX5/MS/UWMvJ0RK2r/HHdw2qeHEv38jnW7UI++/8qMSSyLm2T8ShjrYPF3kP7BOsxM+kNy/u6Zwzoh+qL9d9kpiYn27P9pnOBsWOem/lSyDNCKQ1z8xM5w8vrfDP6wTVCbDbeo/b/vqDpqD2T+p1pYgj1jLPz0Y8Fqav+8/sm40o/ZB4L+TwjqWC8XzvzrpLWBEfNW/05kZ2JPp478goJHCAyLPv383oHE3vey/7lWA4lls2L87f9ey56O2v6LAS3cChsQ/XoH9hn4FuL+hZY70z83DPz2E4Kqzu7S/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            10,
                                                            3
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            3,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWA4AAAA5NDkwMTg3MjUwMzQwOHECWAMAAABjcHVxA0sKTnRxBFEugAJdcQBYDgAAADk0OTAxODcyNTAzNDA4cQFhLgoAAAAAAAAAWgEEvrZW3L/Z2l1fv/zuv+rayo60I90/l5uFVb9T9L8wP+SpbB3oP3kkaOXYUPw/TM404E6n0j913jULLtr2vyICw2t3m8s/I3G5OvAf4D8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            10
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWA4AAAA5NDkwMTg3MzE1NzMyOHECWAMAAABjcHVxA0sUTnRxBFEugAJdcQBYDgAAADk0OTAxODczMTU3MzI4cQFhLhQAAAAAAAAA471uxZhxwT/Bdc8WTI3Fv5Yuphg0sDe/ZA5GLqnou7/XvjfHXqPJP7BHUP2dt8A//D0TD0zDrb91dXDdlO3Iv03ptNGuiFO/MQRLFqz0dr89YjLcVpvlP8F2Y/LEiM6/1CPBOVm+Ur/R1rC1CByWPwgjuNOdv2K/RTtbuNrP0D+vH/A3oQm8v/G03qsHt8S/PTw0SKdnc784vdXP2JGSvw=="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            10
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            10,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWA4AAAA5NDkwMTg3MzE4MDUxMnECWAMAAABjcHVxA0sCTnRxBFEugAJdcQBYDgAAADk0OTAxODczMTgwNTEycQFhLgIAAAAAAAAAtxnWGnUf0r/cgP+zYUHKPw=="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    3,
                    50
                ],
                "values": "eJwN04071AcAB3DuOPN+9+Mux3l/OefkLRY1/b61nmVMT2E96pHISirFIUI1L/MyZTxaUl62rueRZSihVPu51hYVOjlcjSLJyEvcKR7O9vkfPt1lqgsTrmxE9Wd/3NplDO+Rtl1NImOE7D30E8fKGJ8zuean+o0Q0HrbeUOpEaxEVW1RYUa4kvuMpWtnhMlbgrr2SQIkcam37waBhd5vzJyTCAh3H72c5UVAYD3LD5hngaiKtoisZ8Fv1Gvh+mEWbhWJfeT2LDx7HR67d5iJzjU8p9QKJqQB+uu+3MOESHf4de0aJrrCbiZ6XjeEOKh5VzvfEIP2XXY3rxqgsSIrKMbaANbEuKZVhT4sdT0fXeDoo/d0IxQFeniZFLVWsqQL34ZXIQ4RujhbKORE39HBKJbNDmroINDDx/MTqY3xjvfXJo58hqEpKfdJnhaiqo4VF5UysH8ttw5lmpgNfPFbZaEG+pN5jHfJdDRmnB0sCaEhf7NJiI2tOlqONwWVS1bJKwWeimhihTy1yG/MES6RjuY8YcfiApm37a3vpch5sks6l0+kTpPh347N1d8bJf1eOapsM3vI0fzHLi9n/qCa9szEFNQMU+LujtByjydUvoetTY6ZlKrTqKsxZfdSyuZcP2lWH6UsfWQp3DlA5fllabanyCnyaXw2jf6CIjh+jvSPcurkwfaCpGA5dbDLazHGYIBSC7EZCzPpowLT0zJCI55TLVqrxdkN3dTmvQk1X8z9TXXqxWWvsO9QAyfSBzf+Ek/t8F3v0zp1hywZuTXWsPSEPO/E+CF1Sx95ZLvl65DgV6SnAaPHu3KUPGc4Tq9mTJDvUivCqckZMr+hTpkhnCdrGotlrjULJCGKOvQyYYk8EBn+F7tIRXqfUb14+L06fAxLFje8pUM/LHWiKYkBnsXOm23u2sir97+bYKKHLvGYqsfREKOxRCLTnYXW8tEE3RECUmVZR0a1Mby273szkcHB5rjAOQORCaziBq8zTpqiP2K7xPciD2f6c9rTpBawl//on15iBYdNqz2STmvQFfLz33FtYZayy3swxQ53k1vK0mfs8SBT+iYog49/1YT7PrkLQD7QtlOpCaGoNDva/MYZjXqMtMXJVfLAlAa/e0gdtYYy0/ttdPRLfJK4FzQRl9fwtHqfFiTpf9KarbURPrb6q2hYB7HZK71isR6WZWObeEcNsHvAybTegokPzeGBX+uxcLvN63if6v8Pw+/n+5QE+LTfydxZI0QPLTe5TBsj/0FhXfI0G+Wx8piiDxyEsm9Qap/WIKVpmyCRxsUQ59pcBcsUmfzlUHcHM2yhsUNHwMNp9dL7h/abg/D29M8osIDO6Y2z4/csEVY2saM6zQrnvO+dqzC3RoRrS3rqQ2sss0dc18fZILk20uOqlS10pFGZJ2S2uJy/g7On0A4NH8M6aQH24CjtxOt1HcA9vKmqv8sBvPeBU/Kf+VA9zpT5RzhCS6Z4/pWLAOUtZSLFqgCtim7aKZkT3GvFMnq9EDuDCxYunXWGIPFx3rpjaxG/Mt2XE+wCyTXjY8qNrvDlml10M3IDPemf58V5bpjNGcwiV9zgc0NUyYx3x5GHW+sW3rrjP+b/Hnc="
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        5.296793326654053,
                        -0.21248201690070542,
                        1.9951109700785252
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    3
                ],
                "values": [
                    5.296793326654053,
                    -0.21248201690070542,
                    1.9951109700785252
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    50,
                    2
                ],
                "values": "eJwNzY1L03kcB3BNtDVn1oTUzJutVraC7Elnqe+ktFooEmKYSd6UBMthJUm3Ij2lB0/MoCfLyuhRraZpVix2YWc4U7fv77fttH1+TrNZmHRyV9b01LvXP/AaN482tm4WsLrvy0xstx1TJa6zG6MFXEjY7c68bsfS3PCkV2sEFJr9PZK1dgz7qia2KQWIOz1E4s12mBZdrmJyARPKZ0GVUjsy9nf4Z4YISCnPSbK7bIi0JReNBAgoljut/S9sKMh/9OaYREDezV7crrThe2zulNhbQEWvQRuaY8OOKzMLb0wRFnWGhqg32qAfc/+0bpxQc+1byrL5Npx91yfq/EIItA/K9Z+sSBMt6dV8JATlhNcPvrLi0c70iikn4fH5Vh9DtRVbLnoorvYSDkgW71MdsWL4a80tFSPkDt0eSEuyoqT6iWefibDptPz3gHArgln7Vl0bwatz+YaDXlaYRRl5MgNB43SVZjp5OLvGD7U3E37ZG/nPBwOP2o7QjPyHhK9RV9nMFR5lb1IVgXcJE6bowoajPIIawyxt1wkxXR8iXak8fCp9MgouET6nS4/Xr+MhPfNbu+wcwfjXwMMfUh4LXev92WnC6IEF0d1/cwj2PRNVVkxYOzfssoLnoDgpjos+RmBF0q0zzRy0rnj52CFCRUPd690XOcR7tgw9yCPU++2oXVXEwfvpcEl2NuFb9mSeLp1D7Kysf2V7CQbbYUN8DIdTc+7t6k8l9HwWRZyQcagWo+xGEuHXKmP+Si8O6pymqqxEQqN/TJj6I0P5hdKipSC0LGBu+1sGjSpGNRJF0LYUNpsbGX74arimCEJcertk7SWGyhFdgm4FQfKnqGtSx1DcM+98opyw5edVRqWGIYHdbwkI+f+v+KP15XaGgpUd+vcBBFmKX5V+NYN+vbukWUJQeo0oPQMZ3ma3KU95E/bvc2n10xbUJTfU7Zl2wHxyjfr5sAXb6zdNR3x3YGjgflOw2YLX6snlc8YcuJNlqmXPLEhZcnjZ0CcHquOMwf21FsQnhruNgw6YQtIUseUWzHLdvVnzzoG2idn86BEL/gMUFZSa"
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    50,
                    2
                ],
                "values": "eJwNzY1L03kcB3BNtDVn1oTUzJutVraC7Elnqe+ktFooEmKYSd6UBMthJUm3Ij2lB0/MoCfLyuhRraZpVix2YWc4U7fv77fttH1+TrNZmHRyV9b01LvXP/AaN482tm4WsLrvy0xstx1TJa6zG6MFXEjY7c68bsfS3PCkV2sEFJr9PZK1dgz7qia2KQWIOz1E4s12mBZdrmJyARPKZ0GVUjsy9nf4Z4YISCnPSbK7bIi0JReNBAgoljut/S9sKMh/9OaYREDezV7crrThe2zulNhbQEWvQRuaY8OOKzMLb0wRFnWGhqg32qAfc/+0bpxQc+1byrL5Npx91yfq/EIItA/K9Z+sSBMt6dV8JATlhNcPvrLi0c70iikn4fH5Vh9DtRVbLnoorvYSDkgW71MdsWL4a80tFSPkDt0eSEuyoqT6iWefibDptPz3gHArgln7Vl0bwatz+YaDXlaYRRl5MgNB43SVZjp5OLvGD7U3E37ZG/nPBwOP2o7QjPyHhK9RV9nMFR5lb1IVgXcJE6bowoajPIIawyxt1wkxXR8iXak8fCp9MgouET6nS4/Xr+MhPfNbu+wcwfjXwMMfUh4LXev92WnC6IEF0d1/cwj2PRNVVkxYOzfssoLnoDgpjos+RmBF0q0zzRy0rnj52CFCRUPd690XOcR7tgw9yCPU++2oXVXEwfvpcEl2NuFb9mSeLp1D7Kysf2V7CQbbYUN8DIdTc+7t6k8l9HwWRZyQcagWo+xGEuHXKmP+Si8O6pymqqxEQqN/TJj6I0P5hdKipSC0LGBu+1sGjSpGNRJF0LYUNpsbGX74arimCEJcertk7SWGyhFdgm4FQfKnqGtSx1DcM+98opyw5edVRqWGIYHdbwkI+f+v+KP15XaGgpUd+vcBBFmKX5V+NYN+vbukWUJQeo0oPQMZ3ma3KU95E/bvc2n10xbUJTfU7Zl2wHxyjfr5sAXb6zdNR3x3YGjgflOw2YLX6snlc8YcuJNlqmXPLEhZcnjZ0CcHquOMwf21FsQnhruNgw6YQtIUseUWzHLdvVnzzoG2idn86BEL/gMUFZSa"
            }
        },
        "iterations": 20
    }
}