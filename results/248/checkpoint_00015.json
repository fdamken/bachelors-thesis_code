{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        [
                            0.9496990080339975,
                            -0.053754133860798255,
                            0.054646504797515955
                        ],
                        [
                            -0.07457353635252742,
                            0.981181926779294,
                            0.041257901257831624
                        ],
                        [
                            0.03309210710198985,
                            0.06338591358531456,
                            1.0000518450330995
                        ]
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    3,
                    3
                ],
                "strides": [
                    8,
                    24
                ],
                "values": [
                    [
                        0.9496990080339975,
                        -0.07457353635252742,
                        0.03309210710198985
                    ],
                    [
                        -0.053754133860798255,
                        0.981181926779294,
                        0.06338591358531456
                    ],
                    [
                        0.054646504797515955,
                        0.041257901257831624,
                        1.0000518450330995
                    ]
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.08693266124578722,
                    0.03584327961014851,
                    0.02719591395773988
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    3.64009277831201e-08,
                    9.411714681561989e-07
                ]
            },
            "V0": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    [
                        0.003610236229462771,
                        0.003432202614801705,
                        -0.002125501821019782
                    ],
                    [
                        0.003432202614801705,
                        0.048395701477929716,
                        -0.01915393292307338
                    ],
                    [
                        -0.002125501821019782,
                        -0.01915393292307338,
                        0.008493319127157672
                    ]
                ]
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWA4AAAA5NDkwMTg3Mjc0MTI2NHECWAMAAABjcHVxA0seTnRxBFEugAJdcQBYDgAAADk0OTAxODcyNzQxMjY0cQFhLh4AAAAAAAAAknjpS1DPvb/VdMH+Ucigv0F8T0BeGcS/AEOcVIjD078gb9/60ImzP6mM215cO92//4d0gt+a2j/KBwqgqT7oP1hJkG0+Yt+/SmdgoQJZ17+LduYQ9wvYP7GYR1F4Zdq/w+Qi/Ad30j8MESuU+Q7EP5j25t2oEdU/JySvHa020z9Ha0DAfr++v267a0J25d0/p9Ry9Ul+27+WAdZ+KEXSvyGrBuqrVs+/eS/tdOQX278F0a/Ig0S+v6wXJTWDENi/vMVdM2gK4L8URWW3C43Kv+y1Ob9ikM8/KR0e1h3Tv7+xYzsAxRO/P66ymXj2TLK/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            10,
                                                            3
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            3,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWA4AAAA5NDkwMTg3MjUwMzQwOHECWAMAAABjcHVxA0sKTnRxBFEugAJdcQBYDgAAADk0OTAxODcyNTAzNDA4cQFhLgoAAAAAAAAA0XvwQi1s3b89gPWfhmvqv/KgLw/f6dw/GPICJJDL87/D47ewQhzjP/na1nXgMPo/GsOceXAi1j8Hf1waABbzvziamFtzktI/boJsqPpw5T8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            10
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWA4AAAA5NDkwMTg3MzE1NzMyOHECWAMAAABjcHVxA0sUTnRxBFEugAJdcQBYDgAAADk0OTAxODczMTU3MzI4cQFhLhQAAAAAAAAAo8lctHtMxD8zQuIvPdnFv9wcoQSqfFG/efn0vZmVvL+cwWb7gffJP4gDb7qpAsE/XhHDMx69sL9tA4FZzzjJv2oZEYuLvVS/7S7jM/aebr8UHmZi+LDkP46t9ilyHc6/jtkK7l8pa7+Z4/anMu+ZP1q32EYHgnG/2AP258eU0D8bJwdMRoC5v2iaDqqeP8S/vFclZdGyeL+rcphznHGMvw=="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            10
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            10,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWA4AAAA5NDkwMTg3MzE4MDUxMnECWAMAAABjcHVxA0sCTnRxBFEugAJdcQBYDgAAADk0OTAxODczMTgwNTEycQFhLgIAAAAAAAAAhTUctwf60b+eRo1rpsjJPw=="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    3,
                    50
                ],
                "values": "eJwN0Hk4lAkAx3GDMWjMmDE0SpqLkdxMK63eX2y69HQ4suiwTz08SUrYbZGKUT1Jh5RjlZ5Ua54oHrEq+4ZiUzkGZaKRMQ1qikTbSHb7+/vX5ys8lSBiMizhPzioHnaxxIERKVeu4SCfar1010kOqqOK6pc4cFCTOUOqSQvQne4rbgVb4FGSbqV6hI2SV+xP+YfYEHWdjsycy8Y+9QYN6w4LAYnHlhwMY6EnJH5Rmz4L3YreKuodc+jqw43G4s1R29H1XOBlDikzKFlLMUfqnLZzO6uYaKe9+9iSwMRUUVDBiB8T+b56zU0LmaBEv+YVUploaMxaLR5nIDbOdKX8JQOr8vgPOh8w0OKoPhJVzEDpnjP+Pnu+d1NhhKMjA+TGtUdNeswwSHbsqt5tBnfp42vnR+jgyFOaegPpMC9hnbpycQ4ay8M+HGo1xbtEnmxIYwL3uuyvWq0xsi85edL6aDg/kcFdUGEE3oeAqYEoKmZ/GP+sHTdATmqgbUOwPsrubzpyTaoHiWTU/u3UDOGafX4yOewLkSMo7V8n/kSERY6XSlreEkn7i24+O9lPHFU2Dm1rv0L4+FHSzO72kv78Yunzp6Mkb1LunHL8Djnj3xpN5XSSUXd/2nJB+ZKcOp5DlYQMkpHF0hasVpOF03MrngZryND1ZVLD48NkwQb9JqPxYfLsaTUvqmiYnC+zjpTma8gM2cE9vlNq0mPAnvPL3yrSa3cvN/q/AdLj2OVbB44pSMUOZqi3WE5SplUmJX1NZGp4jUuEPJscuvZszLC9gbg7/8eqwN+7CJ/nOQ613UoipXb5Re/0N4RbOTVxL0VL1HrKTlSmfCTykysFdM8pYu+Nuq3v7XXEw5r4GL+gb4T3RXJ7wws9LJtmW6ZZG2D1p9DYiL1UaGaaA7K+f62rCH2kiDFFV/PmxEYbMwwcTncvnGZCd6ouK+kICzpVsY49zwIZeu7aN484cAw5scIu0woP176OiwnhIvBz6cTEsnng3G7bFLnMBsHdeUa2YbYIym7IK1/Hw+V7/C3b0vmQ9kqX6h4L4PLxbKrMWYS0PntjUmaHQb/t00eXi/HMUp7RP+SAn+2mrbwuOMKL9qG6e6MTyk5mOox8nSUkiyXr/8ilwLPSqH9TtQF6xDciy7upcBbrqirHafAV2g7cpn13jCwY28qlo+J0T3gcn4HUFCsDKsscHY/TA8boLOxnh+87bMjGTsv1irf/ssEQl7sdGraA7NUXh6tdHCRRtPK++5aoH/VQNV+1wjtxp6HoxFw0tBY2vojjYsWum6r3m63ROTHbU7B0HuKEBRlewvlwmckTSFg2sPq6kr6QugDXff3LwvVs4Xy59cGkwUJEC6/OuhrzYFbXV/nkHA/1m2FjLOBjNHajTL+Wj84IG39ZkADCNcFjuToB0tb4mij/FOLJGV+PVTtEWBLAesK0tQPXNda7+bUd/gnsnr1+wx4iU1FoYYIYnVFKyuQKB6i/fMsVWC3CWFuZKHlsEeTtqiTjNkf4eHcSf1UuhjKXFr+40AkluQeliixndGhXNTr+6oKESdfIe7tdodHGHFC6uaG/6qbqXIUbOFtqLhm7uuNp3m/0tip3/A/H/iBM"
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        5.2637296385685515,
                        -0.08411378735304753,
                        1.9365007002568098
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    3
                ],
                "values": [
                    5.2637296385685515,
                    -0.08411378735304753,
                    1.9365007002568098
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    50,
                    2
                ],
                "values": "eJwNzY1L03kcB3BNtDVn1oTUzJutVraC7Elnqe+ktFooEmKYSd6UBMthJUm3Ij2lB0/MoCfLyuhRraZpVix2YWc4U7fv77fttH1+TrNZmHRyV9b01LvXP/AaN482tm4WsLrvy0xstx1TJa6zG6MFXEjY7c68bsfS3PCkV2sEFJr9PZK1dgz7qia2KQWIOz1E4s12mBZdrmJyARPKZ0GVUjsy9nf4Z4YISCnPSbK7bIi0JReNBAgoljut/S9sKMh/9OaYREDezV7crrThe2zulNhbQEWvQRuaY8OOKzMLb0wRFnWGhqg32qAfc/+0bpxQc+1byrL5Npx91yfq/EIItA/K9Z+sSBMt6dV8JATlhNcPvrLi0c70iikn4fH5Vh9DtRVbLnoorvYSDkgW71MdsWL4a80tFSPkDt0eSEuyoqT6iWefibDptPz3gHArgln7Vl0bwatz+YaDXlaYRRl5MgNB43SVZjp5OLvGD7U3E37ZG/nPBwOP2o7QjPyHhK9RV9nMFR5lb1IVgXcJE6bowoajPIIawyxt1wkxXR8iXak8fCp9MgouET6nS4/Xr+MhPfNbu+wcwfjXwMMfUh4LXev92WnC6IEF0d1/cwj2PRNVVkxYOzfssoLnoDgpjos+RmBF0q0zzRy0rnj52CFCRUPd690XOcR7tgw9yCPU++2oXVXEwfvpcEl2NuFb9mSeLp1D7Kysf2V7CQbbYUN8DIdTc+7t6k8l9HwWRZyQcagWo+xGEuHXKmP+Si8O6pymqqxEQqN/TJj6I0P5hdKipSC0LGBu+1sGjSpGNRJF0LYUNpsbGX74arimCEJcertk7SWGyhFdgm4FQfKnqGtSx1DcM+98opyw5edVRqWGIYHdbwkI+f+v+KP15XaGgpUd+vcBBFmKX5V+NYN+vbukWUJQeo0oPQMZ3ma3KU95E/bvc2n10xbUJTfU7Zl2wHxyjfr5sAXb6zdNR3x3YGjgflOw2YLX6snlc8YcuJNlqmXPLEhZcnjZ0CcHquOMwf21FsQnhruNgw6YQtIUseUWzHLdvVnzzoG2idn86BEL/gMUFZSa"
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    50,
                    2
                ],
                "values": "eJwNzY1L03kcB3BNtDVn1oTUzJutVraC7Elnqe+ktFooEmKYSd6UBMthJUm3Ij2lB0/MoCfLyuhRraZpVix2YWc4U7fv77fttH1+TrNZmHRyV9b01LvXP/AaN482tm4WsLrvy0xstx1TJa6zG6MFXEjY7c68bsfS3PCkV2sEFJr9PZK1dgz7qia2KQWIOz1E4s12mBZdrmJyARPKZ0GVUjsy9nf4Z4YISCnPSbK7bIi0JReNBAgoljut/S9sKMh/9OaYREDezV7crrThe2zulNhbQEWvQRuaY8OOKzMLb0wRFnWGhqg32qAfc/+0bpxQc+1byrL5Npx91yfq/EIItA/K9Z+sSBMt6dV8JATlhNcPvrLi0c70iikn4fH5Vh9DtRVbLnoorvYSDkgW71MdsWL4a80tFSPkDt0eSEuyoqT6iWefibDptPz3gHArgln7Vl0bwatz+YaDXlaYRRl5MgNB43SVZjp5OLvGD7U3E37ZG/nPBwOP2o7QjPyHhK9RV9nMFR5lb1IVgXcJE6bowoajPIIawyxt1wkxXR8iXak8fCp9MgouET6nS4/Xr+MhPfNbu+wcwfjXwMMfUh4LXev92WnC6IEF0d1/cwj2PRNVVkxYOzfssoLnoDgpjos+RmBF0q0zzRy0rnj52CFCRUPd690XOcR7tgw9yCPU++2oXVXEwfvpcEl2NuFb9mSeLp1D7Kysf2V7CQbbYUN8DIdTc+7t6k8l9HwWRZyQcagWo+xGEuHXKmP+Si8O6pymqqxEQqN/TJj6I0P5hdKipSC0LGBu+1sGjSpGNRJF0LYUNpsbGX74arimCEJcertk7SWGyhFdgm4FQfKnqGtSx1DcM+98opyw5edVRqWGIYHdbwkI+f+v+KP15XaGgpUd+vcBBFmKX5V+NYN+vbukWUJQeo0oPQMZ3ma3KU95E/bvc2n10xbUJTfU7Zl2wHxyjfr5sAXb6zdNR3x3YGjgflOw2YLX6snlc8YcuJNlqmXPLEhZcnjZ0CcHquOMwf21FsQnhruNgw6YQtIUseUWzHLdvVnzzoG2idn86BEL/gMUFZSa"
            }
        },
        "iterations": 15
    }
}