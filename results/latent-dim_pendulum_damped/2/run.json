{
  "artifacts": [
    "checkpoint_00001.json",
    "checkpoint_00005.json",
    "checkpoint_00010.json",
    "checkpoint_00015.json",
    "checkpoint_00020.json",
    "checkpoint_00025.json",
    "checkpoint_00030.json",
    "checkpoint_00035.json",
    "checkpoint_00040.json",
    "checkpoint_00045.json",
    "checkpoint_00050.json",
    "checkpoint_00055.json",
    "checkpoint_00060.json",
    "checkpoint_00065.json",
    "checkpoint_00070.json",
    "checkpoint_00075.json",
    "checkpoint_00080.json",
    "checkpoint_00085.json",
    "checkpoint_00090.json",
    "checkpoint_00095.json",
    "checkpoint_00100.json",
    "checkpoint_00105.json",
    "checkpoint_00110.json",
    "checkpoint_00115.json",
    "checkpoint_00120.json",
    "checkpoint_00125.json",
    "checkpoint_00130.json",
    "checkpoint_00135.json",
    "checkpoint_00140.json",
    "checkpoint_00145.json",
    "checkpoint_00150.json",
    "checkpoint_00155.json",
    "checkpoint_00160.json",
    "checkpoint_00165.json",
    "checkpoint_00170.json",
    "checkpoint_00175.json",
    "checkpoint_00180.json",
    "checkpoint_00185.json",
    "checkpoint_00190.json",
    "checkpoint_00195.json",
    "checkpoint_00200.json"
  ],
  "command": "_main",
  "experiment": {
    "base_dir": "/home/fdamken/Development/study/bachelors-thesis/code/src",
    "dependencies": [
      "jsonpickle==1.4.1",
      "numpy==1.19.1",
      "sacred==0.8.1",
      "torch==1.6.0"
    ],
    "mainfile": "experiment.py",
    "name": "vae-koopman",
    "repositories": [
      {
        "commit": "e666aaf3c69c2093e38b1b8701e0c557c1c4b43e",
        "dirty": false,
        "url": "ssh://github/fdamken/bachelors-thesis_code.git"
      },
      {
        "commit": "e666aaf3c69c2093e38b1b8701e0c557c1c4b43e",
        "dirty": false,
        "url": "ssh://github/fdamken/bachelors-thesis_code.git"
      },
      {
        "commit": "e666aaf3c69c2093e38b1b8701e0c557c1c4b43e",
        "dirty": false,
        "url": "ssh://github/fdamken/bachelors-thesis_code.git"
      },
      {
        "commit": "e666aaf3c69c2093e38b1b8701e0c557c1c4b43e",
        "dirty": false,
        "url": "ssh://github/fdamken/bachelors-thesis_code.git"
      }
    ],
    "sources": [
      [
        "__init__.py",
        "_sources/__init___f9f4d0d38a85c45bc7c1d0995109976e.py"
      ],
      [
        "em.py",
        "_sources/em_0dfb562a29ce00f1d2e5ceca9acf917e.py"
      ],
      [
        "experiment.py",
        "_sources/experiment_41f739cf7d6397613985bda8aa836f90.py"
      ],
      [
        "util.py",
        "_sources/util_58e067b29e6cc05bacf1af9314bea9b2.py"
      ]
    ]
  },
  "heartbeat": "2020-11-11T19:58:47.835323",
  "host": {
    "ENV": {},
    "cpu": "Intel(R) Core(TM) i7-10700K CPU @ 3.80GHz",
    "gpus": {
      "driver_version": "455.23.05",
      "gpus": [
        {
          "model": "GeForce GTX 970",
          "persistence_mode": true,
          "total_memory": 4040
        }
      ]
    },
    "hostname": "crush",
    "os": [
      "Linux",
      "Linux-5.4.0-52-generic-x86_64-with-glibc2.10"
    ],
    "python_version": "3.8.5"
  },
  "meta": {
    "command": "_main",
    "options": {
      "--beat-interval": null,
      "--capture": null,
      "--comment": null,
      "--debug": false,
      "--enforce_clean": false,
      "--file_storage": null,
      "--force": false,
      "--help": false,
      "--loglevel": null,
      "--mongo_db": null,
      "--name": null,
      "--pdb": false,
      "--print-config": false,
      "--priority": null,
      "--queue": false,
      "--s3": null,
      "--sql": null,
      "--tiny_db": null,
      "--unobserved": false,
      "COMMAND": null,
      "UPDATE": [
        "latent_dim=2",
        "seed=0",
        "pendulum_damped"
      ],
      "help": false,
      "with": true
    }
  },
  "resources": [],
  "result": {
    "estimations": {
      "A": {
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "values": [
          [
            0.982262422135975,
            -0.013844022995201927
          ],
          [
            0.03800007392331229,
            1.016564496914812
          ]
        ]
      },
      "B": null,
      "Q": {
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "values": [
          [
            0.0034292184902555535,
            0.0
          ],
          [
            0.0,
            0.01636278661694842
          ]
        ]
      },
      "R": {
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "values": [
          [
            0.001623074883970844,
            0.0
          ],
          [
            0.0,
            0.0023563523679515585
          ]
        ]
      },
      "V0": {
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "values": [
          [
            7.392696096786278e-06,
            0.0
          ],
          [
            0.0,
            8.518759178954838e-06
          ]
        ]
      },
      "V_hat": {
        "byteorder": "<",
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "shape": [
          1,
          2,
          2,
          500
        ],
        "values": ""
      },
      "g_params": {
        "py/reduce": [
          {
            "py/type": "collections.OrderedDict"
          },
          {
            "py/tuple": []
          },
          null,
          null,
          {
            "py/tuple": [
              {
                "py/tuple": [
                  "0.weight",
                  {
                    "py/reduce": [
                      {
                        "py/function": "torch._utils._rebuild_tensor_v2"
                      },
                      {
                        "py/tuple": [
                          {
                            "py/reduce": [
                              {
                                "py/function": "torch.storage._load_from_bytes"
                              },
                              {
                                "py/tuple": [
                                  {
                                    "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWA4AAAA5NDE1NjYxMTIyMjE3NnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDgAAADk0MTU2NjExMjIyMTc2cQFhLmQAAAAAAAAASW79+tx5uD+JXFJkeiPwPwswFnNX+QTAHfME3BDGAkAQtUc+N/3iv4q3/6yMAwhAoew8+zlm278joq+GZ07dv5b2378isO6/WgYI3JPg7r/m6H1sJ936P0bfnvQR99w/ua+mUNSc77+6WTnkbWXKv/oufD/PVfC/ZiMP0iKXxb/abMuRoZzlvwj9uq95pfe/BOgPOMSu+r+8P7JJjlf/P5/Fa94pz8A/QiIRwnnTA0BfHRJJCXTrv0xijfcMur2/X9kTc8H+97+IR99VuqZxP5ysdKhAVAPAr2peWBjm3L/a4b+39+zVP6ogETekawDA/L7+2/M88D/ASmkrwKLiP3n7oMLZt+m/Q/mLkN9e578KPPQg2d/cv87rpbxGCvs/36a3A0sE3z+SQyhKrh7hP5e9rdC9qey/g3SHmb/M3z+b3Aznco+4v6lVKH55QOC/PnQqB+64rL/4rz1OTkHXP4HpvTXcbu4/olXWbTyE7b9E6tOKxZHlP2XmUZf05QfA25nOwE184T88qyvWF1D1v8ALwLCw+Pg/kyr2KP4m6D+ENTgw74j+v4lK/YJq/cQ/lbSrws0XDEA+o14jI2nUPym337TCBgDAcJzPhyDI2b953bhEFja3v69EOZBGEPG/8OnSKNnB07+iAVyg6+XVvwPA8Kp60tA/AGSlVHsv5D/JBfQqJHPVP/xmNkxqd9K/fN/vx/Gq3b8t6G+I4qnxP63pIac6uOA/YBPLe2Te4D8j/qgw/ucAQJ4ywvdG/ro/X4a9BLND1r93hPsV/oTav6eitho+zQzAyrzEWnuBoL8gssahBRHrv4dago1DO+O/3eivulNo8j9A/I1k3jYHwPTejUhMT+q/Wpt/KkKXyD+x3ulJ4u/7v1PzUdeKUfu/K3t7B5P84T8mYhaHfgvjP+rKfMOLq9I/i/ZLsZ1m2r/Z/EowVgXTP+HjyggYpOe/zLcabZSb6r9+VCAKeOeMv3FpqLhDQQ9AnBE0+jui/L86fCHVpUnRP34hW1UisOC/FwlR51348b/wXuRDayv6v5WmaFL+XuQ/9Atkwfh3C8A="
                                  }
                                ]
                              }
                            ]
                          },
                          0,
                          {
                            "py/tuple": [
                              50,
                              2
                            ]
                          },
                          {
                            "py/tuple": [
                              2,
                              1
                            ]
                          },
                          false,
                          {
                            "py/reduce": [
                              {
                                "py/type": "collections.OrderedDict"
                              },
                              {
                                "py/tuple": []
                              },
                              null,
                              null,
                              {
                                "py/tuple": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "py/tuple": [
                  "0.bias",
                  {
                    "py/reduce": [
                      {
                        "py/function": "torch._utils._rebuild_tensor_v2"
                      },
                      {
                        "py/tuple": [
                          {
                            "py/reduce": [
                              {
                                "py/function": "torch.storage._load_from_bytes"
                              },
                              {
                                "py/tuple": [
                                  {
                                    "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWA4AAAA5NDE1NjYxMDY4MDEyOHECWAMAAABjcHVxA0syTnRxBFEugAJdcQBYDgAAADk0MTU2NjEwNjgwMTI4cQFhLjIAAAAAAAAARUk9gyNA3j+tb8cn+kflv4oWbzAm1wRAegwBJ8f+DkDqk9sFP08DwBsZEL3xdNs/HHLwe+nfBsDMmUOakHkHQD/1mAWKqw3AT0QOzVHv/D+lZhr24UwIQLa6UFvNfOe/k0XhPqvcA8Bs/OA+i27yP4EwuTOiucu/RDzwD5ePDMDM1GQ+tOrxPwui59aFUt8/8pLekPlG7b8aPyniSznzv36sZwsyIAJAQdeTz/8u6j/jEAKwncEDwKS8X1FQafc/D6OMzLCYBsDFxvYdVPTzv1BtktwyRwTA7dJseIWHyb8xpEzFh0kHwPRJ8ocRxcw/3VTltD8L6r9ERGdN4AQOwDzoHL1KZwZAliEpdKxYAkAOtPVSrFzzP8ZhRPEFeN4/Jf8krkGd77/Xmq4qpPzMv8eo9LOAme0/xgPwW4fZ5T+0/s+hYdMRwOc8Kj/6M9o/grtCRxNI9z95b0JwThQIQIc5od/Q+ALAQ6kbNTQPEMB5bJboxcb2vwmM/2WQaQTACS8VjYdNCsCEZh4ZkvLtPw=="
                                  }
                                ]
                              }
                            ]
                          },
                          0,
                          {
                            "py/tuple": [
                              50
                            ]
                          },
                          {
                            "py/tuple": [
                              1
                            ]
                          },
                          false,
                          {
                            "py/reduce": [
                              {
                                "py/type": "collections.OrderedDict"
                              },
                              {
                                "py/tuple": []
                              },
                              null,
                              null,
                              {
                                "py/tuple": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "py/tuple": [
                  "2.weight",
                  {
                    "py/reduce": [
                      {
                        "py/function": "torch._utils._rebuild_tensor_v2"
                      },
                      {
                        "py/tuple": [
                          {
                            "py/reduce": [
                              {
                                "py/function": "torch.storage._load_from_bytes"
                              },
                              {
                                "py/tuple": [
                                  {
                                    "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWA4AAAA5NDE1NjYxOTk1MDU0NHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDgAAADk0MTU2NjE5OTUwNTQ0cQFhLmQAAAAAAAAACZXaosMw1L8h4sAyvMHUP0cB1h8zosA/Sc3HwtaIwT99tyI/KyKAP/E5MXHU848/cHeM8HQU8L8TGP/HMmbdP1w1Ic6fx7O/9WjTxaQH0z8rcqbkYsvKv1b1Ur/HO9e/ZC29/4uE4T9508/aZsfTvwwHTbigqcW/BkhzIBW/sD8Tx7c5DT/lP7qCep94Stu/o+NZSHg/2r9YnFF2TGvXP8qjYl6s4+C/nkMtS62ngj+hpLY3QabSP+V2aItY8ts/mY8RDdptz79y10BSc81sv+0RRceexNI//Ti2jDB/yz8BuNGjbIPTP9+unKr8Is0/4Zyop9b8ob9Ucuvo7tfWP3zGcVBoGvO/WJMhWugItb8vZn7MLviHP9PC0fnpSsm//oIMpcdupr9vmaWy266gP2Xx2/ifEOI/MshVQtgoxb9QFL2jkXThP3XHJiylddI/YohfZC3UlD8YNWi92GO+v2XED9Z8s9Q/pnudLeum9r+YG0ZMhJjDP3LSSdYFKdo/hPXuUyWgtL+eE2Lpva/Yv4kS+0oJl7Q/02op1get3b9QZ89/33LWv+j0BTfnW+8/6SxXDRLmkr/q7MyG3GKGv43W9aRdG+g/cu9ROK8s9L9vEeSLthq2vxKZ1+45xsy/Av0/Uf2v0r+L84lXcADLv2iNIYP3csk/MD6sMJOx0r8nboct0HCZv1Dllv8+cty/COoV24MmlL/4WsuuNHPYP8yFA/mC8tU/BNdtWIXc5T+TNOhfWUTbvxQPSfYr8aM/HUMCsHaorD/iRo2J/Dzkv12u2hCPsuC/E2WBY5e22L/+ib2QBY3sP6NLr1zzFLo/3C/uDYlt4L9WV9TrwuXgP/xP3PuYbpS/gfozEfai8j8r6KmfOJHDv+0kIBDcRZK/JZ6pHb/6jT/eCLJ3mrLgP1kBSA2YoYA/q4+5TVKKyD+mnEy1jkHSP8R5IaHb3de/qnxWzUwh8L8rT4iOpLWqv4YzzU9IQGo/qVb/T/H33D88xlMTczPXv/OGCEBhc+q/o0lntQH2uT87PdJjyivSvwkOEjYqOaE/oIijv/f92j8="
                                  }
                                ]
                              }
                            ]
                          },
                          0,
                          {
                            "py/tuple": [
                              2,
                              50
                            ]
                          },
                          {
                            "py/tuple": [
                              50,
                              1
                            ]
                          },
                          false,
                          {
                            "py/reduce": [
                              {
                                "py/type": "collections.OrderedDict"
                              },
                              {
                                "py/tuple": []
                              },
                              null,
                              null,
                              {
                                "py/tuple": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "py/tuple": [
                  "2.bias",
                  {
                    "py/reduce": [
                      {
                        "py/function": "torch._utils._rebuild_tensor_v2"
                      },
                      {
                        "py/tuple": [
                          {
                            "py/reduce": [
                              {
                                "py/function": "torch.storage._load_from_bytes"
                              },
                              {
                                "py/tuple": [
                                  {
                                    "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWA4AAAA5NDE1NjYxMTAxMjQ0OHECWAMAAABjcHVxA0sCTnRxBFEugAJdcQBYDgAAADk0MTU2NjExMDEyNDQ4cQFhLgIAAAAAAAAA2uwsYE9/3L/BQRKPy6Guvw=="
                                  }
                                ]
                              }
                            ]
                          },
                          0,
                          {
                            "py/tuple": [
                              2
                            ]
                          },
                          {
                            "py/tuple": [
                              1
                            ]
                          },
                          false,
                          {
                            "py/reduce": [
                              {
                                "py/type": "collections.OrderedDict"
                              },
                              {
                                "py/tuple": []
                              },
                              null,
                              null,
                              {
                                "py/tuple": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "latents": {
        "byteorder": "<",
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "shape": [
          1,
          2,
          500
        ],
        "values": ""
      },
      "m0": {
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "values": [
          0.7032530154794474,
          2.303209671120116
        ]
      }
    },
    "iterations": 200,
    "log_likelihood": {
      "dtype": "float64",
      "py/object": "numpy.float64",
      "value": 3437.9070609321034
    },
    "observations_train_noisy": {
      "byteorder": "<",
      "dtype": "float64",
      "py/object": "numpy.ndarray",
      "shape": [
        1,
        500,
        2
      ],
      "values": ""
    },
    "preprocessing": {
      "u_scale": null,
      "u_shift": null,
      "y_scale": {
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "values": [
          0.8294115530152616,
          0.6147434421098683
        ]
      },
      "y_shift": {
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "values": [
          3.07545549308369,
          0.05578446490656883
        ]
      }
    }
  },
  "start_time": "2020-11-11T19:57:18.866694",
  "status": "COMPLETED",
  "stop_time": "2020-11-11T19:58:47.830378"
}