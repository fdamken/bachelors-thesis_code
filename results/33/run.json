{
  "artifacts": [
    "loglikelihood.png",
    "observations.png",
    "latents.png"
  ],
  "command": "main",
  "experiment": {
    "base_dir": "/home/fdamken/Development/study/bachelors-thesis/code/src",
    "dependencies": [
      "matplotlib==3.1.3",
      "numpy==1.18.1",
      "sacred==0.8.1",
      "scipy==1.4.1",
      "torch==1.5.1"
    ],
    "mainfile": "experiment_polynomial_nonlinear.py",
    "name": "code",
    "repositories": [
      {
        "commit": "3aa61ed149ee3e30b49c8a50664317e13e4a3e74",
        "dirty": true,
        "url": "ssh://github/fdamken/bachelors-thesis_code.git"
      },
      {
        "commit": "3aa61ed149ee3e30b49c8a50664317e13e4a3e74",
        "dirty": true,
        "url": "ssh://github/fdamken/bachelors-thesis_code.git"
      },
      {
        "commit": "3aa61ed149ee3e30b49c8a50664317e13e4a3e74",
        "dirty": true,
        "url": "ssh://github/fdamken/bachelors-thesis_code.git"
      },
      {
        "commit": "3aa61ed149ee3e30b49c8a50664317e13e4a3e74",
        "dirty": true,
        "url": "ssh://github/fdamken/bachelors-thesis_code.git"
      },
      {
        "commit": "3aa61ed149ee3e30b49c8a50664317e13e4a3e74",
        "dirty": true,
        "url": "ssh://github/fdamken/bachelors-thesis_code.git"
      }
    ],
    "sources": [
      [
        "__init__.py",
        "_sources/__init___d41d8cd98f00b204e9800998ecf8427e.py"
      ],
      [
        "deep_koopman.py",
        "_sources/deep_koopman_aa194c09bc28ea5622f2f8e3f94bfd57.py"
      ],
      [
        "em.py",
        "_sources/em_29af7a9e9fe0d98c126da1fa4d8dbd0a.py"
      ],
      [
        "experiment_polynomial_nonlinear.py",
        "_sources/experiment_polynomial_nonlinear_c3259e30700c7e43bf3983807cb106a7.py"
      ],
      [
        "util.py",
        "_sources/util_4d20809020e654d6856639c65486f257.py"
      ]
    ]
  },
  "heartbeat": "2020-07-27T18:54:29.850046",
  "host": {
    "ENV": {},
    "cpu": "Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz",
    "hostname": "dory",
    "os": [
      "Linux",
      "Linux-5.4.0-42-generic-x86_64-with-glibc2.10"
    ],
    "python_version": "3.8.2"
  },
  "meta": {
    "command": "main",
    "options": {
      "--beat-interval": null,
      "--capture": null,
      "--comment": null,
      "--debug": false,
      "--enforce_clean": false,
      "--file_storage": null,
      "--force": false,
      "--help": false,
      "--loglevel": null,
      "--mongo_db": null,
      "--name": null,
      "--pdb": false,
      "--print-config": false,
      "--priority": null,
      "--queue": false,
      "--s3": null,
      "--sql": null,
      "--tiny_db": null,
      "--unobserved": false,
      "COMMAND": null,
      "UPDATE": [],
      "help": false,
      "with": false
    }
  },
  "resources": [],
  "result": {
    "estimations": {
      "A": {
        "base": {
          "dtype": "float64",
          "py/object": "numpy.ndarray",
          "values": [
            [
              0.37543753284161036,
              0.03525647371954741
            ],
            [
              0.10038794742627723,
              0.9930003450235083
            ]
          ]
        },
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "shape": [
          2,
          2
        ],
        "strides": [
          8,
          16
        ],
        "values": [
          [
            0.37543753284161036,
            0.10038794742627723
          ],
          [
            0.03525647371954741,
            0.9930003450235083
          ]
        ]
      },
      "Q": {
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "values": [
          [
            6.347397278984737e-10,
            0.0
          ],
          [
            0.0,
            2.0419399957742075e-10
          ]
        ]
      },
      "R": {
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "values": [
          0.00014531634568902164,
          0.015536753714959613
        ]
      },
      "V0": {
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "values": [
          [
            1.972892273993665e-07,
            -1.1286271972554829e-08
          ],
          [
            -1.1286271972554829e-08,
            6.963592480424552e-10
          ]
        ]
      },
      "g_params": {
        "py/reduce": [
          {
            "py/type": "collections.OrderedDict"
          },
          {
            "py/tuple": []
          },
          {
            "_metadata": {
              "py/reduce": [
                {
                  "py/type": "collections.OrderedDict"
                },
                {
                  "py/tuple": []
                },
                null,
                null,
                {
                  "py/tuple": [
                    {
                      "py/tuple": [
                        "",
                        {
                          "version": 1
                        }
                      ]
                    },
                    {
                      "py/tuple": [
                        "linear-1",
                        {
                          "version": 1
                        }
                      ]
                    },
                    {
                      "py/tuple": [
                        "act-1",
                        {
                          "version": 1
                        }
                      ]
                    },
                    {
                      "py/tuple": [
                        "linear-2",
                        {
                          "version": 1
                        }
                      ]
                    },
                    {
                      "py/tuple": [
                        "act-2",
                        {
                          "version": 1
                        }
                      ]
                    },
                    {
                      "py/tuple": [
                        "linear-3",
                        {
                          "version": 1
                        }
                      ]
                    },
                    {
                      "py/tuple": [
                        "act-3",
                        {
                          "version": 1
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          },
          null,
          {
            "py/tuple": [
              {
                "py/tuple": [
                  "linear-1.weight",
                  {
                    "py/reduce": [
                      {
                        "py/function": "torch._utils._rebuild_tensor_v2"
                      },
                      {
                        "py/tuple": [
                          {
                            "py/reduce": [
                              {
                                "py/function": "torch.storage._load_from_bytes"
                              },
                              {
                                "py/tuple": [
                                  {
                                    "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWA4AAAA5NDI2NzkzOTUxNTY0OHECWAMAAABjcHVxA0s8TnRxBFEugAJdcQBYDgAAADk0MjY3OTM5NTE1NjQ4cQFhLjwAAAAAAAAA0NDPttjB1D80j0RAMqq6vwx0f54oiMa/iW76x7RKwT+7YE1EQRTSv00Jf3ynOMc/VSAx5Gc55b89jMrgTuC3v42wHDdLMdI/IYN1qHgi0D+v7QZHaJqyvygD5LaRTtE/uzxZpK5JjL/ChTo2ONmGv7Y5lcKab+S/SExH/7Z+Yz8g0m4cTbizP5jUxsZKwc6/I+GNsc+xuj9rerR3xirJP+C8AsNSios/fxgFIdkvij8pHK28F8zUP1d+7pQC7sC/yd+RbPw85L+OQBmsB1WMP74iH5jPzOW/m1/50psegz+70lx7qPfdvzCgc+YdxNC/OG14Ikcs17+OqjjKMc+4v+uwMmJJNc2/Djy8vWivxT9kWe1ELFXcPw9MInzu7au/nNqVy1wh1b9W+je96frJv3xT8Ars+6M/O0ezFDxseL913bo1WkC6P4agDjR8RNG/NcqTre242z+Md618vZ2+v0O6kZdtads/3kRD+ME9zL+jgq5khgHTP65gjN/TjMS/xK6BYJCm2D9cLgXJXofVP7OIunn40c4/6H22LdQ8zz/53E1gdUTkP1dYocT4hsI/pO5zAK8kl78z9BqK5J3nP8nw1LKmrta/XV/mZJ5Rwj9UpTivuYyMvzbmBSN35XS/"
                                  }
                                ]
                              }
                            ]
                          },
                          0,
                          {
                            "py/tuple": [
                              30,
                              2
                            ]
                          },
                          {
                            "py/tuple": [
                              2,
                              1
                            ]
                          },
                          false,
                          {
                            "py/reduce": [
                              {
                                "py/type": "collections.OrderedDict"
                              },
                              {
                                "py/tuple": []
                              },
                              null,
                              null,
                              {
                                "py/tuple": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "py/tuple": [
                  "linear-1.bias",
                  {
                    "py/reduce": [
                      {
                        "py/function": "torch._utils._rebuild_tensor_v2"
                      },
                      {
                        "py/tuple": [
                          {
                            "py/reduce": [
                              {
                                "py/function": "torch.storage._load_from_bytes"
                              },
                              {
                                "py/tuple": [
                                  {
                                    "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWA4AAAA5NDI2NzkzODg0ODI0MHECWAMAAABjcHVxA0seTnRxBFEugAJdcQBYDgAAADk0MjY3OTM4ODQ4MjQwcQFhLh4AAAAAAAAArviXd/KauD8VnZbi1OKrP9F2ikB6AbQ/KgzTrKfWvD848U0UWmG3PwSp+CKNK7g/AGRrDx/Teb/soeiUpGq8P4h1srkorrE/UDTzzy8kuj+vUInNRJh4v3hhMm9YU7c/BPvNGPbluj9z03qutUC6PwMO/K7Pe74/asu6vFQfsD9DbQayUbqxP05t5Yerhbs/9rJUsE+/tj8TufqGHAuWv1PV2VNtILU/aaGkIKtNsj9+iQfT04a5P2i3Aq3Qjro/C8stb2AxwT9NePT/3XG9P4uULgHCpcQ/2j4gRCB8TD8ACP2FC+a5P1C7qv67lni/"
                                  }
                                ]
                              }
                            ]
                          },
                          0,
                          {
                            "py/tuple": [
                              30
                            ]
                          },
                          {
                            "py/tuple": [
                              1
                            ]
                          },
                          false,
                          {
                            "py/reduce": [
                              {
                                "py/type": "collections.OrderedDict"
                              },
                              {
                                "py/tuple": []
                              },
                              null,
                              null,
                              {
                                "py/tuple": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "py/tuple": [
                  "linear-2.weight",
                  {
                    "py/reduce": [
                      {
                        "py/function": "torch._utils._rebuild_tensor_v2"
                      },
                      {
                        "py/tuple": [
                          {
                            "py/reduce": [
                              {
                                "py/function": "torch.storage._load_from_bytes"
                              },
                              {
                                "py/tuple": [
                                  {
                                    "py/b64": ""
                                  }
                                ]
                              }
                            ]
                          },
                          0,
                          {
                            "py/tuple": [
                              30,
                              30
                            ]
                          },
                          {
                            "py/tuple": [
                              30,
                              1
                            ]
                          },
                          false,
                          {
                            "py/reduce": [
                              {
                                "py/type": "collections.OrderedDict"
                              },
                              {
                                "py/tuple": []
                              },
                              null,
                              null,
                              {
                                "py/tuple": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "py/tuple": [
                  "linear-2.bias",
                  {
                    "py/reduce": [
                      {
                        "py/function": "torch._utils._rebuild_tensor_v2"
                      },
                      {
                        "py/tuple": [
                          {
                            "py/reduce": [
                              {
                                "py/function": "torch.storage._load_from_bytes"
                              },
                              {
                                "py/tuple": [
                                  {
                                    "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWA4AAAA5NDI2NzkzODkyMjA0OHECWAMAAABjcHVxA0seTnRxBFEugAJdcQBYDgAAADk0MjY3OTM4OTIyMDQ4cQFhLh4AAAAAAAAAAAAAAAAAAADFvvXgo+WyP6imPq6NI6k/dQNh0ztqpz8GsLQd3L6mPx5Xmhm0Rr8/RqvZpDfsrT8xBhnQ7hq5P8PtCcIeoa0/KHVWiE4BuT//YY08RYOgv5hDWMD277k/BJ0B1b3Koz8DsGzwW5d4vyzxquCsgIq/H7skBvOUrT8wyOiw2hW5P4cCVqurFLg/5aKfrBZBvT8bzX2UJHh5v5A27mwhaJa/9D9MdhdagL8s2YwVZT+wPwAAAAAAAAAANlxYpJ5lrj/WjhyxTOymPxrRLcDmn6U/kwrKsBQNuD8gNAajLcipP8ZeiaUV/LU/"
                                  }
                                ]
                              }
                            ]
                          },
                          0,
                          {
                            "py/tuple": [
                              30
                            ]
                          },
                          {
                            "py/tuple": [
                              1
                            ]
                          },
                          false,
                          {
                            "py/reduce": [
                              {
                                "py/type": "collections.OrderedDict"
                              },
                              {
                                "py/tuple": []
                              },
                              null,
                              null,
                              {
                                "py/tuple": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "py/tuple": [
                  "linear-3.weight",
                  {
                    "py/reduce": [
                      {
                        "py/function": "torch._utils._rebuild_tensor_v2"
                      },
                      {
                        "py/tuple": [
                          {
                            "py/reduce": [
                              {
                                "py/function": "torch.storage._load_from_bytes"
                              },
                              {
                                "py/tuple": [
                                  {
                                    "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWA4AAAA5NDI2NzkzODQxMzc5MnECWAMAAABjcHVxA0s8TnRxBFEugAJdcQBYDgAAADk0MjY3OTM4NDEzNzkycQFhLjwAAAAAAAAA/kTzQqEkw7+yQ23OuZvSP9Rk4s952MO/pgoJAbriyb9Hf0bMso7RP4QV3wJOdcI/Zt4bNtPi0b/6Xdq8Iv3Iv8xsbWfPdcQ/iso7eOiyw78Qrz4Tg4Srv4eHVZUudb8/uK78bYBKyj9hjY2wngClv25hV8fLbc0/1TT41zcWzz/ILLN6i0bCv6qWMZ0OlL8/TV5PyP1quz9QkroZjLCMv3XBM+Rx1p0/Nv9HU8oesD8gRwa2YSPQvz6calZXWo8/Vhn6xKNSvz/iNOcwfs7Kv87OYNnM2M0/CwdX7k7xyD8QNlCZzzDIvyKdRoMfaNO/HYcTt1q+rT9rzE/K/Me4v0Ut74UNHcI/T17/F5s1yj+lkIBzjqiZv0UKqFYo4de/ZHY0RKMFxT9f55RwnR7Kv7XAYQI7yMw/9AAikQFLxL8NTXRyex2fv3OzR9G3V8e/75VKSYaz0z+ggwMQTN++v0UHlGegks0/gZ2NRPmQqT9na6o8WyzRv/8Hu7bHddI/PtwAAKH61b/5lG8f/fiSvxbGsgI2mbc/xb9gCySzpb9pyQjuVObOP8nvUwSt4MC/2EKRSawS0j/AF+m9iErEP0vE78tZxsg/zH3y8NdQy7/wHaC1H++/v0DnL1u8Psm/"
                                  }
                                ]
                              }
                            ]
                          },
                          0,
                          {
                            "py/tuple": [
                              2,
                              30
                            ]
                          },
                          {
                            "py/tuple": [
                              30,
                              1
                            ]
                          },
                          false,
                          {
                            "py/reduce": [
                              {
                                "py/type": "collections.OrderedDict"
                              },
                              {
                                "py/tuple": []
                              },
                              null,
                              null,
                              {
                                "py/tuple": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "py/tuple": [
                  "linear-3.bias",
                  {
                    "py/reduce": [
                      {
                        "py/function": "torch._utils._rebuild_tensor_v2"
                      },
                      {
                        "py/tuple": [
                          {
                            "py/reduce": [
                              {
                                "py/function": "torch.storage._load_from_bytes"
                              },
                              {
                                "py/tuple": [
                                  {
                                    "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWA4AAAA5NDI2NzkzOTcyMjc2OHECWAMAAABjcHVxA0sCTnRxBFEugAJdcQBYDgAAADk0MjY3OTM5NzIyNzY4cQFhLgIAAAAAAAAAGFTSmU7DhD/fVzXVkmuwvw=="
                                  }
                                ]
                              }
                            ]
                          },
                          0,
                          {
                            "py/tuple": [
                              2
                            ]
                          },
                          {
                            "py/tuple": [
                              1
                            ]
                          },
                          false,
                          {
                            "py/reduce": [
                              {
                                "py/type": "collections.OrderedDict"
                              },
                              {
                                "py/tuple": []
                              },
                              null,
                              null,
                              {
                                "py/tuple": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "latents": {
        "byteorder": "<",
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "shape": [
          1,
          2,
          50
        ],
        "values": "eJwNzXswlHscBvBo6DKRLkJDp8s0tCFrmUactlYZosbuoqwd1Spd7KELOoQ4bcvWkKGb32tNVjVTmyiXqNGj6ftilLaUSyc0uo3Q6Jw0pTK1fz7zPM98HiQUH37kNi5udnCZornTJ1bbO6kL5j4Qy+Qj3mm5FWILYeeuHNc9GFM9D/VXFUHX3GFXvOACiivkPjXuDH4dG1JjRhm+RrvH7PLgUNvttV8v5tA37q3QreOgX3/8zBx/DpcVE9/XijjMD/U/clrAwXlqsrhwCYef+zS6FEcOgrhyg2w2h6WGoeue1hymOFZsmjXJAB9R8uhnhsB52RrTMIPlEd/SukEGeVlqS1kvg97+gPUpk9n3USrTWxh0DrGt6iYGK7EwSFVr3un29yiMDAf9CtOiDAzZA0tXRpYwqAwXh6MKGYxabX1MLkNXf3h+XBZDQMbRvxJTGP405URmqBlejA4E5seZ8xWb1eUKhvnGPI8GKcPG/vblncEMf6wIXzQmNnt03n72agZ3X8FMb0+GQf3V71uXm/3GyXfZzua+s/3h9XkMOw/WVL6cyXAi4l6RjSXDohW5hZKJEmxIcnqb/qkEVdJkbf3DxzDEShxH3rahQPYjuOFmCxoztd1DfTye7XsSdk3Hoy7rf1NkPI+UqDzFnQgeJHGxvRHCo7SiQ2i3nkfSmsoZCj8eZ6NHF/4Q8miyqfzWJODR/6/TYMEyHi5S6Yl4Zx4m714viT2P7XdHXi+25bHQ7Z2/5TQe6rNVDu9/EValBex99I2QV1/uWvcfweHkV9nFYYLq6qGh/DcEi7Lq95l9BKEyJexAF6HqdpHj7seEBvmrEGUrYW+Y6FVkM2FgMr5H2kioLZYJw28R0l53jIQbCceV1VYRlwhddk8zo/WEW5XW8p3nCFqNqybhNCGoYIbd33mEj0n/fNHmECay9ogupBNe8vltxsME3+ntNffVBGr59PnFbrMn6c4djyX0ZGxJnLONsEbkccVLSghp2+gp20T4YpFglRpI+LAlUVAaYP63upSSLyHj3troMU9Cju2xHc5uhN7gzdWhSwi/AddFqw0="
      },
      "m0": {
        "base": {
          "dtype": "float64",
          "py/object": "numpy.ndarray",
          "values": [
            1.2599606051141883,
            -0.2405918270602689
          ]
        },
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "shape": [
          2,
          1
        ],
        "values": [
          [
            1.2599606051141883
          ],
          [
            -0.2405918270602689
          ]
        ]
      }
    },
    "input": {
      "observations": {
        "byteorder": "<",
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "shape": [
          1,
          50,
          2
        ],
        "values": "eJwVj3kwlAEchjuGbHSRpGZnSzrURCXR5dVoS9IsqZ22kkSp1Kqdau0oNUM1EsuUSaecLcaISBfdWrtr+X6fPUwksh10k0RIz9/vzPM+rq7/YXHl8n8a0DkuL36dMwuz5WMqBhc3ILulY3qIEwuf0X3tm8gIQUBen8yRhaV19Q75YSMsuPJJF3ks5NOY2BxrIz7brZcUTWFR+Grnr8QyA6zmJIzV2LKQJVQ1em41YLxbf/un8SyKRbFpimEG8PwFozhWLG6WKDRPFXpoc1xCnUaxSG6q94ndqAdP6jfgO4JFV2fkZ1O/DqfsNxkP9hOCWwpyW/N1UHd3fU/pIcSHxh2TiHRYk9i0tryTsGH04/1JHB2yIh81Nn0lFLh3ZLg8rMdwvleRWTvhBW+Xr0Bcj49Ku8fOJsIb5ZrM9w71CFD/sBS9Jey2PPP7q5HFtQUnUuNeE9pS9LdCkllc/rF3W7GeYNVwb5rHOhaxU8OCmhlCiYu0OWIki8Fa7tWxNQTt3ZmHuysJ0/n8iVASokMyJUw0IfxlvPLQc0JP18Xk7qWEiqIr5VlDO4VF5NngPwxk0tkthvsEG/MDM8wfMNiR3bx6TBnh7ZwUr7ZoBtdI0up9e+hvTKGq05OBtiT5fnQB4e8HUYXzSAa9nE/VpbmEwEl/ZsiVdUgtnmfzLYNgl1RuP05eh5hLFqlzrxNycxKqFcI6DK90EYSnEWJOu4mFvDrolgesyrlAiPOPyXakWnBXcCPakghHynrSC8NrsX/AW+N4jnBDapu1YlCLe/qjYXtOE7iyrIyqNC3E80Nd804N+b3MirwWaxFy8pHHl6Hujt8LBtKZGjBBi44skhJ04tstDYdqsE981BQlIfhOzlC/m1AD74gl558cJCgtSzfcKdWg1WHWXs4+gq2Zs72nSAP3qF9RgWGEVWEfBmSDaqTv2lx5I5hwfb7ft+231Gj90u3esZVQxdne2+ivhtuyBJOHkHCTny/43qfC0uPPq84GEDZTkGeiQoXev/6vDX4EIX+hW75QhZ/2JgcnH8IWo+TZSnMV/gHpjptH"
      }
    },
    "iterations": 20000,
    "log_likelihood": {
      "dtype": "float64",
      "py/object": "numpy.float64",
      "value": 1176.3144487998213
    }
  },
  "start_time": "2020-07-27T18:15:56.646853",
  "status": "COMPLETED",
  "stop_time": "2020-07-27T18:54:29.847550"
}