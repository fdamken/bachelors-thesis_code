{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        10,
                        10
                    ],
                    "values": "eJwBIAPf/OSxAdd9hO8/9xDSJAIgh7/ELYT1Xwh2v3q7MggmbXw/d0dx9zjPmD9KCZrIxO2ZP81rMIytJYq/dexOuRYldr/ASuglg/GUv+fHpAgS0aW/mZbsTJsNlr/gugn9ol/uPxN4DLoB4WC/a90O6BKAhj/VC3Gt9AaBvyMhYOQbOZm/MYwPUYEWkT/WnCiPQdNoP4FfEebpuYA/m08BGlZTlD8/gaZ71TCQv/g5/BRO+F0/d6X5MH+u7j8r3CthCT9Jv1muxe0dY3u/b7DtmDIjj7+zPy02xmqEPxOXzX/TvHa/5MY9WTCXVD9BVK4zEkV5P8GiOxwnj2Q/yvdhZOyof78/siwmOB6Uv8sLc+Fzju4/TkA/D5U7kL/dYkVuYZJHP4+jCPNLQnY/mEwotJ5YfL8STNFs6miQv6CuHm60c24/QS9wzcJQfb95moRgdzOqP5u/SDCP0qQ/pVKwyDlOmz8ZFuaUYcHuPwBUNBFoT6u/mGz91bd+oj9YcsdzbwGMPygfQtzeKZA/922KOPPqbL+v7MSDnKmTP/EmPgQL9YK/dbgoHi3OSz8F82XjDAt8v5yOZrcHk5A/pa2aCLd57z8CPZxCCLGOvxLaUd+XnJK/qc4XAMkZhL8DHRAsOhSgvzX/917swou/DxsnWy55kL/StSOgZnigv3uVC5watpm/tBOqo4NYnL+HiAR45bl+P7V2WKGaD+8/kupnnSBeU78U+2bvZFSZv6Ww3GcI/5g/yUxyTtfGib8hMxlQpJqIP4fudTWmMla//xqRLTHMjD94wLOLKfx2vywMI8kyJaS/OIH4xi8xjT/jh4YWyHHvP0s8kzf9J4w/kKxmdQ6gkD9NtGOvwNmYv8zTSxnlcpU/Ioqp1XNngj+/LNt1NmB3P6ojWxUZEIO/2WiwVxzFoL+NdspbjFuLP8qyV2JSXIc/dstTK3H17j/cHhkoN75xPxAVgLVcnmM/Ja01srUIkr+MJWTyqq+RvxclhrUS/pS/yR8obXCJYr+T0arhDayQPwdEli+tk46/bZBp/KODc7+QNIgB1lyUvzuopXhrYe4/xAqBxA=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    10,
                    10
                ],
                "strides": [
                    8,
                    80
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.42125749946864677,
                    0.6716268772440868,
                    0.8411258964644843,
                    0.7528445965958261,
                    0.17103039567430647,
                    0.6287924953405841,
                    0.16062649513921948,
                    0.6407966584632747,
                    0.6234305509798599,
                    0.6974618440342998
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.004043187253875658,
                    0.0020786732905276038
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    10,
                    10
                ],
                "values": "eJw9kt1Lk2EYxh8mGYHJLCi0kNIDywNxCXpQds9FdJLbdKSRI8ZQW4K1Mz9w9Q5HZScqWrrWam8p+2pjK2m6LZ4xarVyQUW4sM1VZmWuUnEqldTB7vcf+N3X9bvu6O1VXvznc2DYsvnhWyNAerXbs/N1VME77Tr+MkgJXzA03yUFwltIXbL5qFrQuvxF5Qb+kWCFrMoATNPk2tMVM6g0lmse8WOOYwrn7i+wxyAgOvHbsDQCwtrweWU4QBnlYpbI9/9OMEt3WdwNxJLk17QZQZG7yorqLFQxu/HgvSZE1yZ2N+Y127k8yBmPnL2iPjgFpLq0aX3JT8m+z07N1CiQnO8fdj25D8I5mbS+ZpSefFix+ZPARpkbqS3ihJ5G86slBVYL1wvzICfhPmxcD8WBZB/ay9z0ACnXl0TkRiDmN63F3iEq3DFwPam+C6Qj1ibwWumevgy20aUH9MP1wjxpznAlDMiLXgM55jb43vUDY0oWfptzgPRizkd79B4lgp6+iHaCbuycKS9pDnGeOT/pXlyeNCdwtWWM3xIAsjAp6XB0UtL+V+eMyqmwYbHybYafPtvk/1PMerm90DP6wV6YBzmlkkyep/8FtKumi5Z7rUBWanvOyWx0PJSoH9Tfobg77oWe0Q/XK50HOdvoo+5XpxJgGdx6NM/poqky04y2wc/9D+6Oe6Fn9IO9MA9yXAccZ9jZGHxV/iqs+mGm+If4P7g77oWe0Q/2wjzIGcusu6CdjsM/lB6Vfw=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            10
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            10,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDI3Nzk3NTY4cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTQyNzc5NzU2OHEBYS4yAAAAAAAAAJjHzYaDwua/4zzPM8If7T+djEuY3a2xP0rbFpWZWL8/DsSNH7XM57/C1PVB5pT+vxTMN2SJesY/2Ki2Je2d17+Kk+r21yvVv6ZyH3Tue+q/wf64VAXs4z/U9ILtDkPSv6+RsWFH+fG/HYoy/jAPzT9pc/gnchPrP1TX+5KHy+w/r6WjS77K0r/ulnVfOAbyPwRwMWkzB+g/MqdMKd65wr/JHDKZ5mSwPziyDN4kVOq/pJhAwsY44j9TO57c44PaP4UB8D/KkdY/xy2gw5GLxj8DrqmiZ0+nP/kBhzsSJuQ/j5Ad4p8H4L+wqCftMO7xPxePbjHrVdK/OVfVX3aJ8T8wdAg4zBj+v74jmT5r/Nc/XMYZZwMq17+GnuaWy5DXP+QJJqsc5vq/eOpgccMDxL+9FV3lcZSmPxGOQkI6bOm/mC8MC1Lc67+WnwMXRZhYP2Plt26pKrS/OqO5BDj20L/h8q6r6kGwP/S18I3skWs/KN4Zz0BZ1D8/Z5kuDWXlv5OeVPt4Y9S/R8i1UVPs1T8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkxODQ1Mzc2cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM5MTg0NTM3NnEBYS5kAAAAAAAAADWk2gaPWLW/QVJv5vlFvL80QKIxaii9v1KxrsDHxsE/uo1JG42Twz/Z2yRn5ZisPw9IjZGZsLy/po6YUbadpD/NkVvV569uvzG9VKv3v74/1cJDhoODtT8h4oxBNT7GvyPSPH6kKSs/TP5hnrITvT/10uCwFZLQvzFyPAYqf8q/5YRUGfWfqz+mNkvLGeTIP7ZwCOscTcQ/K6P3PfLEs7+ywqlTGw+rP2ZQoSPJvao/ZEpEhgW1tb+zjrDkApKBP6th+RRuUc6/EvmPaWsHqT/mhO6fM8e1v916XIpnYa6/8DOlgQnYwz8A3gcaxIK5v2HJkvput8C/kZGxwe8YxL9o23Xyx9DIP3eym0aM2qq/aj8ZL1Brr7/jywQf2fHGP0kKvkZ7FrE/kgXSTHPzzj/XtT0Bamecv1VJVmxJutO/KMhTxEZJxr/LNtDmqVmiv2dq3spjv7G/2/AGWk5UtT9k2DPfzfO9P3/S1TPrQbE/mPNIrAUvy78LoZMZXSzFP5/vI2EYjUm/k8JelXsytb8fF8mFxha6Pw8KCijFMLE/I3+m8h4JrD/M0HX8vkWsPzuW5XORHok/VevEg/Vhuj/bpAxpTJalvxwhWD8vGKy/lz4w/M0SxD9A5x19SeeXvy/HJPE+L5M/biuOfEztg788x/RPTcWzPz4h2ztSJqC/0c3aY2CcnL/Xdbd35tzBP31YJU4IDpq/q9a0tUDEsL+QBG3s1eK1v/PEE2KgF5i/qmXanZFX0D8PirRm9kGyP4U1VxAD57c/BsErODv4pr916dh/8Y+Yv6CPTwidI6Q/SNSesLdOwL9aT1+LpqmzP+2f2ic6eri/1QxEBaiXzj+Bj0nABO6zP4CTF4zHepM/2T+XflvdwD96OTMxwP2rP9VnNXYVRn0/Fl+cCt1arr94pEaH1yK4P8207AOOv4+/Ez44o1RJpj8NLFOHfsKnPyMvSHayAL6/72227xXHuD8PCy8pBT3Cv2GRyeqjg8g/91fjIPZLtr9x/BjgBqpCP/1HzYSwqqo/xkxdyqt2mD++w/J4BzW/v2MOWcQ3uZA/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkzNjI5Njk2cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM5MzYyOTY5NnEBYS4CAAAAAAAAAGmBG6VhpXC/ItN9wESXwj8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    10,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        1.0505699394188421,
                        2.325369213667537,
                        1.3353966163446764,
                        3.9842601492353893,
                        1.8033083729607575,
                        2.7895768293856915,
                        1.5151450675863005,
                        -0.3196221318987272,
                        -2.3043265106600277,
                        -0.16586302040187711
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    10
                ],
                "values": [
                    1.0505699394188421,
                    2.325369213667537,
                    1.3353966163446764,
                    3.9842601492353893,
                    1.8033083729607575,
                    2.7895768293856915,
                    1.5151450675863005,
                    -0.3196221318987272,
                    -2.3043265106600277,
                    -0.16586302040187711
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 15
    }
}