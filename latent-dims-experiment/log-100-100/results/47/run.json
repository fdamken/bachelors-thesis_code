{
  "artifacts": [
    "checkpoint_00001.json",
    "checkpoint_00005.json",
    "checkpoint_00010.json",
    "checkpoint_00015.json",
    "checkpoint_00020.json",
    "checkpoint_00025.json",
    "checkpoint_00030.json",
    "checkpoint_00035.json",
    "checkpoint_00040.json",
    "checkpoint_00045.json",
    "checkpoint_00050.json",
    "checkpoint_00055.json",
    "checkpoint_00060.json",
    "checkpoint_00065.json",
    "checkpoint_00070.json",
    "checkpoint_00075.json",
    "checkpoint_00080.json",
    "checkpoint_00085.json",
    "checkpoint_00090.json",
    "checkpoint_00095.json",
    "checkpoint_00100.json"
  ],
  "command": "main",
  "experiment": {
    "base_dir": "/home/fabian/bachelor-thesis/code/src",
    "dependencies": [
      "jsonpickle==1.4.1",
      "neptune-contrib==0+unknown",
      "numpy==1.19.1",
      "sacred==0.8.1",
      "scipy==1.5.2",
      "torch==1.6.0"
    ],
    "mainfile": "experiment_pendulum_damped.py",
    "name": "pendulum_damped",
    "repositories": [
      {
        "commit": "f7eed01aaffdebea72569d3e30d15e0240c2b504",
        "dirty": false,
        "url": "ssh://github-fdamken/fdamken/bachelors-thesis_code.git"
      },
      {
        "commit": "f7eed01aaffdebea72569d3e30d15e0240c2b504",
        "dirty": false,
        "url": "ssh://github-fdamken/fdamken/bachelors-thesis_code.git"
      },
      {
        "commit": "f7eed01aaffdebea72569d3e30d15e0240c2b504",
        "dirty": false,
        "url": "ssh://github-fdamken/fdamken/bachelors-thesis_code.git"
      },
      {
        "commit": "f7eed01aaffdebea72569d3e30d15e0240c2b504",
        "dirty": false,
        "url": "ssh://github-fdamken/fdamken/bachelors-thesis_code.git"
      }
    ],
    "sources": [
      [
        "__init__.py",
        "_sources/__init___d41d8cd98f00b204e9800998ecf8427e.py"
      ],
      [
        "em.py",
        "_sources/em_42219c3660e0d4213b9d85f7c4f7b37e.py"
      ],
      [
        "experiment_pendulum_damped.py",
        "_sources/experiment_pendulum_damped_70e127f1d9ac784a69ad73a74e3306ea.py"
      ],
      [
        "util.py",
        "_sources/util_584d431d1c7c3cb4f42650f6fda305c5.py"
      ]
    ]
  },
  "heartbeat": "2020-08-11T21:16:35.598981",
  "host": {
    "ENV": {},
    "cpu": "Intel(R) Core(TM) i5-4690 CPU @ 3.50GHz",
    "gpus": {
      "driver_version": "450.51.06",
      "gpus": [
        {
          "model": "GeForce GTX 970",
          "persistence_mode": true,
          "total_memory": 4041
        }
      ]
    },
    "hostname": "H97-D3H",
    "os": [
      "Linux",
      "Linux-4.15.0-112-generic-x86_64-with-Ubuntu-18.04-bionic"
    ],
    "python_version": "3.7.8"
  },
  "meta": {
    "command": "main",
    "options": {
      "--beat-interval": null,
      "--capture": null,
      "--comment": null,
      "--debug": false,
      "--enforce_clean": false,
      "--file_storage": null,
      "--force": false,
      "--help": false,
      "--loglevel": null,
      "--mongo_db": null,
      "--name": null,
      "--pdb": false,
      "--print-config": false,
      "--priority": null,
      "--queue": false,
      "--s3": null,
      "--sql": null,
      "--tiny_db": null,
      "--unobserved": false,
      "COMMAND": null,
      "UPDATE": [
        "max_iterations=100",
        "g_optimization_max_iterations=100",
        "latent_dim=5"
      ],
      "help": false,
      "with": true
    }
  },
  "resources": [],
  "result": {
    "estimations": {
      "A": {
        "base": {
          "byteorder": "<",
          "dtype": "float64",
          "py/object": "numpy.ndarray",
          "shape": [
            5,
            5
          ],
          "values": "eJwByAA3/1HevEbAOe0/W5180f0WjL8z0mAbP1SfP84hWAexXrS/150JD5HopD8xwnCIlOuzP2gpcfDWKu8//tZc1w/Sqb/+/OwCntHCPyjGMFOvOrG/OS1Rqwj4YT/V7bkNOpmiP31mZJrQ5ew/c7Y+Z6fixT9dAn8QFdWlv3igxQbhu7c/Om2S2OVwjL8+yQbKqqatv99Vt+MmdfE/yY2nn04Wwb88n6qEfuWmP0d73wBM76G/jfIupM3spD8X4bcl42uIPy/9gfDMrvA/SVtrog=="
        },
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "shape": [
          5,
          5
        ],
        "strides": [
          8,
          40
        ]
      },
      "Q": {
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "values": [
          0.003750980582867532,
          0.000923952310423959,
          0.002318677954978861,
          0.0009071259578495537,
          0.0011032823808827762
        ]
      },
      "R": {
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "values": [
          5.787418404725031e-05,
          3.749641170134055e-05
        ]
      },
      "V0": {
        "byteorder": "<",
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "shape": [
          5,
          5
        ],
        "values": "eJxjcDB+r1yZYs/AcGDx1t6ndgwNH1vcxa2B/Ifa0/Y4A+kEHlENs/1weQbm+aETdYDiNopqWV/2MTAYdDy6yguU73F8lcluj9APlV/DfH6DKJDvsJPz6Afu/QwJ26ZrJUvvR5gP1Q+TF5j34wa3FUg8UXKd+H6E/VDz4fqh8g01+zUTZewBeR1FIA=="
      },
      "g_params": {
        "py/reduce": [
          {
            "py/type": "collections.OrderedDict"
          },
          {
            "py/tuple": []
          },
          {
            "_metadata": {
              "py/reduce": [
                {
                  "py/type": "collections.OrderedDict"
                },
                {
                  "py/tuple": []
                },
                null,
                null,
                {
                  "py/tuple": [
                    {
                      "py/tuple": [
                        "",
                        {
                          "version": 1
                        }
                      ]
                    },
                    {
                      "py/tuple": [
                        "_pipe",
                        {
                          "version": 1
                        }
                      ]
                    },
                    {
                      "py/tuple": [
                        "_pipe._pipe",
                        {
                          "version": 1
                        }
                      ]
                    },
                    {
                      "py/tuple": [
                        "_pipe._pipe.0",
                        {
                          "version": 1
                        }
                      ]
                    },
                    {
                      "py/tuple": [
                        "_pipe._pipe.1",
                        {
                          "version": 1
                        }
                      ]
                    },
                    {
                      "py/tuple": [
                        "_pipe._pipe.2",
                        {
                          "version": 1
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          },
          null,
          {
            "py/tuple": [
              {
                "py/tuple": [
                  "_pipe._pipe.0.weight",
                  {
                    "py/reduce": [
                      {
                        "py/function": "torch._utils._rebuild_tensor_v2"
                      },
                      {
                        "py/tuple": [
                          {
                            "py/reduce": [
                              {
                                "py/function": "torch.storage._load_from_bytes"
                              },
                              {
                                "py/tuple": [
                                  {
                                    "py/b64": "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"
                                  }
                                ]
                              }
                            ]
                          },
                          0,
                          {
                            "py/tuple": [
                              50,
                              5
                            ]
                          },
                          {
                            "py/tuple": [
                              5,
                              1
                            ]
                          },
                          false,
                          {
                            "py/reduce": [
                              {
                                "py/type": "collections.OrderedDict"
                              },
                              {
                                "py/tuple": []
                              },
                              null,
                              null,
                              {
                                "py/tuple": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "py/tuple": [
                  "_pipe._pipe.0.bias",
                  {
                    "py/reduce": [
                      {
                        "py/function": "torch._utils._rebuild_tensor_v2"
                      },
                      {
                        "py/tuple": [
                          {
                            "py/reduce": [
                              {
                                "py/function": "torch.storage._load_from_bytes"
                              },
                              {
                                "py/tuple": [
                                  {
                                    "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzk3ODE5NDI0cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM5NzgxOTQyNHEBYS4yAAAAAAAAAIgNN29nrOE/8nPomu617L/CZhHnB6r9vy3YX9Ur9QPAS1VtAgDNp7/B86olyy7ZP0hHW8Lfn/s/CYBuaNNayD/pT6xhVKXYP1/I2QKsWfW/yTeccb25wT8JcBad1UW1vx/sQh2P7/Y/SDEFBEym4r+2t8ImOAUCQEG1fPebgPG/alD3Sralzj+S90G745XjP0nF2RK3weE/fyzjeA+OAUDyH1x7Q9rwv0HLaUpd1/g/HEdG3kpkxr8Gz0OIdTznP1pDaDgYswXA73TWjaSZzD8kbZP3e8D+P88PMRQi1/W/q7QMfKmG0b/H8uJkxJHqP6XzIe70yq0/pZmqoxu99782GMXYUgvdPzsCSy5qRNE/9WfX4bzf/j/ctbvRVBuaP7w1OMXAI/C/xbOTrxkm/D9thD1Plq8CQC0yHNZj77W/rJfD+qCW17/gZFMxcraeP9OwSHGDgem/Qji0lsCr/z/C5drlA1vzv2FWQyaMz/w/YpNZa0v55b+QziSsmBPpv+NEgF869ve/n60K/U5P4r8="
                                  }
                                ]
                              }
                            ]
                          },
                          0,
                          {
                            "py/tuple": [
                              50
                            ]
                          },
                          {
                            "py/tuple": [
                              1
                            ]
                          },
                          false,
                          {
                            "py/reduce": [
                              {
                                "py/type": "collections.OrderedDict"
                              },
                              {
                                "py/tuple": []
                              },
                              null,
                              null,
                              {
                                "py/tuple": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "py/tuple": [
                  "_pipe._pipe.2.weight",
                  {
                    "py/reduce": [
                      {
                        "py/function": "torch._utils._rebuild_tensor_v2"
                      },
                      {
                        "py/tuple": [
                          {
                            "py/reduce": [
                              {
                                "py/function": "torch.storage._load_from_bytes"
                              },
                              {
                                "py/tuple": [
                                  {
                                    "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg3ODQ3NTg0cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM4Nzg0NzU4NHEBYS5kAAAAAAAAAHqM+9InTKG/WAMZoaZJx7+qMErzgeS8v3oPXs/+GMo/PPV0pmWB0L/gmrMe6Hy3Pw8tBpPC+aY/i4BRA/BaeD+aIPWbO96Hv7RyfimAJ5A/emtDorADbb9ODnJposxYv7PNPgpFcqA/C5kOHCQNeT81dXOVXfvWv/0yA2YJC9W/gsovjFzMsz/q85hAYKavvx9ElwNzyLk/VnppK9/jwD9pjfRWzUGEP4tbQkyqJHo/FQXvto0Hqr9j6I6sem3Nv867Z+587XI/IQ/xJ3Gqlb9t0mV+EqHXv+jydIadK4q/Bb9DjWTbyb9kyn2ahJvQv1Ft6RNLwci/nL2KsesWrT/FQr0SoRu6PxrcgnlbtcM/YBQcUNtYtL9dwrmcXJ3Mv63U9BHnU9M/oUJI4N6owb8iSdkArYPUv1yICkcCaLC/FAd7APlGsz9Mhk5g2qSkv21vY3kKnZ6/URBZQkna0L9sYW+PvGvVv1EFFOiqTtG/xfu48dMmfD+J4JPhslDhP3Pa6SPhRnE/jqcnQFOWkz/dVKqGjye6vxdG9MYs/ba/nRkP7JOE278WRw9VcTXCPydG9I4Ee6E/VCLS3lYI1j/vA3oXOg2xP66lYUHZEYc/gNKsv3Gldz8LYRzSMdN6v/wBySStlZY/qS/EjiLZlz8RKhIKN7Kzv5NxnQr3R5K/ZNHjkaaKtb+3caP6IpfVP/BxFiLhCEG/YKx2zSV3tD/3yuctaQa2P9Xa3vYTdsG/HCjji2zMk781wV+/Vh9/P0Uxv+ojdbc/ByXvCurz1j8pGWbZ98yfvw+DKkRdca4/9THmDWXIwr8jpjc3PvSQPwUYvghOtsC/1txwsvXAwT/W5CcGVATLv+Bw7dpRKbs/OfbDj5X7sj/SyqjqocSgvwo4ATquTrs/pBIHMe01tz8n7Tc9ErS8v8pq76mze8Y/e6UGcqlCxb96zjxYcDSYv2IghG+rVco/sO5k0EOHdz9bdiVjb1h+v7PERDS7yMe/2ngWR4EqtL9/763y4v6yPwQsx5U9e34/c84TdoP1uL9C80SpjuC8P0aRpEkZcmo/"
                                  }
                                ]
                              }
                            ]
                          },
                          0,
                          {
                            "py/tuple": [
                              2,
                              50
                            ]
                          },
                          {
                            "py/tuple": [
                              50,
                              1
                            ]
                          },
                          false,
                          {
                            "py/reduce": [
                              {
                                "py/type": "collections.OrderedDict"
                              },
                              {
                                "py/tuple": []
                              },
                              null,
                              null,
                              {
                                "py/tuple": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "py/tuple": [
                  "_pipe._pipe.2.bias",
                  {
                    "py/reduce": [
                      {
                        "py/function": "torch._utils._rebuild_tensor_v2"
                      },
                      {
                        "py/tuple": [
                          {
                            "py/reduce": [
                              {
                                "py/function": "torch.storage._load_from_bytes"
                              },
                              {
                                "py/tuple": [
                                  {
                                    "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkwNjg2MzY4cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM5MDY4NjM2OHEBYS4CAAAAAAAAAI9XNg+NYrQ/xFGJf25Lor8="
                                  }
                                ]
                              }
                            ]
                          },
                          0,
                          {
                            "py/tuple": [
                              2
                            ]
                          },
                          {
                            "py/tuple": [
                              1
                            ]
                          },
                          false,
                          {
                            "py/reduce": [
                              {
                                "py/type": "collections.OrderedDict"
                              },
                              {
                                "py/tuple": []
                              },
                              null,
                              null,
                              {
                                "py/tuple": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "latents": {
        "byteorder": "<",
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "shape": [
          1,
          5,
          500
        ],
        "values": "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"
      },
      "m0": {
        "base": {
          "dtype": "float64",
          "py/object": "numpy.ndarray",
          "values": [
            5.815550419088059,
            3.0838289948140405,
            0.5663538094612512,
            -1.3396508794139945,
            1.554642459921966
          ]
        },
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "shape": [
          5
        ],
        "values": [
          5.815550419088059,
          3.0838289948140405,
          0.5663538094612512,
          -1.3396508794139945,
          1.554642459921966
        ]
      }
    },
    "input": {
      "observations": {
        "byteorder": "<",
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "shape": [
          1,
          500,
          2
        ],
        "values": ""
      },
      "observations_noisy": {
        "byteorder": "<",
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "shape": [
          1,
          500,
          2
        ],
        "values": ""
      }
    },
    "iterations": 100,
    "log_likelihood": {
      "dtype": "float64",
      "py/object": "numpy.float64",
      "value": 9526.122651790192
    }
  },
  "start_time": "2020-08-11T20:52:47.970484",
  "status": "COMPLETED",
  "stop_time": "2020-08-11T21:16:35.597290"
}