{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        6,
                        6
                    ],
                    "values": "eJwBIAHf/s3+g487/vA/bKr2+d5ZgL/xED63uAOiPynQkh984Zm/Ox/pLt33rT+1M3FettyWP3/4xYwyF7O/rNW+T09j8D/VRIvSIGiNPwmp6ILiY6A/eNbSULZrqr+woMUH00mRvyPqvE80dIU/VNK2dVhjtL+uw7faqPjtP/OwdAOWNGM/paX/o18doL/K+Do8YKSmP40yLN6AOKu/fuh372NTnr8SLTu9DTehP0C3RLH5uu0/+SEjfdVdhb9qsozpLlCOvw0pmSDptrC/W8jRo4BfwT/H39H4k4KzPwqqrJQwQ5Q/XGJUNnor7j+rFWRWcQuPPx+Hubcnfpq/wYeOsF0/sT/25cxLDv6HvwEbiDmteHk/692r3rTqlL+5dQV/Jc/uP12WmXQ="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "strides": [
                    8,
                    48
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.00013928113388872676,
                    0.0004507667024641224,
                    0.0001560793135761419,
                    3.268967521728758e-05,
                    5.4352631072997574e-05,
                    0.00013207139670042806
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    2.4461041304675746e-05,
                    1.8011274430307368e-05
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "values": "eJxjYGApuR7Dbs/AcGR5at5nuwPT8wz/zGbYz8Dw51Ry1wM7BgYP1z8Vp4A0Q8yL9T/2wdQxMEja7PrDbc+Qn3RrkchzoHiDYGT2EaA43/6SU7eBtHFdlz3Pfrh5UHUXbM8dPuEpbM8g0XpIJ/TBvoZ1ITqqjDftGDrtPNZOvLUPYS/UPKg6BoYL7BPYvgDFV0gE33kNkv/Df+DUPoT7IPbCzYOpc2hZ/TbpPZC/QVj4zY19CH9A3IewF2YeTF3m7VW64vYAoil2bQ=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            6
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            6,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDAzMjY0MTYwcQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTQwMzI2NDE2MHEBYS4yAAAAAAAAANYTCmi2bAnA3qMj5r7gCcD1XYGnCvjuPyXDjqj4XOq/ka3DQ3oo8j9h+MD5qa7/P1KAR2Dc3vW/AcOwOOcw2r+oOB9CCCX2P3NFViSTrs2/uyxkPD1g9r9Xw6RwWZHuP2+Fl67t+PG/f5iCozkL+T9rTwsMZcXkP2BRYBQtPfI/1sKs03aE2r8BGFa6HWP/P3KZfFm5KfS/22sdnGJux7/Cn1YBAnHbP4nPZCod/PE/vcJjfu9RuL/j0iwobwrzv3LI3COg3gDAZCme6CDwxr8D8/Mpgrr5Pwv3pV0DagZAJUudg5iBx79kyyObYlH8v0SxeQ4wqee/JfpZyceu67+iGWU4Rou0vxaLCf6TDc4/FxoqMwj68787kISjbAzEv3FAOhalIgBAUhsRLvwm9L+csiZK7RH7v8Xp6FtR2eO/0pjplHEB2j/UeanZc1ICwBzEj3HAQARAqWTtmZ642L98hNrl1f/2v6q6xk1J6/K/ygrfd84C179GAo5Hzye+vwawI+zd9uW/9E7hTJx+4T8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDM0MTgxMTIwcQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTQzNDE4MTEyMHEBYS5kAAAAAAAAAF6MEdJa8LA/UxVr9Mak0b9B4lfNvWaIv1uWz6dm0YI/qQ554yxVuD8z6c0qe3fKPxbdpLatmKI/0oHO5MZMeD9aniqBFBG0v/ycCx4/U8S/r0wMIONqkD+mt/wnVrvJv+J1lUkHArk/u0di6p3jxD96uIFIGHjFv0W1QDwt9rK/KXwl8qI2kD+Hhd5tDeHHvwJqaTqne30/oc6Lp7joaL/dud81ZXN7P1pimZxMT9q/eRBbmAaibr9ozuEfZX1pPxsSa7SiPMc/YAy74TJKbb/e7dgmSRSZvwYnxHUzodA/9G+nzn69zb/1FYWpZNtrP5/wodYFo6q/gVUl++avxj8hfBKbfDebvy9zqHJTQX0/Ml03epMzzb/UBd694pJ4P1KuCsHwKL2/kM2LXYqRgz857HmOuDhjvxWtkvfNQcK/H955yJH3xz/AbnIDZmPSv2S6xMf9kNE/Sn3mUhWRrL/uYlydU7DfPzf70kZiF6g/KTprBdLi0r+46HtCphDFPwRHXr3EZ2A/We/iJqCDhb8H1iCVVxa8v6SPhy+53Io/AQBvHQx00D8adLyA7dh2v4eSa1lQHb+/neEDHbgNy7+Qs3zuSCPOv9JG/PEOroq/wWu+x7getb8mIUbaw0+/PyCZogkh+HC//iJTMML63j+mrRzFy5GcP6bxvTLUfHI/3fjy5qn5wL8+bJ52RQqtP4TLhQk5wyw/UYoA3Ok/rD/77y10uQVxv3rMGjTYxnE/vqQ61S8Vdj+XPTMJw7fGvyd+W/b5umI/SobOZcOagL/FYlWekxqUv5JiWoR6s20/ttvs5ZpLkD9ZGxpmpN2zv+a8M4+XIbu/0WN0qUeYSL+RJWhlU3mVP3l3n2CHraQ/qBqodNDNwL/28aiEXFW9vwQs8lYNTMA/HeuT3ZPrq7/983ypqM68vwLfy/XnPoO/FqeLBGqfzL+Pg0imVka8v/Qp8cqw/pE/l76r3HnItj+pvMVZr4ORv3mhKus52L6/IlYRysXLtb9SeA9qVTq+v2hiKqZ8+nQ/ZUVdUh6/sz8lk+FZk7yWv18po+7DAmC/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDAwNTE4MzM2cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTQwMDUxODMzNnEBYS4CAAAAAAAAAPhfKLiiwck/zTReStExb78="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    6,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -2.533298696834764,
                        -1.4922531728147002,
                        -0.000560814470991313,
                        -1.387661205103162,
                        -0.37019293397666175,
                        2.5360754495110838
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6
                ],
                "values": [
                    -2.533298696834764,
                    -1.4922531728147002,
                    -0.000560814470991313,
                    -1.387661205103162,
                    -0.37019293397666175,
                    2.5360754495110838
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 95
    }
}