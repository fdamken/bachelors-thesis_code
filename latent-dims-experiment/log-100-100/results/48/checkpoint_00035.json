{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        6,
                        6
                    ],
                    "values": "eJwBIAHf/kdxTp1x6vA/6VUAsjm2gb8EAvr+lQKhP3mnTwWxyZ+/Or0Z6nH3qz+Sqkx7gblyP+MvMmKaoKi//hQldU4Y8D9D2ZRj/8hvP9TFdrqHOak/dr8mAaP2q79hpyt7ddmBP1veZzRDjng/hYUhqpy9mL/TzEE16qzuP91t+9HwyJS/9PduZs9qk7+7bGbq5bKBP8KDfsDjXZQ/WXzhmR7Cn7/V9K78B8eHP/e2ZUFhJ+4/w7TsDOjser/rcpZxj5Sev2+GK8mSeGy/jNJUr7IRwj8f4OEevqmtP3sqyxRGIqg/wfnxjrnU7T/phN71fsuuPwyJzxn6dqa/Z5n3orVIrD9M7ZBsBl+dv6NMLjeTZ4k/32o61j7cnL9xywsJBZ/vPwLtnQY="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "strides": [
                    8,
                    48
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.005162300594517996,
                    0.009119809041505928,
                    0.006561820199853381,
                    0.006568736532160929,
                    0.0011745413445508116,
                    0.005685392398821884
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.0003472790222749609,
                    9.918076089218175e-05
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "values": "eJxjmHE/+dmZbHsGBtHkfasl7RsUcre0TM/cz7Agsm5DXPh+BobP2R89RYG0xd0FX6Xg6hjePT9vObnK3qHlf+7TmTn7GWZMdn11PHs/Q4PpKbHVGkB1dS99qjL2w8yDqcuzs5i3sa3evqHnpZ/H7jx7BkmBiu3zlfYz3PCbbCyjbQ+3F2oeXN2Pbk+uGS32DFNX1nW/y7JnuHCm/NmKBHu4+2D2wsyDqbt4JDhnQYw9Q8EdTttcF3uEPyDug9sLMw+urmTFjNv19gCu+nxq"
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            6
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            6,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDQxNzAxMjgwcQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTQ0MTcwMTI4MHEBYS4yAAAAAAAAAJTTFrmqegbARtGPqYHMCMDCsQnxkeXrP6HPHZydvOS/xUdl51f+/D9OwnoKSqDzP9tI/4u2G/S/UBBqaxS3yb/2Xb4/yznwP7HOTznVYdi/8emRbCbv879SslEF8GfmP6GimmtdA/C/jtxVvar58T+SOU4dQzrKP6HJoYwC5Og/UzF4EMpYrr8aMYeLY+z8Py6tvQ/RZPW/pAk3Vik10r+V3bLBIYvePym/Edfvq/A/I2Pp5Ugbnj/7bXZiTKXzv8OxXNHMtgDA2O1UNWYg0L9ZqsnuNaj3P0IVnqPoNwBA1xMEv+YI2b9KUTGA1en7v3RB7XaB1d2/acExfrzI0L+uE6rSzqHhv20PbjZRVKc/qvj9p2g49r/USRP3s0epv/ys1CEwC/w/a7FZNspe8r/i4kDkk4v3vxqBWw17yvC/sv4cn5355D9m3Ndra1b7v2hf9kbf3AJA4tZoxuNS0b++LgIRbgDxv6bn7b3Rc/K/GB4FMz8c3r8fPW+GcWjhP2rgtFTBE+m/hT1NB65L0z8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDA4OTI3MDcycQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTQwODkyNzA3MnEBYS5kAAAAAAAAAPe8g0eW7bY/siXW3JIWzb/mIPxdazrFvzlxf1W6wbk/o+5o0LsEwD9ui/501zjEP4vp2vfJFqE/w/nCoAwik7/s6suKuuG0v7VR6eHvX7y/vy4X1+Q6VL+bVQ9XgLXCvznv5RqjlbI/9AcIp7BZvT8NG3VdmOTJv57s4D7VQUC/OiZWPKU0wj/GfR9g7u3Ov5hy2ErVerQ/Qyg0GyWjoL956k9Wp91eP4g29srlHM6/T8X3VuINkj+keg1UCqq3PzZkDVNMW8o//cpfNIWfjb+Yn7FNC5zCv80QzzXDA8s/KbRFJwj3yL/isUBZ4pWNP4kBC0cB1ru/7pY7n4AcxT9vGLA3VsGyv6aj/458D5+/iLifqVbVtr8/AG02U26kP2kWOu27vrS/59rsoq8Twz8/MHUzvx24PwPVko0DRMW/L6qs4RNfwz9ljqNjKIjOv3WbWSBa48w/AWtypJWpqj/ueV620G3OP4jHHtXdnbI/UIkcoxiIz78XkJEU8+HAP8vmE3PF2q0/ov4RwJgcpb+UcMCOiNunv1YLezhdkYC/pa0ps1300D+onFUB6z+rP0CPPf6ZBIa/R2QZpolQyL/zUgUkX2XCv9fwzG+J71g/qkYmQwehtb9kIKmxWau1P2NVw/2tDJw/17aDuBtpvj82EKQMiHa4P5xRMuTIkpo/GYlIYFZSub842acsN+43P859gg57Ybg/ua1fFu4lor88hQorWveQv+pYyNXRPVa/YBLHGn5Wqb8mRaBWzx/Iv2vnCIqzAzs/XqICvuZikr+f0Fz+4by1P49tHG72D5y/Dra7c+/Crz+qjh7xjsasv1trc+Mhl5G/IGkO1E3coL/R3n7wmle6P6ANXfUrGKw/unLl9/lWuL8jL2ojZ1K7v+k3cX3N+Y8/GXciGEsAkL8tB9r8HWy+vzlme943XrK/k3GwdPZpyL+JMHv9VW66v4s56JMnTJE/ffJRFx1OsT/JE4BB15ZxP1yLDbnUt8u/ppD1YPxbZD8fICAiyDNiv0pw+7KznpC/CxhqOjkDsz/dOyJb5XxLP4tLKcqEqp2/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDM0NDc3NjAwcQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTQzNDQ3NzYwMHEBYS4CAAAAAAAAAM8AWQL/gsM/I98IjjkDkj8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    6,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -2.667983677616289,
                        -1.609899140008195,
                        0.0894384559856731,
                        -1.5820201770026316,
                        -0.3841996078726616,
                        3.0088148242899346
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6
                ],
                "values": [
                    -2.667983677616289,
                    -1.609899140008195,
                    0.0894384559856731,
                    -1.5820201770026316,
                    -0.3841996078726616,
                    3.0088148242899346
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 35
    }
}