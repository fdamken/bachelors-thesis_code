{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        6,
                        6
                    ],
                    "values": "eJwBIAHf/jL6eRJYvvA/aopInIZuKr/8zZcyhnSgP7GX3FvTlqC/nSCVVZAwqz/g6kZXVXRSvzgjcR4hjpq/hBPWHU/a7j9VM7BB29tQP5fG1qatM6A/8SFhqzu7pr8J3703PxpsP5vNEtnwvHU/r6LwY37soT9X3Wg0tTXuP00USaAOkIW/5u0Du+Cclb8W4cXmmHuFPwJQ3qW4ZWg/bNq6xPsdlb8RAnbW1xyXv6eIrsOafu4/e7KkpVzAgz+esaczN3Shv3BIdgY8VJQ/0QbiM3Xguz9Yhd2rxR6sP0JTUxBDa6Q/qE32ZsIP7j80px+OrSWyP5jKaQlLPKy/NFixW5GarT/MwfijUcuUv+BRSNBqR6I/HBoHuv8epL+LeMDsfiDwP7/fkeU="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "strides": [
                    8,
                    48
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.03394846149860463,
                    0.05251329556065644,
                    0.037519452385461775,
                    0.031201025656375298,
                    0.010786520365356322,
                    0.03220529392633024
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.0008456886522217246,
                    0.0003647950404659923
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "values": "eJxj4FAuXCzVYs/Q8T3o54U4e4dn06apHOvYz7B88yxOSSA9sbBGdFX2foYHs9d1vw/ZD1PXIHV8x2uW2fYMyguPWs6dsp/hzNn7yqKx+xV2eDirfiy2Z+Cruhz2vHw/3DyoOo5zyy6tqlpm/yJTivWW6kT7mjhG9TmH0vYzRN/1v/IxDWEv1DyYugcmb1RjmjfaazRMbO9cMNee4RqbKMeycnuY+2D2wsyDqWM3vztZImSK/YMn2TlGj0sQ/oC6D24v1Dy4OvVWtdULF9kDAKO+hfA="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            6
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            6,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDEyNzMyNzM2cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTQxMjczMjczNnEBYS4yAAAAAAAAAAZczgYPpwjAngV5nUucBcDrgHhS74DqP97dCQ+J3+O/GyJq6F06+D/RgBYWL+LxP+wH56ZbGPO/FQMnXPryw78jUHsm2hvvP65ZB2ZNsdy/r6oM4pYA9L/6vA5wGPbhP0lLDJGwnO2/BPlAydhV6z+4RPZ7JHuDP/Jpdf89a9E/r+wgUwvHtb/0UQcHQor5Pw2eM2RL//O/i7P/UBKp2L9Z5Y7sdXXiP0zdEuWOX+w/zqSdiF1bqD9FO9z/MsLzvw8ITo8UNf+/f+PPNaRU1r/D+C4ZubT2P1f4zsHnmf4/rlJfqO+t2b9wMnWhQKX5vxuoO7kYVdS/R6fN1tyA3L+IDZ5V6v/iv1xusqWDXLc/pA0TUtI297+DNdGdPR2Iv9HZqJ2Wafs/vBFh+jZG8b/MZhvPcrH1v09sVMcE7++/+AJu8RaXuT98ofZ/HNj3v7XmCW3MmQBAC8p5OPuo0L+gFo2W4Qfsv4BnWQisA/G/PT0Ti8000r9Bqxe9Xv3TP1fgKn4Et+i/VBYgc32j0j8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDI4ODg0ODAwcQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTQyODg4NDgwMHEBYS5kAAAAAAAAAFm1vBvS8Lc/NapQlXBJzL/iX8khfK/Dv3xr9nwfuLw/bGX4pX9wvj8Sw0UttWvDPzPat75B1qo/rOfIQMeaqj/aVxp8IE6wv8+ZaJ8LobK/m/KBcbTWsT+XchN24JXBv8AAowWIPLI/GAOue6/Auz9QpHCWl9rJvypVYP2bF5w/+r+vwrCQvj8DGDpcABnNv5hKEAsp+bM/nF6a1WvOpr8croKnAjmuP0ZMwdg1W8e/PMXawH5Onj+sK/8il9G8P/J04eOuhcg/8EsfexXEor+y/nHhnBbEv1ZJFu6gNso/bKe7XIkCyL880kDjdqSEP9+V0GwGXMG/j7decFaKxT9w9CPiwyyzv+uZBOn9/6e/x1/+0/Giub9CJRxsipSyP82ouQs/+7K/7/EGQ5JWxD+2Um61cZK0P6T5EfPVqsS/7n/VV1Cawj+kDOsbBrvNv1GFodg3Fsw/S7E4Mdn6pz8o3c4qvKnIP2PktQMtgKw/pQqp6im7zr+Shh2YABHAP6uVifEe64M/Acv14Ybzs7+O0Qc6Skmqvy1fItVos4i/DykJWRrMyj/nB4VcOuS2P+XK4PVH0nu/9hom7GjOx7/kvvXcxinAv1S+JteFgaw/dZHq2Kdqt7/QwbpFEka2P1s3mg3ZcLA/J12Nx0ghwD/jhMl0LbC4P/Lp3XAfrJ4/Qs0ni0Lpub+YPTdE8ngkP7rAPjgEybk/FArzN9qQo79EjZ3sv5azvz8HFJuy2YM/ig1qRW/LsL/Ytn6e8F3KvwFdbTyTz6U/ibuyyrXhiz+jLnPIAVu2P+vmw3OWuoS/c4LnzIBgsj/VaFEJDL6qv/dDiXtDj4y/J4afSqHNlj+Ob8csPWa7P9NYicsIBa0/Mx9YPZgjuL9OuoFsbSC8v6i/zOf8m54//8Ay+l+sob/L3ec6sMm+v9nwU0spPb+/aN4KdEyHxr8gkcZwP7ypv1DyqkH+JZU/32Nro9tJsD/ILPQ/d+2APyLdaSl03Mm/SxHCtfglkb8KnRhLAdCoP9uLuw0UrpS/5M6Jdt8ZtD+vDQ9909xwPxU/lpXQ0bK/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzk5NjUwNTYwcQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM5OTY1MDU2MHEBYS4CAAAAAAAAAPspoLrctcI/siejXT8Ulj8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    6,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -2.983763624923687,
                        -1.2651580082369784,
                        0.2148734498548251,
                        -1.0548031512877052,
                        -0.05935235207674795,
                        3.1179653779741394
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6
                ],
                "values": [
                    -2.983763624923687,
                    -1.2651580082369784,
                    0.2148734498548251,
                    -1.0548031512877052,
                    -0.05935235207674795,
                    3.1179653779741394
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 25
    }
}