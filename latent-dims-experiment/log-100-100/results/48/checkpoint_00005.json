{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        6,
                        6
                    ],
                    "values": "eJwBIAHf/hYTFxjVbvA/qA6yqPYckz94rqwxYtadPxDS6nZbrpa/uBN0lBSToT9T0BiVsgiGP3NuNBLnGZW/q6iOyaho7z/C71KYytSWv4XQFne+1pQ/tardG7/Mlr/z21uLKwmBv1oGf943636/i1xXWFQVkD+DW6QCKcHvP9GutwBjlpc/+k9cU2Uijb/kzxXRpz+PP58icZiKx2G/lIgPWaAurL+vr9mHEXWSv0NT2Fudu+4/si9aeZh9jD99QGRouHSiv4FzTUj1bZA/uA31b5tnqj9/2Zcj1FCcP6Q/ouOHvoA/dq1YU7RG7z9+yZWgd9KbP4+7ndtXd5e/FSZ030t8dT9P7a6Dy+WNv6O1/yJVspg/dcgPTEOCnL+D9WWJX8bvPwUBk+A="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "strides": [
                    8,
                    48
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    1.1120013744961788,
                    1.0526127274244286,
                    1.0492073327803588,
                    0.7963241954846576,
                    0.8613280664990115,
                    0.9502375574032965
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.01672724164270403,
                    0.011978094719058219
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "values": "eJx74DT9ccv2h/YeUuK5O+7v2b9hx9Xu+sod+7/sY6jr9Zi7/8Ln+klbP2zez3A2zWjjt3n7Yeo2nvvmtWf5bfsDyVpV89v27NcpuMoR2T/XnuFTkUO67BL7A80MP7qbDsPNg6kz/Xvb+mLpU/s7GRNjn7ycbf9D7+kn8+DN9gcWyNkyBc6H2wszD6ZObu4sBwWbF/YZFxiOJzZvtt88/dBZR/FdCPdB7YWZB1N3a7Fq9Dy9J/YC3NFKD/Zstof5A+Y+mL0w82DqPoi6fg399dQeAG8Emhw="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            6
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            6,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzk2NjYxNTA0cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM5NjY2MTUwNHEBYS4yAAAAAAAAAJVSzAbU9+2/K2fmdwYk/b/YzH2EkqTlP4MOXrSLDc2/aPapMN8h8T8jPcMnr9urv+gdXuU8zPG/RhDdunINvj927mR9OeHUP+kUNn3qmMO/wPmLV30E8L9vCV0m/B97v8yDPESajti/LuRObC7X1z9P/+nqD+/Xvxq1AGcLhaE/E9aX6vJCrj+xcQT1IjvzPxA6yFwlwt6/q0Mo+cWM4L/ZTOq20oXrP3yGUzMlNMA/PPd8bNVT0z82W8ajOwrvv/knITR7AfS/9yOEUzAC4b8YeugNyMLtP5SKUVMSrfc/hYLu3YyV1r+CZYBRW97wv1t+g8pFIdi/WLIs3tDs2r9REyfUCbXgv2nqT1m4KcI/Vu9sC3Vc8r+Zk7fLY8jOP2R2G2Bhe/Q/v//Jwbzj7L8yxg6j8Qbyv2UDsvKjx+S/Lu++D27YvL9OMcMQyiWwP7yn2GlWCfI/5UW1VDIVwr97PTLWeM+7v4UWakGBcfC/YETvCk53wT8RkoFJqK3lP6vkIbd2x9y/ygr7qRrnur8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDAwNzMyMTYwcQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTQwMDczMjE2MHEBYS5kAAAAAAAAABBkHNu7YLA/S/VklhtLyb+Ylw+Amn/Ev7AJj3WW7L8/AHF8ozP3uD82J0KkSlXAP7ia6dFZN4+/VvQ7qFQPvz+bj1YbJAmsv3FCmP1c56m/pNJ3ws+3wD9JJKonDJzGv/F7Iq/il7M/tMUEjt8Etj9MA32pybHJvyx4al5glJ0/VNFvl+RluT8EROEssy3Fv5YiEtZuosI/a+ne1UtMwL+mRyf/uoe/P5e3TzgA3cS/LNtNYrJJwT+spkRqb+TDPxxFZp1uZ8g/DF3B2orExb9WMdvk/KTDvxf4qt4hHsc/Y2jz0OZPyr/4tfpVq6yBv4ihnTlXr8O/59tSk9TwyD86a/OzTtG2v56nJU+Jcq6/SMtByyNOrr+MlYYYN7RMv4wWRPG82aa/t1r+mTVquj+7n4tgChupv2u2GcuV5b2/PfFQxgTvwD/sB2Tag9nKvx62ecx41Mo/ugXgd64QpT/N5zlW5XfCP/vtW73yUY0/Ab6lvoYjzL+4SqMN3q26P2e+r+hPxaA/xI+CIBKAwL+iyXb4lx+8v2+EyoIZtWC/n1Qkjxwpwj/u2l9NtNOQP6j/qTICqpG/s/EopP1jyb+oEYmDU0XGv5GxdMOl3qC/qvk7x3z4tL+4gDogGhvAP8Pj1Ht9qLo/oRcAJNeesz80apUf2ty8P0C6FcmbNZA/bZRDqDv7vr+Lo9fF+B2Sv8HJiQBqkME/XCpn47Q4ob+Yx73GY2S5v/Ed+ig9kKe/JgAzW99qvr9FOEdcUyPBv6+RB+GyG7g/uvdP47uGsb9Ve0ZvTme7P4ExTXAqJKA/GnbFVlFkm78q0Fj/kJ6wv006Yqep6rU/uZiuaOOStT8YY6TrTj/BP65Sq5lExag/2w2gR8LWvr/ZwvfyTsK/vxUJcNWH0J0/Zyh9SqJXpr9kRSjgWV/Cv/Jeiexk68e/rnZ0/O0txL/dYgj5576gP2bH1eZ7i6M/nlFyeJ66sz89C7WdyY+Tv6pQSqYjMMG/CM6bk5KWpr8LU5JfuqPDP6jnJeJNwJy/1STMZiU8uj9lLO9XfomxP2FAK1FeccG/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzk3NDU1NTUycQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM5NzQ1NTU1MnEBYS4CAAAAAAAAAHXwWY33NL8/ef6VNjy/gj8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    6,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -1.4364853839045448,
                        -0.43946983899111475,
                        0.8242388414905784,
                        -0.07793430709831742,
                        -0.792470908328253,
                        1.4756686736599052
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6
                ],
                "values": [
                    -1.4364853839045448,
                    -0.43946983899111475,
                    0.8242388414905784,
                    -0.07793430709831742,
                    -0.792470908328253,
                    1.4756686736599052
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 5
    }
}