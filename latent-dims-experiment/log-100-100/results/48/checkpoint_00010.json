{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        6,
                        6
                    ],
                    "values": "eJwBIAHf/oaVyLGdmvA/VP4H9e24kz/J86Es06qgP1NXb3fiwZ+/FbgOESQQqT88lZukDvdhvwyeQYuE4pa/aVgUIBX27j+oU9POb3aWv6aAVB0EEZg/0s2ZEGURoL83c/j/TDx9P1ptF5KRjXA/CU9Y3Enxnj9W5aKXKCrvPyj0SVxE1ZE/KvuMcBIolb8GH5NSmCiYPwuB49sh7ZK/64TM75KQrr/GZ2VwdymRvziVfLjgoe4/4gjn84B3kD8Hbpw40nymv3gNsZ0wepE/iGA8BXFLsT+VK3sLjf+WPx7EJ2/u4pE/9fvAR3jR7j//I2NUkPumPymR0R+9jKa/T3jrKz8onT/gfxufivyFvxVawvYfw58/JcqAGA2Cpb/eB1JJoI3vPz/Sj7E="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "strides": [
                    8,
                    48
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.5136602983417135,
                    0.5789480728786887,
                    0.608571409466488,
                    0.29215474980264117,
                    0.3418156737621203,
                    0.4763044294473121
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.0037900338507715786,
                    0.002958926901593429
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "values": "eJwzKFxZd9j0gn3Da9mgrIr5+wsevX36i3/bfoVDnZpzN3btV6guPXiFZao9A0ekOZ94x36YuieH14TN6DhkL/DHyTXz4r79P3YaNO3bMNn+QJSi6ruY5P0JE17H3Zi0BW4eTJ3nvR/RJ1mv2JdO5G27vG2X/dcrb/4dPr3BniHFbl1JRIc9zF6YeTB1LtWF76an3LI/oeD0bGPnUXuN0g+3VJKn2cPcB7MXZh5MnUPqgbr1thfsJ+w5vffh6iX7Yf6AuQ9mL8w8mLoLG1g+ngq+ag8AeFiaHQ=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            6
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            6,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzk3MzYyNTI4cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM5NzM2MjUyOHEBYS4yAAAAAAAAANrFndXG0gLAxiL5gL2A+7+G7WyRdKboP7LY0UcPRNW/smWYgtki9z+PR9V4GTrAv4hZ2XbvUPO/Uu/U4MNVr78x79pULublP+Izc1UHF9a/ORPlrOKa8L9/iGh/A0bNP23Rf2ukP+K/0WimndY97D8M/lFYr5PIv6FWOAFFr9C/SYxjB9RnuD+xarC4dwX3P4lEs7798eu/WTY3f4wO4b9aMHW3ORjlP7YDH0mITOE/PWa9QalwyT9/MhsxKSDwv2BQWAZd3fq/yVaywnar3r9GgfcMLFPzP83sdAt02Oc/kI6VLo+X2L9+mOqI7EHwv/E84V3nkM6/VndI44mf3b/fgqCzssfqv9UU4PolI8g/OOElA7MD9L+LvjUfu8y7PzESWgijG/k/nMQATR/J7r/vf5H0Mvryv3p0w18YQ+a/CTQsnw8CtL+eeRtXoaXHv1r0rK6MBvM/oDyljN1X178I9RZfAWDUvwPfi3BGW+2/c9Y7ndyslT+8Evgw//jOP3oPV7lr4eG/6Po/b10ekj8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDI3NDU3MjE2cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTQyNzQ1NzIxNnEBYS5kAAAAAAAAACCfRhV4tLk/mTnvkmf6yb+rwd7vZafCv4AqYb+tl74//HTC6A4Euj+XH975TA7BP9pJ+6ys1Hk/+QW/UYSewj9rOhZ5+6ikv5pQdBfyWqu/hnHk9iYuuD8bY9CQ5A3JvzhygT/iDbM/Hp6mZv0Ktz+2ppDbqF3Kv9okEOkLZKE/Ro1unhJJuj+wVtJCoWnLv9k2ewM/18Q/LMZwxkmwwL8blda4Os22Pwhvq5Nw6MK/bwuksWl3tT8qjOVpVlHEP+hpaw+wQMg/jsL2m/r3vL+x8wLg82XDv7p+0dhn3Mc/MjYXgucZyL/O2TiwAxRhv6BV/Fp+oMO/D9iDLM89yD9Jcpga0Ji3vyy38LRpdK6/Gil674IHt78pPPz5hSStP6mx8gcYfaq/THPw70GZwT+6GC4+715zP7QJwjyn9Ly/L1Ak+4j4wD84WdOSGV/Lv5Zzf7gmuck/Rwp3brVNlT/Thd3iQf23PzlPMOQX9JI/nHL63H9+zL+5xR3WOWW8Pz8d2wlGD6I/QTwgvs6mtr9VGnZWwDa2v3/g1fAW2G8/eEjUobQXvz/YdM5tleCcP/nqlNB2mo2/3Zdj10snyr/OBaO21Y7Bv1oE6M7sGWs/k8OcfZD6sr+TSDhAPMe/P62AsGf01sI/n1HBgjgGwD9M1QYkSbu6P/Lu9P+AMoc/A9bfAZG/vb8pmjG9I86Rv/sXTGvmqr4/KqEsootPkT/1Q7oNvAjBvxqRaIBBRLC/S01/LkMTsL9hunrzw5bBv+Fum+AaY78//+Xw5DHMtL8PmOLtUXy+P9q9WbUA/py/P/kL0KSxjr+UKYVw0Rqyv4nR03Ff/KI/quCjirl/sz8kLVYqaSvAP7OyfziTbqc/J+5uXcf/wL9qZnsL7zq+v60DZv/ZJpQ/XJuM5Oavpr+c7VCJXoDAv/Q5NqwJasG/MTuKowfAw79S5Q8XVgydv3EU+kbfP6A/mIN/pjL7tD+ZpOMv+9SEvzp81JH6O8C/qF1SJ7qptr99wl/0ieu7P4bJ459cVZW/6vrCIZOEuD84iG6Ak+q1Px8KaVYszba/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzk5OTY2MzY4cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM5OTk2NjM2OHEBYS4CAAAAAAAAAON5UXE7WMA/P88lomyEaj8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    6,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -2.7691016765507435,
                        -0.9358919026091364,
                        0.6094618890010252,
                        0.09345437510873554,
                        -0.2195151727491026,
                        2.626578270233859
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6
                ],
                "values": [
                    -2.7691016765507435,
                    -0.9358919026091364,
                    0.6094618890010252,
                    0.09345437510873554,
                    -0.2195151727491026,
                    2.626578270233859
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 10
    }
}