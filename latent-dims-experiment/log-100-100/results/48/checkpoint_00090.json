{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        6,
                        6
                    ],
                    "values": "eJwBIAHf/uzrwHNx/fA/ZIwUy+cdgr/c4rtCxtqhP1nacx2j7Jq/sVUu9D7frT9AFmGldjGVP5SIeQFgILO/n4Ey5OBu8D/61+/JUO2NP0/R9lAo9aA/KYnJc+bfqr8vXjizgnyQvyXlnXfejYg/3QAuqGAUtL+c7ZgvN/LtP7SNzA+913Y/KHDO+NcVn79LhCpQ6xKlP4yIrL0//ae/hlYechODoL/cS/Lhbl+gP56Cdlkogu0/IsfaM+FWgr9KPokOO0Z4v2sEoohERLC/E1lDwyi/wT/WAj2b/d+zP+42R5kXDpI/WNKbYg0n7j86GfxefxOUP9CDwMLp/5q/nZ55kO7WsD9WYTyBehaIv7+XV418AHE/PRYGmznKlL9QjzMyqOruPx9xlLY="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "strides": [
                    8,
                    48
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.00014897788942781957,
                    0.00044145411845852275,
                    0.00016940689285369087,
                    4.081273015059592e-05,
                    5.8234563761050116e-05,
                    0.00014966452555766632
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    3.198786141365417e-05,
                    1.8450907473265943e-05
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "values": "eJxjYFA6o3ucy56B4d4Eoflf7BhOhHHvVWPZz8DwQ3OK3mM7BoYafvkHR4F0ytff1r/3wdU1TDeX4hG0Z5jRIqf99hVQPOF7+4mDQHUawjKrHgDlJ835NkVwP9w8qLq8oFjNnnniQPsOfptR92gfwzshr+wioD0JM16euXJlH8JemHlQdQzRtdn2P4Dm5ol9nPQBKP6hSyXr2D6E+6D2wsyDqwuy13b/DKRZCk0W3toH9wfMfXB7YebB1C3WO5ooYw8Al7l3SA=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            6
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            6,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDAwMTUxNjE2cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTQwMDE1MTYxNnEBYS4yAAAAAAAAAO6fRP1LAgnA7LA9RLqoCcCCtTc4GLftP7i9jt6Acum/9D6VG5Aw8j9yX93RSRf+P48+JKeyyfW/O/zsVnwE2L91NNw/JBn2P4gRpbqbVNG/pWOBxAZZ9r8JYxwbvortPyQP+/hxTPG/Q9NI9zgX9z9l4kXy9mnkPy9E9pGRAPI/Nmsvqc4g17+6d2wK//v+P8v8pG04hPS/mPyWL72Px7/4Lie9PO3aP/vngzMe+PE/qpvPP9Q6t7+RroLQrvnyv5UkMrWEuwDA4ZMWp5Ysyb/50iZL7bn5P2zgTIwL1QRADuZJJ1nTx7/4kZ6IrlT8v/nG/McGYOS/qISSJDYq6r8oIJYGXAHBv0BxZV5LEck/lQWHJaye9L8UXbivRzTEv5DeoKa9CgBA81u4xd1I9L8aCrQn12b7v9/Retx31eS/7brMcJIA2z/GGYJHGOwAwHUM+QCeXANAaBQjDDDL178Avzt+FN72v0OyNXeIk/O/tkLNjx5Q2r9/12uob2Siv/CZ94hKY+W/sJF0LaxI4D8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDMzODcxODcycQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTQzMzg3MTg3MnEBYS5kAAAAAAAAAATP9O+VGLM/18vCjXoN0b8syBZzvx+fv2DeoVttIJo/TyJCyg35tz/gnRxa4kjJP+4GSaFxjZQ/f0k2HyQSmj+qGHAS9ROyv7S3UmUo1sW/rgvS1mYolz++/Xknku7Jv4RkkxwKEbc/OyX3YwW1wz9RuaiHUavEvyjV9gYrQbS/A9Ka8zudpT+HTxYkWHfHvzXJcjaVrpE/AUZxmsNEfb9GVwcqhM2JP1OfB3oCK9q/Mu6kBOUijD+XJJgg8LlnP1cSO5LdWcY/6cEfF5zSjb8moJQXPvOqvxiCaw3nCdA/20ZtXyBRzL8VSoBwyhpgP/J0+DG0+66/pcyLeNfAxT8jxl8qqliiv/MHGHpcTpA/6uyalEaLzL9T/w+84bqZPwES01yhbLu/U5obHJAslD9NBzPGoT98P1yBAEFCpsO/V9vMxLJgxz+I5RmbGczRv6uITmCx+dA/ig+Fy3dhpr/QHbO0PNfbP9YMmWSB8K8/WOmWKa5L0r/mx9gZx1PEP+PawmoZal2/EVpVKoYBgb/xBlDrJxy7v69yDegpw3Y/0EyAArhh0T+QFSa4XJReP7yTs8me/by/Kssd0wUWyr/bGpjOdcvMv/VKBE1SQ4G/E6K+mqUdt7/6PNtrNMK+P05uHi4tLnG/JhSWtTZb3D8NpRghhSCgP7ZShyiEuYg/XSDaaKGGwb+PnphAIAmsPxieCMq5t40/YD9A6flcqT92F6GeG5WNv9B3cUODh5Y/UqyazGqkcT9+QNlhyH3Evw2jzMSGMHm/3/Vo80DMhT9Ghhdx43+Kv8LvRYTKX22/J4ORo7YlpT+m+03SP+6xv58QeGKvqq+/wLe4bZwme791qhU9MrSZP3bvvOcEqqc/4mD1lESzv78fswRJT5W4v0aKmVy75Ls/evb5cb6FpL8DRIYA9Ly9vwNb6qi035K/roO6uxeXzb+hv183j667vwxS+aEG9Wy/O37gSBXZtD8jCZ5IOoyDv5PcnHt7TMC/TfHEkKWKqb80S0Rl9jC/vynSIoslx2O/2snkHSpltT9ioOuhPZCNv3w0JskrLoO/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDM0MTcxNTUycQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTQzNDE3MTU1MnEBYS4CAAAAAAAAAEMVd+cJk8g/xBooL8G6bj8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    6,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -2.539029741081784,
                        -1.4869583170427554,
                        0.015340977418993505,
                        -1.3906442338286114,
                        -0.36717544834316473,
                        2.5274650192322827
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6
                ],
                "values": [
                    -2.539029741081784,
                    -1.4869583170427554,
                    0.015340977418993505,
                    -1.3906442338286114,
                    -0.36717544834316473,
                    2.5274650192322827
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 90
    }
}