{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        6,
                        6
                    ],
                    "values": "eJwBIAHf/pGKRN+l5fA/4Y5Bhb9kgr+JREHzXWihP0QhtQv2HaC/ca9sDshnrT/5SKtE1POGP3s0xqDbkrC/hKhMdcZp8D90q1VNhf6EP2OQ3fHWjKc/3c0SFYpSrb9gws5gadtyvzTTpH2AK6I/O5hYtJ6as7/mOc7Jqx7uPxtaZWMJUVc/TdztXKhPmr9Y7JJqb2ajP+MkkSzJL6e/Fafb6K7Ffr8lO9mNUtabP7Okz00CTu0/J5E6XEigYL/45FjCXSOTvxf0AGMOq6+/Rbl0ggZLxD8i/bqO9x2zPwumfxWuOp0/RfUdnHsN7j9prG8qc+udP9UIo9U/iKi/YWQFqAZ4sj/xhh9RnRCMvzq0JLdbUU4/CNfJRWO1k78jK7CyzADvP/tskYY="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "strides": [
                    8,
                    48
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.00034586508714885334,
                    0.0008681676023946991,
                    0.00026924872377923585,
                    0.00016542672642580686,
                    0.00010150021314634824,
                    0.000421784452329578
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    4.034762335686537e-05,
                    1.501608782848507e-05
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "values": "eJxjYHAvZpdXtGdgUOj5wfbBjmEH++ZUV/H9DA03JoUwCADF70/4s/6LHQNDnXv0aZ79cHUMn84cX6Blz5Cgx136lQkoviXAe+KLfQwMQZrhWa/tGA7cjotO09kPNw+q7sLKO4klqbpAc0OKnbnf7GO41FF52PO/HcOCiG/FO1/aIeyFmQdVt+BK2dmNQPsccl5J2skA5S0iPu14uw/hPqi9MPNg6lbcSXRPEAGqF/jyK/PWPrg/YO6D2Qs3D6YuxeSlsaU9AIm0c5A="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            6
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            6,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDI3MzIyMjcycQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTQyNzMyMjI3MnEBYS4yAAAAAAAAALG/A+yH/QfA6ZTqxvksBsAv3PlzzWLqP54sMqLrAua/xhiGQHvQ8z/zjDX810/3P7tEHNuipPS/IcF91uz61L+CXMNGtmn0P1KlbHBbHda/tTMGpQsf9b8AroVawd7qP0ZjdygPJvK/u/SaNoSu8T8mC/TH5CLfP3Cfni3Q+O8/5TFpFbN5x794H5gOI9D9PwAEXaQkKvS/W9PrhsQfzb9eAlyFEa7dPyFo5e14yvA/W/rWHQTysb/48ksHN43yv009cz90JAHArwGvXjHYzr9b8yBzkcL4P7shKhL11wJAAIA25DpC0b9kywf++2z8v2LrrVKbzuK/j9nwvqjB4L96+7nKDRrbvyvRGCxSb7k/qWyv7xEs97+Bdqdyr5aiv2i73ePksv4/ZqgaSfzx87/TSj027oj3v9sBI0H3G+y/2ECL2LYJ4T8vtswudf77v84Rjpq/kQFACWrfLxeK0r85P5Le2KD1v+ra/5n3//K/kMCp2elx5r+mOhlMxx7IP8DKSJtxi+a/tc97x3Bi1z8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDQ0NjY0ODMycQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTQ0NDY2NDgzMnEBYS5kAAAAAAAAAKFRU5iLiLA/FYY87z+Nz7/KV1bRTxW1v6orGKiLT5w/Yu87ZhFauj+RyRHQF7rGP25r3Fy746U//UTmkP+mob+gY9kx4hiuvxICFdYuR86/pKHQWo46Uz+nn39+VBLLv+zeK0VAfrU/18fWujMmwT8IlYhTtW/Dv2JrpQ+ouKi/S9gsON/ivj8uFwtKNDzHv0vZotkav2k/qS5aXwW2jL8hsicplsyRP3j0Rw5tw9W//Q/NO0NhQb9iXflzc5GjP9t/C9iMH8Y/VqrMICfcl7+VNVkp6r64v8xH4pADhc0/umhuNKoFzb/A/DpHFtmcv2x0V7VmZ7K/oUyyxKPuxD/goke40m+sv/8yLrJ55G8/PFCRcKsQyr+P/usVnsKUPwtv71FnwLi/Ld6cg6UNwz9JwCCfiPyhP4eQcBNyPMW/NXeTPvbcxT8YqVpftITQv3WAonSaZM8/aMuPy7YVcD9zlpV5/FHWP+7mwZ/QZLQ/vEYICVIE0b9Ooe/eUprDP6ZeHjK+u2S/2hYZiX59sL/iyZ9nujqzv5zHR2MMa5O/HOHF0tHf0j+IP4TbmRuZP1yFCncNtbG/lsZd/ifxxr/kybwAr9vCv6NYX5q7fp0/1SZ9OlwJvL9ACtGBtVa+P1bNBpbp/4Y/SkQR2dpLyz+DSrmQQmekP4dZh1G+xKI/fywFiD8KwL/kulQc3XqdPz5LmDerabc/XvIj7LQdcj+4UaVB+nuAP3eDWaH+hHo/CbhXVcLpdL+8c0hDhgrHv/mcdQUluZA/PNWqOwwhcD/yM82nqNmRP7In6vmtXoo/O/rKVJ8Urj/s/y9SCEmnv6qnwi4M2qQ/wZLb4Yvseb8CJvbMxcugP4EJw2dW1ao/WLTGtVucub9hgh7PGUuwvxECEfjPJbg/85jz0iv+cz9LOhOWs+i8v/ZnSQaBLbS/2KnCzag00L+XbB3IBUq0v7QSN8eAfJw/QOt7j7MerT8kmVgNiMGOP3RmwPMw+ca/PVDt7OmMqr8YacFZiPKyv/oLWjwJn5u/r/tVfwcZsT/UCcSpQINcv0rfewhND5W/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDM0Mzk0ODQ4cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTQzNDM5NDg0OHEBYS4CAAAAAAAAAJg9bF0/BMY/+6Ply0b+nD8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    6,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -2.5576373402116697,
                        -1.5113221563314456,
                        0.04217396248848414,
                        -1.3988512523226906,
                        -0.37048437615212104,
                        2.5621604148379338
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6
                ],
                "values": [
                    -2.5576373402116697,
                    -1.5113221563314456,
                    0.04217396248848414,
                    -1.3988512523226906,
                    -0.37048437615212104,
                    2.5621604148379338
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 65
    }
}