{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        6,
                        6
                    ],
                    "values": "eJwBIAHf/n0zWKZ36/A/+EQi7njbjL8r0muk19OgP1s2SiqiVKC/kla459Y+qz+oRfebqb53P0JQLs8m762/ySyaRHF88D/p3wLFRYt7P0lKYEdowKo/7aQ5hsbmqL/f8+EEG/N/P7Pk2pC7e5E/E37w90emqL+wgI6p7lXuPwZpYHakqZG/ZI0clItCjr+KIJTbjQKgP22xQoGfgHy/q4ITTJSDq7+cgWCZdA+YP+LUgmWbDO4/As8wWc21ob9pGiG33k2lv/SM1xJNQaG/h1FLOI8Xwj8NdQgkYOWxP+LDtL2CWag/00AWZ+KY7T9NICPzm7KiP+pROZWmPKW/7/qa8OD0qT/Gzhkan6KQv1+3BlByGYI/zvNcJ/ERor930tLrJ/XuPyFQmB4="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "strides": [
                    8,
                    48
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.0008177525450590763,
                    0.0014642137863404628,
                    0.000986290029520783,
                    0.0007649042425681981,
                    0.00020340435986155737,
                    0.0011515584745080297
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    6.261816713049484e-05,
                    2.223914635919755e-05
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "values": "eJxjYLD87H/c3p6hQW9RZoLKfgahyg0SV832MxyItuRj07NnYKjYG8HEDZR/W9Uja4BQlyB8f+d6T3uGgqp1tX+VgOLdr1nWyQL1uSzb08Rkz7AhbZdbfRDCPKg6A54UOZEON3sG9ybGjVJG+xnOmJn9v/NzH8Oa9YbX9K0Q9sLMg6ljeKl22NXLnuFBiE12gClQfo1Id4Amwn0we2HmwdRx/J+/SR+kriWyWIkZ4Q+Y+2D2ws2DqvtQNf/IqkR7AHm3agA="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            6
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            6,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDI0MjIzODQwcQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTQyNDIyMzg0MHEBYS4yAAAAAAAAALmtYK4siwbAS/YJj9T8CcD72xxYcerqP/NPNF6GGuW/3QiPsAT89D+N79CyJe70P+YFEg42bvS/4uh+i9Ww07+cI5SxQWfyP8UDO0zsONS/oVtYZAAk87/35FLntAvoP5/v1y8OFPK/Fvxgk9BQ9D/XkeMQmcbWP+o4Rj9ZGO4/C/cjNfeUuL8cM/CnrYL+P5pN2XArA/W/7+dpvIQmz7/sT5+p9mfbP0gzL/IncvA/1aFBKmG7lT/xkIDVHXTzv7K73+o8YwHAdaRCpCysy78zBMW/b6b4P6EVJseq8gBAIWe8b98x0r9QSyOE/iz8vyEVuaaT4dy/UhJTx+OW2r9pmD+AvQvTvxNoUjw8y8Q/wNqw7rIG9b+s8/73B/a6v+1MPn1Gp/0/iKFCIHWq87/UtEqSMaj3v4q1fZkuBfC/jvFbst5R5z8vhiMamIP9v3TwrfMa4ANA0h3CR4LC0b+HPJo9smfzv+OkfePz8vO/EVnogYgC5L+Ixpnum/LlP0pmtCIo1Om/3wLMZQOA1T8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDAwMDM0MzY4cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTQwMDAzNDM2OHEBYS5kAAAAAAAAAJ0LREXrebs/qgao5hmDz78HiwU0yRO7v2PbXSgrdLI/hV7tBKsjuj8RiNB+XqXGPyLgkMzg/Zw/nCx0NsGKgD+EstGGZgqxv9iIhje0PMi/XNiZvZS4lb8u2GULv7LHv7s+hya5fLM/mHAJIPsWwT/pF8naku3Ev4Bo00n2AqK/IfrtlqhSxj9+2pIYt4vLv0ojuKP0RYs/joO4+L8kgL+Dve0s3RVuv5UftByN49W/jVBSwViQVT+Ea5Ynt+Rwv+JtjRwdFsY/aapV5HuwlL/Yh1f+AsXEvxgMoT9KcM0/xiWkcb8cyb+caG4r+n6Rv198G06TnLa/pNwRjH+Exz8p9dNRyxetv1ZItyOst2s/T+e3Pjvfwb+r5u8f1YCdP8hzx+THr7q/PC294I1Txz+o7bTfSg+yP8g3BBdMpsa/lbaFBYjLxT/qw7q2V3rQv+CKKyrhT88/iBLkzoJvjr+bsp3eh37PP+wTzGAeObE/yhGink760L+8hUuaeU7DPyC4Xt3yTFS/6Jist5/Kub/i67L0+3O0vzMJtYKk5I6/Wl+C70Ct0j/l/AdEe7WUP49VrqZp65G/acl1MVVrx7+U3biJmyTEvw9OvvM/BWe/PtYP4BQGsb+8DezZJ+W2P5AFogRsyXA/nFVbB2NhxT/g0tyOfNm6P4cRI9gJzaA/fWg2+SiLtL/6tcXnNcucP1VB9oqIua4/4CYH5vJsYD/FSkAbtHKAP0BWfj5CAYQ/E+pTGu4Hij+H0Q1KBAvEv2deNC+jy4E/HTXFq55wfj9BpGNf4QexP8Or3d43LGU/hpggCh7LsD+yIpAevTGpv7koh+UbJok/RCVoPe1KnL9z7hjtmpGyP/dsaHGIXKU/QYYh5Lj/ur+m+DxLbVbAv1vjMMQwjak/07M/2N0lSz/4yXXTpmO6v9cS9EW/z7W/lGc5G9xvzL+ofY2y9Mq1v0yXPw2kdZg/TX0VXGgHrz/vQ/rqsh6HP8p4IHxhRMy/arRUhmtycT/SNdWsswqmv1xen/lLyJe/oorUApnNtD+odbs1bHeHv71uYBQ6Yai/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDEwMjU0NTI4cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTQxMDI1NDUyOHEBYS4CAAAAAAAAAHDwKgyG78U/2pIlM90smT8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    6,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -2.5870638030533124,
                        -1.6077532123071911,
                        0.07656067999583255,
                        -1.4608965648951207,
                        -0.39533660683810795,
                        2.7244100549529393
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6
                ],
                "values": [
                    -2.5870638030533124,
                    -1.6077532123071911,
                    0.07656067999583255,
                    -1.4608965648951207,
                    -0.39533660683810795,
                    2.7244100549529393
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 50
    }
}