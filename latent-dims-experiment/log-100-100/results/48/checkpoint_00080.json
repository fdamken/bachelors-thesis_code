{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        6,
                        6
                    ],
                    "values": "eJwBIAHf/plWsIFl+/A/u13m3CDngr8TJc5GdYKhPxAl55kBC56/OvRwR6i6rT8mzaIJEGaQP8e4O8MqbrO/t8GiKzN18D8viC19lauPP77XnfBIH6M/bbsgQyjgq78Gxd2Hxk6Iv2ZUIFKwFo0/2GrX0ljosr9I8ngbIjLuP6Z4qnA4vWY/dPGhvusFnr+1zNOatYGkP/Q31b/cK5i/nvL44eNAob8gH2NfIx6JPw0pryl+qu0/5iLFYlZyZr/HGfozuNmDv4YBeVE5f6y/AKxUQ/xKwj+NfyvjzwmyPxcDA8PjYpk/twAK60sm7j+4HBn9Z/OYPzxktM345Zm/GKwHh+hRsD9z1ujYDNCUvxD5fSL8zHs/DG2opY/Qk78PHkgQIgDvP4ZukPE="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "strides": [
                    8,
                    48
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.00019032461987919164,
                    0.0005297271592082292,
                    0.00019347195425024747,
                    6.79531460776105e-05,
                    6.994282194114705e-05,
                    0.00018479830842243938
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    3.266578984766966e-05,
                    1.2498852679073024e-05
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "values": "eJxjYLgu8u6nkD0DA8uXM68+2DEI+FuLRvDvZ2BoWCzx/ZMdA8ONh7/eHQbSPOXNmv/3wdUxTHcX3idjz7Ch4mXy/KdAcQHpo/UPgXTJ42Ttp0D5le/qZ8juh5sHVbcmdVK2FbOSPcOKuBuuXZ/3MSz5+Uk6HmjeAZm+rZ8v7kPYCzUPpo6BozdRlg3oTsbOBU4/gPIbjs1dcRXJfVB7YebB1V2Qy3ryG0ifq9gqcXkfwh9Q98HthZkHVdcg/elmnLo9ALDKfFM="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            6
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            6,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzk5OTUwODE2cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM5OTk1MDgxNnEBYS4yAAAAAAAAAA/Cj6wkzgjA5rcIuaoPCMDxbTaQWOjsP+Bl4mGoLei/9ASq3mxL8z8LidwgaHr5P32dCD1N+/S/hF1ZxWPZ17/eIXjVZir1P/FbDC6utNO/0CvyFW7a9b82Jm2buujsP/Jd7HdQDPK/d+hVrmBb9z9QUhF7iHfiP/czOe+AOvE/GtpjCYnJ0r8tShJRDqD+PwuuLZNDk/S/23dYcsQZyb/kA9kiv1HbP2iRam4j4/E/uI5A933ct7/vp3bu8FjzvzDIZn0pBAHAO+pL2q2Dyb+3KrgIk7X4P9np+sC1IAJA8pXifownzr+C3KGT/GH8v21xURz/QeS/Iac8Xmd2578IIj7DVnPVv41UB/7JK6w/1O6I/eaw9b8cyMP4dPG+v/CFPPO4AwBAtTXKvwIo9L9JwEmX25/5v4aJBV4vYem/wsGUBLof3z/F7yg0dpj7v6RdOd6tugFAoZF2dtC91L9CUD9RMEn2v177Wd/gIvS/6hANagma4b9qweg38rWiPxXskHrET+a/hWOYuoMr3T8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDAwNzk4NDY0cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTQwMDc5ODQ2NHEBYS5kAAAAAAAAAEF7T4PFd7A/M4wJf5dY0L8mk4A6l4ewv6ks0Hni5qc/Roj9SET1uD/KBI3oG9/HP9YrHHym9XM/jBFSNfvnh78MPOjqJjewv1EZkqViScm/h92BAWw2bj/JRv3I69vKv3vF+act07U/x9J3Oz9Lwj9ZHILkiK/Dv5dAPLSbTLO/JBUMmJxzuj+6jXyaIi/Hv1D3aGmfE5Q/c7Z4K5nPh7/Hv6bQnW1pv9k1MnCtgde/+xSL9vtLoj+Y3jW43IiiP7f8IMi30sU/A6NwZ3kKm78QIN2qKwqwv0/mTKkHqs4/GPOla5kdy7+MJsnui9Z3P3SBd4wEW7G/DvWiW1jbxD8w1EGR1ASov+bgLUe/pHc/ogOwXwEyy78UHtT7uxigP2bfTdRakrm/Eayg8mlloD+bV2i+AXWSP2VSxMxYWsa/iXWHfEXUxj/0ok9jNhfRv25A9mTORNA/XoHtmhJyj7/rs3edOE3ZP3HR+nCBcbE/Y/VwiNOW0b8GZ5n4tp3DP8642FeOk4M/85bPzjZbq79wmdnyq2e4v+kqG27aIni/9qR7l+hO0j9eyj5C+gmeP9ET9yvqy7S/Ad/EINWeyL92nDc+3lvGv14NHFmR8I0/nZ+iCwQIt78pDm8Zxzu8P6F88DCOz44/RXsMgW5g1z+Z7qUKe2ikPyVnD81BFpg/Q4Z8lKT4vL+9C4gz1AWxP7tKwJtMLKE//Ji52d36iz/AivC8+7ORP3H+sV8on3k/mEkJNf6YjD93dZNwU2nEv/82V7FWDZm/2/iPNtiQbz8WFCoaws90P+LeVXELXns/Ucj9rlbpqD/jsXbbvP+tv4ZDVcrBR5m/zg32vLFDj78iDbE3uk6gP2x2Uqy90KU/CECo6/7RvL+Mb0NTD8K2vyjgyyB7/bo/Vxpl4EKbnL96T/10JKe7vwzncbe6FZi/iwbvsbwVz78GlK4x4mvAv5ytY2zOi40/Gwla7rPqsT+mn+AvDzZfP2gAr4/MtcG/QfKlpUcoqL+KOfsAy/W2v5KhWMtVY4y/x07fYzZZrT8LcUYOOB98v96y6AG+f5m/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzk3NDI5NTM2cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM5NzQyOTUzNnEBYS4CAAAAAAAAAA1853VDKcc/F8BYcbshjz8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    6,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -2.5484735934462757,
                        -1.4882694654111652,
                        0.027939083914883867,
                        -1.3958020060173466,
                        -0.3682066760009137,
                        2.535536138034758
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6
                ],
                "values": [
                    -2.5484735934462757,
                    -1.4882694654111652,
                    0.027939083914883867,
                    -1.3958020060173466,
                    -0.3682066760009137,
                    2.535536138034758
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 80
    }
}