{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        6,
                        6
                    ],
                    "values": "eJwBIAHf/phZJhY76PA/bCL0U1gOiL8/ByIt/uChPwWaPV56oZ+/WCcPl0oZrD93JDJIAB2BP/EYScgucq2/o/gsZf558D+AODAz2TxzPwV64t968ac/q+u9TN2rqr/NmvH1QBk+v0FbirgL9Zg/FRbjc6Wwrr83NvINQiDuP5GHhqOWCYa/vNm7DZVSkb/l5g2mauOfP5dEWyDws52/JLacFdANpb9nMoatOHWhP1DqJ26cBe4/jUHNfPQ8nb93Qkn3RBeOv9tdHvHdXai/AhDkH4PPwj+yTkAKeB2zP4sf0S1076U/nwfUTqWu7T9T1FlfCyWkP46IL1MFDqm/SYCYhVOwrT+FchHqoHyEv0zrCgSqiIM/+ESCiTNin7/NpBOJUi7vP/cWiWs="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "strides": [
                    8,
                    48
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.0005670090626689833,
                    0.0011360162810494453,
                    0.0005590814881053049,
                    0.000449390509419721,
                    0.0001452595290716263,
                    0.000787044864110924
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    4.998527985480905e-05,
                    1.7538068358760483e-05
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "values": "eJxjaGC59vy/vj0Dg8OHl03v7Rj2zH9x6rfKfgYGuZeveSTtGRpUf2z2/2DHwGDCI8Ytvh+uruGqljGLFVC+X5HT7/s+BoZjLktr2PczHPjJudOYASi+Uf3CYdv9cPOg6haoLPthmwDUVzJrTvkmhf0MLS1zb2p8Bpp3UqrZ4Ok+uL0w82DqDsxe9r/OyZ5hQkpm9x89oDxDBLd9yj64+2D2wsyDqUtJnBv5UAnkTrtK1w/74P6AuQ9uL8w8qLoF/4oWaHvZAwBzAXXy"
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            6
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            6,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDQxNjAwNDgwcQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTQ0MTYwMDQ4MHEBYS4yAAAAAAAAAMzpOhZ0+AbAhnmuMlPaBsCa8BrHG3rqPwx0N2gxguW/D1uJf+eG8j+ctaw+apT1P62leRswRPS/ddLrdl4m07/VlMvrPaHzP1xB/ftEkdO/9D1buOgX9L9pVi27WcnoP8bfacQkk/K/ZCuXz3ts9j+MinMvUjrYP0rFglTyQO8/K2933+o5wr9fKiFZo+r9P43/KORGBfW/25GooVkryr/jS2wzrWzePweB5OS7d/A/H+cDucxIq783KFj2Q27zvx6zgEENkwHAUgYQgX9xzL/bju7c7eX4P7gVvxy5EgFA6tXgkEWd0b9Zd8dWbN77v9LHubdIbd2/nXm+Fh8537/fYoGv/H/dv+Fhj0LcFL0/4D11T9tG9r9Zy/RP00S7v5F+Bo6obf4/zY30lwH0879CHsbH3ZD3vyiSAZ0F3e6/m5YcpBLN6D/E92/qY8/+v497iqp2UgRArbRAqXJ50b9+0hiESiD0v6ZrZqu2bPO/tJZhwxaG378ZSefDdZfTPzWWHVbWMem/o+jTuabA1T8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDM3MzE4OTQ0cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTQzNzMxODk0NHEBYS5kAAAAAAAAAAxVfXb9vrk/mexCfXTczr9YYxCgsba4v/mfNOG1vrA/HYGY2dqAtz9wQ2S02wPGPzvT3PTV+pU/ELDZAb8mir/VGjnsxjWwv4px/tlD1c2/hIvjBrwHgT/LueW8GgrGv8LPbw3RV7M/Q3364Hd1wD/pBtBht1HEv5Me69vhlKG/ZVI1YgQ/xT+so5Jvb/PKv483SCzfQ20/k/XuioAFeb/NjAjjQPSJv+Qa6GEERda/ZlTTpeilYr8cOILtrbaJP+qquQN6QsU/DOVAdYTpkr9OGS3NsA7Gv7fFNHXHzsw/LAOmcyy3yr/Ftn+xkCKWvyLcNnsBKrq/Ip7k0nOjxj/TMCuEvZOvv9gRbht5rJO/CO8VTvVuyb/OuT/ZweaZPwUg6yQjQ7q/Vb5vSP+zxT/GEKTWbyGxP0x7wjGBIMe/eeVd1/opxT/In4RRlinQv+bbvl9ers4/h3HoBHgufr8gns6xGmvQPwf6s2uFArA/CJIFqoqp0L9mrLOZnqrCP35yAGuP/28//R9XL5gRs7/TdWBpdWazv/cg7sUA15O/seCUtAqf0z/kcYN65WmQP6OSejwLoqS/JQ1nYwzfxr9LKCZ4JbLDv7S3K0pYAHs/n3WTrrL6t794Djz2P5+6P/MqZeypBFS/lqK/TDgpxj+B+uOgjy+3P7TJY1Is/qI/rbLSE0R8u7+w0cnWfdKTPypu/49rObQ/nMZnYypenT+sVCuxtkxwvy9BZ10EgGM/biwu6oxfgT9rRGWJp9bGvy92I8fGtU4/ny/Bn4roXj9dGwAujQWtP+i4mTRVw48/295t9KE4rD+ELFXmmQCnv1feInwnPaA/NwWSwfB/lb/ohoeOqkmzP4BfduFswKc/YhIZmiHiub8UDMvOEQO7v3Jvcez+Wrg/NEHyZzZ1ir8oTP6oeSe8v1dJeUWUj7a/FXRFRgwsz787d86RNDyyv1mULdnm15w/CabZI0XWrD/WQObLP+OPPzcvw2Kl/8m/VEyC7XH1gb++zggxIoOwv7yHPHm+Kpy/gTohkeLxtT/6Or3e3EhGv2c8rD4W66m/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDI3NDM3OTIwcQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTQyNzQzNzkyMHEBYS4CAAAAAAAAAOuqvkEDTsU/EXiboyOPnT8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    6,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -2.57855237879899,
                        -1.5593939975809954,
                        0.06434626610409348,
                        -1.4196504482113448,
                        -0.381075394569023,
                        2.6225901977127757
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6
                ],
                "values": [
                    -2.57855237879899,
                    -1.5593939975809954,
                    0.06434626610409348,
                    -1.4196504482113448,
                    -0.381075394569023,
                    2.6225901977127757
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 55
    }
}