{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        9,
                        9
                    ],
                    "values": "eJwBiAJ3/cP0sxRg4us/mbC8XJ0VkL92k31RbdNuP7fFy2vnSoC/xqwf5D4KeL/KqiErCKZpvxR/WRI9tmE/TGvOOI3hdD+LPeCLLUNxvz+gYxn6CqM/ntKTO+Vs7z9cMQEcfz6gP/5C5wr5QaI/3ZO8tsrut79iO2XnwJSjP9Ry9jczyZg/0Wuban1yqr9Dh/HTwqWHv+XqMX/uZ7Y/FrsGyX3grL98jd4lauHuP0/4Fl9GOQC/qF7G0CLSn7+b8+G9TgqnvyhD0uMc+J+/kkNnBqwqfj9zT896PlWXv7R0NaioQra/7OFWLlVvpr8qHgbj7dCiPwn0M2+8ne4/UU5oEpsWqz9EwjEBNgWBvx+IRoTeWLU/x06mkJQYoD+kr810o8uVv7TPV9yiibe/4ROkUXowoj/WTQy0CO2Qv1Z7krsQfZA/PwE6KOsF7j+U7p6fUu6APxELHHsA4JC/AJ6PuMIrf79BBnBGTgKNP2YWiIbZ0b0//y5ktfvSib/9YeQe5UK1v5wJcx/KnaE/PTmO44oYkz8NVudc6oTvP6ktur7jAZq/W3NcMA6Ikr9/IRTrGxKovyeGr3QTVpo/zUhy3ZoHp7/s3S2zB86Mv9cby3X11WY/NXn4XvOtk78fWG2voXmUvypJ0MKtr+4/AMxxa9/7ez/QtjWbl/OVv7XGwix12qk/7aEmmvj6ab+NPttWCnqAv6wKyaod1oc/Ea0uvm/SQz8m5o4RGr99v0CpVRvsE42/yhW/RoAE7T/f6KG2LUeVP4W89MahSaw/xhE4J+xwpT++aV3je0aVv/fLvo6c/aM/eDR8s0HGpj9x7X3pTn6mPzBBcv41ga+/FxYvNEwejb8cnkgLd4HvP31fSbE="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "strides": [
                    8,
                    72
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.028646826988119437,
                    0.0007531528413541062,
                    0.001309759619980031,
                    0.0008910630066204434,
                    0.007242926351721677,
                    0.00034653250348033716,
                    0.002992707152313409,
                    0.0012854361778578435,
                    0.0003383844176530469
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    6.493314930776251e-05,
                    3.305954772537234e-05
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "values": "eJybPe1D9q+pk+0ZRP7+Y19gaH9AM3dF4ZbE/QwBv1LtzNT2O8xlMVr8LGE/g8J2FY8AB3sGj03vfCJM7Rl6P4mb6EbuZ0i5GSK4U2E/TD+DTke9gVGMPUODrNNra6v9DAy7l+castozLLjjwBjmATSnebXuH+P9DAnN2X1PPO0ZLB66+TyMtGc4YMFdx6e/H24/TL+DlXjhcZB5+qV3njntZziQecT5uDeQ/y1v9wxFewaGr3xyhhpA/mdb0+cWQPtCz+gZSdvD3A+3H6b/zNkF566n2DMoWFSctwgBys/4wHAFKP4i7dNL1lgg/8mhGbvN7Rkc9BZtna1pD/c/zP0w+2H6D/zjfp5ZDjR/7dpbvY77GTpsP620B7r3gk3CmRKg/ILln28VeSHCD+Z/uPuh9sP0OwQ/CrR1Aprn8/PfPQkg/Syi21wZGD6V0rG71RDhDws/mP9h7ofZD9P/i+NjVVchMJzPiOq/DAGq71n2cQc/Iv5g4Q8PP6j/Ye6H2Q/TLzC3MP9IFlB90DTh1Zr28PiHxh88/KHhB/c/zP0w+2H6L2wxaohztAcAnGIEng=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            9
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            9,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDA3MjcyMjI0cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTQwNzI3MjIyNHEBYS4yAAAAAAAAAEqTRsAPhPQ/0A3xubVh4z++hGyHyvb1P69uto79cJ+/ZHq86fqu3D9pKAY2wuvpvzI8SYiX2gNA5QWE1Eq78z+QRbPpIjubv1qtH8trsPW/emFgrApI1z+y7y5xep7bv67neoHqJ/I/7ZGW/Xfc2z9+bNc6jTLFP2grD0rhH+C/lCZhENHg9z+I+f5hQmj2vxlc4EfEZOQ/31rVxNaE/j8nKDkdhVb+v+MKkt98l9Y/CTfA1+rg0L+hXSv11OzlP2+p+Cjztc6/GiJ5BS5Lwj9izIs9Urf4P4msOowDm/q/g72tWlJK9b8lqgSc6ALcv5GtVaa37PO/evOQoV1WBEB+i2YgTpT2P55fCBwc6OC/B02Wz1uYsz9ScbKC9/r3v9mv/I+LJvq/HcljU39+/r/JBQdqVBfRv7Q0PCP27+k/iM5MYGL03j80NihqBnXVv2flb/T7cem/dW8DQ1nzAMDo+5LkPrbpv5wiSICuufQ/MsYq/ngs+j+qfCkmYUEHwHXxjAj+pwLAQHKi956Wc78="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkwMTQzMDcycQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM5MDE0MzA3MnEBYS5kAAAAAAAAAMOPEn6XptQ/hMmCSqVr2D9DA1lj4QnRP26Zy6roVsw/KDFaZIDooj9X747DFDqjvx2hWttBoVm/Td113b42Zj/3UZM0cKWSv3Vrz/LGdHc/h9ARx9ralz9QCRP9TT2+P+uB/t7+I5u/vzZ9pipZxr9Pbm3vyGWEv0GV/UzKGrg/45tmigyE0z8tD0bUwUTNv1h3wm8Tzok/sb/WIkPRzr+6Hpe61N20v4WhZr6g8lu/cM4sUCVPfT82CHTLxYq7P5R+fEEU8ne/Oxt7TEXLxz9is+yGRxe8v1RIoYpYY5g/XVhkqQXTgD+Z/4NFqA+lP6d/h8f76Js/jY26rfPXxL/PagueQmejv4Af1TQ4dbI/t3ebVe9Zg7+Ryjd2Q6DZP/yDryubZFe/IKE1ulUPoz8HFiS6KN/KPw9oBE9eBpG/qU1FA4Cjsr+Yw34KcNSUP9a0y5R/12C/c8Orz8YQxz8yb7l3/SfRP6gzC8LJaa+/03DxFiLXkD9/vnczi0XFP5m3IvRe+LU/nCWIw/s1Pb+AFIB3XXjAP2BmP9sYwrW/k61TM6QJo7/lJhV5mKi0P4NLf3g7bcG/ARaulzuXlD+eCk2hiLNev7u1CpJC30Q/BrH8UVkRwT8UFSGysGpdvyq/p47oRIE/UjyiqpvLub/IMiDtncPAv/MOjsDVios/PxW2xjB2jb95B6JYO0mAvy6Lv6Rd1Ke/MKf1+iwFwD9xxjncEdZjv+PXo0dGsqm/qaL4AF+Fxj+pmdm9xnaxPyI5mbBraXi/luGVJKIftD+jCD6Yf3RUP/JsnfXbg7Q/XuMGz89Orj+7eX7gsvaQP97sVhdoyJA/2r/oAEukoD/3EJI3wmS2v1332UTyvcS/inFUs7ZUlz/XbyDLqe27v/MRPorxeno/UWJpbT3PwD8A6Z/sP7WoP6SHuOTC75y/mtaQbddAgz9V2beTH7aRv8cmDC/cOo4/RqJEYC+PqD+rGHEi1Itxv7wllWlDZq4/08jYH5O6wb8QLosL6hnOP+9D5jmNkHq//rlD5L/wtD9wUwKOaUNcPztCecXpn1u/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDE3ODE0MTEycQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTQxNzgxNDExMnEBYS4CAAAAAAAAAMuwa6AQl9g/vl/AKiqfo78="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    9,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        0.07525805573644681,
                        -1.3673739533252933,
                        -3.2032314066569807,
                        1.9392153139514547,
                        -2.6498372874586265,
                        2.2735259024883168,
                        0.8438179068253399,
                        2.8787695799760145,
                        1.548769772071384
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9
                ],
                "values": [
                    0.07525805573644681,
                    -1.3673739533252933,
                    -3.2032314066569807,
                    1.9392153139514547,
                    -2.6498372874586265,
                    2.2735259024883168,
                    0.8438179068253399,
                    2.8787695799760145,
                    1.548769772071384
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 70
    }
}