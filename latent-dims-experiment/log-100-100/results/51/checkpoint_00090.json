{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        9,
                        9
                    ],
                    "values": "eJwBiAJ3/fMTAv/aFu0/KKGOKJxpk79RtV/0eUFTP0kgzpBYIIW/GwpS9t1Fhz8wq/HHUIp6vwk34ERxn4Y/nGkSFUemhT972I4efI97v9FmLip9K8E/G06BxqNc7z8wrOXc7a2iPwv5p4oc0Zw/wfTlgkN6kr+NihNnQ4akPyDvDfyMEZw/Kkzl5+ynkL+9isOqN1V8v366H9HH7MU/liOnExs0q78/DHccT8LuPwUUeFARyIu/6P1kA8nulz9aN3iJ072sv5X/J3ulCKO/L3dy3wjsmT+frj0LPbaSv8dxnmENIrO/4pYWuRKIoL9923MuHmemPyfA6XSMPe8/JZq3KlYPT7/4xNViiGtqP8SX9s1vFLw/z1YiAuc/gT+vl8thLVeYv+Hbh/Tba8G//WFq4ZUmlD9TEp4lg62Uv1cc25npj2Q/9P1JcvmN7j94wRcC5O5Xv5q1U4TAzZG/+sX/d628dT+hx34cPciLP5f6iOxYzcU/2f0QrA7EkL+AsGgAq2W1vzDxmDE5OJI/m1wZ78V0sj9zwHKstRPvP03pRyhiEKq/rLuLbQFyd78kyDgYtuGmv4V2gZGwzbg/mCXPMqxmpL86iWLfTeCVvw9PMh6ZNnu/rVCN5ibTnD/hZS0R9PCbvz0X5Up8ve4/2Oiy4EQ1kT+tJChkLt6Tv8+E32Hi7c8/wAVV01g1eD+aW0GIdfByPz/5cyiiGWy/nQmc3bAKwD9id1Ya6jqSv773qYhqjY6/gBMIL45e7j8XmkB4eu2bP+acq8pVTaY/KU2VccC7pT+WE4QH1ECbv0xIEod04aE/Q9fKWJ74oT96KiOnY8WkPzlJsfh61LC/p8YKvzWEnL+z+5MwjXXvP+MdSys="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "strides": [
                    8,
                    72
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.010154418719359896,
                    0.00024388509359004,
                    0.00048232153266415656,
                    0.00017747135763455186,
                    0.0028828886298419448,
                    0.00014766257812723465,
                    0.0011404790713134285,
                    0.00016856931466024692,
                    0.0001445998901792832
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    3.385079444888106e-05,
                    2.5371214520419015e-05
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "values": "eJxLeDT1tptmtT3Dm4keMTON7Rk+PT1ZODloP4NB3sGGKl17BoMjqp+CNfczbBCvs2vX2c+wTsTwlJiJPcMdx7RNji77GQ6oL9Z+/nsfXH/C85d5Tqb2DAxT0twOc+1naPhwYXOMgD1DQ+Q27ukq+xkY3mYVWYoDxXc/Tp3Mbc/gkP511jV1oPxvG9P1svvh9sP0O9Rd9ih3A8rrnQnpVgeKM2nszVYCmr/JzaVLAkivzteJFQSKG1SuOfPCjoGh4dVzLSZ7uPvh9kP1J+xTsrsDdD/D7MUzVigD9aU/bbgsDPTHFs+sd2pAdy3dHBWuCJS/dM9/9U87uP/h7ofZD9WvwO4guygRyF/88aiwMTCceHJkQh2A/nqZ/L/FGqjvLmvHTXNE+MH8D3c/1H6YfoZ5/l9NNO0ZDhgVr90A8tea659i5YHqqlc/yhSxh4c/LPxg/oe5H2Y/TL+TzEEhgwCge04cOHJWGqje89/c5X/s4PEHC39Y+MH8D3M/zH6Y/geiuT1MLkD1Og82fP5lB49/WPzBwh8WfjD/w9wPsx+u//Onoqe69gDb1gOG"
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            9
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            9,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkwMDI1OTUycQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM5MDAyNTk1MnEBYS4yAAAAAAAAANyDw4p3M/Y/lS0HpOcVxz9S8+AZtjb2P1MVLmHW69g/CqhmWIvQ1T9RcZrL1ofsv3CajsPwogNAM7aS5tVR8z+88hY5LNejv9WcFwKCcPW/DJJxM57+2D8UydfL0S3dv7TttOHGF/M/3gHXmmsV2j+eVB4bnbfEPwuiMmpLO+G/upVblQXC8j8tWlgz0ijlvw0clvxoqOM/TNE4whJF/j827HVN9lX/vzA70qq3udo/jZK3XqwG0L89SAek5FPkPysbRScFO9C/qpjbGUQV1z/4Mbapqyz5PyHlHps3gfu/rXM0qfFU9b+xe4uc0Jbbv7ZfjKIkKPW/ANQ51p/uBEDMfSZ022f2P+TTSYzdeuK/s6bVKkZ/sj/PN3dFVGH5v9+41Z5ghfu/Uil0q+8u/r8r1NOYrNq7P0UFZwqHO+o/qL42tWHm3z+knitkLz7Xv27Hd4cHsOi/sdBLaltbAcDT41CSrnvpvzaofLLYkPU/c+GJFVRP+T/l+9Pc01oIwJT6H30xhwLAAnJLmaaghj8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg4NTMwOTc2cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM4ODUzMDk3NnEBYS5kAAAAAAAAACPtL6DmSdQ/yxwBrtQR2D915y1tO1jRP0g5DrZ3o8s/uHFCQuD0oD89rRO+GStkv5V6mBiSrQQ/x15+wpkuYD8ydpt1xkezv4QHRDrjqli/6capnbTcgr+BxQHoHdS0P95YtABgtqa/Thx6sJI307+agW3rBHtfv97d77LBYrQ/GInU68Ep0z9BV0Px3o7Mv5b3aZmtE2e/MXpK5X3Ozb8LuB7R8nazv+juIJwUBXy/8YQO0Xdxgj9ZSxR84fG9P/vGYG4aVyA/MuCRHeXKxj9vEbcnpTWzv+cfsJq4emE/7xK5AHj8jT9ZBczHBKmbP8A2mpBmOqE/oNEphrmizL+IV8nh/Lhgv1QrWMXdh8E/PL9wKRXsZT8mhaNkxY/bP5xb6CQXZpw/7l/76a5xgT/pZXwTzB/KPzcYR+VjHp+/YEOmer/uPD9VzS1urcdoP8ndfT0gDWs/P3APOcPByz9YN9wpMnzOPwDMUlve3bm/foifrPxwgT999AYsysDJP6jivYLKoYA/lf+Sw9lGfT8uh6WIpo3APyBMualFgrW/l1R1Olk6m78Mu+Aji+e0P1VGJNDwMsG/vo7oncGXnT+nFHfIyEE3v46K64/2Yn8/t3Ta+vplwj+tq49Fn/SEP0SX2T5fNIa/iiAoEBtHs78j3WG+Vwmzv/0j1N+Srq4/EXaZgjgfhT9rviWrs7ecv0P0F+ONTqe/LIfeGtHFvz9G+YKJxkyMv0i9X23o056/iQuSq+Vlxj+nmJk/AbqsP9FHlSdru4K/9VBCNwgiuz/JbBHcgwsdv/mw1rAoV7E/c51yh4FPrD8j99k8jeFwvyfjICPmdJI/YCa/9Mkdkj/2EfSlxyC/v749rTSub8S/SFRe8H7cgz9JF9SALtnAvw/u4NdFaHU/E8FdZ8j/xz9RIZ5ySGawP7o5EJG/BoE/HNgBr3/ahD8RdRPWzP6Sv8YpK09waGu/9vkVVjsHeD8XfSor9vODv6Cwta437rg/0CnuZw2Ow7/LvY4+LtfQP9jCzxfTVmS/JaBY1/OTsz/AhdTKHv6IP8fJzFNlAnk/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkyNzg0ODAwcQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM5Mjc4NDgwMHEBYS4CAAAAAAAAAPOYDSZYPdg/rfwl1UQho78="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    9,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        0.25851284362328075,
                        -1.442996706743411,
                        -3.0989502034534624,
                        1.9423075142827588,
                        -2.636557786826327,
                        2.2799690361839513,
                        0.6972522259093217,
                        2.712527394433833,
                        1.5343725115882387
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9
                ],
                "values": [
                    0.25851284362328075,
                    -1.442996706743411,
                    -3.0989502034534624,
                    1.9423075142827588,
                    -2.636557786826327,
                    2.2799690361839513,
                    0.6972522259093217,
                    2.712527394433833,
                    1.5343725115882387
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 90
    }
}