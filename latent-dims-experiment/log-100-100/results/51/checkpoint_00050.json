{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        9,
                        9
                    ],
                    "values": "eJwBiAJ3/TkvxuS9O+w/8pLF9DMmkL+nuDfUHH2BP+OQr3JSfX6/CB6RYBvIhr+doEcsIOJyvwcq2mjPuHA/qQXI0yXicz+hPHxg4vx5v5ZQ4/j01nQ/A5QT0Daw7j9SnTwQ7SmVP4X9BRXCMpc/5KWyS6hTlb+fZ8t6td6fPxJm3eL7IKA/ilUFQjpnrb+zErLDEJiOv7iKJ90ExqI/CypNcODgrr95+aI6lvbuPyLZ+KSZN3Q/Qcxs/+0fnb9AfVhtuv6mv08zhabF4pS/pblk8CevgD+dJqFAId6Zv3ihULn6iLG/E7eQENbhqr9O4GZojZqhPxWBrvpB/e0/RYlRtTp8qj/a+0k1VnuCv8hFWAQq+K0/fGD9aE2omz8a0h/bmqaVv3Dwu5CEvaK/Xgeb2dqIoz84/CwNfkOMv4pmcoU0lKA/AUca6g5k7j/vqTvFx/CDP7+8ihNaI1u/6xthMiNpgb+/h2VqCCuDP6UIuTWZQ6o/hSGQ/ecrUL+bJ+2kuG61v7pL7RhOiKc/5GuAtMg0bL+F5hGuNbHvP1liNhat02U/0Ek6IwL2dr/JuMkVMgWmv/PXBERYoGm/ke67buW1qL+C0zq/VVh+v6j9gl4OvIE/5qtll9CFo7/qPmLysp2Zv6GZNEwe0O4/00ObNwoohz8t4rxBUAScvwl9I7WH144/cTyegWFlkb8LLE9fwhOcv4+kp8s9oYA/ist8lmmipj9K+WsANG1iv54cavfoy5W/7eVQY58Z7T91davQzPqYP9b+c7J0YaQ/FjqgX13erz9d3s+0oUiQv7BWLi83K6w/3D6iBKo/i7/fWk9zXmmlP/69WGyjWbC/PtuPIDnQXD93P3RK1HDvP65eTbQ="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "strides": [
                    8,
                    72
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.11202159993146363,
                    0.005217611901308303,
                    0.00872047019731986,
                    0.008060963884201121,
                    0.02783880266251626,
                    0.0021112091386778836,
                    0.01282274243408438,
                    0.006868199439449535,
                    0.0019288294127751992
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.00023407059585952084,
                    0.00012798487182715234
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "values": "eJyz+6vFZX19m71DV8DOiwsL7BmM1qX8bCzY3+Dcnhrb2bmfYVHd/O6kaPsD55xubXBvtD8Qtz7VoX+SPYN+2g3x24X2DfPLtQx5SuH6D+zinfvn5wR7hgnXpjj+jdrPsOJBgkhykD1Dnnuyi37jfoYK3otcpzP3N5hZbDq/udOeQeXIiosirfYMO1o3zL0eDLcfrn+BKvdzy2Z7hhVXWkI2ZdszXHAtcMxKt2dg8J7zRsp8P0OHwIL8/ID9DBvmNnWLJexnYFg4tS3P2B7ufpj9MP1pkevmOPfaMxxbd3bBo4b9DBy8F/y8k/Yz3N3O/fN32X4Gn71vv92vsGf4sIBHOhqoHup/uPth9sP0N/GY3Jy2xJ6hZ8eze+GF+xl4Gj6uC80EulMiWEm3aD9DyLZcHsX2/bDwg/kf7n6Y/TD9AafPuU4ptGewuhH5cVPyfoYEi9olyW5AdeVPrU7GwsMfHn4w/8PcD7Mfqv/Ds570tOap9gxZLPuun60F+svKwKsiAB5/8PCHhR/M/zD3w+yH6TebopT4Ehj/BnxbC49HwuMfHn/Q8IeHH9T/MPfD7YfqZ1jzbInA7hp7APn/GPM="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            9
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            9,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg1NjcxNzc2cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4NTY3MTc3NnEBYS4yAAAAAAAAAJNbMaSuFPQ/ily2YxG94j/4pru6B9f2P1pFuwumbt+/xtK+e5y13D+i+fZcNujhvwf7iyPk0QNAiordLFj+8z+2KObt20W8vyT2Yq/fu/a/3xxR+Eo72T/o8CF8dL/Wv0MqBrhA2fE/PLXsh98z2j93ipVnUIDCPw2tsiYgEOC/o431xZ2J8z+BGi7PZwPpvwiv+q0s5+Q/j7O166lh/D+5YbIOUTDxv/cu0forJ9U/YXYjydrey7/QoW9n8FzkP5s4VdMq78a/rRmJ4yLu0D/lpd216Bj4P18d2o6O//m/qS4Rd6Vg9b9XVC1g4rTbv4Loy3ebCvK/QJy3WtcKA0ArgzPtuBX2PwSL4dodf9q/AMosF2Syvz86IZNgwx73v67zvoiAY/i//S1be3eD/7/76KwQYWHTv9qXdvYl5us/6HCjPm923D//BXPgTTTUv5vXm5mMw+q/i9JZ8SGkAMAXP4FkWnXov7WNA1qDhfE/UgMBDQsq+z9OBlbYjlgFwOBKFNeXSQLA4u42MXD4nj8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDAwMTU3NjY0cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTQwMDE1NzY2NHEBYS5kAAAAAAAAAOMwkglIhtQ/p7H8ydQ42D/j3YuKmN7QP/ug1TWm8cs/l3CT5RcgoT/dGmcGfmaov0kFIiRHYZ6/Vw5aVQV0jL9MNjg0OMgrP89nHi0TUpS/+lY5qimfkD9Ce9Am0py6P2CGMBlg4Y2/iPdQizFet79/uGnftEGpv5z/Bqlp18I/PUc8CTxR0z9QSsnNIN/Mv+hxerblgaY/Axt5/N5pyr+A5XmGdBy0v5ZYHghQkI6/kM1oHv7njz+5aWKs7HKxP+Os61dsPIC/Zq22nuGpxz9AW0G2ScDAv0cdNoblRbQ/DjdDh8OUgz9qVG0rJ3mSP8lLUMLyqaI/XQnhmozAxL/iEBfr+Aqmvz+aOE5aobg/W5vgeIv5Yj8bQFZX5/LQP/G//Y5Q4oy/RqPMGezWpj9hSwTGtbPIP4bJpFcC7zQ/CHqLYtdgyr+dn+tgx06QPxTvH+gyAYY/N7mFNPcawz/TECYUBcTQPxfrcXk3F6m/Dl/eDTAdkb/SCuC/qhLEP2MHP6DMPsM/8tfoFdrXkT9gvyeIuBLAP/Zt21WtnLa/IcGG7cPDob94jTTAGtezP+TkAcQCe7u/xBkcDrx2fj+bkPBassSav+lYkq6bZHs/Pbfhu85Cvz+pxxFXqBqUvzr+xiE3baU/B8n/yTfVpb/3xIuTF4i7v7sTb3fFgIG/h5M9/z92oL+Y8KiodnOYv28X1FSGiam/lB+YIndywD/gTzr/LdhuP8xmsOdc+LS/sr6NHEX3xj+hjduKOxC2P+FvC8Gn/Y6/DRTx2MzKqj9bPuFOb1IuP6eunYNLnbQ/M1SgUT6LsT/wdho1RLysP1H+i8Ryz4I/UG26HN3cnj8nM0nGNPO8v/G9jKBc5sS/4M5wcrG7hz/NoANPNIbGvwM1tNXy+34/GXGg+yfbtT/WBv3qKFqiP9RHB2ypa42/JZBhQ4ordT+XsW93aDChv5n4MKYLk3K/r8G73wgntT/rtNe+BBNnP0mdSNm5JK8/I4/RNLxjub+8UwBpfe/MP03jEBTo9kK/BpESpD0euD9dtJ4k93eoP+v/ih3RtXM/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkzOTI0NDQ4cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM5MzkyNDQ0OHEBYS4CAAAAAAAAAEXtzRxAZNg/8h2hwFJUpb8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    9,
                    500
                ],
                "values": "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"
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -0.28747632881844176,
                        -1.2973230779961973,
                        -3.516851238917461,
                        1.9289943991771086,
                        -2.8368104494409785,
                        2.310865171856624,
                        0.7052222333856296,
                        3.118618471251361,
                        1.5737680798961702
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9
                ],
                "values": [
                    -0.28747632881844176,
                    -1.2973230779961973,
                    -3.516851238917461,
                    1.9289943991771086,
                    -2.8368104494409785,
                    2.310865171856624,
                    0.7052222333856296,
                    3.118618471251361,
                    1.5737680798961702
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 50
    }
}