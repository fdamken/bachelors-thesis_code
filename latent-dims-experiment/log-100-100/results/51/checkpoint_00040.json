{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        9,
                        9
                    ],
                    "values": "eJwBiAJ3/asvHeul6+w/NODTx99kj787aFaUXk6DP4dV+K5kXX+/u7VysgiAg7/+NROPa9Zwv6nCGewdAnU/2ZB5ezQiaD/2fmdVMXB5v25S/ekP4Zq/Q0+tsq677j8vHDM/RwOKP4P7IyZzgJM/anvSlpxvgD8a47j5Sp6ePy9f131UE6I/krW0u+9vp7/Wh87Ws8OHv7tyA9WU7KY/oqf4IaK3qL+SEH1tSdHuP+T2ZXzYQYK/k1b8f8KWnr/6sbDRPE6mvwNQEE8B/ZO/RnfvUAA6hT9lOcZVu1aSv8Rs/N/jjLi/Y1NsE8mRqL9nc8EZGJaLPzt+8jAIhu4/Y7GzUvt5oj/+dlqO83WKv9ZSKwcYXaY/VcjVTKpgkT9NLhBlAlCUv5vToSzmuZe/Iru/Aao0oD++xN1jwaWGv1z88ikgnZs/DlNPRppT7j9AUOg2hZCJPyqInOE3hGY/efXvSqqJib8XzR8CdhJBP31MsrS4Iqo/Qvez7WJ1WT9U7CI3dvyxv5YGmaf5mqA/UwJJA22nfb+eCsoxh9fvPz3AtmlCuI0/kD/NMOLsgb8EcLjShTmkv9fav7UfElM/dwRLRaUZpL+rInu6DjyAv2OcV0hmdV2/JCw+hBIvob8mx6AZz1mcv9B6ZXWpuO4/8JaqnQkihj9s3vc6PemWv/mfE7lN5EG/h2zW9849KT8mvA+22cedvz0P5IN8onQ/LOt/4BfNnz9H1kIG6OqDP18mHxF3j6S/gR3Gum+e7T/O6Su0w7qiPxo8uPco/Z0/MMBmSarkrz82g4l18Kh9P70xUug0UKk/gxqHnLdyh7/F8Rdl/YSjPwFlGmHlPrG/xUkT8QRMeL/BaKcfLGXvP5cYSEc="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "strides": [
                    8,
                    72
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.35040628747241814,
                    0.023204675314897023,
                    0.03334070633791417,
                    0.024909690945159144,
                    0.07329333970953515,
                    0.0083561137529202,
                    0.0470001456887329,
                    0.01811446274325271,
                    0.006913587086672922
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.0004843697694086586,
                    0.00030209024238894244
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "values": "eJw74V9uoy1+wJ4hzuK+ZUG5/YGwk/+fvJ66nyGASYl/z8z9DBtOSMeFRO5n+Bznp63bZC+hveHaMYbF9gwiHwRcBevtD+goXX+7cSJcv8NHG98+tYX2DA/CBKUS2+wZ+DMKd39vtGfgOPTyw/P+/Qw5lVXS7An7D0iqMl0PA+r7Mfmf35Hp9gynFjxPf1izH24/TP+z/4+uZS+1Zzix1aqma5Y9A8N18UULw/YzOHzYLGwbaM9QnZdp9qZ1P8OJ3HNhdtX2DPOWpoa0dSDcD7Mfqt/B2Fft9aLl9gz3jv+8bdaznyFisvrmZ0X7HfhubZhaPmE/g4LK+73nJ9gzpF5+v82rwR7uf5j7YfbD9G/b1b9g2wZ7Bq0dptKNQP6evseZnO32DDGPIz1FgOaFRBXvfNgKDz+Y/+Huh9oP1/9FM6c7otOewVGuvZIPqK9j1omqimKg+/u0Z5QX74eFPzz8oP6Hux9mP1T/j9zDO1y8gf6VWvfGaUGFPcOdjtapWjXw+IOHPyz8YP6HuR9mP0z/i4qT83iA8WGwWV1Ku2I/PP6h8QcPf1j4wfwPdT/cfpj+z0tKj7gusAcAZDogjA=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            9
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            9,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDA4NzQ4MjU2cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTQwODc0ODI1NnEBYS4yAAAAAAAAACefUkZuKPM/QnueLsU84z+shR3+lKb3PxljMQBgX+O/+1u1LmC84D+zhofbfvzev7jFJPe6yANA+IroMhKD8z9DQFM3C/m4v0HbZOOvc/W/4Rl4qebj3D/4H2vrU4TUvx6X3aB/qvE/dgAYPDQT2j8ojc1CzkS3P49W8gRa3t6/t5dCb7o37T8k/YHHcGzYv6iYlxtkGeQ/DxUr9xgw+j8b2g7NGdzwvzh8KSlkYNQ/pH25R73H0b8k0UNWocXmP4zfqYtsnsO/Y8HQpgX11D8GOmvUWJj3PzMtw44tovm/46JA5NMT9b8pVPGoj7Hbv4Nw5bBXk/C/J3ugjv/3AkBwNAlX/xT2PwxWtDzVftm/iJjxlZhPwT8OkOg6fD72v/a+uK20Yvi/DgYHv9cPAMBGFO2tq6zSv3v9TCa2Seg/rRZrTxnR3D8/sgjL2SfWvzL//Dkkx+i/zRtHtgeQAMA3rhbMGWrmv7usNWX0Ve8/3gLhEiNQ+z+qah5ejccDwBrbNe8K+gHAXOQpgvM/kr8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkwMDU0MzY4cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM5MDA1NDM2OHEBYS5kAAAAAAAAAAJb1XHD99M/iavFUzpd1z+NrDJgU0/SP4jGT3MURso/RAlQ2g37sD98wuj+dd2zv5q3HDslkbC/igkDXi/xgj9RKtgnXumFP0VWH/ySEkq/6WrH8ZbXlz+GfDiOhBjBP2PlHElqt7K/VSTABushs7+f65qo2GOHv0jGhXVyeLs/k3/duqV10j+2JnXZ/v3Kv2q5b7cNbrk/j5OKdd3syr8+tMPpw62wv//xjhMLAKK/uV0VihMNmL+UQ0JKkeWzPyhwFvFXDYM/5o9jpf8Exj/9GJ6flha7v9uyZ6+DeLM/MEk2JSbTtz8gIrDNqk+gv0Wi8lOPm6E/rVtkgG2Yxr+dfwHBF1Wmv3kBkUlj/8A/OePDZrtzsL+Ls0S6XBDRP55lFYuw+6m/+VnOYhkxjz/LUuQFlIbHP/ERpVHXwpe/oTlBXykvyL8eWEZ8d1Gtv13VaSUsLpI/vB/K8KLWwT9PqGhnn2zRPyPlCVT0UJe/4osZb7LBjb/BbZa2qVDCP5c/YpB/Wb4/SB607cFMrD9O53XrKZS/Pybyx9qQEbe/ZIrXYWlPk7++LhkxEF6zP8BT8uTH07W/AXC+L+kwZD8fdWB93aeYP/pCqaXppiI/q0oEvL2duz8oA8r+qmyFv8tLcYrv2aE/+pArayW1tL93Cd+EDn+0v+JOmvDsB5I/xfy8UYvFpr8pmcHJgXOXv6oRmBpQc6q/lft65zPxwD84kGKUHIiEv9SZOHBX/7W/IKBtCFIyxz83JriNP+W4P6yLA2e9t5O/DdZ2ml+JpD9KTUp5T0aFP+2c8o8PV7Q/6gGNLIK9pz91oB0lIL6xP8OT+UU8v60/m+xew1D5lz/T4vQa5Yu+v+WWlBv43sK/fNGwLDxAnz9Pji56P6LEvyV5po308qM/OxkVcj6suD+IsuTylkypP0uVQr43iZK/MZzm9qDXTz9MxLnsp/CYv0AG7SggiKM/8vKMtn9asz+TJvlXze9tP9Muo8hDm8E/tu2GmOAVsL9inUpwGYPLP41g/MHg0WI/dGrYKpCmuT9y011sfCuJP1NxjOYmxJE/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkyNjk0NDMycQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM5MjY5NDQzMnEBYS4CAAAAAAAAACTmlqaliNc/6EF6yhk+pr8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    9,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -0.5096709790639664,
                        -1.2720539036622178,
                        -3.8033083069901465,
                        1.7181092927822512,
                        -2.9917438916927033,
                        2.3382996775740192,
                        0.66378689737737,
                        3.0260129844676467,
                        1.596992628880984
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9
                ],
                "values": [
                    -0.5096709790639664,
                    -1.2720539036622178,
                    -3.8033083069901465,
                    1.7181092927822512,
                    -2.9917438916927033,
                    2.3382996775740192,
                    0.66378689737737,
                    3.0260129844676467,
                    1.596992628880984
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 40
    }
}