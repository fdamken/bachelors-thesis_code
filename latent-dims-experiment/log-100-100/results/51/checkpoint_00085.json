{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        9,
                        9
                    ],
                    "values": "eJwBiAJ3/bqmhCJC9uw/za0LJc+lk78vYkBAlUxSP9cYD5Jud4W/De3mN4Xqgz+Q6zA7GAx6v619pPCcToE/N4tyhlEahT/UQ4novb52v5KWLKyaH7Q/USMTJLle7z+UT7kX7/2YP/QW2YMAVJ0/qG32Kv3Err+m8zX7wAykP/CnRNwhT40/2iwRzOxznb9Jkv/fOCA0P4pMm4DonMI/Dezfcz8fq79Jcn6i6rHuP8U3oe9ICoe/fvvXm1xzg7/d3g0wBmKqv+SbtMIm+aO/qsqp2GpCkz8HJmnKk7qRvx7VfEmFK7C/moy22Kyzor8evkA8vICnP+eYUEjbIO8/zl+UB2HqoT9JZ4qt6nJbv6iQGwN+prs/zL/Ald47kT/fz8OOql+Zv3dDtHLEK8G/MV9Eh5iomD+K22+RAIeXv+lpZK2+AnM/AgNP11gd7j8OrUcSRE1SPxKZ1yKuJZW/VsR8qyf3WD9Ctp1tHZ6OP4t11xg2lMI/olC4jhpWjb+gyA1tMq21v3ZRIynCg5U/TakhYAEToj8RXVH0UEjvP1MhVffteai/Cod2b76+iL8iSq3zgeKmvxXEgyjT0bU/38DfB7X7pL/XaZelpxWUv75g4EId1XW/J0OAXP75gT/yCLYmxMaYv3SSnV0xuO4/TLR5gYcLjj/FpJmQYo+Tv79vFqGh5MM/NVcf9sFzZz9Go4kRi5yJvxeda0C9Fz6/wCti9NW2qj9v1nPtlIGMvxivPzooFaG/+Yz5A6TK7T+Urlz5kd2iP3XoEs6lN68/fvW0FNKJpT8HRbQlwwKTv2zRvt9mWqI/tHRkgIPQpj86DKo7gPGlPxUmnG21/q2/KOlmSYrNlr9k7N2q9lnvP2MOTM8="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "strides": [
                    8,
                    72
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.01353273525329243,
                    0.0003157437162926015,
                    0.0005766870758260828,
                    0.0002452320772644378,
                    0.0034843849625485197,
                    0.00017233156047965196,
                    0.0014249050807425255,
                    0.00025239078637814155,
                    0.00017226435076685346
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    3.582692007330479e-05,
                    2.383005932972537e-05
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "values": "eJzLOt0d/z2sxZ7hRojdz2X69gzmN3/w3onYz3DB9sT2P072DE+a5h5c4rWfoWLyNzklw/0MedfC1+3X3M+gv8VlX3DofgaG7pkhF3/bwfVPCNBSi3ewZ2D41d68Rwgoz+BUbfPDjoHheL1fmS6QfzvxqbXMfoYHn+ZKf9SzZ1Bg8z6vb2nP0GCS1HNRcT/cfrj+cPlDe32A5skaTXQA2t/QeVXE0RDIj7z51kkOSF+6FKX6H2j+F/7lpXxA/q1fE74z2MPdD7cfqj9hzoXj3CDx9Xu0Yo2B5vu3M1yX38/woeGoa7MdkD/hQi/PV6D6xbEXdLgQ/oe5H24/VH/H4tMufOlA/sPNUzab7mco2L6+dJ6XPcMBhXLRJ5b7GQ64qIY9s0OEH8z/cPdD7YfpZ9ix/J0bMFwY9L9mRTIA+ZazeCSVgfxQ/Z0xkvbw8IeFH8z/MPfD7Ifpj5hieq40Fsg3kA9aBfJ3ho2s3ct98PiDhT88/KD+h7kfbj9U/4RHm5UkgkB8Nib273bw+IfFHyz8YeEH8z/M/TD74fqVnvq8MbQHAJIQ8z4="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            9
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            9,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzk0NzIyMDE2cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM5NDcyMjAxNnEBYS4yAAAAAAAAAASYNGn1VfU/gbGj8gSTwj+erhwLViL2P2UjD3kew9A/HsKjRMH71z9t57c2E0vsv/8hIiBKtgNAq+hL8N3O8z8qbndiF86gvzWLy5I0r/W/6seMR6gp2z8gCWpsi+3cv7Clw/cN5/I/DScHjAzP2T9VuKkUkunFPyWY2mNbIuG/EX1ys3Q38j+0bMHNQVLnvypXgfUJluM/K7cgF8Er/z9yoH/B627/v/T5X9qBH9k/Opd/4Edkzr+38fxMPsHkP+bxNFAQvM+/4CjAOM/Byj8kJycAPgz5P7FcMh5lOvu/YsHX8Q/f9L9eqMMExZbavwNSGLUPzvS/J5iJCu3MBECyQLNJLln2P6OejPEpfOK/3U/VfIQvtD9z/hW/Vdj4v2ledBsF0fq/vxcaS3iJ/r/UkUiL2hKjv9vd/1J64+k/GTENVxkB4D9mOQhBh0HWv6Dfr1g/6uq/ivo4y/o8AcBR7FfFM8Lpvzn7s/DnTPU/88e39bl7+T8UKtxCddkHwPNji8JvlQLAK4dx0fQtlD8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzk0MDE4NTkycQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM5NDAxODU5MnEBYS5kAAAAAAAAAHnTmAdIcNQ/Cs9e49Y32D88yxwbY/TRP/gpt5Nr78s/2biOF+JUoT+oOKeuitt0v48HQqxu3X8/b5TMHKObar+hPdlWOeaqv0j/nnLoiX8/D+zsHGANUb934rM6VeK7P1mAq46hRqq/zoqzBhBh0L9Efh7EBXJOP/RN8XR71Lg/Nl/d3flP0z8zWT5aN93Mv7+okGFv6YA/l1ddEeTQzb+smnCM2g60v/X/AaRTCnG/U9XARhsGSD86zWnmEIG8PxMHOhuT2Io/9dfTPCUXxz9NqtRH++e0vyphv29S4Xw/9cFgeehufz/KkleJ3g6kP0Ry2lrxk54/xQfjm9VszL+Uc71kROiNvycV6g0JZcA/bQMK3djuR7+ZAAbwZxXbPycp6J+9rZs/s307C/yclD+CBGFgzmvKP4QRsBAkXYy/0pqyYDd8Qj+fKtWfUNmQPzRj1nd9CWQ/qyPerFVDyT/jizqaUk3LP4xy8SxQrbe/+z2WTWbqij9Se4F7cYXJP/YIOAypJps/0wj61aKxcj9hupKrr5rAPyzLBmzjabW/0KFp0erEob+zsb26ZAC1P/i2OI7TvsG/vC8BCdRtnD9owC4vqcR9P50zA8rGdHS/4bpTN05mwD+XfvOCPV0rv1IXwg69tBm/TtfivDIutL+iOjMSTWq0v1JykLibEas/6w5skj4Ter/9vS9QulCVv8HYgl1LIKe/KB063qmrvz9yZvR+B8dzv6UY+I4/35a/P5Qj4HhZxj/leODOpqyxPwGwjr1ZWZO/pPrYoHAxuD83UJl++m52P2ass4q3D7I/ho4XZBclsT+xp/FCALiHv6BN1aV/OIc/ltRn+GgvlT+vHw+Pw9G+vxSs+EnYqsO/GwvOXWisZb/cyTGwW4S/vwYK0LnQiHq/wQgQA64exT8BipS15tWvPxZIJKDm7UW/tFug4o6hhT/qSFJeOJeYv31lG9Z8HnM/Ns1CK186mz/Xdtq91zJTv7T2Md8VTbo/8rAtDX4ewr9X+kqGYdLPP7684Ko6MpS/u2lZ/QnRsz9JGvMOLeWIP8wjIUKDX4S/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDAwMTk3MjE2cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTQwMDE5NzIxNnEBYS4CAAAAAAAAAOwT4hRSY9g/iipsp5Hvor8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    9,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        0.14958546097244685,
                        -1.4418197380589217,
                        -3.11249947716473,
                        1.9445541094404497,
                        -2.635915157552763,
                        2.281412471328651,
                        0.7180156560975403,
                        2.7454419471871523,
                        1.5418544746065301
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9
                ],
                "values": [
                    0.14958546097244685,
                    -1.4418197380589217,
                    -3.11249947716473,
                    1.9445541094404497,
                    -2.635915157552763,
                    2.281412471328651,
                    0.7180156560975403,
                    2.7454419471871523,
                    1.5418544746065301
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 85
    }
}