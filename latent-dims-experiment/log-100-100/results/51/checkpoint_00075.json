{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        9,
                        9
                    ],
                    "values": "eJwBiAJ3/Th9mXyMfew/sFOBtSM+k78mlsJB/eBkPwYDaem0lIO/P7V5lmOLU79O37ahS8lzv0rDybY3vmc/FwssRCWDgD/FDSIa5lByv6190+0nG58/E9sz6XZu7z/eRBYb5ZWZPwy+Hn/EcqE/O/KY6ANLub8QHlQLTCqkPxBdt6eZgJA/IZMJr7Lkp7+j7W2qbet8v2LeBDFM0Lk/T7dFf4hUrL+bjVr/FufuP721F/uDKXK/jIlLosGxl7/D29iyrz2nv+otTmd3hqG/OXcgiB9EhD9dPAAtByKWv8HjYKwE6rK/QXfc6q+3pL+yaRW1s0aiP17rdg7C1e4/DocASBhQpz+fexDNJimAv39QjgWsU7c/E90SknJ7nT9/WucNMmKVvyuYJ03jUbq/65hXe3vlnj9dHkGMVYiSvxjNd+v4+oY/YoZw/38E7j9lNqcwWqh4P6dxCNW+/5K/wXZ0dK0Edr9zv+lICrGLP0Hbc0Suzb0/oPT1Mnh3jL89nhoRFPKzv9/dAmsikJ0/nvEp51m9nD+d8wVMUoTvP+fEcjszHqC/U/KULhcrk78boTkGPKSov+aK0PGnjKg//hzwDgsFp7/BJahj28uLv/OwRIMfiki/NQw/1HZjgb+A7gN1/syUv808M2aPq+4/BLonyYeYhD9+kH/lzt2Uv3ARWYbf9qg/3lNvHGrIV78YP4z734iIvy9JcjerjYA/xY5BLri+ZT+TrA7FqvGAv80NxV68mJi/GEGqsF8k7T86jPi1Pr+aP5UHU0T2prA/TfVRnTN2pD9OHvoy6CmQvzVHmqAGFaM/Z3NxERmkqj/gQN4/qo6mPxazb5Ehz62/n+xX6dybj7/zLVS05nbvP+wlRPg="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "strides": [
                    8,
                    72
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.021835204239657045,
                    0.0005280243179173314,
                    0.000928310702758375,
                    0.0005334847902456508,
                    0.005468252087226603,
                    0.0002545358230028381,
                    0.00228318472915647,
                    0.0007374746827906278,
                    0.00025325311090675757
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    6.41714045596018e-05,
                    3.1673172224657265e-05
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "values": "eJzT/m7z5+ncCfYML6cwZ7k62jNMf/ngnn3CfgbWQpvEiwb2DLOvvLiZGbmfIUYmpb5M2Z7hQdDR5VMk7BvcJd5M7A/az/BA+NGB34z74foXJN85uS3QnoHhQv3zGIP9DAz7ZFh2M9szfEi+u/mBy36GA0LP1vaq7mcIqDTbGGVlz9CQemPFUz+geht15c3q++H2w/Q/UG9gqgoDqlvNYL/YDqh/cYPTSgcg3+R38kSgew4sP2giAqQZinzLFqoA9c3j+S4uYg93P8x+mP4dNWLJHJH2DA4qk4s3OO9naPg3YdUbi/0MGneDtiYD/dPg3HRnjQpQ/a0LWg/EEf6Hux9qP0x/wdeHl+0Lge64vUuj034/w4pjb+YpBgPDaaLr5K2BQPVuRwqcXRHhB/M/zP0w+2H6D6S//JZiDVT3aMKh5QJA9zf92n1BB6hOZkYnPyL84eEH8z/M/TD7YfqfB0x2fZZpz6Bw6/jjvV5AcZmmFFdhRPzBwx8afjD/w9wPsx+mn+F7ZaZLIpCeYqR5R94eHv+w+IOFPyz8YP6HuR9qP1z/AhvtB4+s7AF9oAzU"
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            9
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            9,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5NzI1ODU2cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4OTcyNTg1NnEBYS4yAAAAAAAAAJfBJbi08/Q/3/SWg0Ba5D93Jte0xh72P72eRdcyWsA/yvpZl7GR2j/rMQYtBGzqv9u4SjCiSARAZ8Crlmx28z85SBBphSqRP+tgGqwOTfW/XMcQgu6c1D8j3i6QoOPavxZtW8wZlfI/tzoxqiXz2T/ctGeWOqbBP3EoS4HUUOC/iZBDv+Mo+D/A0jEWIuz1v4O3UhRwyuM/0xVDX6XM/j9nS5s4dDv9v/9lXR5tO9c/YMWNhUgp0r/o44awvqLlP3Ct6kkzLtC/S2wF+jedxj8jFO83jY34P5ymLNv+F/u//4NnNU739L8fXlj2AwHbvzOTvhbIY/S/wC64V5V0BEDpskWJTnH2P3MCitwU5OC/kZJ39/BpuT+a9Bcx7Ur4v/+Hy4eyGfq/Gsr9olGG/r/ItHVXh9/Pv3I297TgJuk/Q21oW45T4D+FlgQZZWnUv0Kjz7PbwOm/VSSVc/sDAcAiUec0OuPpv/C91gHblvQ/UGFUZYvV+T9YIFZTYnwHwLRRsC+fqwLAGF53W7m4kD8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzk0MTg4NzA0cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM5NDE4ODcwNHEBYS5kAAAAAAAAAAJde4vDytQ/QwCagiaQ2D9DEG+t0LvQP8Xh+Brrn8w/kyzg/Z2znT+VjyN398WZvy9ShkgcdYK/veC5l/j+db8rvCXwZOxYv9W3L9+vaXg/Tgy0SJ7+kr9S9eh4t/++P4gbKbRKc6m/O0HbrpbJyr9Y4o9Cn6F7Px9t/znFvL4/qXx8wo2o0z+3f3RExI3Nv5IMDmuzem8/dx31wsV5z7/c/POa2W+1v1MXYd6Mk2a/TLIKzShMib+cDStWvWi7P3tTKiIb5nY/llcB4ggGyD9QIFbRHTa6v1jmjCTZVZQ/hpHVgfXxZz+n4FVTyy2pP0o7AYVsAac/qRO0vaCgxr+4qKpB5mWQv4dYXTcNtLk/ftoO88GAST/XTYP2Mq7aP1VMZaLMK38/n2nZpMaWoD9+YHrGPCDLPzGOXI7h6ZO/Yis+ONqJmL+P5R4bAcuEP/2xDpbc1IC/z2VguRopxT/tpYmuP07NP8l0OSXHh7O/kb7LJMT0mD8KmE3/HcrFP5+t3xdAUbI/gtg0Pj0FeD89rv/ZbDm/P7Zz2YqPbLe/9d8EGl0nn7/3l3nJIf6yP4S2Cge4ScC/32ECKg61oD8SaEVl7xltP6//JEQbU2k/7E8Yo20+wD/hh1YcGgxlPzV6WAUzwES/ZLHOgAVaur/g6K49Xuy8v8PL/K/BJps/qhfp6C94Z7+Bbt/pYzCDPzuT8QNLKau/b6vCUmjawD/krccLbxqAv8tjuQa7+aK/d6bFWJpaxz+1CcPYfw+yPxdfQBoWKZ6/V847ZH/Ftj8ALUQZocRpP+axIXeRxLE/GXGumxYCqz9b5PFYU8mSPyn13Vg+XoI/tfhSQfPUpT+O20IVIq25v5hcrNNpnMW/4GAKERsHhj8ufRI/z7i/vwINJ6r2OJC/SRWGlmojwj8OpK9EFJOuP1zCkIboQI2/X9pnIPyyZj+Nsc4zPgKGvxbuD5cstY8/0CDrVo60oz+SmZMInBuMvyghAU5PN7I/BdWU1j2ywr9JZjTbiTTQP8vJSBlSbpC/70TQjkLNtj/6ApEqoraIvwHAfo+manA/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg3NDkxNDg4cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM4NzQ5MTQ4OHEBYS4CAAAAAAAAAB7pgtiRu9g/D2j0iRf0pr8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    9,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        0.056224760172177764,
                        -1.4099396924145355,
                        -3.160212744000101,
                        1.9412928107686924,
                        -2.624442654607478,
                        2.277778281515365,
                        0.803782151616253,
                        2.8303292852462385,
                        1.545194195240507
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9
                ],
                "values": [
                    0.056224760172177764,
                    -1.4099396924145355,
                    -3.160212744000101,
                    1.9412928107686924,
                    -2.624442654607478,
                    2.277778281515365,
                    0.803782151616253,
                    2.8303292852462385,
                    1.545194195240507
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 75
    }
}