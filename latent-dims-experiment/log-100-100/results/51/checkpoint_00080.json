{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        9,
                        9
                    ],
                    "values": "eJwBiAJ3/RNjOfgCr+w/IUeJnCWDk7+ArWtICNNkP2orPy+hE4W/3FySnQ5BYz+2AQydIut0vwJti6IJZHQ/7BG6pPBagz8+s5FaiwBzv9dN2R31vKM/wMouipVv7z+k8uQoPLuVPx55mBmxX6E/it2am35Otr+movCyzf2kP6nYheBHaYc/YRkZXXUoo79wsIVjkTFhv84li4ujRcA/zjSo7Tr0q78XjuHtTcfuP9I3lVQR34G/Ku8YemoHir/IAdckNTWpv3w4rXVhBqO/MZnTvB7Diz8rhxcrgwOUvxn2HmxrqbC/2hxzSBmDo78Jwva47OWkP+rSjdyDCO8/j0ofMx4epD/iqXSRujJtv0J46Xnb1bk/ARfbLxUlmD93VnEqOHOXvwtqfm4ICcC/sEPCokpUmz8ks1A3VM+Uv7tCPH/W5nw/uY3FrKvz7T9CN2hhlgxtP8IYVm2JFZa/BsbypMUuYL9+ku68jg+OP0vhIM0T3cA/d6KJDVRZjr8fwLRD09K0v7qgweV9c5c/vWIYlPrhoj+cRTcxxlTvP2tJgZpDzqS/ra9jbu41kb8EPQwCUxuovzdWGX46w7I/YMWpBe9Cpr/fTF/qrAOQv5clVT/fIXG/Nie2BFJVYz82oZalfBOXvxeJN9lps+4/X5jhje74iD82bkaRmASUvxaII+bBGLU/vEIrElGgXj9boC/SmkyRv7YXDZMCt3k/tp54XppFlj9Th5dyVJqEv6dOfo74CaG//aIviQxz7T8tMXY/r9WgP4sziu33o7I/577cQ/6EpD+BQXvNat+MvzwKVbhpi6E/O6LCocejqj9zR3Crs6ClP4oc4A4x5Ky/FUX1HphKk79fZe3rNWXvP2PNPVY="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "strides": [
                    8,
                    72
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.016872711617673748,
                    0.00038357181764073754,
                    0.000715514757626544,
                    0.00034726326892351773,
                    0.004225652193964745,
                    0.00020769138470946372,
                    0.0017712220741922427,
                    0.00043123706923970685,
                    0.00021336293926589735
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    5.995913702281541e-05,
                    3.4321747428805336e-05
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "values": "eJxjXzP7772f7fYMfNwGbsJW9gzb226X2sbsZ6jy3Rue62jPUB3nbh8UsJ+ho+ZihokukP5d9FdG2p7hWnOP4P+Q/QwJq5ILur/ZwfUHbC40Tne1Z2DQZHr0V24/A0Nbpub/T3YMDvvLbrWb7WdwOMg80VEBqG+OdPkCE3uGByJ+N2872DM4zPzhv055P9x+mP4Hz3M0BYPsGQ58f2OWaL6focFDRUPGFGh+lZLmQ2V7hoZeldVHBIH8hv28pexAuo17Vg63Pdz9MPth+hXUrvzk9QPat6qktNEKaM+a18H8QH9VaG7KEvAE8lewSb7/b8fAIMs07Qg3wv8w98Psh+m/sWzZyiPZQHe8Nd3wwxLo3uw7H9/7A/lpfozbnIH+lDJfwOyECD+Y/2Huh9kP039gou43ZWC4MNzSZP752Y6hIT+9Z4sWkH/uwsO98vbw8IeFH8z/MPfD7Ifp53uYGuyWYs+wYNLd2y/cgOLuDV/3MSDiDxb+8PCD+h/mfpj9MP0bdGcKF4YD1b2rnd0oYA+Pf1j8wcIfFn4w/8PcD7Mfpv9B8aId80ztAQAe+IY="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            9
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            9,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzk5ODc4NTYwcQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM5OTg3ODU2MHEBYS4yAAAAAAAAABlfY3w5M/U/7agAe5Oj5j8K0WpEBS/2PzLSzJEqTM8/5pLZcUdk2T8BDnRhIYnrv9s/MQb3LwRAfR7nA5qM9D8WTBxKWWmUv0a4byqMD/W/75PpdXiy3D8Y26V8MjbcvzVqPqtbjvI/hezFIl3w2T86p0wKYn3AP4EQbBhxheC/scHa3quL+D90oiF9ik/2v6YUFZST/uE/i+tWPr4L/z/hB+L1HBj/vymsVzebe9g/mWHh3zIT0r8fWg7VyjPlPwl124QutM+/E21aiBKeyD/ps0rCi974PyLOLkMfyfq/528cgKTM9L8XDhkdt9nav/oU9LGlkPS/5eOw1FSwBEC3JDaXt/T2P6qkDY25vuG/KAxAzMxXxj+yBomn84v4v1c23gsdxPq/BPoQIaN9/78Ekdj0Nk3IvwhR7OVe/+g/XP3dMlmn4D/0wsmxGRfUv/BnmQYvv+m/UnukoPobAcDdy3xM1BPqv1thbHqm7/Q/2/INbP7T+T8TfboYZbMHwJX5qpDjpQLAW86uJxkKsL8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzk4OTQwNzA0cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM5ODk0MDcwNHEBYS5kAAAAAAAAADTLL2dr09Q/J/qOTEia2D+3HSu0stXQP53g4q4utMw/6Y6E8Bxooz9TA1meeMGUv+OjTKOH8ma/uwJ1yJ2TRr8OqOVJ8Kufv9BoF8JOd4e/sjMY2HIdVT++SHJnRV+6PwRNkauYMqO/2C7RUyHozr8Cc6OY1f1wvzR1vtOWPLw/8edwjK+y0z8HgV7YB6LNvz3UMXDymWq/Cf5w07Tvzr/9/sfCYJi1v1hPy798jXG/ySDmYEGrYz+FTfpuQ4+7P7rIr3Vdt3W/6Xp79mTuxz/pqyAPXEK2v5cMa5YIdYg/DSIc4kTVjz+D2+DzpomkP70QCPvjvqU/dJQKyyEQyL/M5yrR/BeJv41/xLtrzb8/u0wiDOBrYr9BtAs5wXbbP4Szm8R2qog/IeAy20Icij+1rDtlODLLP3KdgnyT9om/AN/jDWc6lL/j6hXDYZqWP93On6pVzGQ/t7V3DiJNyT9x9dgl9kbMP0BSOvG6YrS/TAeHv4ygoz8RSm/uUt3HP0Ez4O5ac7E/2a3pIWmcdD9GPRo1keq/P88Mmg7ytba/EnHNui+4p7+XFblFv7SzP+zNWy55NsG/jLjxvgFllj9q3BOOdb4sv5M2bcDEl4E/BZxr8EYEwD/tUe+L4uqFPw+PLw6Ermg/e0JB3DrGtr8tcNRI7CK1v3PFiS5YhaQ/svly2iwYWD/gDN7kSImiv97ocAsQvKm/yuqilBl/wD/3P6GNof98v6W2e6rsEZq/ReSlmkv/xj8jSvBw1HO0P9vahbHsRIy/BkUKvj/ftj97760PObB8P7xUqccc4rE/k+nSZo1MsD9YNkYQAFuSP+wwEPRFL5Q/t7QEFDgemj+GNjDSNu+9v31ZCSm3r8S/kECiJFaIkz+FOvL/dgC9v/83FsB4GIE/I3ahI1Rxwz8jEDjvNKyrP+3dIA45apO/YWwTC3iPdj+3Va2JAxqBv2cLSV5KBo4/nNEpaDofoD+m0qrBOe2Kv/833prSf7o/MNEsjnOSwr+pJK4i/J/OP3t1dk/s+Gc/oSdnIk7YtD87jNoLd4U1v+m0rgo28lu/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzk5ODc3MDI0cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM5OTg3NzAyNHEBYS4CAAAAAAAAAC3sd6Kzxdg/OWd1kdyGpb8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    9,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        0.09862715615541287,
                        -1.4259985726996773,
                        -3.1317145657560914,
                        1.9381318618883816,
                        -2.606192425799486,
                        2.2760017699955775,
                        0.7787062101702368,
                        2.7855873519480223,
                        1.540964904848825
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9
                ],
                "values": [
                    0.09862715615541287,
                    -1.4259985726996773,
                    -3.1317145657560914,
                    1.9381318618883816,
                    -2.606192425799486,
                    2.2760017699955775,
                    0.7787062101702368,
                    2.7855873519480223,
                    1.540964904848825
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 80
    }
}