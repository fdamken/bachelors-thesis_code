{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        9,
                        9
                    ],
                    "values": "eJwBiAJ3/WCXHv8Vmu4/qebYULD0Gr8nunf11PtwPxaRSnd3c3G/dBMwHdk4lD/EvKX7qgSAP+DdYbemeE8/k+qsGUAKfj/20IFIqLZpvwwpCg2iyWG/9u7tozGG7j8HCZULaXWJPx/2pJH+J4m/io3+onuUiD+zx4EWrZGWP+HGBRP59Zo/pcqzTr/alb++a8ZtJTJbvw7FDMlx/2M/Q0PozgedgT8m+JfoTyHvP6gqEo+3O2S/26YeGdSykr8a0PNdVuOmv7QEfo7YOpa/rCaAavGDhD+EVZDMZayEvz62CbvFl5W/00AsP1mgor8hl/ZTzG9Av8dXxofs7O4//ZeD828RjD8ufprs2MKYvyLfFtLqP44/wXYdSF/Qbz9gfbw6HBp/v7C0KPzOAZk/fL+/yuC3TT9amWle1Ptuv0BK5+sV2Zc/j4Hi6Ym57j8L+QIdd8SIPzZUmKaObH0/2gWwHpHybr9F6x930Qpuv0fwtvqvjpM/aA/eWvAmYL/K1rQCSSCkv06eLygU+qE/tdo9V/dfiT+FMOjK4dnvP0jlhqdOhJo/dNYid0xukb9who/W8NSYv6kbUld11ny/TeiV7gKgWb/RIsfSmw+Vvy89zkSNtXa/UKtTKpLoib8KS2743eOgv5pHmC/Diu4//lkziT1FgD87XuOxNjqNv6gnXezDcJ8/TQsFUJaWhz+3e8zutG55P8KsonHE8G+/ClS2bULmkj/sNgwNw8ugP3Hz9+qpy5G/fuQaZdxe7j/wXfTveyKYP++Cpp5SeIK/IF3y0Xzjoj/kl3eOc52OvweuAWMQ3aY/vzpW7BqQmD9boeBqHgOuP++wG3paFYG/mhy5YVcGkL9M2u5NFYHvPwvLU5M="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "strides": [
                    8,
                    72
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    1.0679889708521304,
                    0.40499903940139476,
                    0.5016526582826163,
                    0.5157421176597358,
                    0.8803005478737409,
                    0.21266206281967437,
                    0.44258821971454165,
                    0.3823198012486207,
                    0.17753881815975228
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.0036991833554602636,
                    0.002221428078077679
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "values": "eJzTifbkSdK4ad/ww8U28OdUe4YsBb0lpTP2KzwTfv/mzML9DLYBxTy3p9g3SP7rsWFZYc+w51pigECVPYPDnq/u3jP3M1xNiv+gu2Q/TP+JR82fTn04bd/A8tn8Qcps+wPRXzPYGtbYK/hl8oUoL9yv8IBp4i+ZrfsTfr/NXP+n097hntWMkP8T9zMUpd6aVZcDtx+mn2HiSed5fRfsD0ya7mG7a489w1flPVH3Fto3FLwJPrtsmX3DJemVWl7z9jPMENtizjrZvkHlz7H/blvg7ofZD9Pv8S5L+cenW/YMBvq+zhu22DMIOV9eGTh//4ONx2afXb5iv4BWnUWF+EH7BayT4rf0b7KH+R/mfpj9MP0bpFh2zVlyxZ5hxefOZR+B4SBteGnv1Ln2DFLtkoed1tk79Hlkd9ps2w8LP5j/Ye6H2Q/Xr7lo8+srO+0bXnGsWRk6dT9DoNzeUx+A7lfyVvjyZ81+WPjDwg/mf5j7YfbD9L8RVclpsDhi/0K34dxjhr32C9btdM3WngqPP3j4Q8MP5n+Y+2H2w/RHpD17480CTC9sSzY3OmyAxz8s/mDhDws/mP9h7ofZD9Ov0PK+7cffE/YAVIY9DQ=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            9
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            9,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDAyMDk4NzIwcQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTQwMjA5ODcyMHEBYS4yAAAAAAAAAPCfyLXQ+PM/J0BA2+dO2790F5cV1dj1P5ex1z5fwuW/mkY19sOm6T/FZOhwn+Wqv1BxFIF4uwBALCJ3OxUV8T+HzMvjdGyMv0tgJbLOOfi/hwnGnN/23z9s9lhVjkHavxR2QfGEcfE/Z6tDhnRj0D+jVhrqo9LOP8ITzaR9X9+/MlIidksw6j+rkdncIDW0PzCEggdDmeQ/kxWxB6ni+D/V3dy7Gfjjv9D+f5NdANI/lLRRSvNS2b+lmtVdtxLoP5YMi18BdSC/o3OjPkop2D9q9fiH0er1P5nYc+GAoPe/eF++waR/9L/I6MofqMDXv6B+0fmlxem/WsV9Hf0kAkDLQinVC9j0P16my9VBSti/U5rJGR260z8IqXozCXHzv1rtxckXzfS/BeCv336VAMBZkYU+8bu6v2Rqh27PDec/QHKc3rHR0D8rrubZWb/Rv/eqIyR1Z9a/xLZmA1jx/79EfsKESdLivwJtNe7/ceI/V01gz6Oy/T9jSm31YdQDwPV2lJKmhgHA8K/Z+roKd78="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDAxOTgzMDcycQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTQwMTk4MzA3MnEBYS5kAAAAAAAAAFisRZqDKdI/J1CxqFEF0z88L45KuG3QP5/ytBRcRsI/htySAhTHuz+/3qF3DDjAv/qE+EjH3rW/IXxkhh62s788nSN4snagv79FTMpopMS/0gzHBzRmoL9Es4/xdby+PwSuSdsldLW/5pDWXwNHrr8ZgA358424P7LwHMCyy8A/LZCeeBBmzT/NsfxJJbjGv0LAJZuFSMM/zNqUlzT/xb8gR3VVP6d7v+GLgXLkNqa/DFvX884Ep7/0jGH6+A7AP0p5ENsyiLQ/aDq8MH7wxj9BhpudUyW4v768D7i83sA/pC5nSF9Dsz/QllWX6aO5P9G2YMJAtLQ/AD18jTjTvr8as1c2ecW9v4YymVL6AbY/AeHPkblpsz8959MsgMucP/2K1BYP/Lq/zW9v7vDIsT8cWucgXMq+P/BHI8DZ4rW/7WseNanQsL91xtliX+mfPycbMtxLkpq/jnwetmQqxT+QPzbJsxzNP2sblCNrCZo/xwpEey3prT+O9hhXIBq2P0pDyMj/e7Q/wEpTHBGhsD851nUFUqmfPyi7+Lg62Li/CDX2nAXiq78lOm14oO6tPwqcR/D4JIq/rLjtYvFep7+8HlrCUJCLP2j6BzbIRLM/p+7zwhnVpj/ivPoOtT9RP/3m8czxqsI/CvgGhNn1wL8mLHmPL7iwv+09/nc2J6M/R7yfvKwrnL8B7QEuEOS6v6l8jz/xvK6/fbRt0S3/vj880ZbzifCwP6s/RUJrrrK/xX2773p/yD8FwrBheyzAP/2CKdkJrae/RJjAif8rq79F4NRpDWmiP76Qi1+04r0/qMBTK4Yeor8/mDHh5X2uP/dYweD9pZs/qGq7RW2NsD88fP2C6FfDvyPZCqZWW8S/hwvIsMh1nr81ZYoI7ZC2vzQeyHa2O3g/ELrTAty6uD9AWu6NZSqRv6qF4+LMZL0/pG93XTcYdz9ToQA8DNSVvy+qpOeGSr8/wNQT79cwwD/VbdXFIi6uPzuEo7w+Ha4/081xXF02kz/dgO5yOJHBP0Ossmb7Koa/t8G4VmL0wT93pXB0NwaoPzpi2bLiPpA/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDA0MDIyMTEycQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTQwNDAyMjExMnEBYS4CAAAAAAAAAOoNhXPHLtM//4jYmGTVqb8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    9,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -1.043761676537563,
                        -0.82222955501556,
                        -4.133368982394672,
                        1.7774899094708123,
                        -2.2704358631199977,
                        1.9179841917062124,
                        0.3331802726909445,
                        1.9701458343778464,
                        1.948826916011462
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9
                ],
                "values": [
                    -1.043761676537563,
                    -0.82222955501556,
                    -4.133368982394672,
                    1.7774899094708123,
                    -2.2704358631199977,
                    1.9179841917062124,
                    0.3331802726909445,
                    1.9701458343778464,
                    1.948826916011462
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 20
    }
}