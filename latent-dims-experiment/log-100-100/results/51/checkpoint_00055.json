{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        9,
                        9
                    ],
                    "values": "eJwBiAJ3/S2WNzJHBuw/bhDa0iTYj7/VWlVFDg+AP/OGP/3S/4C/Ngw+nINEg78fb2PTutluvxpNc/gbgmk/a8F8fgrBeT8VmL6aTUV4v+cLtAFD+ZM/SH7FXEne7j+9PGSTm5WZPz2d1aQdRZg/zIHD4/Luob8U9o2gdjGgP1736TTjK58/JE1fJsI5r7+F90oH5smNv3FuBk/1Gqo/ygm612xCsL/PfFET7PTuPy9SldapGIM/9z6TXUBloL+KEUVTjAuov2jFrazmdZS/ntltieDEhD/a6ecdmF2bv6C0A1Y17K+/9J21NfWeqL+zqV55gtGjP1ig1vSX1u0/4993Eyj6rT94xaJI9I59vzUy6+OwYLA/naXvt97Imz/0aTb/WY6TvwdzUv5t6qq/Z9An5LuYoz8H5D+kf0eRvx4W+BbfbqA/OwlBkusv7j87jhXmhSqDP4BOUqDhqHa/PngUzRJsfL8lS1hbwAuFP+Ab3EY2raw/bKsyt0pRgL+046h7Y062v7FGvZ4XOqs/Qy7RWg3Ra7+o4Oo0QpTvP+5nsBFyI22/aTGZun6Pdb/tZcjr2Panv3bV+zZpgoM/fcYxZFpAqr/sD96EVQt8v0sYvd2WiYM/Bp00UFuhor9FWOZJWk6Zv/nUlaYE6O4/ISzRAmdtjD9UMspSeJubvzmqmmx6HKA/Ec6J3TAWk7/jDz/2OVKXvwhYd9iS2oA/9IAn8MFqpz8loFDUMCp4v37ohuZraY2/XT57fHzr7D9yHk3vleOUP2jXqsJVO6U/hZICAM2aqz/ctkXdwIiRv4zPKNs7Was/kwufuHTLb7/yM+wPLQmmP6/CKLd3+q6/P0AzCiXYaj+TDpnu6XDvPwLkTUY="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "strides": [
                    8,
                    72
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.07122223695246148,
                    0.0028717148549675473,
                    0.004798676594162714,
                    0.0047970171664449435,
                    0.018584988221258487,
                    0.0011483492483007549,
                    0.007632016462163896,
                    0.004619995868991023,
                    0.0010783970816749594
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.00016494425784730992,
                    8.453219042127102e-05
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "values": "eJwLmHzQ1P77BnsGjqXMPzfZ7G/YfOnpC+2E/QbCl+7zZjfuT5incUX8WoP9g4ibok/ty+wf/Mn95efeau8Qvt5eeUOKPYPV3fU63xzh+hl2ztkRMa/JnmFBrvwCiYT9DAvc4t5l2NkzFDzev+Rz+n4GibaJPNmp+xm+7EvJU622Z3CY+35OWaU9g8KpwyxSZnD74foDzu79VFdmz8Dw/N20GRZA+vPqqYVZQDpntvaBP3YMB26bipoA7RXYP+NCdNJ+Boa1rEzcyvYw98Pth+nfcGyq0YlGewYV+30b3xYD5bP285bE72eYu9p+J2fhfoaMU+svT8y0Z5Dgss3hjraH+R/ufpj9MP2hM9bbaU8Fmm96dJmN536GklM3lXnzgf4xZMh+Gg00z1pdtzVnPyz84P6HuR9mP0z/iZXflpYCwzXny6INaiH7GRoad9R0uu5nOPA+sWO6BTz84eEH8z/M/TD7ofodqo96zurvtmfYkd8gy1EMjBdB/9xJ1oj4g4U/LPxg/oe5H2Y/TP+XQ1N9V3YA9TEnOe/xQMQ/NP5g4Q8LP5j/Ye6H2Q/XP2dddU5xmj0AerwNcA=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            9
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            9,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDEzMzM5MTY4cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTQxMzMzOTE2OHEBYS4yAAAAAAAAAFdS3pqb/vM/tkGIBS8a4z9Sjb22UEn2P0jTDDIRM9G/YXNGJOb02z/FHhLzDiLkv5iEmthY4ANAdcrkUSaS8z9O3+Q3oA+0v/PVP3Jh7vW/JVf+LglT2T8/3j99m8zYv7hqJgk2NvI/n2vL6WCB2z+iW3811NzDP1SaIWo9BeC/L8l3WiCL9j9T/GqclArxv6CCXLhcoOQ/wqTTMGZJ/T/6ENZciiP0v0v4TUXdZNU/1oUa0t/Bzr93elEVmh3lP70t1yPkkse/K3KcQ5hS2j/pAiOkD2T4P0NPJK2yjfq/xdOiC4q89b+txjM5GgTbvxzZrO0hwvK/DnS0PD9iA0Dh/m2QJKn1PzkF1NdzHty/cdTspCtwwT8RgtWvuTr3v2HqMjjeR/m/zEYIDSXb/r/VH4HslHfUv20gf00xA+s/+9pSLKFp2z/jNb27INPUvy/8oNvFSum/1WUQykPMAMARClaeTbnov366QEeOh/I/Vwj+4hU8+z+a2BjCjeEFwGcg5u9VWwLAnr55n30tpj8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkxMTczMDg4cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM5MTE3MzA4OHEBYS5kAAAAAAAAAAFV5EA9ctQ/nFQHb/ow2D93Izc/ZDXOPyYrjSXi4cs/F0/43ozRpj99u9paiiCqv6PetmGbvqC/+ENcNVyjer/iSIwIgGGLvzTw0Kd0h20/Vmoxag9Hkz9ds6iqPJ+3Pyuc5LA0LoG/NDmuQtSws793nBxMDtKmvws9G6Yn0cE/bJDWq2FJ0z9hDSAXbM/Mv1+/aEu+oqk/CePVxWp+zL/bekcyKfOzvyphGkOIkom/RLqXWssLoD8MsIPv1yKtPw4wd2elNxo/ntSYEA+Xxz/82imiltO+v7zV1L4MgrU/vHoLlO1Zkz+4+aFfSbCaPwtj6DOdRp8/c2Lz9/PMxL8/4sANAF2sv+rTfJnQAbU/rLvwrMZ4gz/QS9Xoeq3SP07HQL2RmJC/PpuyCodFnT/JprWxyybIP/d2YJG1wHm/AApOVddZyr+1yylpHIifPzJG0OZFDGK/YfJG2BFNxD9OKbKr3THSPxjZKG2CEJ+/eJBYcxBgfr/Wr56L+UXFP53Cg9LQ5r0/dE0t2Zpvkj8PgwtUia6/Py9wOCy+Cbe///gxg32Zo79I1KCVBmqzP17cFBdNlb6/Qc0HcX7aiT+IDIPYGLWMv6tjDTuJuok/NnX2qv4UwT8J7RiG3L2AvxuQnX98Hpw/juA0mE/msL9R4EUO6tHCv+4VI+O+wm2/05RpXN2plb+V6CvsdBOjv8/tb+enY6q/rlmdi/+owD8OzMOhf3Z7v2yp771kzbS/tBnhvDEpxz9MaFyeeau4PwPDMTHek3q/yos/g2m7sD87bU1T68RaP2Q29usWMbQ/7Oan4tYRsT+lI7KRsf+lP4zzxVkcLok/zelRCjjgej+ZGMM+h/25v7WGNhD0XcW/RlChvXqRJL8O/oigTUXDv0m+HA+pwV8/V/uLZxVvuD/N5FiD/uKkP2ZAufJCBYS/aA4CKEQ9cT8jyiC3YU6bv5U5kwnSPpA/4bi1/6QZsD9nJ7ukP7uCP4OBZJdRrqs/PXoflyUou78R709majLMPyCEplHJjFS/NgErijqeuD/rG1zhelCXP82pV9wV9mk/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5NTU3NTM2cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM4OTU1NzUzNnEBYS4CAAAAAAAAAKiL2MFlXNg/UydbbXQupr8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    9,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -0.057338067817995504,
                        -1.3427598101148392,
                        -3.388116679203575,
                        1.9293520939473494,
                        -2.7011953736484293,
                        2.3045503674062098,
                        0.7799660930946375,
                        3.0482647828529124,
                        1.5611978478765263
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9
                ],
                "values": [
                    -0.057338067817995504,
                    -1.3427598101148392,
                    -3.388116679203575,
                    1.9293520939473494,
                    -2.7011953736484293,
                    2.3045503674062098,
                    0.7799660930946375,
                    3.0482647828529124,
                    1.5611978478765263
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 55
    }
}