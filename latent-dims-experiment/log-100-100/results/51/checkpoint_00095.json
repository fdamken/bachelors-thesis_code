{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        9,
                        9
                    ],
                    "values": "eJwBiAJ3/YWzN6bBMe0/Bw43L92VlL+DG0uBgrpfP7yANCEkCoe/qeWVOFgMjz9fWiplXvB6v1/auy9lNIk/1DrHvqMxhT+YOiBqUIV7v0U3nk9nbsQ/maVAbhxx7z9GO6WEsPmlP3F1zh3yjp0/EwuDLqYMcb87Yo2WowymP60RmnSYtKI/5xgenJkJgr/EvRZvdHSMv5/AJEuYj8Y/Y/E8/PSEqb/kem8ivMXuP8Gz14okTIi/9s2DVC/Ekz9IBoMb71Ouv4h+hUEXiKS/w/qGKor1mT8/4SkhoweUv1LaCC/2v7W/xZxJLLhpoL/HclLSL7ilPzudKv2fNO8/7u+CAYRHbT/ay0/G6Ed8P6W9jpaR3L0/XAV4W5Nbfz8gnzswDaiXv7OGCjMZi8C/PfGuqOlTkD8tFB2PXaSRv58xR2pOdWE/J/cMHKy67j8Jb5oeEapvv2XXUDg42JO/vNRfP2Ylez831hQqf5iMPyOLquNB/cY/XjbCPArWi79duj9gfy+1vy2SgBY1BZQ/6aSssLhKrz/3/rC5xOXuPx4VhaMZ566/oRHhCPcLf79SpVqOn0Snv5VPRXfJZbg/iVLh3Y6oo7+V39RDYMmWv0FJp9zYDXm/pdtu7+wknD8cusXeGXWevzEXOwyrqO4/y/Aj/a1Ejj/SQj2y1mSTv2eCwyE+pdE/NPodOAJRjT/lZz1hExeNPyX9Om/qNmy/y9zryZs9wT+V4+AHkHKSv1CyfEuq6my/gLL8KVqU7j+FVT3C8e+QP8ET80XpnaA/whdixTQSpT9wo0vED92ev2qfTA2+t6E/C2MB17HAmz/qeT595vqiP/RmLyIA3LK/ELs3TkZVob/bpLQ7nZfvPwDjQkU="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "strides": [
                    8,
                    72
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.007593034999969999,
                    0.00018963368160155165,
                    0.0004222434541982571,
                    0.00014302315007726265,
                    0.002466446214419262,
                    0.0001397758237872696,
                    0.0009944109844440107,
                    0.00011398772682179346,
                    0.00013244938213164548
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    3.556369524812908e-05,
                    1.6627565614669493e-05
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "values": "eJxzsONffvhGtj0Dg3+H2WtNe4aA18Gax1z3MyyYzrisRcKeQeDTxd8rdIDiEy4vWaSynyFn1iNjZxN7BodZ2X4F2vsZGBTX5PjI7Yfrb4h3+L9WC2hej1bBCgagOO/H6FfMQP6aF9WVH/cxNHzS+xcmtp+hYZff7v8MQPEr6+5OFADS79iylST2w+2H6XewOLX1hQPQ3I/hjzkVgOI7uLW0/tsxMEheZzkmDBRvnyhyXQoofiBclIkRSJ/abDCFwx7ufpj9MP0Ngbdre7SB4tnRy++JA9UrrbBZxAa0R/2iSSqQ3xCRUCioAJQvCHUI+GYH9z/M/XD7ofoNtu8K/R8GND95ry2XDlB/oXKzm4E9w4Gt7wzlTPYzPHAXKJ1quB8efjD/w9wPsx+mnyHw9fcmFaB4eJKpiiCQv4xlh7U40Hy2TfzqwHCChT8s/GD+h7sfaj9Mf0zYgS0vXIB8qbrt+x7ZMTQcWfb0MRdS/MHCHxp+MP/D3A+zH6bfgVt0yVVTIP/LqyJGYDjD4x8af7Dwh4UfzP8w98Psh+lvWDVZgVXDHgAam+j6"
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            9
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            9,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg3ODA1MDI0cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4NzgwNTAyNHEBYS4yAAAAAAAAAChL2Knhyfc/TPJUrsRU0D/GAnAshmn2PwZGGNsMHdo/cIymyMOW0z/FVyyi8h3uvyLKBD2s4ANA65sQdsxh8j9YJLfEMl+mv6MH4P3Vg/a/usiycTrK2D9n99Qh4M/dvwI11Ws9MvM/1CF+ihje2T92JbsjpkLEP15jbZnHQ+G/2sLoUFrq8z/O1Xwzjojkv/PkiszIO+Q/6ah3NIc//j/F+1NQ2D4AwD0RcAsH+9o/fIyKC0lOyb/Ly3jVrAXkP13gxhnspMu/AKZK0pyl4D/CFzYZCRL5P+UvlGFI7vu/ndMnhUpk9b/ijXaa52Dcvwi2wfzbHvW/CAsG7aAwBUDfLeDB6BH2P5hPXAue0uK/y3kZ63tesj/5SJhSAon5v5VgLggO/Pu/QuPfgEX7/L8R6sEzD13OP4AZrGXrtuo/9Yz3USC63j8yvG0c9qvXv0Rt9WlbFum/4D6Qrc50AcCJSb8t4K7pv3m1Yr5vvfU/X85zHajw+D9zkXfABUQIwGLiKqNQcQLA164Bp2Ptnr8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkzOTYzMzYwcQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM5Mzk2MzM2MHEBYS5kAAAAAAAAAFtucyqLi9Q/f30yrYJT2D8PlKZy8CnRP030bqLaJsw/ZbaIo8hsoz/hVm8QRnOGvxdDEbH3EVi/sQNrE7tcez82luqj/oG2vxOgke5NmI2/EGmwGj2mWT9Yxx8/hO22PxrYCHWpuKq/4LVf1E1K1b93pgiNqYxsv1K4G/LoN68/EJus1Vtr0z8nMxsTsBLNvzyBi9yN5yw/a5r/aNt+y7/kGuCpuH20vzklO1xcj46/H9CLT08jaz9fLKZuK3W8P8qsbYYBu3q/gZXbzzdOxz8mAqjPUVu0v9ZhJaZ/6B6/7H5i6y3knz/YhF/A6pyDP6GRtEOALpo/kPdpY+HHyr/MctwZj6R5v60++1jY3sI/HPp/qe/kdz+IAZp/WfPbP1Me69rgJaA/7nRU3Dl/db8KZKPQLqPKPy78bVYyDJi/IlrfHikTcT//z/k4PcyCv9i8IDa7+EU/IrR17lhayj9HY0ozsSHPP13BO/ivs7y/bLRQ/UR5Yz/uo4hxsd7JP5mnvgYSbH8/c/hOa5sqQT+Mrs9Squ3BP9+yHaZKwrK/xsFPiVTMir+YG2Ksiqe3PwA2aL/wsbu/+7HmM3OcrT/dCB0yCa1Tv0MrpPDLrnI/ZFWp4nvSwz8ZqY4URYeHP1fJb3AkkZI/wb0/inp7sr/yrmYTNvmwv9LDUhkc+aQ/PN91fM6oiT8G4MqEEUKBv7QPMr3GzqG/6UcdPS/+vD8M5I2FmauGv89OmBE36aa/ElpR5+UFxT8dduxBLi2pPzhIsgJwFXq/QqaxZ0Gbuj/i2lBa7Z+KvxQrWQ4xF7Q/io2VYSk6rD9E3DHQytaEP8pplWS7UqI/fY+IIOvgij9AjGX/F46+v0DvsV+567+/ZYZW4QLcWj99fOV3LHC/v/QFYAzYDJ0/SptaQd3SzD/t1YEvK1mxPx4SLpM5ZG2/8Ln4Uz5tlT9i05r75QCIv41aNCsAwpI/eNPgYvmyiz+yZqDclMJlP9tg1Yq/qbU/UkKe4b23xL/KgIBpPT/QP+RyRpnPd3+/dIMdW+vxkj//TmfpAQliP6sWY9SloXE/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg1NzY4MTYwcQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM4NTc2ODE2MHEBYS4CAAAAAAAAADD1PZwJf9g/zH1GiItCm78="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    9,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        0.374175479388207,
                        -1.4411836260860804,
                        -3.098072420541047,
                        1.9250701492335252,
                        -2.58210866969903,
                        2.2632658318208136,
                        0.7105995643249569,
                        2.6668611862735405,
                        1.5201078959914114
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9
                ],
                "values": [
                    0.374175479388207,
                    -1.4411836260860804,
                    -3.098072420541047,
                    1.9250701492335252,
                    -2.58210866969903,
                    2.2632658318208136,
                    0.7105995643249569,
                    2.6668611862735405,
                    1.5201078959914114
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 95
    }
}