{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        9,
                        9
                    ],
                    "values": "eJwBiAJ3/fMBbQmd1us/RinoZFFSjb9mlsk/Qjl/PyTLmMS09X6/p6Al99qIgb8KJoO7u5VkvwKkrF8bg3I/ZMMdkkBHdD8YtJ5kElt4v9ZX9rp/HJM/viXzMD4S7z+Ca0YQfKaePwCO0CfP6Zg/6soChD1Krr9A90uKP/6gP4Nusarh6p4/tWvtxZ9Nrb+zeVHs9p6Pv/neTkr8fbQ/RAkr5t2tr798zh/WVPbuP8uX2cej4YE/PgLrqG9ao78J/f/9BICnv+APKqupdZe/XVu6pid8gz+ffrxxCvaav5v69+iSl7e/qIXi3bURqL8cVJ4w/GqjP/MlFSuD9O0/ZV73evnDrz93Wp5djL99vyOV0kzv/LE/JgyYBhUknz9E6IRwrQ2Uv6V7Kz6/ba+/W6U/GcnKoz/DPD06GpOQv+o/YOL8qJ0/MgBLLCIZ7j8L0EormIyDP+SOVZuglH+/eXuhrrEjgb/vdQE8GM+HP6bCt62nwrk/bkficA+bhL/6O8v80Cu2vyXN49S1lao/rsB5q/0yIT/9rhPls4fvP2ndqEGDGIq/5h9V8NZ/g78Be16s8yOovzklapyji50/zu2ZG5Qjqb82gcSkYoWBv/h72D3msoI/sPpccZ+eor/P3+vWSI+Wv7ztvhpA6u4/OaDUJqryhT+/UJs+feWZvw0DTXIMy58/a3bMEoHqjr/y3n0mS5ONv4uzG+W4I3s/6IwR+ZRnmT/W0pWxZoSAv387m+bLo4i/o2bnapv27D+NrVlPSWaRPzngkfFiU7A/vCPTHPaUqT9uVDMqqzuVv3ZSCk8yLqo/hFA3arQViD+mb21RCnCmPytLKWdAsq6/rnt+5t1jdb85K0ze+4TvP/lxVPk="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "strides": [
                    8,
                    72
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.049914367095564835,
                    0.0017022815686609492,
                    0.0028476618185112362,
                    0.0027858041986539815,
                    0.012815535506786798,
                    0.0006869796054884856,
                    0.005181187189169898,
                    0.003219619486984158,
                    0.0006789552602902929
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    9.589977516952786e-05,
                    5.4303960079664646e-05
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "values": "eJyLTcnYEsC60v6AhYWl5EX//QqL89qORCbtf8KjvHNHZul+jkkb3ysa1dkbqP91WF2dYa+11O5sYki5/QP5ibH3D4bYM0yaP/HUIuH9MP0McpcakzpK7BkcRFqPzQ7Yz7DASdP0oZU9Q0MCH7tR0H4GgxSulm/h+xmerVp37GeGPUMM07MdXQX2DArc6rOU3OH2w/UnTGMOcsq2Z2D4F7KO22E/w4Ni1269BCC/gelJ9ul9DA7LT23zV7BnOGAQvbI2AqjPX0/S2dge5n64/TD9ciUKRSwV9gwFXSy/j+fuZ/gw7/m9H6H7GaqeXb+6M2s/w4Tni5ZKxwPl2Y8KdXnaw/wPdz/Mfph+BVm/6S69QPP7359oddzP8GrVA3+bQqD6hXYi84D8hOuePnZh+2HhB/c/zP0w+2H6Gbq4LLaGA8Mj46tPPNC9DTL818TNgOLi104+0oeHPzz8YP6HuR9mP1S/Q/h6q+mXGu0ZJjyI/zk3DejOgvvrbUQQ8QcLf1j4wfwPcz/Mfpj+iqb4f6eB5jVYKm5cpA6Pf1j8wcIfFn4w/8PcD7Mfrv/CW9Gly8LsAd9uCYI="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            9
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            9,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzk0NTg0NzM2cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM5NDU4NDczNnEBYS4yAAAAAAAAAJ8YuceLD/Q/bxRol6g31T9A+gTAGin2P5uH76xTltm/kpdsoeNo3D9RxQyU1RDnvzcomkSeGARAR91kyWTH8z/31vS7/ImjvycP+WemO/a/qa1I4eoT2T/vqy5NQNPZv+3kzjqOMfI/Zdu6IUii3D9WDL9PMELEP26Docql496/yLQTKlCm9j+gM+V/fmj0v3/e2nIyd+M/Rkn60t+b/T/UOxmFtcT4v9HM0Kg0gNU/S7HzenYS0L/RAWzqLLTlPydJU8Ehxcq/JJXDuF+82j/uws9rO4r4P86dOYrAv/q/xenTLJp/9r+qb+LnuWLbv4bYwph/Q/O/wG3FATfYA0CPipTgwvn1PzKhDg6vgN6/4Zi5S+5Nuz8UZ3T0n3z3v3+GwmS5Uvm/GTqu2NWf/r81vXyn+ejSvzn+1sAzFOs/5178G6g63D9APjsEaxnVv6ytxweJg+i/woJUvCrVAMBZOEwzNvPov0qF5diQWfM/GaeKrnlt+j9ocq5vhWwGwPGm+5nDawLATiKkVHWSgD8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDE4MTUzMjQ4cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTQxODE1MzI0OHEBYS5kAAAAAAAAAJ3vO+w6jtQ/0GjC3KtT2D/ZhHCo4z/PP4ad7g5CJ8w/efwSNnULoD91H1AjCbemv9AKCpEjx5G/kNU3oq4mdj/OSWfRNHWIvwx7fT7EYke/k8MIlOtynT+chL2EiS7BP55Zx9IkEJ6/riP6GJKowL9DS2FniAKgv1A78mGUeL8/O3sNHBNs0z/gZZD3zhTNv+iOJwsQdWG/P5EFmlaqzL9/fSwB7320v0LTaL3ct5+/IQmRJoQ3gT+KTfyX+omwP5Pdph2Rumg/BylYyLzbxz+p+2od8Du8v8UKWRQRRLA/MEqfeAold79vEs7QImeYP0iDfWi8dZc/TSGkjFu0xL83AD9s+AGrv2X0EMRcsq4/qz4gq2pCjb9RX5XLKsXUP8abtZXkBYK/7z6Hh7zqkz9KvhWtzcLKP2qFzgUeZJK/P7apa42iw78AcumiBcCXP36mmVcTuXA/fPN6TlYwxD+GIcpcOf/RPxxj1E2KLZm/f3x9DATsYD+jykpOrqjEP3cozCVy4cA/9MReYAO/Tj90hIEVIxXAP5INq4Fsn7a/dwJv83bfnr90V0Eg/MqzP58tT/ox+L+/KF1FoZYSkj+OhpbxZKyAv27C/g1SKIk/oaZoFCUawT8tIidMwbhwv5z9MTeDTaE/XGwhWFZluL9LG2lnocnDv0UmOFnqHnM/9Dgg9jEdiL+hfC2KzF+Sv45TXOsEj6m/RzWbzNZzwD9wDUEy4hNov03nrCOwZLK/hG+g0gj0xj8PxfDbws21P0ZhyHDnmIG/JEd9T90jsD9wFOUbkxtkP+wWA7Vok7Q/jZ/GBP18sT9daFLq5puhPw44Jig6zp8/W+5c+fMzhz9JZmFb20K3v+9v4kMqJ8W/Hq8RspFgdj/5THLV3ATCvym5UYdiJXI/W7pqoOJnuD/4UqQcbb2mPxH2jEgP74a/teftyb65eT9YCKuGBgaev5FP6Xtmzo8/Whf8Thlwsj8UZY44SnpaP516G4CDi7I/FvtNKrrxu7/qgZS65YrLPxm+kP9JRXi/NJP7xwQjtz+8DatANmaQP6NpQ7pBuGo/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDA3MjcyMjI0cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTQwNzI3MjIyNHEBYS4CAAAAAAAAAEjSEDIXf9g/qYhWcdFZpb8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    9,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        0.014861403457657699,
                        -1.3495092390618286,
                        -3.3007690365956157,
                        1.943251693478501,
                        -2.6795557445458997,
                        2.2922179901382593,
                        0.8166123899901374,
                        2.9894043460168325,
                        1.5508154895028592
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9
                ],
                "values": [
                    0.014861403457657699,
                    -1.3495092390618286,
                    -3.3007690365956157,
                    1.943251693478501,
                    -2.6795557445458997,
                    2.2922179901382593,
                    0.8166123899901374,
                    2.9894043460168325,
                    1.5508154895028592
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 60
    }
}