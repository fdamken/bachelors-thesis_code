{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        9,
                        9
                    ],
                    "values": "eJwBiAJ3/dDu9kZSYew/nj+Pj5yIkb9SRpT27kSCP+ofHm7JvIC/OlW30QYyhb+3/XHXsB1yv72/K2khM3I/WaKMP/Mmcj/Vi/GliAh7v1oPSCElJ5C/TMRb0uCi7j+XMpGF6p6LP8zlBgFyVZQ/FSK0o6Hzgb/fGvQotamdP8fM71eA5J8/Db0wjfxNqr/Rfp2wtvKJv5I3DyhhmaA/M6l/2T1zrb+YHyWVOePuPxqoljyULGi/MxB74RxUmL88CFqdr+SmvxtwMgyEQ5S/+hxdzDEDhD+mlkGRVSaWv1dihZW0fbO/XR0xjzvQq79+uz7TwsicPznWxJoOOu4/jdhkcI+upz+OgUO5kJaFvyrDUZBtSKs/qggZTFkilT9hx/Je6wOWv3oblclv/6K/2geKKBahoj8uuFIMwJeHv0zUP0SYdZ8/6Q2Xxn1h7j8vsqGVyCWHP80OB4z7s00/x+REZCA8fr8GXF0+FfB2P+NUfaZ1j6s/bfxvjOI1UT+HzBnVY720v19gaAsXlKQ/t+p1jwi/Zb/r21F488XvP5oNbdWaDII/hm31gNSVdL/a32wGOOikv1WY3AqPXni/JlKyA0k0qL/TYk5eoYuAv/rdOtZ8i1w/+v9QevGaoL+GTAqI3H2bv2/Ajtltz+4/X0Q7Nsb3hj/M7zm6rpuZvyQ81ZTkZXM/dZyPnthJj7+ONExTNZufv/cUpfqZVG8/imT9US/dpj+niBIRgV3yvgDmg4+dhaG/Bg3V5lVY7T/CbPgrm7CfP6QfJHuebqk/Ku8/BhhcsD8FzdzVXJ99v+FmY/AAo6o/rFNgYWXOiL93aRkDbH+kPwWzPdENLrC/tkv4nPMUWL+Scl8aeG3vP65WRwQ="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "strides": [
                    8,
                    72
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.1990668184717343,
                    0.011516991374541803,
                    0.016828733222739433,
                    0.014077186628689318,
                    0.044170881115040805,
                    0.0042172776790132685,
                    0.024306624308714917,
                    0.010839014720450716,
                    0.003667139266246362
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.0003599861229304224,
                    0.00015545675272994687
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "values": "eJzTK130f8qyXfYO+n9vdBxstGcQMk/gKC3d3/D6SoKBf9d+BqWI7S+SMvczWAaH8ke32jNMvPTTpHG6PcPUmSsj3jTYN7To/g6904TQP9Hq6E/mmfYMO/IXRrcn2jOUsAu7p+fYM5w/FX+Hr3M/g8IezboLWfsdOnnYmfon2jMUP5wSw9lvz7CAc9O3GB+4/XD9j84dW7h6kj3DlkUMx32A9jvYV0q99ALSOWE9Ci77GU5oM7yaHbmfgaH+WdokD3sGhtmNrrWiCPfD7Ifpv/ia99R5oPvPmWjNLm3fzyBRtmEJe9J+hmuLXiw6VrOfYdV33+fRbfYMfkqBov9K7eH+h7kfZj9Mv8L8VbsjVtszdCybkG3VuJ/h6r3jDR1AfQaZ2/hWNAHdxSisy96LCD+o/+Huh9kP07/id+bWyhp7hh+K3oc+AMNBwdPXt90BqO/UtUeOSfDwh4cfzP8w98Psh+o/8Li1YmbDPHuGKdErlJYB44fhyLGTDDHw+IOHPyz8YP6HuR9mP0x/keV114jZ9gwX1j/Y+ikJHv/w+IOGPzz8YP6HuR9mP1Q/Q1vn1j2s7fYAQTEQmw=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            9
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            9,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDAyMzExMjAwcQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTQwMjMxMTIwMHEBYS4yAAAAAAAAAPaXJEafdfM/AwaMQoHr4j9ruVWoPDT3P8T+dl7Lnd+/N5znqQ054D+jgXVNQyzfv6sphpLRywNAi74ehF638z+uffMMuXS3v1jDMSspJva/ffStDgi/2z8RhKOhIjfVv2WBq5bbfPE/zzWEt2Ap2j/l0HW8lNTBP7V3xhDyqd+/uVsshAhz8T9r6jhv/a7dv0FNC5q3OuQ/VgmJGL+q+z/y4g6BAWD0v6JwRNjSo9Q/xB+AsFiDz7/owXyMkyjlP5s29NY4nMO/fpzjIMOx1j8n49FhmMP3P8gySu0GyPm/SboSYfF29b+8Qts6g5LavwY5gSjsGfG/ldYlWyA8A0BQjS2EgBv2P/suhV1QJ9q/k087ATX9vj8CxycktM32v1sF7HWC8fe/QeqbD6sCAMDxVScy0NjQv4oKw6Mqvuk/+4UclNdO3T91dY2nAMDUv7jeReuv6em/umztTbKYAMDfCPhMWefnv+uM2rtehvA/a8qwHYeB+z+H3bbBryUEwIXq/Z7FDALABjzlWkhymz8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDAwMjQxNTY4cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTQwMDI0MTU2OHEBYS5kAAAAAAAAAHsVI1F/RtQ/mpqxfAPt1z+nhW4YXNvRP7rqpIRlW8s/l5Xy4YS3tj9HjvHG8ISxv3S9STYxOJW/8qEAUlFdib8RBv1oyU6Kvy/oOakwe3K/p5sQUy0mc78V5Lono2S+PzPQL9rsXqO//huPO7e6sL+gSE05TWKqv1bEYg19u8A/SrZ6jWwF0z/SgRcniUfMv9Pab2KxW50/Ubf9Z3Xcyb896ituKO2yv2Q3NKKOFKW/Hcytsb3zkT91n1s2HUW4PweDm9Fy6pE/Sdp5tDYcxz8fGkHJjfW/v9NRlA2KxLA/7Z1yWshUmz98GktYY6t3P4loqHrGgJ8/+LI1lgaixb9KvBNgXrenv1/U1vTixLw/QTtUZq/PcL/6gXQf8sbQP74/uPdtD6K/DER06ey3oz8iFWzT/1PIP4QAIJ1SdKC/QKGPH+C1x794doTw1uKXvyB3ZHYBkpk/U8lah2uhwT+s9DTN2PvQP7ivT375Saa/osMex0O/gz+B7h389gbDP6erVpipsMQ/DwOXbP+loD8yYMrA+U6/P3PEW4jhY7e/+ckzkDKklL+oMANXHxKzP6wxgEqJa7i/jm67idiecD80K7TxbipyPwKMA71m8oU/CLe9VH+svD9ZFyI+skKSv3sihWIlgJI/AEkgV3zJsb+nsEGpdNCwv9mq1yFM/nM/Ebbgo5pEq7+myb7E6TGtvzCwmR35F6u/7DhStkDWwD9IyJ8yPmFNv14r9TxBh7W/unphIBBbxz8N/ScFW2q3P/TrYBi9Moi/l4upetCiqD+1zzCrvUeHP0auKpPv37M/XZrmfZP/pj8Zov4221ayP6ExVr/kfKE/NulveItIoz8lyiicARq7v9AsSd3x0cS/cF05ayVxkj+sjiUND5nHv6CQJs/kJaQ/XDUxvlzetj+IeKewkSCgP37nnj8plJO/ixlMMFPNUD96vcpoImCHv4nhkJXAToA/ooiC6JZptD9VK6nBhO+Evzis4ZTsurw/APHErZrrtb/LjrIK+P7MP+QP+px/EXk/PfDeiWy3uD+dJ5JP/3eoP6wKdIdmqpc/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzk4OTIzOTM2cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM5ODkyMzkzNnEBYS4CAAAAAAAAANTfgs9uGNg/Z9ihJbvipr8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    9,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -0.4695362690916878,
                        -1.310759601913364,
                        -3.6354819622740577,
                        1.8469150611164655,
                        -2.921710677269262,
                        2.319113273515209,
                        0.656562128717797,
                        3.056342604674661,
                        1.5930844391087584
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9
                ],
                "values": [
                    -0.4695362690916878,
                    -1.310759601913364,
                    -3.6354819622740577,
                    1.8469150611164655,
                    -2.921710677269262,
                    2.319113273515209,
                    0.656562128717797,
                    3.056342604674661,
                    1.5930844391087584
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 45
    }
}