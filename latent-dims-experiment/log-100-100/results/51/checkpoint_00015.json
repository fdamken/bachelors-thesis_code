{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        9,
                        9
                    ],
                    "values": "eJwBiAJ3/X6VC8P/Ee8/1+OAgTJzUD9NYKwp2elsPwHmr9WzjIi/iMMUsGv5lj+pX5hgF+N/Px5yVGee7lw/pUYUwhhjfT8DSN6Zf6Z0v4M5izYVx3C/AhSDEcWT7j++9W7oseV6P0v34VIzl2i/K9C1CNUqkz8PXSfrf16BPxnLvitgt5k/4Pec+6ojkb+0DOOmBCGEv7iW8AzwZIs/S0xwNPUZjz8ZVg1qb2/vP0HbdhiVG46/7Qf/TtRtkL9CYDpgpv+dv2OTyvQsvZe/Pz1WSJouhj8L0BJRkKpdP6HEf4rEdIa/8REKrr3Jn7+nQvGhmbE8v0nnMpYm7u4/CyOM4koYkD8Ln1tGGiaUvw5SWmv2fIY/UbZ26uMbdD9WZrH0XZFTv+Q25htYRJI/u4/KklJ0U7+sXDsJ2xRfv/Hl2ZfKH5g/TRGM8ywy7z9h6oN8qsZov6GE8uBwCnM/ONy/b6PCIb8bpn89+Ax8v9vAQvtaLmM/fFwZYpO7bz8Brvl1gqemv/yt880ATKA/iPdCiv75lD98GnkpnPTvPxT8pwEmR5U//1ywfhDuh7/GbIPozy6bv/xlcpf+tYI/Ahzk+PCacb/pFZUP+lqAv2cbvyPGk1G/S1NyeIf4j7/lxol7Q4Sfv3tDiwuwhe4/BmuoGLRzdj9PVfFzYbF9v6CGOUQ8y4c/03wvPw/Bbz85mVmdioxYv2K63/ZovIc/s4vbRC4fjT+QGdsXE3CgPxkUA5KPiXO/FZHBM6ai7j8bYzfh0leMP5g5dzK7Upy/rYptaDMJnT9wsrVpKBSdv1Uz6Tel7aQ/1ik5fgPkoT/d5XmEJ2SnP5VWIrMKLnc/WWs3saJJhb9hUjax7h7vPxyFQEE="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "strides": [
                    8,
                    72
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    1.1650731372338161,
                    0.7448432634967563,
                    0.8061565408305376,
                    0.898673661576933,
                    1.1735801652568392,
                    0.5071368807816935,
                    0.6516311697302147,
                    0.6528268504239815,
                    0.4233189180631088
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.00989527206551793,
                    0.006223747630702803
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "values": "eJxbt6I2Y3ndI/sJS2f4+81cas8g7fjPJmDN/oa4j956YvP3Nwinab0X2mjfILVkUf6SJfbvOlU9T12cad9wwT9YvGjNfoc5rvcmBc+F65/n6FTrfeSmvcG7lGfKfzbYn9i7gG3flv32EyRCC7MjN+/fwCqs6jBl5/4rhnc+si5cZi+w9fmMc+zL93/I+7u+4P1GuP0w/QmVhbdYkm7YN9isXfDg3yr7hv+V63I3rbZnsGWvMWhYbF8RJhjwNmaaPcOc8rUM+4rsG/xP/PUK3gB3P8x+mH4P13U8ay49sj8QN1E0LWSxPcPuXu9z4Qv3K6b7L7n98MD+hBUPVENP7bd3eBPUoVaw1B7mf5j7YfbD9EfclmevEL5jv6CEu6Vx/sb9mxN/7ulX2GK/QPvCWWalTfYOvXHbRfXW74eFH8z/MPfD7Ifpb1iz1zpBer+9H1+U6FGFxfsX/Nl+RrcVGA4+zgUZ/Vv2w8IfFn4w/8PcD7Mfpt+f0aXo5esL9qtuBT3TUzhoLzxxxbn6Szvh8QcLf1j4wfwPcz/Mfpj+jvoXL0vM79gzTLM/P3XrZnj8w+IPFv6w8IP5H+Z+mP0w/R7/17klOFyxBwBMu0Ck"
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            9
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            9,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDE5MDIwNzY4cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTQxOTAyMDc2OHEBYS4yAAAAAAAAAHpRm5BnzvQ/kcSYsve8s7+7wqHdpez2P5rObyHuDuu/3mMQsPGd6j8HfnEPBeO2P/JQfuqa4f8/azrYMOCA8T+7ROyG1ga3P9NrCf2RTva/APqJpOyn4j+65eWbrfjmv8la5ICoh/A/hGEnNZEcyj9dnetdR8HRP9/q/CJ5w+G/HqJaKnPk7T8m/jpXWVesPzpULXqMTOU/uKZFy7Lf+z/yhMtg5oHev9i1dOa7TdQ/iCX7KWE33r/qBDaUjh7oP9R8KjPGrrE/LnEMhmyt3T+KSncPiJj3P3Y4srs0fve/4ueLgMuf9L+m+xKJbU/bv52eJOuZXeq/iSlQTqUBAkD/vt/GKTjzPynVKUN7d9q/+Am72Dk92T83jB5Am8jxvyL0UDWd8vG/JzAKIB1T/7+l9ZmGMG2rPw6TDEweXOI/u/92Iaiu0z/jtpYXGuvOv8h+GKQrEtC/sf+KJ5im/7+ERy5/EPbjvw2+jGoB7NM/JrxwN67r+T/qK3G6AHQDwFJDehT2KQHAABsE6mP5p78="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDAwMDI3MTA0cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTQwMDAyNzEwNHEBYS5kAAAAAAAAACgAKY6BCM8/er3YUmdE0T8zs6g6XpPNP4Q1kSwdh74/4677PWu1uD9L3C7JyEvDv4CZXOxA4sG/bDj7ykjKhz/i119QGiivv3jKlCDbjMW/yMU+ooTosr/ZpzjVVoi0P00SYFOo4rK/IqbeWjd1sL/sfTZXzJm+PyXl2ct4yLk/bbEqXrSqyz+v22i8IkfEvyqXerejMMY/9bn9ICQ0xL/xh+PjjU2TP3QCGW52KaG//HPCPMgdsL9SrD8mf229P38Y1bsgcb4/LXWOzHRKyj98JUIJcnK/v4QgMOjNrsA/elaciCUqwD8mXN44QVvHP96s2amsNaQ/bo3k0nJ7u7/Yz91X8oe7v+v2efl0BL0/ObQFvZTOtz8rG6Qg7O+IP/sgA2AMCr+/OvIVPpgUrz8eWfrkvK+2Pxs+QsOLbcK/IGlnHjR6uL8wGiKJ/IGoP0htMIaD+qm/WUodp3TQxT+cBIKYG4PKP+zCYbV+gKA/Zra6++eMsD+cSSc+Pn2vP7hxBS8TGKs/bVrMSgqUsz+GKBIcjbmSv0KxcHCvALa/sefpOqp1qL/xkaEQviiyPzCSTMwXCIm/ljhL5A99pr9Ie/wCZ36SP6GMSUuwrKg/fMKOuncBnT9S3S+1NQmIPzBl2bgZdMY/Z75eeUWdur/OceszS+Owv6n+nV3dnqc/0P+VvW+ahT+Sm7m8a9m/v8/c2kcAvrG/3m0+25BpvD/gGtHvTy2wP7J9irz977W/HM3mAaSexz91mPfznKm3P3b8PyTAEqe/EDEsNUwCrb8j8laEo7KwP3U51M8Xfro/xhy8Tlt9rb9QH5kO1wi3P1Vs/zPj33e/4LxQqKt5tz9duE3fomTAv4SJYeI9KMa/h03zhmynmT+VmyB180u/v+Ea12uPAaa/mFyjmltouT++u2evQkqQv5Pg1jgjN8A/+NVPgcj9jb8MSvxkmG27v4I1JdOWUbw/MN1L0DS6uz+rnvrDojCjP81iQqtoy6o/+Dn4DdOBlT9ypE3qDpzIP9BSQnxlEKi/Ee+HLSm7xD/dpEQiA/lxPykl8l1e5Hw/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDEzNTQ1OTUycQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTQxMzU0NTk1MnEBYS4CAAAAAAAAADRn94YsZtE/qKbkY2jeo78="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    9,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -1.3881989467265168,
                        -0.44760282692865283,
                        -3.311128012120835,
                        2.0132225215593467,
                        -1.9707478124595217,
                        1.8213409054527496,
                        0.050422403444129155,
                        1.6169557958176515,
                        1.4256427957022335
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9
                ],
                "values": [
                    -1.3881989467265168,
                    -0.44760282692865283,
                    -3.311128012120835,
                    2.0132225215593467,
                    -1.9707478124595217,
                    1.8213409054527496,
                    0.050422403444129155,
                    1.6169557958176515,
                    1.4256427957022335
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 15
    }
}