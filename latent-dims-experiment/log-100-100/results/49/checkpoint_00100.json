{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        7,
                        7
                    ],
                    "values": "eJwBiAF3/osgH+ZBSvA/dnlWu3q4lj/rHMZiz8erPwyKfGzZTpq/IoIrk/4rmz/P0hraUVhQv9qe0Dz0tZq/kV4xm6gSnj9iwELewHLvP9h6qHt2u6e/MMK/DLCMgT/flc4rkFukvzkt6H5m066/svS0tsuBsb/mw9FWM0jGvwvK6EEZDKi/N31j7IyQ7j82y3LpIgKvP2Mr0ecSZaG/IXp+YFdSqL/eocSQiFlnv6IPfJvTE8G/Hg8r3ERulr/6LNsur0evPwgjI4nune4/ghBPBR5huL8javLJxihsv9nOtW7LjKI/wMdlkbVZmL9jtUaGYJqWPyFVlKCKj6Q/SrtjoURBj7/gvWXiBQvuPwRehRI26qa/PXHXDRTts78VWiVsGsa2P94+BMTP/Hg/7HjhBVbuir9S1GR2PRGSv3QAqHB+EFs/Utnzp0137z+R3VEtiSqFv+q0ckDTY6c/ZqiLJkNpqz+RR+4dyuO3PzkqWvBdvam/Gp6afoR5Yb9UNe9l2ECVP60vqTnBje4/5TvIBg=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "strides": [
                    8,
                    56
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.0004187657177936272,
                    3.285909495664651e-05,
                    0.00018297265124530754,
                    1.9909477954168656e-05,
                    0.0002125989781452955,
                    0.00011187895980530705,
                    0.000170434043899215
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    2.41158842236473e-05,
                    1.6918210042888403e-05
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "values": "eJxjaDnSvnQ7rz2DQ2rGgpeP9zEwKC5bEsRuz7DgZ3BGNNN+hgc3Sni5BfYzMDxVrrt/Zh/DBO6E/4tf7EOof3A4t/GxHZBeUJL7EchfUuMu+xbID/mouew9kE54ou1/H0hHc3bG37CDmw9X/+/QP15xIP/dzGdLQPYYvD+bKAqkBT6tu3pxH0ODv+SVfb/2wd0DNx+m/nGmRJQYUL9jdvVdGSAdsFj48V+gvJhDfA+/PcL9MPfAzIepnzZPP1YdSG94WneUCxgOGcEPbPns4f6Fux/qHrj5MPX3HW5bstkzNLjPCXZ5aQcPH5h/Ye6HuQdmPkz9BoaDApeF7QEnKpo6"
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            7
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            7,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzgwMzIwMjg4cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4MDMyMDI4OHEBYS4yAAAAAAAAAE2Kpc2ULq+/64z5MoMQ1D9r5c98l/f4v+z9wAO7/OE/6bhF3rGQ0r/YsBGC6Unxv+Gw7mKSD+G/VPPU9b3I6T8Kp6p/oxDyP1y3+Ka5pPM/tNwdB/65+T8RCp6PCCz+v9DlZQiopNm/MLW8Bxq0AcBVjEjD2tXxP9dovlLSpP+/za36qFlT9D9P/IqjG5/WP3MvIE3CpfA/xghdotzg9b/K7udV/ymiv2pb2EAk2/o/4YXms+m1y7/xDm68D3j0PxuvWzCYgPm/lOaVCwg35r87HTjKtpnNv5K4S6135OK/KaPzK3Tz6b8Q6INRzVLnvwYS1CB/wve/NgQIDtCw/r/9G0NxZDjPv0r5CPNBkNo/isVkrY7Yxz/mn1UoH1vnP0IkS+C5j7I/iCb6RPS477+SpVmRHibxP0DqhTLmfLG/Y5Garpnc7j9XDN9LSfDzv9vI4PDA/wFAQAZp9jHd5z8BoJ8QStj1vympXWe/cZq/9PLjF5tl1L9TxJpZmITlP9GSyrLaJOS/xxYD0yg6vz8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzgzNjE2MTYwcQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM4MzYxNjE2MHEBYS5kAAAAAAAAAHLHQYKAzt2/TlxU4euk1r9eDnjxQhmTP9bjzwGSM4o/0FmC3QSLSb8k4BiYFfqIv0TnZ0i2pJa/809fPefae79kRNWe0TXKv2qXd77UAdI/wxlLl0Q60D9pXCm50amIP8rt7KWARqI//I/XWVC9zz8u9D/jsjfRvx9gOyTtSrU/zWf9aOUrtr/8HukuWBN8v7tDR7SgO4m/RbNrf3IUiT9q2qXParHEv2FvsLt4l8+/pfz4IyXUhr9dS5JAXAR+v22X742/Y9E/p4kNakUusr/oU6dARSfLP86iWJaycNa/E8BgrgeTkj+4w5fLHKBzPz50N8wS6MY/QA79wO9lxj+I9gQgyBaBP7R2NxMdQWu/hoqWsqj6xT92C6oTOsa5v6l2GHi5bai/WrNZhnoitD95BQ1WtEaWv1mFqF8zYYi/SwQU8pfKwz/W1ItL9C2TP+6+6Nh288K/6CAGxF7cIb/BEwxX92e8P6f3mhXb9Yq/3mQvYsOqyL9odOTU2EZ2v+/O2a3OjMc/IbGnb2teYL/legfAxSm3v0CImwcF6ZU/9wOYjM1cpz9U19fWGPmav3BArPeOU6U/B5a/hfgIwj/MSXxaFay2vz9FJ/viwZq/liWL3RVclb/xIuo6dVG1vzmqRzMqEqi/1wZgLj5Omj9NMlEP9VGxvxbJsvmu47c/FGTWl15Uxz+G2xND22qmv3J9MZC5yqU/9qJuajYidT9DMWU1B8thP/kpr8oFk5A/96MECaqMlr+KRkLYKaC/vycSfRWsGZ0/2HUk+weokr8InSL1mdm2P28o0exhUKE/q5Bw/f0Wyb86Vs+TCEmuv7BnDDUUm58/B+Ntt+cVoD+NEPnuTfTNv/CLHF7K+7Y/Ckb5UYrAeD+93v9QOf6FvylSrAuvULa/gn9Yj9Dqtz/QCHR0Mb+4v6kV17EUM+G/sMr1fbQhnL+1xdcnJ5SOP/8Q0yPcZNG/EsJBFarhZ7+eHSW6pCCkv0/VU4VyipW/Oh4/4M6Gv7/glRXMCsujPyWeGRhgr7K/V4ZE59qGmz8OPNzPkXm/vwVVGilt5YK/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc5ODY5NzI4cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM3OTg2OTcyOHEBYS4CAAAAAAAAADIknjWyLc4/sQb1jxhLvD8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    7,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -0.17813027065329654,
                        1.2800519439161404,
                        -2.8417045032233217,
                        2.1942638244031927,
                        2.5644358395157645,
                        0.7054679045750071,
                        -0.3189942760534412
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7
                ],
                "values": [
                    -0.17813027065329654,
                    1.2800519439161404,
                    -2.8417045032233217,
                    2.1942638244031927,
                    2.5644358395157645,
                    0.7054679045750071,
                    -0.3189942760534412
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 100
    }
}