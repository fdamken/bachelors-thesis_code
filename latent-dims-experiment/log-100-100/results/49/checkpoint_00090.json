{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        7,
                        7
                    ],
                    "values": "eJwBiAF3/tf1zG4HLvA/mry89s1Hkz9yEzgyF66lP1BQOYHMT5i/8+NilJkhoT/kteGe5aF4P6pdNZMDpIa/Z9PfxMNKnT9vOZPM6qLvP84iiOy6uZq/A/kK4/OgeT8fzJ1qA9mjv6DJ5YnIVa+/3Koe56fAs7/b/LFPVLvEvxHDrRPxw6q/gXtlBBGE7j+S53TZIGGuP8PwituLhZ+/t1YO20I5qL/zBNJIcQ5yv/76BIDersC/Xfo6JsJ+ob/YvYL2+9KfPxCktenWsO4/ZNu3MYP2tL9wPXpa3qyMP/a+VyKOAKs/qhiwoyYZkb/hDpWNghmRP3erZbrmP6A/KCPKI5NrkL9qNH8cpl/uP+frVsrByJ+/IpFRQeRxsb+5TTL/J+K2P4QoxlOpmXU/6dc3t2vVm7+5e6qFpn2Iv333zMXQJpC/te9tFPtH7z/xaX68BG+Xv9HqceFx/KM/yhyfP1DWqj92FZhQhV23P6N9iULiC6u/cD1UY9qHkT8M7xhk73KiP6DfrZ1cSu8/hk3X8Q=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "strides": [
                    8,
                    56
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.0004178872553290306,
                    3.538188165004944e-05,
                    0.00016658091667404496,
                    2.7035452443519873e-05,
                    0.00028689056498405844,
                    0.00014134507465334576,
                    0.00022901968724202057
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    3.319722204287245e-05,
                    1.4295957607032505e-05
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "values": "eJxjSKhM1vosZc/QcCfQo/DpPgaGuwxrPwnbMyj0Xl70gGM/wwO9F7ynJfczHPi+ef3hd3YMFx6ZzbV4tw+hfsnzho7ndgwMCVMZn34G8jscT20EqmPQ+cW/7y2QXjXHqv8JkD68nSXrkh3cfLj6g6HvYhWA/Bnb36mI72dosGnTj1LYz8DgwLp15z07hoYbc1dqMe+HuwduPky99eLQn0pA/WdcnphpAOkfUw50sQL9Y5N44bqMPdz9MPfAzYepF9zZLWAMpLdau+ryAfW9/207TdYe7l+4+6HugZkPU89grHGhSxCkb1nG66+I8IH5F+Z+mHtg5sPUnwxxMnyrYA8AWZmgsg=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            7
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            7,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzgzMzU0MzY4cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4MzM1NDM2OHEBYS4yAAAAAAAAAIGU1anisri/SbKFkWqY0z+4z+4KCIz5v7wtA0/+EOI/LfmubKbJ0b9c1NlWBwLuv2deM+0Y2eC/KODzMGWY6j+IG+facjbxPyIsjmZ4SPU/DP1x5oHw+j9NIPxN4sT+vxhdiVZd/di/cJgFS5EzAsDmDhkHMk3yP5MpBqp65P6/Tl2K2pg99D+BKU5gu4DVP2PISdoHrPA/zRJT5QBB9r9Po9+bq6u2vzr6dOAvS/k/pagEAaAqz79FsKAsWDv1P1HiNNEfAvm/36ZJEYGR7L+gHBKchq2Ev21Na7UOjOO/Vlv/tMrG6b+LrentKUHov7hqhYAENve/E8vVaqiM/L81emAHIlPNv2q4d5Mvhdw/+7QB2xmY1D/OwAXOkoHmP3tujLNgHcE/p/bdHdSe7r/xKPYX1TLxP8YsVaIGdY2/815iPtw77z8bhcnOBnr0vwJ6r5P8hQJAtT2LVLs/6T9vgWotpdr1v69OoUnkZLC/aLxOP6dz1b+63Obu8QTmPwLbkQrNzeO/IRvVcggIwz8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MjAxMTUycQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM4OTIwMTE1MnEBYS5kAAAAAAAAAJiZott2WNu/YuCA7B4j1r8Q2Y55aNOXPyFo30+c1mI/d3fO/PTZjL+z51nxrwydv3MMyyqRPq+/vE1xnpltor/bZ1rP1r3Kv0yZyUhId9E/vNKEUHBfzz9EwXd6xYuWPz1zJ42Fn50/YiT7hJgXzT/Qpcn6SAbRv9J2k1Qu+LQ/ie964RYssL/fehZ6v9hQPwHno+LDRJq/D7FA2TGoiT8kPxDDjRPHv6ihnT55uM2/veUMG65Udj+v8Je4yvt4v13A7cfIcdE/ecya8ejrtL9wWfuyPPvJP9rYt9T85dW/uCbjMNZqhL9VvFtG63JVv60e+dpLUMk/FFrip1rRxT9njc3wwAqJv9jXMqMugom/jn1eCdvlxD9x4dGVVMG/vyv2xmG1AJa/l69+ytjntT9WWCqlcA+ivyAkyYyKAI+/cuYsLhf5wz8FX4VfTTh6P3Wnn2rCEcO/NTOylcjHZb+oT1Lz4LC4P4eS5qY/0JA/U9Ox0vGVx7+F7nEWQvpXPyqOVZ8sfMU/4f1+83Mvkr8DwupqnReqv8QvRdbMpY2/zQYHf8RylD9yDdTI+8x1P48WxK7n2U2/bxAYP0YKuT/6D/2FjfTHv/8WVPyeI3m/1OFcDOW5er9hi1/doO+6vyK8iXgup7G/GLc4r0ermz9BBqLZrPOMv3eM95Ro/rQ/P8insb95wT9C/uz3mreRPyMTg1s0BJU/8DB41wJ1hL9rkSl1SXdov5T9LM6f8pM/coS/JjNVaT8PjnafVLCyv7/lxkoDUmA/JUJjwvEDgb8vYiCjl5SQP9bh/yN4mY4/McMNcNruy7+3w6f1CBajv1rhSMvrkJg/DTex5KJelT/pLOBwzD7Qv0anVcCbDLs/1Xz2PW6PkT8Bzj/BFh6UP1AZB9Fq7ru/r6fbS5bKvj+1Iy8vrTXBv5AOD0PH9eG/xLjBBTPxer91eWra+WdxP0pHPTd9+Mu/k0qoF1pfX7/hXMtpoGzBvyDDeH731Ja/2UHye/abqb+OID3UT8JOv6sufRuUIaq/EDSecZU5cT/A0CyrFQOrv/z6rKEMdHw/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg0NDM0NTkycQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM4NDQzNDU5MnEBYS4CAAAAAAAAAGEnTTGRGM0/JPLlsN6stj8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    7,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -0.2169763124314063,
                        1.2846200736890252,
                        -2.9105808033048275,
                        2.2985319446971313,
                        2.7072277237312985,
                        0.7276382073276026,
                        -0.24747261424310468
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7
                ],
                "values": [
                    -0.2169763124314063,
                    1.2846200736890252,
                    -2.9105808033048275,
                    2.2985319446971313,
                    2.7072277237312985,
                    0.7276382073276026,
                    -0.24747261424310468
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 90
    }
}