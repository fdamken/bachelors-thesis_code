{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        7,
                        7
                    ],
                    "values": "eJwBiAF3/iOw3QK8uO4/6jbZUQy6lD+YEt11YWFwP7MGDbxgQoq/frSG/PYOlD9eIUKGM++Yvwv/WzuoFJ2/RHCYrGjjwT+JvAVGqK7vP9/qGWiI3pI/4OI6vEkRcb8lQdRi1Q2Vvw+ZN0J8eYq/05X6DkhurL9UzCZrj+XBv0aQdEv056e/+08tGEsX7z+R4Zflka2xP5iLvyioTbC/GSOvCnsasb+Xa2Tjb2Isvx/r5Q3wE8C/ZEX0mlsln7+iA/im+3KSv0rp+UUKOe8/KpwVDx6Dt7/vjx38OZ+Av5ENa4oGraM//FhBcOwsoD+eIMJpcXaJP4JSFZ+egqE/xt+WBstccb+fJ02kpUvtPyOFGXQ1dIi/Taz4Q5kRpb/oFwvEpvRGP33KCFF394s/XgjKKq2Qnb8h/qqW2GaBvzXfIwF0AqW/CQzq2xS67j9h3ZHB8EWVv2myu+G7U7I/ndVOjOL/pj9OvWPola+tP0Uf7BVDLKi/qgEKnHcqmz80Il2jxsuoPzE1dHGGSe8/hcrETg=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "strides": [
                    8,
                    56
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.00221492559374926,
                    0.00023477362275865424,
                    0.0014099439089503044,
                    0.0006829713334057347,
                    0.005452585824617224,
                    0.0013061040142306073,
                    0.0012799024237708267
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    6.39394592926692e-05,
                    4.193556128052478e-05
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "values": "eJxreHV67lmRLHuGCC75v4/N9jN8+Rx6422YPYNDAIvpcpf9DCIMhxxWxO9niGBf22ViZM/A8PuorcP5fXD1DfVTTx7StGc4EPD4sCuQ78A/Z8IFRXuGhvCFq94qAemjokkqjEDzzhx+/OLmPrj5MPULZNe4lsYAzX2wwlneYj8DQ6virj8e+xkK2H1kl7nbM8xo23jMWR7hHpj5MPUF1pelbwH1P3j0JPpIAlDcybY9Qtu+gWvu+wmVkfZw98PcAzMfpv6BpM+uPqD/E87WMBab2TPMZP7A9g+oD+ZfmPth7oGaD1e/rqY+nBOoXmae0MW1zPvh4QPzL9T9cPfAzIeql9j2p1jCIdYeAFY4nE4="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            7
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            7,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc4NTA5OTIwcQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM3ODUwOTkyMHEBYS4yAAAAAAAAAFwO7Tb8PNO/TYxZA2Phzj+17tbJain7vxMz7pf0YeA/lZvwkpDf1r8AxddYN1vov1Z8IsFcReO/kbE09sna6z8+qvJUZMnsP2J7sQaZ5Po/WsAyQvUrAUCtyxs5pjUAwDPgMgNghtm/yRvTMZYuAsB060HMrQfyP/N2zgRVfvm/YyGHnE2I9D83Rs3LR37YPwTPJEgOYvA/hNnylMtH979KgTGVxKLQvx5HS0QH9/c/Rm3C48mu1L+Sah7A3WL3P82/KgXRpve/VimLaYYt5L8jscFvYk63vyereHTWRu+/mylu6DJl679LqPVapiDpv7CQ3WicNPW/BI+8Cnmt+b+oTYmPOYnZv40GHdMT4uA/e8NOEdZNkj+3yk00lnriP3qfSFBNW9E/LAZWOClq7L93Exy8C4jxP1EnS4tBLXy/xrXYJztZ6j++0fJSY6j1v8jJ1wzwiwBANCEcc1O66z/CwHxwWGn1vwkLK4IIHrC/mFnNHC9r0L8lHmtxqMnmPzDLXK0spOG/jPd8PIhOrT8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc5MDg4MjU2cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM3OTA4ODI1NnEBYS5kAAAAAAAAAG1m5WhHxdK/8382zHhT1b9ySRtzFeGnP2D0gmQ2GnE/N462eqqFt7+6G5IFIEizvwCzVEpJWqG/2QP9U1bId788ho5rqw3Kv1K1pV/AbNA//c3m84ZKzT+oMMTiUTOcP35tI3XZuZI/VWj3TXSmvz+sW/A9c0fMv7IMuQQ32bI/8OGMCdgVtr/Ux8oB8H6TP6PRwBVyk7q/Xbb2YfRQlD/ez+Tt12LMv5F676iT+Mq/SrbYEASQhz/B4ybxbsGgvzm6CHbjAMw/h9Z2ZFhPub9Bj3pMXfnHPy6Ljtxw29S/WCaTU78Ceb/8dmk8qjyGP1B4hmyUo84/UYJeg/IAxD+qU2tu1uCzv5jo/iBCNJe/CAAwY5jUwj+sRw7Ok5qbv+agUKOp6aS/0/icM7RguT82DHZ+9/CTv87KKJI5x5m/kHvgPQA9yT8Qq7f14C6HP6nmGxD78r+/AVPlFiZ9kr+NK4hJPEi7P82+pbWGVm+/k2lkaYCTxb+mU1zwM9GGv0iiA7j/3cE/fWXAqbdJyb8EWJ1vUIa1v8cX5dmgCqi/ZsPrwgg8oj9F1Qi1oNtyv39GgUvKJLO/Cjc5s9HruT+uqclN54/Ov22DkaQ6a5Q/m1C/P2PqmL9DK6Jf9z+8v/yXURN297K/9AwVBLbtkD/2Ui8oLsycP2ZzkKziRcI/mIYnUPYopz+sUTTDgRi3P958E1w2pJ4/Jkn1GnPCdD9luOXR47zBP410m8VOKo6/g6uw2nmBkz9MPN6hZnytv4SlOPvzBZe/wb0KXNc5kr/nE37ZTwimP7cI4gm3zII/P5k1AS6hzL9hUL9SLXegv4GdQGOYnJW/2j+7Y/PVjr9LkBxsiXHEvwiM682zS7Y/4ik5YXGMsz8b+6v1e8BwP795EkAaTL2/FVG8w6Kjxj+LhmVF/DnCv7pncvZr5dW/PFKkCpxDgb/XuQAHWKR5v9JWwCdu7bu/cu9O1lGUgb9wwChmOuXAv0wynuRjmom/z2nPAlxPbT+9vTs30HCFP5S4OSxPhae/yYuFBcfPh7/YQmMlmyuLv/6TY4I3P6I/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzgzNDk3NjAwcQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM4MzQ5NzYwMHEBYS4CAAAAAAAAAIRXj/B6A8s/VP2WWYNctT8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    7,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -0.5067347583883278,
                        1.306924950138639,
                        -3.098712759762627,
                        2.724975034996628,
                        3.3173262043286553,
                        0.8135192853286329,
                        0.06840624150271384
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7
                ],
                "values": [
                    -0.5067347583883278,
                    1.306924950138639,
                    -3.098712759762627,
                    2.724975034996628,
                    3.3173262043286553,
                    0.8135192853286329,
                    0.06840624150271384
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 50
    }
}