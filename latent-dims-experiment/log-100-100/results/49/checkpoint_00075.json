{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        7,
                        7
                    ],
                    "values": "eJwBiAF3/qebkQ3CLPA/UMfukoTAkT8l4G9jC+ShPwYXuWTn1ZW/eXl7wiAwpj837m8SvIaJP/q3MKS3x5C/nPDPL4BcpD+jKNLYnLPvP6rxktiG4JW/3oeZgkidbj8YWnxX0HCiv1WvI1Yn7Ky/SkOxs/Lsrb+m3UnC7GDCv9olujO+oqu/9k490Tq07j8tIPdGaq6uP0iYW+ZBlJ2/PvuSK1Ziqb9Ld847uOKAv0+nmEkkGbq/nJ3qpaN8pb+ScpH5E0CQPxwGdu/G3e4/QavPbufLs7+HLmktCWSXP0dkIg7zmaY/g+4Nnn5wgz8r2QbXNBuLPxRrgroLqpk/9OezWocujr9MlyLp76TuP2uxqcJoJJC/S2kQI540rr8BAd8pSpqxP/OCm0W/rXY/xC0mvyQJm7/TuYlJVA18vzYeRwgGOqe/yFNe5Zfj7j+UIM/hnUmjv9mGLhcml6w/2JUFWan7qT89Uc41/1W0PzM4nn3F2qu/4FvW+38wpz8mygIgtqetPwIlfydlsu8/7cDJMQ=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "strides": [
                    8,
                    56
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.0006283692522098894,
                    4.501058703284003e-05,
                    0.0002642799643486607,
                    4.7604636903113996e-05,
                    0.0005955269763948316,
                    0.0001889609216888715,
                    0.0003049178940601197
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    4.3733481905292136e-05,
                    2.129877398624558e-05
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "values": "eJxj0HlQ9dvN2J6BYVMKm/vrfQwC5hEOohr2DAlSmjrqqvsZLiy/GPTQaD+DwwKpK9y89gxnHvSd5RbeD1fPMK1/8+7PdgwMekY1334B+RckX/N9APL3REaLPbBjaKjJMyoEyd9uOC5+BmE+XL1RhM41PXuGho6Hh1apAc3VuceXbAikz+v8LecEuqNn4uFy0f1w98DMh6lvKNt+a5kJUL/TEbYP1kDa3pw/mtmeYUvyH91+A3u4+2HugZkPVx+cffefK8j/jkXyTPYMEcb+UY3A8ID5F+5+qHtg5sPUF9y8zbpVAcj3ffeU8Y4dInyg/oW5H+YemPlQ9Q5ZOiuX3TayBwCxVJCU"
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            7
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            7,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzk3NTk5Nzc2cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM5NzU5OTc3NnEBYS4yAAAAAAAAAJaGd/JBnMG/f0lmjNtC0j8UvWtMb6H6vwIV6XpFkeA/bK4qEghJ0b/dpaN2pyrqv4AU0+q+h+K/ySm0aZfL6z/pTuM0AT7wPwxqgTiC7Pw/7BMaLBAEAUBLTvvb9bf/v2iAzh9y+di/9AUHQeskAsAQal30qM3yP1PaarFCGf2/zyra0OVQ9D899WBHNYLYP2JWmgxmAvE/pXgs+uB997/KjKjFL0vGvyVPaEO85fo/eYWNzJcp0r8L6ojqZpP2PyK/xatYk/i/8S2PeqJM6L/oVovPcmPCP4rgndrkTeu/PMbFxul46r+RpRv+ZDbovxHUBNj6SfW/Dt1OIIUI+7/Mlt2fCDvLvwrSyYXnp98/6DpiSgSuxT/jlTs1PJfjP3PuVY67rM4/fydb3+sF7b+ZxN5AHXjxP6mJMUaHC30/jp9a1b6r7z9ITXUbXDP1v5NINkDvnAFAvSZg+mA47D/2uaPKuHjzv2H6wL62/Li/4JKirL+kzr8/Cu9PlszlPzfO6b8KkeO/U3Fb35W6xT8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzgwMjkwMDQ4cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM4MDI5MDA0OHEBYS5kAAAAAAAAAMoOeMvqeta/a5LbFY8T1b+p7AbZ+m2hP+5yXum8s5o/NyY9XE01qr+bhqmT74ikv2g+OjkpQLi/pL1MslNCdj8SGyt9QavLvynC7HMastA/q41bHDvVzT+PhWy89NSGP0USxJvs5qo/fvQXyzmIyj9Q1w8Z4/rPv1uRfwhlN7c/zb2vm+TWq79oqLw7FuNzv+CSOj5s2Ju/sMF+AieclT+tvyLufHPJv6gmYBVrAs6/X7ZVzICBkz9quNZw3AqUv6W9b/KQf9A/Q/AQBY4iuL/HSz+izWfIPy6szF7KINW/CaVuAsczdD/ve1l4wSdCv7dYGR3G28c/ezWLtEaQxT/2xFjIm5mjvxV4o25Ebpu/KgT9C3lbwz/DRDOKNOmwv9cklfNiv6m/EwZhrAuxtz9F3g0KWrKdvzQrINZ8T5e/TTtFw7KkxT/hMk0u6mhyPyf/XDa1rcK/buWkzImskb8SKYVoyHa2P9baVGLHh4g/C7IzxIwRxr8vr0FzkuaSvyjR9+kLvcM/Fl1k6j9Gub+Q2soJdAa2v9Emfk2wOrK/UDODfSRidT/y398wkRdsv+3NnZiiZli/WUm8lf+etz88mzPtv+rQvxtVpt1yZGa/QpOatrp4hL8VMNzo7nfAvx+a8oRcp7e/R8Niu/mgjD+hHgYGNjdwP+ugR1WGpLs/FQwqkKj9sT/bZiI97VC2P4BZZglFYEM/ouf//oEvk7//BEOBlWSgP6nDMOroO3m/hwMzYELfk7/LDtlU6Zmrv274VQnK6Wu/uNOz1k0waT+XcXpZUuqaP2YS35RLNoK/B8bh+zTwzr/Xs9pOiF2Mv33iYDHO+RA/BxGj8Egthr9hj5csGsPNv7HqLXOO+bM/Rrj2expyqD+RKI79a+GUP6sDhrXT98C/ENWufG80xj8fRy1bCGa/v9J5O6LhqOC/1YJ40Boin7/rRPm01lR9P6KCH/qHXcG/8UEvMNvfkD8Y2QxHT/S/vzg0K+jzOoE/2qnzVHR8mb+ZckMnHOmBv3h4cmtFQpy/k1wVuyT1ez+E3otUtTmgvw4TYGsGNZI/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg0NDg4OTYwcQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM4NDQ4ODk2MHEBYS4CAAAAAAAAAHHKHRkvjss/jsV755yssD8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    7,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -0.29473876764505574,
                        1.284741379515024,
                        -2.9879906251468524,
                        2.4551975579055894,
                        2.930411392320662,
                        0.7501852001959852,
                        -0.1325268166106334
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7
                ],
                "values": [
                    -0.29473876764505574,
                    1.284741379515024,
                    -2.9879906251468524,
                    2.4551975579055894,
                    2.930411392320662,
                    0.7501852001959852,
                    -0.1325268166106334
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 75
    }
}