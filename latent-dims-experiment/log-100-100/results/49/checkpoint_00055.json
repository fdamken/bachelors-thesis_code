{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        7,
                        7
                    ],
                    "values": "eJwBiAF3/pXcFsjyxO4/eSmEgpAfhz/p9/kS7QSRP7QbaOi8VYm/uIjAFQJTlD+8Yyi/ZAlxvzIPFhP4A6C/1ZnUuuP0wD91zxR2FAXwPzRrI7N3E2i/GmHxGqKRgL+/G2QfAPOKvzp/BZrpVqK/4P58cs23pb8fU8AXg+jBv2JckkBNjqq/XDHIRyIj7z8fs+m7Ig+yP/VDQ46ARq+/b3B8C3ysrb+J/L6q8oCEvztrwu5u/r6/JwvKmWdXpr8zZpf/rZxMvxCe2FN1bO8/duHarcSWub96cPfsdFmFP1wkmPACrJ4/m60qpVGnmz+/LqmRjxiOP80C6RdIaJw/JQmBYyesdL9H2Z3o8ZPtP0QJQQvAM4m/BCZ2JTakp79yZSin0NCHP6GQjKSHu34/P8i1uT/Nkr9P9nMyjO1ov5C5C3ngsKi/3OXyc/7o7j8zbEG2yTGhv2MYntxyS7A/srbRqh6Mpz+N7Q0TPNysP9Q7D7UdW6q/GqbgSh4UoT+j8ecDOoqrP451TEZlj+8/XDvICw=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "strides": [
                    8,
                    56
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.0017282592511554992,
                    0.0001451187225750423,
                    0.0009178910705415405,
                    0.000321137835497891,
                    0.0029132926350090324,
                    0.0008276998419105238,
                    0.0008458890073951604
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    5.1128077755493e-05,
                    2.810281675948545e-05
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "values": "eJxjuM7cFSyXYM/gMPXHqh2q+xkU9ETk0n3tGX5k7dsS5rifIaOjKzwmeD9DiX1t0VxTewaLzJUx6UL74eoZloQ+my5jz8Bgd4TTU2U/Q4OyAPc0QSD/Ah8vC589QwOf2e21YvYMBpKCH5b/3gc3H6b+QfKXLtlAoDo9I4FvFkD9Onbcxq77GRLaVVTKbe0ZAuwb/wex7Ye7B2Y+TD2DgbGCEUj/7ClNnGFAcws4mFOk7Bn8NN6VlfnYw90Pdw/UfLh6FsmIZ0D/M9S8eeXNZc/g/zx1p36APdy/MPfD3AMzH6Y+5mf+zBKgPQ1MBz7Kn98HDx+Yf2Huh7kHZj5U/Yqiy4ECGQH2AMqMhGw="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            7
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            7,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg0OTE3MTg0cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4NDkxNzE4NHEBYS4yAAAAAAAAAHUmjcj4dM6/pGNZ2UlK0D8gCMI9kzz7v/TguzfnbeA/T0F9/2P51L++0LeId3Xov7u83HAd2+K/1EW/iJs87D94Yrj4y2XtPzOEa6pJHPs/94g7CmgWAUAVhlWQOK3/v+bWO/zxwNi/SuCrFIIRAsBFXqnuHbzxP3iQ5A927Pm/GV+kcdeV9D+OMymVJlvYP19y9IX9ivA/9ZJvaxkd979Q7ogeSqfPvzD0owx/Kvg/svluVklR1L+Ua5MfJKf2Pz2DD1OQcve/cRTsN5wn3b8T66e2POC4vyf/lJa7u+q/o+x6T3Jf6r93A7c3oSHpv+yth493RvW/dIwWxFmU+b9mUaZTc5jXv+58KdpZYd8/aVI8dgIstz97N9BpTt/iP+vLM0D/hs4/MVCqgcfK7L8XvgTmGFHxP8uFymOPWpa/HdT8qICh6z9UzvJFEPf1v/usuBOnsQBAe5H3cSVh6z93WO01IWX1v7xgNCEcybG/FSIK3ZH4zL/Hif8gmCnmP6GwsJlls+G/MqMrupKjtD8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg3Mjg4MzIwcQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM4NzI4ODMyMHEBYS5kAAAAAAAAAHnM883s6tO/60RjnLix1L+sRzOl8LijP3Ty5HY2m2o/Ki4G5Awetb/coD045DCzvx325+Hn4K2/wXKjWT9/S7/M2ZEm1t3Jv55q2pRLS9A/JjpQXp0HzT9aSuqondOHP06+kQH6KqE/H8dgfTfZwT8JN+z4EB3NvyhRzlgkCbQ/e2HAqcSXtb8VvCpeYHSUPyG2QVzvMr+/jLBq7ijRkz+Pi0stQ5PLvwrOQVG+jcu/6GNFhVtGkD9GxCsSiFKLv/iu5YNPt8w/a46YbCvVub8a7O5mTrfHPw3Q0hH8udS/j7n2nDrecL+o4nFHfYePPxltKMdp3s0/WEJBAXqpxD/G6iFfpumwvwvO1lWgtJC/qxiUJFaRwj842HEFSs6Uv0YGOdiyjqK/XiPZYU+juz/kLAmobyCXv6K0vbUhcIG/ZC8fOTMzyT8w7jYNYpFRPwpszsVAdMC/x8WyC1OQpL/yfnZpD7C7P29MLp3xzXQ/2APhSoBQxb/mUyf6wzCVv9EyVQFVhMI/hK3M9VKox7+u/S78df20v0mQF6UG66e/SpL8r3mZkj9I6Uu/xXxtv3n0Lhbmt66/otW0oVlUuT/4kOqhBpfQv0amCfKlqWo/yUlOMn4pl7+FNVWMGIO9vziVBECXOrS/4+HYGvsNhj/PsJbfZXiPP7i7uKFTH8E/G7kx8Jxzqj9xmzWlBHi2P4UwZPyfn5U/j43IqTdGRL+jxjVx9SjBP9xKmImmBmc/ANWLAq7+jj8/cLYQLmesv/ucWaBne12/gajsy7PlY780fD04TICiP2Mgns5cZ3E/bKIUO3k/zb+QojT21eGbvwFF8bOyY4S/BC0ak8jEcD9VTb6iGfvFvzzW6WP9s7Q/9pHFth5FtD9W32EUkL00PwHPumuljL6/hk1uN1OPxz+QLxxHUUnBvwUSjn17gtm/+h/M9cmkZ7+YprzQjG6Xv34WX5tMsL2/KpE8ClwPmT9VKMLIfafAvysEp0gnCYa/sx2PdBIVSD/1ZIiu8AN1v3NVOfn076S/SXVrrxuWjb9UfyOTQnqSv7ql7uYwcZE/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzgwMjI2NDAwcQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM4MDIyNjQwMHEBYS4CAAAAAAAAADrF+FqRwMo/7+bjLGIZtD8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    7,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -0.4689858401390989,
                        1.3028410364729852,
                        -3.096268561008569,
                        2.691684717191713,
                        3.2616729375891502,
                        0.7802088626741144,
                        0.046489216528505795
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7
                ],
                "values": [
                    -0.4689858401390989,
                    1.3028410364729852,
                    -3.096268561008569,
                    2.691684717191713,
                    3.2616729375891502,
                    0.7802088626741144,
                    0.046489216528505795
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 55
    }
}