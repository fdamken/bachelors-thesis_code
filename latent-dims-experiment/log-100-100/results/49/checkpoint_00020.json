{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        7,
                        7
                    ],
                    "values": "eJwBiAF3/ug+n6CbYO8/fqR46sm3kz+W/WZgjUFrP3buixRl1YS/9DynhmzioD9alW7uce6av1O47At6RaW/kqizrGbruD/RBYrrTQPwP+aOG0nqEn2/AQAHNjl0cD9msgOTba6fvzlYvmEMY6W/ZuyV9wzqr79SW6NOi2q5v9JLdD0+bKi/6RAVxcny7j8EolAxd4OoP+BWc5pZ3nW/ktCWTy9toL8jgZ6ZLemRP6AfHLvieaS/I0kaizylkr/3B/Mo/zqLv/4M20kTl+4/vd9RPRY1hL+P9+wrCbyDP9qKIEZbCpg/zIna6z+1lT+njvhoL1BuP4I3gGWA1WA/HcwVCCrxeb/8aesXZNXtP86+mn1ijH+/Mfr/TBshkb8tudgmIEekPw4FLffrEJc/Zuo4/VlwZr+g+7sC5aeYvy7rJZuhnlY/OMPshAk17j9p2/CsR9yDP6spixnaGqM/yb+CPoQUoz/6t9UKd+KdP1WhAqAVH5m/P5gTRsrpl7/Zu2/QB7OhP7ItnOOvt+4/lYLICA=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "strides": [
                    8,
                    56
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.13350511033561913,
                    0.017986503125817517,
                    0.0767926211085291,
                    0.15738642618285606,
                    0.35700685808095983,
                    0.21398963222848166,
                    0.07457515613000605
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.0010855662241538084,
                    0.0005748791844231959
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "values": "eJz74c7C9clos33AqhbF74cW7mdgOLFlguXrfQwxsZs1dKfun+CzZ2KZwqb9DCWWhl/lJ+7f8TNXbevyqfth6qNOtC0tdz5kzzCVKfW+2Er7A7oh17R+rLdn8DBTnZKTul/BP9CmnWXCfonbcQW3JRcgzIeqb/Cv6Qvs3G7PsEMtJP9d636GqKpmjY/T7BseWDD7Fk2wb1gatP7n3O79MPfAzYeqNyh8HRySf8GegY99/dG7G+0b9ty6U1M4f39NXpHmqUcH7OHuh7oHZj5cvcE9Rp2NQPezKS4t16m1Zzht2nbh9j57mH9h7oe7B2o+TP2Lm28OhgvusI8RFGx59mQDPHxg/oW5H+YemPkw9THpAdyhM0/ZAwCD/bj1"
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            7
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            7,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzgzMzUwMzM2cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4MzM1MDMzNnEBYS4yAAAAAAAAAOGOupNQ6+e/FmrpxceNkD8SmjAN1fz0v+aUPbcAUOU/RtiqivCV2b+vE5njLbLiv3HoAl4bmOO/HcI5fB+96T92ByBkW7rnP5SaMqm+pds/lHW4xcuN7z9hElFy26v/v17Qkul5Sdi/kxLyF7DU/r+qdn24SZLwPxN4hSMmxPS/i6a/53vw8j+P8VyFW8nbP9HsHjnxzu4/tiJckkEj9r8sVv71xYPVv0TQ2NhjTvM/0k7r1Txw0L8kwfOZU8T1P0WPg338KPS/y03IhG3U7b8oFaemhhS1v+e1FEy7McO/IkmJto/G57+BEPLhnADov3L6uztEUvG/WhR61pdj+L9UMh7ChSvQvykCH0u6C9s/F2FoWOEGpb/i+SWdcyfgP4SyV2Q6CNI/6+D5HB7N5b8HYEWu57ruP0yBnoZKf8G/SpaasSkJ4D+Ofs4Av3r0v4KxwBbocvw/rI/q2fTd5z8em9J/HB7yv3PoKA8ZerW/s3VLM+xpub/yy3ATfIXnP7SVIp/N79m/AVOi+6Fzsb8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzk0ODMyMDY0cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM5NDgzMjA2NHEBYS5kAAAAAAAAAKqYnoxo6sS/uJLqsgaKzb8qyWArpSGyPx6bWcQc+LM/AmlUxTllxr8n3fM655K1vzk3INxj/Hg/15uTUdumub/SuGPoyZzIv+TAr+apXs4/r36Vg2bMyj8Vbx8x+9zFP3h6ARDBr4g/Fo4doIZBsD+8p0LM86LGv3EeHXLey5U/y4tm0yZ+s7+/q2TZs9Ohv2Djs3Zvq56/nLn6nqSZsj9bvHT7TGTDvxAjiPI3lca/UKpUk95Csj+jmPKttg6Dv+fcThEtCcY/wiva7Riqv7+KnjsIdKjFP4rT9J4MotO/XNa5ADpQnz+cKGCWzfKbPyFL1aVBFcw/OzPscThQuz/EpR4h5newv1Dul9Vl6K2/10C2pJnywT8zhcvn74yzv2NY0Clf3aS/4YSQwj+Xe78O4pl/CbzGv+hm387e/qC//VB8cmZMyD+yh1wUqC+1PwBiOIPrjre/PqryMAwDs7+ms/Sr2ri9P6+mA7qPrKe/Jxchl3xHw7+sWjz7RNOkP4kxEvgKMrw/Vrg7EXKkw7/fGKfkm/SYv3YL0lLJW4G/8VKFE6sMsz96DHzvYLOpv2M2yAHir4a/bIAW2d0Duz8s3h64yuXBvy1TlaDjncQ/XXG18C+1n7+G4QvSvqK9v+Cqm8nhWLS/8u/+ASGkrj/7UaGgtPyIPwpWhFxG9sE/8FIDZp15pT9K4Pj6Ye65P9XNP1cZ5mk/vSNUDSawyD/IatbW8DWrP/VyUxYAirS/lqTLOm18sD9g3vTTJBqxv8YsUwZzhKa/i1AWEG8JoL+uaJDxRTevP/HsmpdOVoG/ilSTQASDzb8EuTCkKvGav572fnsbOKq/1hRK2V0FlL+so9P93CXFvyTUNyAVPcA/yUB5sTaNsj+U0dBfTd+wv8Q7kaXc+rS/e8KA5aPwwj/mQ0Z7Rc7Dv/LXEE9LlL2/TfqTurtcQL+53gqXwnuMv0LkYGj71ba/B/Fbu18FmL9wFIOfn0bEv9/wA0QmjMC/lvT4iVaHpD8/MoLxXvuiP/lwU1iNHqW/EbzVBIsdpb+2DRAz0r1sP3fier3zn6w/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc5MjE2MTkycQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM3OTIxNjE5MnEBYS4CAAAAAAAAAB49UleHhMg/MlfCjIP5sz8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    7,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -0.476401711124156,
                        0.3985553302238536,
                        -3.281124081764176,
                        1.920147081220201,
                        3.6651234646662942,
                        0.8447690436586716,
                        0.39676327897656594
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7
                ],
                "values": [
                    -0.476401711124156,
                    0.3985553302238536,
                    -3.281124081764176,
                    1.920147081220201,
                    3.6651234646662942,
                    0.8447690436586716,
                    0.39676327897656594
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 20
    }
}