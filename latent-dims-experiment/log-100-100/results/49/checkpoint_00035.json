{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        7,
                        7
                    ],
                    "values": "eJwBiAF3/jndyxMule8/4KZfyT7Pmj81q2SsxO1ev+5rFuFQUaC/KrOGCbTdmj9m6/NAgDKiv/vWzqMm7ai/ULiX/Mb1tz/q2CDTfIrvP2EEinx4gHY/nnG7FPFNoT+kLsUQkrShv/Myuux9fZW/5jD8D8LGpL/8IeuDL0K+v02uw5CZQaS/kPj06hDz7j/5wVnXy3itP+hL2DjyTpq/tCNt5eWpq7+rpOdIanqBP/yMkscWhq6/KTPO0agqkb/kweXSMwybv1PhiozILe4/RS/k9Zt9hr+us+U8PdaPP0DuCUGLXKI/GGuJxENMkj/J4bKzWW6CP2tdJQR6co0/J+YBEcA6Qb8GDNWE2G3tP1L5I+34B4m/sV0XydIDmb+h2SPjyNyiP6zB/iEiMZY/JmBNgC7Hkr8iPYXizTucv8EWGTxJSHc/h9UdiQAv7z/0jsoXbtNnP96JlYu8kKo/SA2kf9aEpD8et+lp+/ikP1nRLlFiAKS/xMT+NiPIk7/WSk08mMKWPzY2TJdrjO4/0hDRzA=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "strides": [
                    8,
                    56
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.009933563849524594,
                    0.001409922895486224,
                    0.00750891779027082,
                    0.010902072309801008,
                    0.03826148638866713,
                    0.009298621837265026,
                    0.006575378292300977
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.00019836302140902262,
                    0.00017603375832948132
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "values": "eJw7kCl8aoZHhz3Dh4wcdQV9ewax0r33l1TYMyxZz/riUuJ+hvdpMdVsLfsZ3JtnTD+UaM+w2fTlxrjM/XD1L9WdzVwb7RkYZnmwFJnYMySohO30Tgby2duEj5XsZyhRuvE5JWk/w3yNd671Kfvh5sPUX3iSuuBXC1Cf0O+uqAh7BoVE2QefsvcztP3WjLjQYM9gkn5ad3HCfrh7YObD1Btx7vIUnARUJ9XP4AD0h4XVBpbvRfYNbVf/PL0L5MPcD3MPzHyY+rJNs+J5p9kzaPh8f/8i0b4hd560lXi/Pdy/MPfD3AM1H6beoUUtdN+sCfYNKkxyV6vT98PDB+ZfqPth7oGZD1M/o/T/zD82E+0BEp2hdA=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzgwNDI2NDY0cQJYAwAAAGNwdXEDTV4BTnRxBFEugAJdcQBYCgAAADEzODA0MjY0NjRxAWEuXgEAAAAAAAAoFkPjcOjFPx3TQDPyvfa/K9pZC2H/27/F39DpSlLzvzBWMdTU/aA/7b8odOJVpT/7EYO02BDIP/bEX1tWNM8/MuxT6jPC77+THx9ka+Piv441Loj7gre/9Ifzn36Exb818ljchWngP612TTWMrsE/+6Z9BxJLsr+HquAfR+7av3v9nZB3lr8/IUHvEv60q78PKhNr+2W5Py/pijFnSpm/4eP9ReR54r+a9NllsirBP9uBH8CboIg/ijH9EnWl1D9tvvH6UfLkP9ZKFVOF0J6/Utk5LcRE4z/9kmiQ5D7mv8gDDYsMvb2/mBPtEv/X7L8PWaR5hZDFv7kfWNUpNLS/k7lDQFizxr+vmgAFeOnDP/FmKoIJrcE/C8Z7hY5Mnz/LxUGrT4bev/sf09Ira9Y/hkH5BuDR4D98NhzuU+ziP4GFODPkUuy/BaH5IE4P5b/xO1iBhtLTvwoW2F+OPuq/h338YwNR3j9Vz8aCy2GbP/irM5gDuNG/rpddTmVXwb+0iWr+WPXVv5jHF+1Hico/KNqMA4IQ3j/N4gBTJgHMv3bsVHxugMe/HHRyeJIrwT+sZSOnONbEP/y3K/GBJNI/PuPWCHfR27/hp0jkBanwP6GTyxI9xss/n3LYF0qz1793icyBM7DQv4Yfm8FeG+m/8sOQIdZ02j/dq4Q6poT7P9XdHS8eidg/ZCPyJZcF6L8tuhHJ2W2+v12BCQMpzQBAMkRPr6uP2z+beXePO5vMv4Hi3WP8JPQ/89yWMaom4z83uakWK+Xjv35qCyR5LLC/OeDuAnCE/T+AM3+pNM2hv1hz09BnDrE/FBPEK5XPzD8CLa0xLUexP3a0UTmwL9I/GdtR8iiUiD//8dA2e4OqP578Mlimt3+/hUqpqcco1794M8ow5AnaPyy8OfJVQe8/u5Y7Hcviyb/A9wDEhalrP2HqAnS0Mae/6RoGf+HJ27/rFbJGUznSP5R0LhpsV9o/vumlA3Aw5L8dfHx48KvSP0WtNzm8/cy/1TAWDOv0lD8pyZYB/RfUv6kyfFpTRda/McVFZk6isT+D3ZksYNjwP0s1qwGjoKS/11z8T/izmb9U3LIehby1v/mXajyIxcI/AEQfL8IL3z8Xvm2oZwPJP8IY/vvSS/C/ktI4Im0AxD+91P8Ur7HkPz7j2s68KtM/q6EuDfb2v79Hb315JAHjv7Wldze4u86/Lb3/uCu5yb+MG/4AwkzYvyYNcIpF892/rtgm7yd7xj/nW9YL42/KP8ir8+rc89k/xHkIdyWlyD8/I/EMZUbkP+niW9Xe09C/Gac0/PK+078NQzLCM+qxP01FSbzgqqQ/v/6ZDHvhzz/A6FlDnZ+8P/gOAkwrNOE/2GNLVSYLwr/BQrpQYP/hv/Xng4iuz8U/oSFtXrMawT/KPNVoI4PRP+ms1PcsNMK/PugFIgLYw78sh99Q6inSP7QrV6eaRcY/pklVRRXGnr/4Htvi+gK9v6apJ9c+3di/prozqSjL2L+gaRKF923wv2BiKY6ohbY/H/GhTtihxb/yrwS9pGXHv9FvWIsxVMI/XAFCyBLFzz9f2bFMcsW3v3JuCiJx7OA/35SJ4xqKsj+AjDBd9emxv/LrffjyJMK/R8McVSZg5T9RxGTyBqjQPwhpD3yQg9G/rJ+WkRru0j/NBbxvVg/FP+KFClVbdNY/FRzX7KsvwD/xZGH16XvHv9J4rHDV3su/AgR/neWOyz/WgnNsUlrev1Z0GASSm7c/a5NaJmMh6j+4ynyBWWPaP3MzgoUAJMs/7xwQfI9t1T/u8ozJRZGkP0gHMxhuou6/rD7iODhXwL/8S8bGXSfUP+B1k4LfTMQ/Y27o2d/0vL/NvclCzBLgv3LlAgRkusA/0CjdZO2E7b/oGT6Wbh6svyINhYagJfQ/BkSm1XsdxD9IsLVHCKrPvymerWeZwPi/AHlol0g+8D8svBAqV36hv6xu32fsD8O/XOry45xTvr8anjGDjVThP379Kv3vJ96/8ujOPyqpxz8OvFi9X+btv9sGenOoiNY/ILd8HtJx5D8S50t/pXfUv/JB5FedQe2/ApO8xmR+mL8g2pni/sLYv/VqY3ePNti/RL8maNCP178gs+eabT/dPzZUr6ts3+C/T3TQN3xMtL+0xs3+6qC2v6o8wKaZeN6/9l+JdPQ21r+oVpsOICe/P9HlRd9czdE/CMLypPqYpT98C0KD0IbRP7jt0zo2UNa/9P13oXGQwb9FXGtxysDFP/PW0JOi8/G/ztLt+pfisr96XpvCmCDRP0McB5O3LJG/Qgn7C1oGe7+31eFnbxfTv96YkvcYxVG/+r1Ion7h8L/11AWxWT6kv8I6Bh9bWcE/M7qt2IHbxT8UVMkZKf+bP6WiVTru+uC/hf9iEqScs78bHnIH/ajXvyoWz5O43+w/UUy5zNjQ2b+KtAw4TdiwPxTd9Kc6JsU/vhMPIZMHzT/SP1ze/am+v1HkFdcD2Oq/k/1p0JgtwD/6UvpH+kW0P8n9q1ua8ME/E2qy4ox+yb8ICuSpUYLOP1mS7IGhG5c/ZlCS4F5B5D+6DZRLxATwv3pzFA0X/mq/xSXh2GE8aL8jJ7tfVBa7v2ebs3mTNYO/USi5SQxNnb95Z7qLFJfxP6cdLnET2tS/SWMZh4R74L+s4ZjU2DPEPw1Z0Px4+7Q/0DI9EV152T8Ovv8T4FnSv7X6EceTgfC/W5nuVWpvzb/VefgHCmbYP8CHLDnWC8K/cko2otyOoD/UkJfkxyjQvzwzIUJ95NW/Nm9n+tJJ0b+tS1TF2s3JP3bMLAH4iOo/x/0WhlVZ2r+t1Wfdfkiwv0XBj3wG6Ni/Nv0Ju0e7rL92lkxvPy3Vv+u8rwyrd9u/AOTgLY/Hwr8ACtRMeiifP+YDqAAwCc0/BW4dDcdo2D8Vgjp6Db7Rv8svktlOaN6/q2nS093/3b9a7QxVrADePxeH1xH9W9C/t9WcPO0lrD/68Pgl8NO3PwZZB5tzIcY/5qDjAddN87+tANrMjE/cvyNZhmS/FdE/CGWW20OEuT/JSDgQFX7TP3g6PRg3x6Q/k7RLMVfXoD+tW6tcxtyuv5GyTijo6MS/xzcNNnMJ37+A8B0L/Be7P0HAEC9AWu+/gPVaIz9q4j96Siy2NEKzvyNMebF5gt8/PGddgiXH3T8WbXlT0GDCP7GFrnoo4ro/PLte5p6I0D/uMtI356vUP0Myp7O3Cdm/ch0DlCsEt78cgCH0Fd/Jv9C0YZi4oXO/EDu5Q3Fbs79b4gUdZ/mnP8NkWsrCNaq/nacV59V11L9trhkHd7LWv0vsBTeLzO2/8Gob9Z+2779oXdotNMbTP9Wgn5SdNZi/+ONPTPPE07+hzsZabv7QP8iFbYc8j7C/GAvk4Q0L1j/J2XVvHfTSPwZ8S9NMOtE/pJ9OyoKQ4z/d4akMZYjLv08zp5Qd8Oe/f8WR1aSV7D9NlCPTkFfbP3eZJy73+oS/kfaap0eC3b8kT140uWTTP6Cd1pvkUOO/qyFH4iIK3L+gwguA7ovZP2BGZtkxI9I/468Yl4el5T+wSLdQpXrqP6rOZH7IoKu/kZlFiGMP0j+X5kFle5HYP5rVem4SrPe/pd1CBrtB0785ilpemY/OP69xesVYoaQ/LGwPgVCcwD/OZrYQbeB2P/vqI9IfjaM/bwVbFvQK4b8xYVIokV7OvyxtBWeIc9K/KvdmGqFypz/xhV80JybOPzZWfoDSTd4/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            7
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            7,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzgzNzI2MTEycQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4MzcyNjExMnEBYS4yAAAAAAAAAIEvMWpQ9eC/hd+1J8WRyT/mndXywhn4v1Gm4OZcRuQ/gZDaOZbY17++n7ekbPnnv73dorRHj+S/L5wrAj5b7D9Emku4TyXrP4aeGeYD7vM/js42E/XU+T8V1JFL6h4AwLlGfZetENm/iJpt8gpqAcByEg8+DNjxP76bQfa8JPe//1/BwywT9D/YCY26CjHcP0Eh9N0TIvA/h6KoXEcE9796KOywsHTSv7qSRtNwfvY/H4DdgAzG1L8T6obq7Zb3P+C2AafoTPa/FSshxE8T8r+0h6V20V+hv2ALZtStl+G/fLqVILfR7L9A4Svvc9Tov7xAu+4FIfS/AOV59fV6+b8zGN0cpH7jv2dEI0iLj98/NyL9Oosudr9N3/FIypHgP+hU78vjpNE/QK9QlBxi6L9bKRZszEvxP5oyh+i/t8K/XSo9M/cH5z9/XM+XKJP1v842DCEq6P4/GLsWiKEr6z8WBzPfe37yv5GJP8+aVqm/NHQptzcigr9WyATerXbjP/g0Tna1aeG/XntQNfTuer8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg3MjA3NTIwcQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM4NzIwNzUyMHEBYS5kAAAAAAAAAJkLwolBddK/ZkXUMXVN1b/SpBjlGFW4P3bcu3Yn6KY/NhADl7nov7+GojIln/SyvzPsi8ybGUy/A4I9Phbwob+bgJqAbKHKv9Ioe0ggaNA/4ZqOxUZBzT+cLp20NpayP3B7VmMMuJ4/NThx2kTatj+T/OmwY2rJvxYB7Z4Xsqs/4ann3ZVUur+5Z13A15pcP1gpB/Nm5qK/Y6qpawNpsz+UxTQTebTJvxUqlJoxvMi/9JCR2rOvoz/5d3LDef6kv+1inHY+e8k/lnHq9saMub/+OtvYzPrHP2NC3wjR1tS/1K7WzS/Dij+6q3tKlxWUP9a1fqdPX84/j76ehWNdwT/g36au0e20v8wNiuSNSoi/LvDkrefTwj8FGSK3mJGxv3Py6qs4cZ6/PWh0jeWbtD+ffK64IXLBv+88SUiLH5m/nc0/vVgKyD8WkCsHVL2mPwgHRklDQLy/mK/sr18cfb9pHWwGn5y4P5sKM7aqmnq/iJ+ULuaZxb/j7Y4QEN2OP2jvqY+ixr8/xIABEprww79roYUdEZunv2U7Qc6isqa/fl4Xm3FwpT+M44pg01mWv46xnUSj47G/iSIH5DAOuz/e8zMcDim/vzEecDlylLU/1TnnjS/MoL8UC9HA7Uq5v8HXeHRsArC/yaHr8xxZkD+7fui8BPygP+5ndLl4c8I/VBtYZe1Opz8BsILRzNO1P67n14qHQJ4/QLZWxDhytT+4ZGmhp869P+Dj4a66CbW/gvUtDZyUqD/eraOq0G+qv/Fg1kv086W/GN/0Ov7GOz/FnqfXiamlPxY4Zy8+EZY/AKOHN8NPy78YPfNzP2Gmv2VcrsyqHpm/wEFiT3sMo78pMp7pFQDEvzBO7ALuOLg/3XyNP9n2sT+67q4C9GqYvzCIz5+Qc7q/8dvDF2K3wz+HWr6K/izDv0c6gKBoxMe/apXpVEHwgr+ecwbIDVyqv8BGPwphv7m//3efGY3Xo7+FUQbgbjnAv2EPf0pg5Jy/1/K80qmlbT8s0lrx/0+cP8gDzOtlY62/50AICuLopr9Bk1xSyGqUvySTsWDKK6k/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg0MTgzNTIwcQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM4NDE4MzUyMHEBYS4CAAAAAAAAAMJ3NcI6+so/T350+IxRuD8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    7,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -0.685239047300786,
                        1.2477193874911738,
                        -3.28387190272811,
                        2.995500593986483,
                        3.688440569004052,
                        0.7244831355244419,
                        0.3898731537329364
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7
                ],
                "values": [
                    -0.685239047300786,
                    1.2477193874911738,
                    -3.28387190272811,
                    2.995500593986483,
                    3.688440569004052,
                    0.7244831355244419,
                    0.3898731537329364
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 35
    }
}