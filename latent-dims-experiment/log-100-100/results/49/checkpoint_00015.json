{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        7,
                        7
                    ],
                    "values": "eJwBiAF3/vuYyY8OhO8/cnkrFIkZkj8KBVpt1gtxvyTF7WtoliA/YtU10I5Cmz9Qa8yvCzOYv7y7jOUL0KO/okAgW/XbtD+Pba6HuQTwP6TPSJUVQnE/ctPBanRuYD+88z3/BsSXPya5lmKI666/71Rn1V8Ks79amd56KEa3v+CIJXbcwaa/OScKP3+z7j9K9jTlJC+kP5x0vpYKtKC/0Su99Z+hfL/8oanDsYCTP5DlgOdPEaC/5sMQ/3R3lb9pYzyO1CeBvyUPlVDT8O4/O2YWgs0RiL+I+vcr6HyKP3npy2IS05U/HKpNP803kD/H3UF2qRRlP7dlTKXkGki/lkrM2UgfWb+wVMJBR4TuPxKBmaEd+H2/qCSea31Zkr8R/BrEP42cPzXdfkd/dZI/IBXqgELRYz+d2+URig6Kv2QUY9duYmg/xuzm02R77j9bxeQM0EZ3PyxhWw8iRKM/6W6oOMAToz/r1zoysqiXP5KMrfaMlpG/cNni5kkCfL/C0fW8kfmTP04wVDv44e4/gdnIjA=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "strides": [
                    8,
                    56
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.338925494836269,
                    0.04763320314684857,
                    0.18334472800983756,
                    0.36664795730035815,
                    0.6617890431004629,
                    0.5077995963717963,
                    0.18844132042285927
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.0022143424955811497,
                    0.0010745813425086794
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "values": "eJx7lO3bzlN+wH5ZZa39YZad+6PyEt84bppsP+3xDwdpnhX752+6X/6vedd+lt8nN/ulLNi/uPIMc5ZPwX6Y+kfcwR2zMi/ZR3zO1ps8Y529RlIy84PmjfYN7f917NiK9l/ovt7x0336/n9zpia6WmyAmw9Tb2Dya9VPkQv2DU1/TTvuztrPEOHDGfJjtr1CQ8uMN/3L9jP0GS/dqF62H+YeuPlQ9T1bizaYNF61V3DZtjjr2T77BXef/VtaPGH/gfxT9tM/HLSHuR/mHrj5UPUH9nz6NYv5jD1Dwv7Lr/432X9wDjFM/3XIHuZfmPth7oGZD1Nv0bbQJLTlkL2a2ucKNYXd8PCB+Rfmfph7YObD1H9JnvqU8cslewBJkdAM"
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            7
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            7,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkwNTEzNzI4cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM5MDUxMzcyOHEBYS4yAAAAAAAAAN4jzlXMHeq/H4P3DrSHqb+GIrk0Gi30v3UFAN2QKOU/n1Z/BSdY27/aujkgZNHhv5bYVyXTnuO/68/K0M296j926mOBY83lP4xMDk6BX9k/8noRJf8t8D+eBnQxN1n+v/6Ap41BA9i/tdTS1If6+78gZgEqiBvvP/Qrk9UOXfS/OOkrJ1Cz8T/xFKy9YpHcP9fKCN300O4/lfDI9gKo9L97sB5B3ljWv8oGNThDHvI/W8jK+vqzy79PwyQn7gX0P4BWIPwpD/O//JEcEiEg77/GH9Rb6pjAP77onPpCnca/MaMmVRIk5L/nGnT2L7fmvwC+dOn7QvC/9e/xKUUj+L+ZAV7w1+rNv2ZT98/E59g/0hE9L8WAnj+kP98oUsXeP+QH2tWcU9A/6ieqh09b5L/XNfmdaInsP4L7qExpsMe//ZbmF2b14z+OGnrTk7zzv9Yi4a5I2/s/ksvb12NY5j8/STLA7PDxv47uqF5WScG/HqhqFsurzr9ovDdAqBTnPz0ZAdCX+dS/MTNkvAeptr8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzk1OTg4OTI4cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM5NTk4ODkyOHEBYS5kAAAAAAAAAP3DfJjEJL6/jAmx6ZhSyr/A7KhPnySwP0pscAj+sbU/+lk9L8EAxb/E+7E3Kii5v7vNhIPFNWQ/4ACVGHQis7/XP1rEx4HHv8RhoixVXc0/49XBhzK+yT9aCezp3szEP+crd0yeqag/Od6v2GQ2qz8F/fpIpXjGv8GAT85wz4I/r2pOqqZttb8r78Vv5d2Ov5Jru1inHpa/MtR+NMzUxj+TyfGQhJfCv1BELgtVL8a/IpcOeMCtqD9ruk559m+Ev64hKwEw/MQ/eH1FP+X8wL9EMma2nLLEP6aKEcMGINO/g/y4N4GGoD/PzZRbsmyrP4X8USSh9Ms/rh4nQqQfuD/kJg0iRjWwvxzavYDKpLK/THVwhCxlwT8DMRAiXLyzv+ydDbki+Ji/Erd17qrNlL86anRc3wPGv06kbCFL16a/w5sBTAWLyD/YIGrgm9q4P6jTThHQCLa/cyETpahnur8cGU5Oysm8P0IAFt5Nl6G/ZwUGTPNGwr8/PnyE+0WlP8fQvYivaLo/GapgV8foxL8BnqUM0sCYv+lV3gG+fJG/YQKMhJLstD+UbhfNsmWnv4vQFnB6Jnq/YVDSLMuUvD8pcLmaCL3Cv+d0w4MWg8Q/x1Rn/iAXor+4sjbkNRC8v04nNUM/hbK/C2P3O6NKsz9Fzsasn2ibP8OxOxkREcI/IusDABZVrT8algEryze7P0oliwj4ylq/d5LyEYOzyj/KlihwgwupPy/2Tz9nT7W/vPKCcjhftj/ZDPRGbDmyv/leoFD0VKm/m97soNPlg7+ilhx7oU6vP8Cr7E0UVVC/5pSijI+EzL8Wfpre/zugv96BGnEtP62/u2GxfR+cqr9NiovjYrDEvyI7CbAYw8A/lA6G/rimsT+jp4/iCB+2v50x/lLjzrW/ECnmY9aRwz94MgHproPAv3GonC6A9bu/GMrW2wpYiL/IZCNaaxamv87MXnnV87a/fsesaZ+HXz90YR207t/Fv0o5ThAcrcG/1iUXeWn0qz9UcL0Kl9GlP2Q7iwd0G6a/opH47Jszsb/8nVntSiF2P6Ee3dYS5pc/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzgzNTA5MjQ4cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM4MzUwOTI0OHEBYS4CAAAAAAAAADXzrxAIdsc/JY0tb3/NtT8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    7,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -0.012233603638540202,
                        0.19717097993664068,
                        -2.7946976452920724,
                        1.1162379976815209,
                        3.292728679828655,
                        0.6346658111401017,
                        0.4858458158215549
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7
                ],
                "values": [
                    -0.012233603638540202,
                    0.19717097993664068,
                    -2.7946976452920724,
                    1.1162379976815209,
                    3.292728679828655,
                    0.6346658111401017,
                    0.4858458158215549
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 15
    }
}