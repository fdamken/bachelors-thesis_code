{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        7,
                        7
                    ],
                    "values": "eJwBiAF3/jrOMBzkbu8/P+/LL/7hmz9214eXr9BSv7TqlSdPtJq/puvSkNAnnj/XciBDMRKgvzfF470GYam/JDi4k/OBuD/Nq2/koJTvP7LHKsNmO2i/L7SMOK67mj+AwITbnLKmv60CcZHqXZ2/qHp7QjvspL+eUJQ93w+7v4NZXgaucKS/du6Zq/3e7j86/S/3IGqrP3wvbsM5jJK/qdpp7tuZq78WI4R6EqeIP1VhFhpJUae/D18Si3tgj78sCzzYrCGWvy2cvqKKK+4/WG49e/O1hb+vdM6J4zqKP307Zb7weaA/54GvOIMclz+FjXT0oC19P6jnwaQHWnM/9fDQ4WIZgr/TpG5Shy/tP+f0cjhu34S/T+Cn2v5rkb+QersoLMuoP9DkuE2zUpo/pNHZk4wvib/+mJc1CY6hvy5TI/TanVM/GfOS8WnI7j9kSPr5BThyPwKmsF0G2KM/QOxrL4CIoz8wWWVvxKuhP30YTtQNmaG/zqTbqZxumb8m+xv4Gs+gP4pVWGqQme4/epDP3w=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "strides": [
                    8,
                    56
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.02109085646354911,
                    0.003305045306836643,
                    0.01672797321389918,
                    0.02659996375311898,
                    0.08118057049933397,
                    0.023612599372678737,
                    0.014073645593130724
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.00032181004002086413,
                    0.0002266261962860199
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "values": "eJwTcIlewtI+y55hrs+djhvF+xmM/U1PcDbZNwTztnp5d+xvOL/81Te5GfsZBGzdO1dZ2zucvD7fp6N2P0z9gTiNoNm10+0Zbnyz2Pwgcn/Dq7OX7wRMsGfYcDYrWr1uP4Pevg9i3Jn7G1ouf0plKoObD1PPEMLVxfyh356B4Ubfm+hv+xgYeop6DqbsZzjL5DNFvsOeIW/zdr7W1P1w98DMh6lfoya9WHutPYNJU4Nd0FR7hh+zvL8HAuUPszZ9yJtsD3c/zD0w82HqD5j6u39cbs/gx/mU/26RPQPL1T8Ge+baw/wLcz/cPTDzoeonHFO3/7Fxnv2B25GB0zzK9sPCB+5fqPth7oGZD1P/otOn8IvWfHsAz0mysg=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            7
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            7,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzgzOTQwMTI4cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4Mzk0MDEyOHEBYS4yAAAAAAAAABj/iXbNFeO/K41PtfZawj+iKr7o+Wv3v04wavhW2eQ/ubl0waIk2L8EBejF0Lzmv7v0D/yoQeS/Sd1xkS4E7D895jNZC0TpP748bqTPz+0/foE2k6Dj9D/YlxgDGjoAwFU+rOdGOti/Cp5Vygf1AMDTctg7lrDxP3Pstg3bR/a/dncuop/M8z+GQ6TJvvHaP0KbwGmtBPA/BZotCz/m9r/uLcGpIC3Tv1QkOJWmJfY/5b/9hiq7079hsERR2wH3P/14QvHw6PW/FBfXx2SU8L8/M9efvNyzv+7zJPkmltW/Ppw1PmMs67+YtJzUuBLpv+/uFBtXsvO/uKR4adx5+b/VJAq1B8vjv4nM32PffN4/7QICsITgpL9D/BM7bSbgP1RdqqjSLtI/NRgGVUR65r9r9VMzvZbwP/BUBklHQMW/60S6IQh35D9becjARF31vyBhwVsYCf4/c3ca9Vba6j+WrYYx23jxv2oQUnNfOKO/3uSd9KOBlj/5jW3OtJjmP+QymMDqxOG/22PBP16ukb8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzgzMjUxMTY4cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM4MzI1MTE2OHEBYS5kAAAAAAAAACpP68Ldts+/lNsZRu4x0r/zynEVD9e2P7vM3kev8rE/DnBop6ZDxL+ovH0yMCK0vzTdajiW44i/WOtRfvO+nL+OITdHKl3Kv5isiwXXOdA/D30DQLTkzD90Rk+BwtvAP0Xy/5UtWY4/uzm4euDBtD+Vh5rLE7zIv1s+JGlNrac/xR6l1M/xtb/0yKFqANtvPzmFP1I7AJq/THEb6fTZvz8tGZmR8hbIv6XkHPYdKMi/JisBYb3LqD+n2hnt7MGNv/YsRwLdo8g/Yo16W0C6ur+bOIOIF6fHPyjKZRmRqNS/gCA/HECNWD+WxTa+2eOQPzxamXp/5s0/X738p+WIwD+hmNuyVjW0v+eFF9lXmqS/esdsDQeQwj9gI/30QNuxvwRDbXx/raK/duILQJ5ssj/YoIFuMUTAv2CS61K0skE/Vukvws2Vxz/Eb9+l0Aa1P+/JTmZ9t7q/ZdZ5JQJocb+OoLuYRly5P13lqDPveZu/w6c9yu9Yxb+fP83WYSJuvzSlCgAUG78/FNnZTR5Kwb/RsPpgOAmiv7PsxQj4q6C/AdNl5tuorj9h+M7lblWjv1VMOfvkaKO/1JaRQVGbuD9pHWo20mO9v9i7H6muGrY/o6qtxPqLqb9ALQcWgFa5vwdd0sn+DbC/DGBu+m56nz+M7PTgIoikPyYijj0QwsI/93vuXOVspT+wKkzuBi21P76vxE5zVJc/9gqI9dQPvz+saS/XB0G3P3QxwYkXxri/RlQ5cKa7pj88f983vduov/MJsWGnkKm/3qa7m+tdg7/CF8jJNpmrP6crM44wNJA/GZ+xws5Sy792tr05GEqmvz12KPpCUK6/N9xKcTHRn79jYPXD9wTEv/A3w7O7Jbw/vA47t5QCsj+SlAOwrm2Qv9IvBoT0nrq/UZ23mKDfwD8NMpaNl6LCvwRs0POqrca/bbjFq8pkc79hqseyoBaxv/XGgZazp7e/WZsWEulppb/OxJzP/3XAv0TOZoNK16m/ZVNOA5fqjT/BWI3J9dCnP+m7+lx85a2/xK45CO/eor90ddWS2T2Jv2+HVaYw9qY/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzgyNjE4NDAwcQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM4MjYxODQwMHEBYS4CAAAAAAAAAOwOzDuonco/+J40o/pFuD8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    7,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -0.6646924071234472,
                        1.1036385173007233,
                        -3.3824411252714897,
                        2.875150320467296,
                        3.720806356722995,
                        0.6341753914531792,
                        0.47648235447753434
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7
                ],
                "values": [
                    -0.6646924071234472,
                    1.1036385173007233,
                    -3.3824411252714897,
                    2.875150320467296,
                    3.720806356722995,
                    0.6341753914531792,
                    0.47648235447753434
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 30
    }
}