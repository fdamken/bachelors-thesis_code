{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        7,
                        7
                    ],
                    "values": "eJwBiAF3/hvZ/aLvE+8/MwinDehrmj+LkAvAn5dzP+doDvV+8Ja/tFbsFwNgoT+sitnQ3j6fv1H1pruoK6W/5Jl6x9qNvz873SFxF3rvP+8v4nwTOYY/hNKNt/mHiD82ZdbK0Zeov2ZO+tcysI2/b1CrKoQWqL9X0431BM/Av9o1mush06W/XyosDNgy7z8O9GdD5XewP07SEttd8qq/eFsc1iEUsL+sLB7lBg5ZP4vJYeKTObu/Y79d+nmQlb9eKt1IZv6Rv9JaunNpye4/3PxBTzkErL/B3WGBQCVov7k2zYqJbqI/bqpUyjE1nj9EY4dBS7SGP0JFLHyEv58/JYE+oq3cab9Y1WnIsRHtP7xJY32U1om/ro9FNtppo7+DuJMuOzOGP1rebGDjQJI/SxIAQMwEl7+KX+6kV+iOv2X+kg+1PJa/Sde0UTn67j91jcxCGgGGvwh0Lf0ukLE/OQK5MKl5pj+u0dz4r26qP3wRAGvKlqe/h2i5GVP6jD8zBZCFDrWiP6GnuCJP1e4/jzTIoA=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "strides": [
                    8,
                    56
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.0032093667349616,
                    0.0003977514082427245,
                    0.0022086211777501167,
                    0.0015528506393366571,
                    0.010541934449328053,
                    0.002217705096515778,
                    0.00206899603466798
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    9.930619509941608e-05,
                    6.187789163408298e-05
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "values": "eJxzULPtec9RaM9goXHl1XOr/QwWN5SP1MTaM1xI9Zmy2nc/w6xdirtvp+5nYOA6UHX+uB2DQRBH5F4WhPqAmC03PtjZMzhIRgqIu+1naBA3fLrDwJ6BIecbj5fgfoYfXyRL9Rz3M1R8n/9vvqI93HyY+gePY3yk0oHqPVV/MmkC7Zm3lWen/X6GA8u6fk8It2c4k7VzZ78Nwj1w86HqOc7ca32dac/QMMfEQzDHniEggyn7hYM9wzSz1cF/gebC3Q91D8x8mPoPPyKyasrsGVYcbLgmGmnfUDPzrbMCyD1Q/8LcD3MPzHyoega93MyvJ/LsGezTeTV3GOyHhw/MvzD3Q90DNx+q3uJJXYfZqhx7ADTQnCk="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            7
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            7,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzgyNTMyOTYwcQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4MjUzMjk2MHEBYS4yAAAAAAAAAAN5GGXsv9e/dP9BChdmzT/d6G+OGC/6v7PX/vqNBeA/uBYh65EN2L+xGEnfeHbnv8Fk3cDUu+O/g2tU+Ksq7D8MAp2Ru+rrP+nqvwLwifk/t+1xtj6yAECp3OJB7w8AwOOdbragLdu/imExW7fLAcBUDZqFug/yP6XrE1rF6vi/2E4Oq1Jo9D8sJQe2gpTbP68NqtR1VfA/X6vmgIU497/cERdbqvLQv0hzmFfFx/c/CLq2Vny01L/zLq71+6L2P9jy4YNjQPe/wP6OqXrh6b+wjVkIBMNHv2o+0HGUM++/rxkdCK/h6793Lap7BDvpv5VCm3Yh7PS/W+7qTECf+b+Dw+K9d1jcv00MLv0nOeA/wXOAHGueor/7yNfRdM3hPxOb2A5Fe9I/WwWg2jRO7L+19e7f88vxP7GQsm8/nq2/WCSG85kD6T+8vvIeR7L1v+pdLKPrSABAssawHGns6z/t7zvnw+70v+lu2X54bam/DjM9eHwl0r9Xf2F64hTmP/2ockZRWOG/vFgkPrRIoj8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzgxNDg5OTIwcQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM4MTQ4OTkyMHEBYS5kAAAAAAAAAJWjVbxRStK/WMgSw12J1b8WxK7oLgS4PwSPXp7UWJg/u1ZGj9Kptr+fhRIA/omzv9F8RcKzJY2/yXpS+KBGkT/p7riQMuDJv0wvI40ZZ9A/CMLhTjk/zT/JCkLJR/yDP+8FJcoddp8/oAV2+S5ouz/lUXdav97Kv4MnJPsRwrA/4TWQ5R3xwr+Cy6mL9fk1P5AiBWNpMLa/W1qV+feEmD8YBRnBfQrMv/A8h9Hb8cm/03W+b90ogj+blA6tRM+Bv//eImkD1co/2SEPB/Zlub/BmDyASenHP0b/GQrK1dS/I1t1vmr9VT+ruFsXXk2KPw7/nRYhQc4/XqYW19fIwj88qxYYoHa0vy9mO+nWcJq/0XKs4wfKwj8n0dDRaxKwv/bvlNFmK6S/P0i49h2ntz/smOa7RRygv+3f5BECMJy/M8Gy/+G+yD/tKa84BPibP3/y7zplRb6/ufxQNn5Rm7+CiV8m16O5P9SJB25QoXG/EjOVTX6Ixb8WmZK3R4SPvz7mY/krwsA/5Fq53tR1yL9eEbARIzK0v2lzPUhTkqm/wMaqTreupT87IX6K+h16vzXWj3i+1rO/SN1cEdnMuT/Kc/GixYTJv/95m9njU7A/2+ToAgwnmr+JRrsCoLy7vyGzarYedLK/CxuJNa/+lz+BrE0kv7mEP3yCP6SMZMI/M+2HpP8Fpj9A0hV9XIW2P2UYlrPSp5I/XdpIpkuhmz9QCKPOJ6XBP1kviGNi66K/YFd6GsJxnj+dblRZOY2sv2qr2oAy/pi//GIvJi8DoL9uODF7JtamP+9KD5A654Y/69Vbu91kzL8vCp4M3H2hv0IGB314YZe/idvXNfMEnb+djbnGnZ3DvwkKqPV98rY/QigyNELKsz+TR8FNFeeLv7KG93SVz7y/ByO/qA32xD8L9qvWthXDv9A7U4q4dtG/gHQ4lt8pQT8lLqj5uU6Tv2+J6EQ797m/JS6Egl4ok7+zE5Ih6qTAv5p1axHxxmK/6+tT5b6XdT8rQBgqCzSdPxyW8dygjai/uuQxOqNfkr9TliO4YYWIv6tLZvW6jqY/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc3OTAzNzQ0cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM3NzkwMzc0NHEBYS4CAAAAAAAAADBGikst+Mo/7OZ9ttrftT8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    7,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -0.5751630870512764,
                        1.3193636494366117,
                        -3.1255721706662793,
                        2.7866232155674258,
                        3.3967610769004266,
                        0.8153361219269701,
                        0.11145349819905861
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7
                ],
                "values": [
                    -0.5751630870512764,
                    1.3193636494366117,
                    -3.1255721706662793,
                    2.7866232155674258,
                    3.3967610769004266,
                    0.8153361219269701,
                    0.11145349819905861
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 45
    }
}