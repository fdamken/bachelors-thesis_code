{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        7,
                        7
                    ],
                    "values": "eJwBiAF3/mfyOERFRu8/H5V9SHoHmT+5BXcVXWpNP2/diqAW35K/roBGsAh3pD/oie9rG02ev9regKjXUKe/Uehn+gUGuz+t8fwjsszvP4Zkm1s5ine/Y2n2hvXHkD8IHJ+WwtOqvzjVRq+D2aC/YxetSf5Wqb9ixmrBFEG6v0OVU+h8gKa/0BWQ5hv+7j+KynJKRVqqPzvnHLZM+X+/wEFx3pvSp78uIff1TziNPzEZd4rU2qS/qh/2vsaHkL+qe982aJqRvw48xtSRQ+4/z4IaJng0hb9gamR5URyKP1A7odqnv5w/MHeYSdiYmz+75yZz3pZ6Pw+tF0fubHE/CSIOA/FRhr+Q5a5NC1LtP+WASP2FLIO/HfZ23Yx4jr/ha7ZYbICnP0LZ7pudvZk/ugUh17wXgL8FS9J1HAqgv3hOXW35/Wm/F8Zl5pJu7j9h6oqr3iV/P+mMzqv6w6I/fNETYmrOoz8NcJhSQpyfP6TaOFoin5+/m2DF2wuKlr9LG8LQ4hKiPz5DJOfYq+4/QujKkw=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "strides": [
                    8,
                    56
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.05046225460774623,
                    0.0074079965371713925,
                    0.03535242069891043,
                    0.06352672168076878,
                    0.17152012601557312,
                    0.06963029076617173,
                    0.031675322843635764
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.0005626552546218591,
                    0.00030165419100814007
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "values": "eJzb8OCtNfPUpfYJkh8OlehP3M/gczuifEe+PcOTk7cPfpq5n0FQT6jDa8l+BRvLoOl7WvY7NE74t861aj9MvYZ1uifnzM32DBw/tz9fP9n+waSGqgbzRfYMvtVVXksb9zOEiW51OFm2f8GP/Scbd85CmA9Vz6C7gXVJ20p7hhM1fzNi+/YzdDw8u3Rvub2D4EpfNo0F9g5uiTEMD+buh7kHbj5U/YHkfNbyZ/vtGZKjz7TvX2LPcGD9vxV2FvsZFrWXsVets4e5H+4eqPlw9Qq931g7ttgzKHdo7T09yX7BbrH/5WIr7GH+hbkf5h64+VD1CY6u662ubbA/wKPtdWrzHHj4wPwLdz/UPTDzYepfpEvsX5OxzR4Arvm6XA=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            7
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            7,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzgzNTUzOTg0cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4MzU1Mzk4NHEBYS4yAAAAAAAAAE13FmeKfeW/PXRAnJEEtD9UQH67FPr1vzn9LVXDuuQ/lcDlEuFf178rDmW53urjv3ejTwiPIeS/7zJVQgqo6z/uHZaybD3nP1NFh6RZ9uM/ZO7WoFsA7z8Vy126yh8AwO4KQ1IOD9W/+Q9rWDgLAMCScZQOHiLxPxd7oHRc7vS/5/NSVPiN8z9bPZaBID7bP6jY0TJgvO8/bgvDf6mO9r8fW+WVGmLUv7O2MDTLBPU/6i/xaDSp0r8Fe+pQ+6D2P/uKb5d8jPW/xvsyDwSA779gxy5P7gvDv5736xi5Tcy/F2pG69Ct6r8v4KSQ3HDov3e7JRY8ivK/eTIXjZZX+b+h1XfGVZjUvyEiPECIXN0/NSVpEVZ3sL/8KEvQDLLfP0ORfhuuTNI/KarZsto35r9rJuTmJBrwP+MZ+s1dT8a/CynVaHhs4D9eA6M6ljD1vw+xDEW/M/w/rvyr1kyM6T/5Guq3ZSfxv7AuiZHN96G/sg6e0rGgrb8AqfzKwh3mPxOv7ZjFxd2/tzjN0O3for8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzgwNzkwODE2cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM4MDc5MDgxNnEBYS5kAAAAAAAAAK+IcpK/Esu/VYW1Y02u0L8HbXtI/Vu0P+7uTaWZgrA/WkVRPIr3xL/G5XgdTJizv01k7PdOuoY/lhie2LdLqL/gJALiZDXJv7hClP0qIc8/FjimanWSyz8+g8RxYyDFP1vH7g/wj54/TkVhFDVGsj94eoW8Ix3IvzH/+GT6pKE/crPd1dF9t7/QtLmbGu51P2lhMD9CNqC/O2+1/CxMuD9g/CCzqWzDvxiAUiLJUce/UyA/mExsrj9OBnSMI8KQv1HSQDmPQcc/B809HUQNvr+EkPPyjlrGP68fmADqANS/tpOnfaSRnz8MvbRLR2V8PzZop8irKs0/7sxIDCy7vj9mivbjpm+xv4qGfdLNtqO/1NVg0TNtwT9WDwkxmrmyv578UWVE8qC/uJqc3P/8mD+MHnMrYn3Cv83DQydz34K/I67nNNkSyT9CZv37ZL2xPzDCXsGPerm/zcIhoBPSnb/8To0p03W9P1i3n0MBe6a/WHVMCOELxL82L4AZBKGgP/II7Oyu3b0/sOU+9OYhwr9fg3G8OAWbv2YWbnq8Y5S/FvI+tMy4sT8C/iszCpWov0Nq+Q77X5i/ZN667jA2uD+4UyzhXO++v/5tquC2Mr4/tdtRKcZkpL/lIcSktnu7v7wpv7KfMrK/nx+2KwLgrT/Tyf0NYJ+PP9wjnlLzZcE/64nwmXjypT8wyLGIzYu3P4+A0+w4tJ8/iyfon0vewj+Grv3M3f+wP6AOFM/JFri/9WcS817eqz+RBFXv5BWuvxkeauOqgqi/LhjtEViTob8OFCixLPKtP12QZvrK9WY/BRYOo2dwzL+ETkkkWAeivwWR8EEA7qy/+D32Rrknor9bYNACkdLEv02UsyE9aL4/b/DOav5JtD9qo7+c1JmkvxvdCFNVQbm/P2JGDSG6wT8ER0yIA0DCv6X2sp/zt8S/cAk/v/Ckkb9FWlnDTDiTv5o6jwRQFba/w2thrnf0o78kWlWaLqnCvy/ojWxcKcC/O31kr5mOmD/oP1BSywShP6dhtzFDq6m/VqlGHeTcoL9JPDoEOUtvv97oR+YNya0/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg3MzM2MTI4cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM4NzMzNjEyOHEBYS4CAAAAAAAAAOMGOD7cSsk/H/ikoF0gtj8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    7,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -0.5709718871393085,
                        0.7527538167902762,
                        -3.4987898604788588,
                        2.6220447023794695,
                        3.6420134849828103,
                        0.6801486918777657,
                        0.500352172223845
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7
                ],
                "values": [
                    -0.5709718871393085,
                    0.7527538167902762,
                    -3.4987898604788588,
                    2.6220447023794695,
                    3.6420134849828103,
                    0.6801486918777657,
                    0.500352172223845
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 25
    }
}