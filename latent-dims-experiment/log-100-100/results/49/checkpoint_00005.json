{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        7,
                        7
                    ],
                    "values": "eJwBiAF3/h6gOdSzBfA/pPLf6STJTj86DRupCtFEP2vCz7e813Q/B8Mw6cGnlT/kKB1vOW2Hv8+fVXIBg6G/IDfJpssolT9TBO04/YXvP0huvdVFEFC/QJ5/2O4Qfj/JPHBL3jmhP4GWfxCFip2/YfY5P1U8sb9dlL4HNnGUv0hHQpGs/6G/h2X3cnpu7z+pyljluQF9P8us0BCrXJa/hWABZsB+cj8XXPNLWUSXPzwZqtLYuo2/yb6mV8LQkL8RhDYyXGtgvxoXYmThnO8/VfbFDlItib8O+4s/R3KIP7bSbCdMbJg/eZ3mwKYBdz8YF4lnODtsP0Liy3YsqEi/CuoKVaM5WL/f0WK5xZLvPzOlmaYGfls/MVv3bzTOe7+WPMfBuFCPPzvVC8XrQ5g/nO1MootUbj8aMBFKW55UP1sODESPEnw/H2Fq07yZ7z/pLmQE/gqJv4cQtC9Ct4Y/5tzQv0GpoT9Frcu6gMWLP5PoZwG8lGm/jjHZKVEmhj99TUhxKCs2v2Fph4pyPO8/U8i7gA=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "strides": [
                    8,
                    56
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    1.12340276768055,
                    0.8171125773327282,
                    0.9894437066839031,
                    0.9958592511304345,
                    1.04993331579104,
                    0.9960595315484363,
                    1.054635505778491
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.023960928972233887,
                    0.017161653523164774
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "values": "eJybIfeMu0v+un3PNLazkgeO7eds2b747qtD9jH+fIcn/Dq0/8GfrtqpZYf2Mzw9yf3iZ/N+FsdPXWz+e+DqlyQJxTslPbbfYFxyf+uXA/YbVJk7P03YaN9QID9Vym/D/hVt7DalnPv2r1ikpvjiwya4+TD1cuYrzKurX9g/EHd6P+fJ1P0MwRH/1tVU2z94svCJe8YKeyN53nXRMQj3wMyHqZ/6wPNXe+lLe4flb1vLVy7az5D7hKU7cJb9AaF6duO2/fYw98PcAzMfpt5iY7Wtz9dX9gyhf3L7jGbYn7jzed6F0IP2MP/C3A9zD8x8mPoc86NZIhlP7EN23fNcWLIZHj4w/8LcD3MPzHyYelXGdUu3HHhkDwC7Jsod"
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            7
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            7,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc4OTM2NTEycQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM3ODkzNjUxMnEBYS4yAAAAAAAAANmfO5TG0++/hSOf+KsDyr/lI4nlBVXyv47ydfP3eeY/7LQ7xfN/4b/js4PEdITZv9CDu8W2wd6/OIs+ATgu5z9usn6C6VHnPxdmKPJ0W+s/ktMTChmg8D+tLX1m09z0v0Geuj4zr9C/7qhRKa6h9r+KoIWT2yDsPwjHgFU9HO+/qsM375Pk7D9gmVbcN9rbP2lmYVal7us/vxiI8PKc8L95J91qS7/ZvwxagnP7VOc/zL1mWeoUwr8UaC/jFzLqP0BrO8egtvC/TCC8WjZt47+ipeaDp1XaP43fpQcNebC/LbNZ7WO44r8pAThoEYDdv55Wu/a4Huy/NAHcnxu67r+xZ/Liv7/Sv6y7w6KIt80/Y695I74Ozj8vz0E8hvzZP5qiWCVZqNg/HQUkMI9V379KA0hlFFPnP0jm187h4NS/8QgRc08O0D+o/DYpg1fov2gI2qFBSPw/NAAGE1RX0j+i6zQ1HCjov8GnaO6U0NK/rIkdFO9Z27+LSVRkZabgP6JpYJiR6+q/2vjJbj+8z78="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzgwOTk0MzA0cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM4MDk5NDMwNHEBYS5kAAAAAAAAAMVyoA49WcC/cHEAQQaZzL9nx9J7WNCgP9EVb02OXcE/fCWl+dUYub97QSkkOI7Av0eny6qtbra//5UCvZjPur+V1nRVqIvEvwSc2sQbIMo/NnXZtJ1dxj90v5mWj/XBPyHVRUrTYrI/5Hs1BmI1nD+X4Yso2nLJv69QUonfMIy/mbn2rjpQxb/A2B3pl7+gv5hCMR59aIM/f8MV6jmaxD+hD7ijFXHAvxvJDaZamsW/jT58J/3Etj97BH+o6/COv59lXob2bcM/TuXR9zcQw78pwVr0FoLBP4DjzFdfJNK/ZXhktpoFkz9bALc4AR/BP95knlHvFM0/5KAI9ycYsD9/cAFXtuiyvzi6DtQWD7q/TrcAvcv4uz+6v9D7xqO8v8O0GttQ/Xy/La0SP02+tL+D8a3XhVTFv0/RuWrryrS/LQhb+ibYxT8w/gk6/H62PxxOahngmrC/0Z7f380By7/q+IeRIxS1PxNLKCzLxKu/+aODnY++vr+Tz01RiAugP/m2NNhRbLg/OjG6oM8kxL9L2qp7gXebvzd5zVLnb5E/QIYoXXMDwD8Lnx8oc3vBv6znrZdOmpI/1ej+SXgpwj8jg40ayxi+vwPdybDPG8U/A2p9fKuUp7+hRr8M5eazvyJlIv7Xvqy/ZMv0S5tBrD8PNyAVh4HBP+pPOG6gkcE/ieg9psGyqj9Gw6MTkrW/P4oI1CXUdZM/JiGu/JjJyj/8A+z8zMq8P2fqPEfV+KE/pw1tLQKRuT/Lz+KxM56vv1jcg0kq5L6/1hTxJRWKiz+hlMVgQjS2P5YwZTnfo4M/y9mLWoCPyr/H1rBRYWagv1tYoRC8tbO/knzNbXSpr7+dzuqZIX3Fvy+nh5fo7cM/LarAqUj4tz/2EVa5PQG+v0a4WG01T6i/ONBi+W4JxT95rl8FyN3Bv4mj4yxwcri/3JLdohXBsj/73gOmIIpoPxytOx75Q7K/GgM2iiWQkL8mSskR1jPIvxI3Zddxtbq/GsFh/nYdsj+TMfdmhNS4Py1sLM2SAqW/GUT0uI0Nt7/Wm9Kk2hKjP+Gq91KSk6U/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg4MDUxMTM2cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM4ODA1MTEzNnEBYS4CAAAAAAAAAGw2fTr5DcQ/H3xhjjD4uT8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    7,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        0.7355311159632292,
                        0.9521188922418078,
                        -0.51262249679637,
                        0.8268202388700494,
                        2.314841064969269,
                        0.8759498342632086,
                        0.4553504767540044
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7
                ],
                "values": [
                    0.7355311159632292,
                    0.9521188922418078,
                    -0.51262249679637,
                    0.8268202388700494,
                    2.314841064969269,
                    0.8759498342632086,
                    0.4553504767540044
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 5
    }
}