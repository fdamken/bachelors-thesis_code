{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        8,
                        8
                    ],
                    "values": "eJwBAAL//Q/5DsKRMPA/pU6vLPCQk7/42GdRgUyzP/g/zCj956i/RBZdulmZo79yTjVtfaCIv9NjK5yFO6S/SW58PihugL+JydYBvH2fv/444yzR7+4/8gVztqE7ur+VikkuM6ihv3w9esJ8XH+/IOlYRh7SkT9fStqS/3SAv2DRuw3KMYa/3RyG+4okmj+OYds7xQqlv976yo+n8O0/Z+lsYx+Nbb+5suVIzrxRPxMWRINy9ZS/SyIkWsTGjj+k/GqcGpt1PwjFaj3P45+/GT1eotMNMD9Z4ef1GBW5v8E+QYEAoe4/yXJ+yedGmj99/McUx4SWP486cDnzpqG/aKo0BorOgD/JpyClHZC2P6oZHnIhTXC/qKLJnZz3nz+XmU2mchmkv4PN11G0M+4/RwAgpDT5oT9Mj+v2vxSev2JJXp1cn5S/QYCMVQAlqD+73ziiBIWFv9PPv/lXdqI/jTtRk66Fsb/hsFBCYIiPPwq///Qm3e4/HWsZiUBWqL+ZGgi7R1iUv8An8lhzo6O/o3kMpUjQnD/cYPslPd2hvxL/xpb0Fo2/v2ILnpf1qz9v8hQcuHCXP071nkfvDu4/q/KHwMuwhT8uPmLPLUGQP9nHa1Oln6I/qqnks/07ob8wmJj2WNGrvyxvctaIb5O/DE/eJGdspj9d17jiGY6HP08pKrq0Lu4/kbQJ6g=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "strides": [
                    8,
                    64
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.00410614870082269,
                    0.0013708415456773048,
                    0.0037587897326765286,
                    0.000866995342480158,
                    0.0015545822004286581,
                    0.0007566545621289525,
                    0.0012808798778414182,
                    0.0004142641672913811
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.00012499421684333356,
                    7.987911063753472e-05
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "values": "eJxj8HC9FPMt156hwc3lzDez/QwSNnxarIn7GX4+V57jEGzPcCqtwnSq436GhuvHHp6QsWdgsPOp4n29j+HAvf/x8w33w/U5bL0rmBtqz3CgzP1feoQ9A0/a19oF7vYMCtFPlnOYA+U76nkMgHTAdaX8/W77GRjS/7i5qCPsg+k7cP339pAme4Z5n7b72gD5FlmHalTsgeq3bH7y+t0+Bg8vfelbDvYMGyI2XkwPtIe7E2YfVN+BjXLVAQ0Z9gwx2e7ibDr7GYzKdn06bm/PwNf39Fep0X6GhIti3p+Y9sP9B3MnzD6ovgWLa+ekhMbYM3h8W8X+Rm8/Aw/P59L5lkD9Kg/u33dAhAvMfzB3wuyD6TthGFXFBHT3ib4tM9Ms7RkEzkVdkzFAhCcsXGD+g7kTZh9UX4OvmF1+WgownGq0D0h47IfHAyw8YeEC8x/MnTD7YPoaWNROfAu3BwAXHtI2"
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            8
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            8,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDIxOTU3NDA4cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTQyMTk1NzQwOHEBYS4yAAAAAAAAABTP/MJkiu2/BYdLi+rf0T9SJQPlfYj0vzp97Y/mz9Q/8oJTKeWMAECvlXxSGevpv8TSzqq+we+/AxBOieOM+L8b5O1ztQcDQJrWcH5VgOC/90IpbxmIy7+tStQSPkbhP4Fampcf1bY/9l8uqpZg+L/20FK677m5v5wnvgD2BMO/Hz27V7dQ7L/12Et5aCTuv4GW6H8H2wHARZT+5MO/8T97H0wjyLvnvxsgvzhg8+m/EjUkS3Sf/D+S4dAp4qHlvwFpQF5qONS/9vWhSB2q7L+yHVjD6QnJPzWp+8+8PwbAvspBJIk00L+v3Ce8sZvNv5heRo8wjeQ/7iobkv538D+/bfYtp8vGP/1w7kWXCNo/HicHwhUhvj/j4L0vai/tv5Gc+yGgx+G/lpA5/M7X878k0eBAD8UGwJOer3tRxvq/x8FfJ3Mxwj+Aew2NnQL5v9yE27ITLe6/no9e+23u9b/TCFRa73Dkv1ZhMm1qru6/O+vRPCKy0z+h7yWVdQIBwJ0zQzoQDfi/QirGuds08j8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNTE0NzU2NTc2cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTUxNDc1NjU3NnEBYS5kAAAAAAAAAI00QOzFmI8/A3blQ47wxj+tQF7MucjAPxkhBffGvtG/dAwBfGgZkr95IqSyNGzPP6T1UNW+/bs/8+QHfLlrzz+ikgPWvjXRv8HYzOIg9LM/q+LnwrAivT8y9GZkAR2Yv7hIlTBnfs8/7tpe+ORqxD93kLtTiVCHvxHKuZPeBa8/RmaI85rCrr/fqrcA1iWQPwfyRYpFXJA/C7XnsjwdtL86yo5MOpnKP7KsU/P1K6M/N7mElcj7wL8H3d9YfT3LvxgOMO0gbaU/yx1F8kfCuj8lWQR1UwqVv06KpmD/TsM/ZX/VZLm7qb/kyaTkQ4m2v0ggHBl4/UI/5GCDp6BDzD+2d3sLXIrHPy5mxN2l2Zy/lkapYP12sb/qajJyenOiv+Bvr55rUsS/CU/aHWDG0r9xbmDNQNPBP9TuICjzfom/OSiVo1IkwL8i8wtvbKCjv7u51G8z3ci/GHT6bL/3pj/Ns74TwOeXPxWqJeu1YcI/wdYTXhpC0L9J6ZDWAnavv+qLT6bo5Ja/jVH6yUYFrL/fKbZbHLKhP7f4Ujiij4k/ahQmp9A4vj+O3jg4kE+7vwMp4/Ta76k/KK1Ic80gxL9DVUNydu+Av5DOn4TlZcU/o7A/NHEBsb/O/0+FnPHEv0t8BpxDF2U/QQLRT7C3ir+r0/5CEym1vxeTpRmapMG/AcLQbhVncT9aNWamvAafP+RvC+uAZYq/eh4SUCYSi79VjbP/ywipP7mijV7sXMK/qz/h3FIxyj813+V35F3Cv/6+kgGZNbU/o60ZgNsKrD+RdMNabeOnPyOGn4fNu7c/W2J8yXxikL+m/7zgAyDAP6b4QEmCx4o/ncmzGOPoxz9gQPpBMNyJP77yhXGCUXA/jgDVDMqSqb/eO16TO7GIP3g+ROCemL8/ndZw7mctpj99atmf9ajQv2toci49mag/II6zZeQ9vz+fpKxZr12pP4KR1wIqy8k/e25ufsi2sT9ICDweegy1P2rzEhgOYnO/rojrz8Ukmz9/9nbtVU+nvxAdox1Cz6+/na7c9a3UZj/MoBDp5OeRP3IvZXMkosI/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDQzMTAzNzEycQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTQ0MzEwMzcxMnEBYS4CAAAAAAAAADAYV1lWELY/vgbypNaqtr8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    8,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -2.0556264794751837,
                        4.182809074396558,
                        -3.3296067470927557,
                        0.18461847077764923,
                        -0.24345156165841708,
                        -0.9611014216612338,
                        -0.537605214096431,
                        -1.9466203247198708
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8
                ],
                "values": [
                    -2.0556264794751837,
                    4.182809074396558,
                    -3.3296067470927557,
                    0.18461847077764923,
                    -0.24345156165841708,
                    -0.9611014216612338,
                    -0.537605214096431,
                    -1.9466203247198708
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 55
    }
}