{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        8,
                        8
                    ],
                    "values": "eJwBAAL//UELtjNhae4/JjqK6xl6oL+5XiEiRHazP0+myO7r26u/AZYVR1+ppL8A9DGlAC2Wv308sM1+LJm/0bXrFV/3Zj9q5wEHp6elv3r3bCz1tu4/ztxN4870rb/ZUp9jsC6rv8xB88JWdYi/+y5rewnVcT+yXwRNyS2IPzq0JTw+Z5G/uvLuawCXoz/yaeXn0SSnv8C+4EoYcu8/bdMWq7ZNmb/ExKwpSbmHv2HfsxWcFaC/g16ztm45kD+sNy6/dK9WvyImnhUynai/blzMCXq8br/ja2K31Aaxv0uqJYDP9+0/efMTamU6gj8hC+xDz+91P+muy014V4m/NRvEkMZOhD8SPSbsYL+iPz27mzaKeYG/U7PQNwowrT8XA6ioGCWyv0XV2pdr6+0/9IZNY90Amj9HNJSnCNOev80tvfdGI5i/nBOOtyphpz+gEScKTwmDv6mmtNw5x6M//fdCnLDetL+uCRE7pIlrv+nrNNLy2e4/xZ1CUqPpp7+2cZtcZYSNv5Nqr1gZMrG/vN8mS5e2pz+3vMs5m3Crv6zkpH+BaJK/ExFg55Xsoz/jY/HVeS2TP6uZhHoaCO4/0b11cPE8mD9QJ1Z0BIqyP2T8anPaL6A/X8PNk9tvo791S7p99Reqv01QP+129HO/e5o6RpMPrz/93D635VSZP4wCn+YSm+0/kYIJbg=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "strides": [
                    8,
                    64
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.014545140302205087,
                    0.007342183247255197,
                    0.015490745890736048,
                    0.014564844642637274,
                    0.011760117982522937,
                    0.006815967974001913,
                    0.007681576863945453,
                    0.002711550702877718
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.00040796258405680416,
                    0.0002657800813433937
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "values": "eJxrML5js/niInsGhWyuExap9gzy+nIVdyfsb2g9sdxaqsf+CvPsBle9hP0MFnMFTjVU7mdoFg+o667ZzxDxz9rrQvF+uL4JgttZrtbaM2xYw1i2I9uewfLf0lmH8vb/qvDZqRVUvZ8hIeD2vqL0/QwG+WKH16fuZ+j4sefopuz9MPvg+m5JK9eVLrVnCPiq0nA1Zv96sa+/LwYB7W3h3XWWM9/ewe+mctfUSUD3Kl14n+BmD3MnzD6YPvd5bCeaRWfYzwm6wRyfUG/fUBObXSESZM9wWmTV7hIHe4aOD0n/zPXh/oO5E2YfTN9MBXbtySIT7C/ncTIf8U+2P/H1Eq9Mkdr+a0qfgtYJhiDCBeY/qDth9sH0Mex65V4zKdPeYf7pOkmOQnuGiF+PuC8D3QMLT2i4wP0HdSfMPpi+BcLRkSVLgPJcn9e5hqQi4gEWntBwgfkP7k6YfTB9bzefuzijwR4AxfrgiQ=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            8
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            8,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDAxMDU1OTY4cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTQwMTA1NTk2OHEBYS4yAAAAAAAAAGGoo2VWLu2/Xi4fOM/X0D8KArBleb75v7NzcGhQZNM/jeognMoH/z+jrx9H94rqv+QCGvfgxe6/c5rCIsXj9r9Ycc9hk5ICQLLZppgigeC/4sUxvYq+xL9gLjG5cyTgPzaLLzD+A7M/msuLUlSM+b9OSHiV9VfUv4kT4JhIxrq/pksDBSXs6r+Nc8RO+T7tv9YNh7+QkgTAR+B6fupk6z/g11Y61JDovyv3cJulkOi/obr/2oW9+z+qlTgPUZvkv2ERAnlhntK/UtNF2Bjb6b83PHl6uOPBP0axGzuypAbAKFuxZiM2zz/h/kNm/IjGvxAxP7bvWeY/7lAz6iEx8D9iGfY/d9vZv6iILGMr6dk/S871S9Xnwz95GTgXy//vvxhXDDrxIuG/kAFtTh9d87/knv/QYOQFwJ/4jj4m4Pi/vTgpNfdSxT+ffirVtxf3vyDOPmLvcei/zqTC+pJX9L+qLNrLoSXjv7LoWpuXvuy/qf6JDyOQ1T/8WddUuxn+v7wS6PAXAPO/YarSiIxe8j8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDAwMDYzOTY4cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTQwMDA2Mzk2OHEBYS5kAAAAAAAAACsG44gTraW/TsCaYHCcxj/P1LxrG/zCP8SmVFt7ZdO/qOT3UZT/m7/80zLbdh/SP4MRFSrfrLc/qG8dVtetxj9rblE2SOvRv/QoNBSoNrM/jwDt2F1CvD8lm6/oSjSYv9CTSk1JKs8/p4wgjxAjzT99f8mK+3tyP9akSZRXnqU/aJNdZiNyrb/HpiM0gkKzP9SDPH5b1ac/suqJoQVxt79O4TD03jTKP/mncwKVlJE/56SSM8MNt78lKZV1X+nKv9UlMiUijmw/TGAAipMDtT+Vpz9AwfiUv675MDfP478/WGGQHYJju78GEG1ZZ8y9v/SzUN8BUJG/7as4xILvyz91OlNcm6bEPyffhz+XUaa/71svJAsgs78XTjUQJxWKvy68ZLtN/sO/w/Q0LFGc0r9VZ3gKxtC/PzveTycf1Ke/YW9C0ubQv7+ZQOyb8hG5v6gJiowVici/354zJcGYh78OtRN4BNaKPycbIiN0qLM/35ZYQ4qd0b9kGyIE9a62v6rFSMKKrqy/eWIbOh56lr8J0Q1qQci6P2cw6zYYI5I/FKlbGJPwuj8hc7Be0Puwv/IwgVXUFae/n4AbbdGEzL+hzdsAFqKRvzX4WF1Zmso/VLILY8D7rL9E/rGvw/e2v3GXSClTAKy/5yoKa3pJOr+VZk58QdKzvzu4Q77+Iby/a9GNhjAHkz92jlp+EAqyP11vR5AHjpK/7UJQx7Bxl7/L/7xEyqKtPy7+uo/5GL6/FhA8Qcw3xD+6Qye/40u4v7gfbfk/2LI/adO48jddqT+XsLB78pLBP9+7uLy2Hb8/Nv889Ub+jD+Y/JKkrDi9Pzrc0GfrvIS/EMnTa7pmwT8b4t9noP22PzBhRm5P34I/tbuBvpmoqb9dqSCpJyqZP+m9MTwYWb4/G3B6H/UFlj+phYURqv7Qvy2OEaGZ66U/zHJ852ewvT850iH/7ZOfP2tLC7o9r8c/RpnOYPbDrT8/nYtXqLWzP6i12FMkjoe/x+zKsCWgtD9A3t3XuzGjv1UlYH6h7Iq/Ds9LHVjQhT9x6h3fBrCSP7pfeJh0nZM/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDI3NDc0ODQ4cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTQyNzQ3NDg0OHEBYS4CAAAAAAAAAKaHwZIaaLU/0ZZB3gRUtb8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    8,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -2.4043328451580592,
                        4.072307209534784,
                        -3.129429383603385,
                        0.1666636965028859,
                        -0.002405407372369439,
                        -0.9169398562079941,
                        -0.5130181409744199,
                        -1.8703056170162453
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8
                ],
                "values": [
                    -2.4043328451580592,
                    4.072307209534784,
                    -3.129429383603385,
                    0.1666636965028859,
                    -0.002405407372369439,
                    -0.9169398562079941,
                    -0.5130181409744199,
                    -1.8703056170162453
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 40
    }
}