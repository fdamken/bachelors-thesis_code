{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        8,
                        8
                    ],
                    "values": "eJwBAAL//XueJBoh2vA/15CLgh9RoL+GiDaNM92uP3XWZIdLPqO/r/apJLt5p7+HfQdKFKiVv5JrN5xurKy/t2JF9XOWh79vRqem3kWmv5Slg4FXou8/2MB4qxRav7+tCQ9htueav1jyxGarSXs/DdgZXrOnoD/XFCSV5vKEP2Yi7YjHi4W/TaCaka4cgr8/IxIJCruKv6+BTAwiSO0/FadDrYKAUT9BJ5TWa62JP9q+mtgEe3G/fnoRtKztpz9sQFyNtRWAPyQMfKK4O5K/0nU4TS4rkj8SWNIi6DXBv48o+UnpfO8//i/psYZkmT97S4DgOPKeP8qv/z7M7Ja/us+VJxghfT83ZfchoKqwP4ScnhnwoII/Z09+YfuYkr9y2LeZzmOpvyPEWfBHkO4/ZGU2HfEXmD82OyzVUoqivzaBIh2ajoW/5TNYa9/osT9SeGK25Z6Gv6lv4b51tJ4/ersFdyUXpL/p+yIImQNrPyYxr+wIAe8/W93Go8+shb+TVUFWU4yXv2zJeaIJnH0/7DaUugJQhz+FqMNI+l+tvybru1rNLpM/xBtshGQopD/TfVHAAc6KP8+o9SgFsO4/xPjescfwhz9dTZEItDGUv4zc1OmXz6k/Zx3xhixPab/6rjSL2Nqyv9FPXXetJXG/FYmNkEXVqz+DEN99rnR9Pzrapl5sIe4/zpUE2Q=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "strides": [
                    8,
                    64
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.0010954737583692812,
                    0.0002151671909384326,
                    0.001282193877175847,
                    0.00014980227371382286,
                    0.0001757898310607672,
                    0.000135598105031361,
                    0.0004413586560191336,
                    6.159449014580286e-05
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    7.985235980049766e-05,
                    3.23863810677949e-05
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "values": "eJxjSFDRlfY0t2dgyOiVSf27j4FhWWBDiIg9Q0H0IYO9SvYMG36cDtmhsJ+hYdULzcM8QHVfhC4afACqu2Y2U5QTSV/A+shWA3uGBqfEM+xGQPGDp6y12ID8l+sl9jLtZ3CQf2ahDTLne2DNDcX9DAwFzJMYePbD7YPpS+ibGnEqBqjfQeeUoyGQvyCydJnofoYD//nvOAH1PSio+jFTHWjeZ849aoYId8Lsg+m71mQl4WFpz/BgmipTNst+BoFb68WCxOwZdriq7pbU288w4dX6+0/VkfwHdSfMPpg+Ef1PrgtB4aP9Nvqi/H4Gj56KPluR/QwLEneL3JZGhAvMfzB3wuyD6dvQmphpqWbP8OHuo4nxEvYMBzwTGE6IIMITFi4w/8HcCbMPpi9n41GDVgegv8QmTp2mvx8RD9DwhIULzH8wd8Lsg+k7sPfBq/Vm9gBAWMIT"
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDAxOTg5NTM2cQJYAwAAAGNwdXEDTZABTnRxBFEugAJdcQBYCgAAADE0MDE5ODk1MzZxAWEukAEAAAAAAAA6TfCs0+ndv5eA9r0H/8G/olaolfhk1L9Wngsuz2+6P+0fhFDJGsC/ies7LhKC0r9pMUxS5YfWPz/7/nQvstg/5e8AfJ1P6L8s3g+MVg/wP9dPUA0ZTfy/k62zQI4/8j/MgSA/GujgPy24ITs+P/O/AkARR81D8r9aZYkCe0viv+ZwbJFl58k/GonluIWjzb+pWMzLrCHXP2sD7fjj6+I/bFROhrRT27+RFgseVWjHP18LbsmEBOm/KzfLmxEEAMDjimzfdO7Rv/zm6D/o/Oe/Z5Pnp0vpzT+CEOXZjdasPxiN2L28Fda/wcJP7+bw5L8Aqv/S4/Dcv5TqGuL9y+u/8l5GEKTQ2r8lqiSgXeSxP0DCJeDH8dS/Ha3L3Nda0D+cqMyiKBi+vwvqxjn8y96/RLq8c3bN6D/T192X8yrwPxfrlP8u39k/RMgqVvj60b8Eo24kHFyiPz2AcGvab+W/qst6boqRub/5dxK+UyPiPxUqAAmdbOe/rdARDZ2Q5b/ApzOor5TXvwrXwIEIG+0/zSCZSnTjzr/cn11VmyDrvy9FjYikaf2/66psEcjq1z8w+V/c1bHJP7dPXFjNROQ/8RpYMa3coL9PZDzs1tq3v7WqTp8oabg/Ly4MIHkUsb+UsqykYbGQv01im2FEU+E/fBu3Z0XM6r9zDGNq0o7cP1SG1qPHX7+/+BCheRckxD87FOKM1PjMv9u/Z8Kprri/xD34LLY8xb9yq3RZNr3mv/TkdN3A7ew/PPUDS85A6j8c5QPJGIXSPyF57Lr8AqS/vEI2XlHq1z+ZNea6bkTyvyvpANUGEcG/7rJ7WE+Ayz+9vVV4ZiHgvxbU/K2UJeS/VgDQYyWj0z+mwXZRJhDGP7RARss9284/ngrDhHfr47/CdqrD/YvlP3hb6e/oC+I/Ekg04x6Z1L+UrL8F59raPya0DvvrraO/02QquyLf3r9TmC9iSn6/P4WSzuc/feI/cYzNVqwI8L862ZzKoK3CPyldBw8+c6E/nugDXJvn67/+2j2sIqLdv287iGDSzNQ/vdBW6J+H778RBdmOrAvpP6XvE33Gv+U/n3kcr9Iy5b/1dsAaMh+3P0Gb4xQe0Oi/3xxV9Qxhzz8XPEJ+KE/av7hqvsY498w/ELS1z9ER4j/kBSlz8i2ov3FdzRx3/Nk/N4VNYbQ97r/EtixBkK/wv6/Gf5M7lK6/EZu6ZuzUw796mhLPBG7Uv5SKPwcJtOA/BdiCUSwPAsCKF2tdUp73v+yiQynVBua/9H3WKn9C9b8YH1Wtu/W4v2jaEYBUh9+/fQcO7wYYx78AF1jiUizdv3Fe5GucjtE/xfrqP5oE3D9MQWkt79xIPzawtauCROI/f2t89wX85z9dKIa7JMnwv78hKO+Xl/A/D19Xs7dz6b/gp2E/RhTfv/6Lld9Wxd4/UQRT+tGhwz9P7CrehCz5P4sZx49I/L6/JkPlVnBZ5D/eNOv97z+0P9QWgPoP8+e/M10gzNeC0z+7wXRpTs/TP+BjsWQ/Qdk/w0kgIbmz2D8q0DbiGlvyv5B5p27xW/U/1aUp/vS79L9MqVUfv6XtPxjF6+V3due/W/JIES9R578Yx4+/aYvvv7jZ4WAek/K/79+3Gp6ltb8atmyL8tO4vwTFwGFL4dE/3COEv3l58T8jWnhBle/kv+qe0LKDwsq/7o+X9miI1r++0kwoIwHvv/W85z7I/cw/eLNMy95e5T/U2XlQq3LCv/I8X9TEOLe/rCMG/DUe4D/ss+H8tSfXP0igzohxweI/+EiP18735z+rrt6Bv/zaPyCaxLs27tC/pj7AtvhFyj9oz4aXr5nvvypkVFJ7tqI/yj6bBwFPzD++s3IrXALHvw3lDY41d9+/XsSsNpin1b8EJ2AxSALFv+dIh4oCSs6/Ts/K1ehM7D89w39O1Ji+v7TpUANyEeO/z9MW21PV1j/eCJ7m6Je3P5dNYTY79eA/iGOpJsRGr7+NJgG9dLHdP5bALRtpyOW/W6knpHGE8L+3kYaRysDZP9sIisy1FOU/GbDxbGpb8j8jj1MqE/TVv7ya1iXRN7s/PGAg7O/Tzb8n0F8jUh7TPz+mHO3y8aA/wt3KitJ1w7+72+DxGZ7iP0UKt9wKz9U/ljwcOUyk2T9lNSYYWtLGv+uFqLgGR9a/XeZlck1a3j81WlTxgf/Mv0Joq9Hcie0/lEXtKlZK2T8VZz1QIN7IPzImOkHnK9S/LQD1LFlsrz8PgjBbPmG1v9Hs0mVDYNI/J0FLAsc3/7+f11vtQ/TSv8akvU0R68K/B10TfJCywb8eD88LYh3HP9nhazegIs+/wxCusf2g0T+s3gNa0CPEP0NvW/QhmsY/csOr/Kna4j8gqtYqONjxvxcFQYrC+fK/A+lz/yIwy7+uS7UIb/rRP4JrXeA9ScM/aUFYvzA/4r/pSnq/PDDwP99xwldtDOY/Ggy3oh129j+Y8i9awMfnP9I2F0KFDsm/NbgHvvgs4T88Wq720WLNv3fPwV3PgdG/pZ2glZpuyD9n2OR/tazAvw+MnjuWKeo/vxZwOZe28j9Z1ZKLZQrLv7mgel/0EtM/GOOQQbxMvL9FBL9t9d68P5YPEu10hcs/PWAL0udm0b89YIHST4vNPzmuqGiNjuM/wNcOlHxx5r8+t+/q+UPtP0iN1fJ2pPC/q0BRWKLZ6j9OFY4PNifKP3/WVKPR2/K/OPI+/PDV8r/oSMZ5Vg/9v54t0BQ2odG/oUPXO6Ek2j8j8X3W2jLjv5Q9klCqP9k/59tz9Hp8zT/+wSnsU6PZP2yLGWjtHNI/Ri83X5/OxT9YhQDklAmnv6qMoL8HBN+/rkWYlwx1xb95b6D9zpjlP52XOWKdftS/FzYPwh5U279mbnSaCBqsP4pHrk37s+K/MCymz4/L8D+80W7VlI7ZPwNjpUyKHNg/cPLw0naV4b8PWzQGBVrRvwiMw1Gjr+W/JWK23epvar8jTo4HlobTv0mVZ2uxgrM/A/yIWi6YwL/E9drrYtjZv3+1fOOTRu4/s9LmJoNwkT+zQaNHBpewvy3MA6pWkd8/3vRQL9zRwb/lrvQ2Ku7zP5o/zYPyFPS/Ak0TXDx58D/Ms7HAOB7ov+SXo1x3b9W/etJI+63/6T8VNj4vOWbVPxV6GXBKZ/o/TXHSgLc58j8tt/W0oMfwv/K8dq2/xu8/7JlFrJWa8r90xMpt3bLCv9+H7a/QBeg//yklQnsyyr9WtBJRKe7bv8Tsp1f2D84/+FtQIRl70r8slPsVzV7IPy1dsG8yy9Y/51ZqfUqAo7/Xxh5D2JXVP92BkLwk9vC/HEykDFHx97/r2FO54tXaPx3Cp8LEBca/zZDdBHtd6j8o0mF1+Mjgv+CdYLrhavE/Ui1H5kLA0z+H/+G/ojn2v7pzr1kPH/O/PUVgLfOZzL+Y0yKitJbAP46z/CGl0dS/0XPwxUFP3z/MUV7ZUFPgP7HSaW3hsuG/K32FQVqc2T8an9E7m1bpP8BeD61P2MY/Ej+O316CpL/S7LHzntfWPzS1sn5UwOq/OAUzGEGq3D/76DO9Y1HqP7UJi1VC9/+/gSRZ3QfG4L8/Krk38uHpPwRb+zmNvOO/xoE2cah9wD9E6fyqcdT2v25Ct0xdUey/CWajv/5AlL+OdcDTjPnkPzVdT5Oqwe8/KeSHS9K7xT/TTjaDXn2RP4h6uomnfcg/7AhnMj5H5b9Bbps4G27ZP2wtk3TCq7Y/1MU1tngW+L9gUh3xhUnmPxUKmrj/DtS/ENgQcJZ01j/SoMPLyYOwvzL1lj8xJdM/nQ2I0KEd1L/JGol9m3i+P/teKQ1hPtU/sq7KuHKS4z8wP8bB7SLYP4Ptrofja8w/qnthbSqUzL9BHk3EVbPov9AIAFPaLOS/HQbwLXKh7j/ZVuQf+s7QP9KUp7PsbY6/xBuyyVWqsb+rhVflHAzmv9J85UqwxcO/USRxpCT/7z/vB7adsU3uv1iND3Fpcqw/n9ZvV5f1cD8d106wacrlv8ENB6SektQ/pL+vnaHg0D/AZ5YBlwHEP2JQPhVSGve/9RyjNbP19T8+XAqvOroBQMU7XTKsVfS/AS5Z8szjsD+n0y9LTcnUPyyNSIf9j8E/4j90wlu+3z9u9pncB83avwoYF2GS0f4/hgBMDd7z9z/eh3j2CUf2vw5dws5w0KG/tKZaoPQO0L8GOsaVvQTgvxPp0ysSTtM/7wP4ZioM9z94no/MvCDlP4yXXtuebck/mjEnrA46wL9sHwwH8WvjPw=="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            8
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            8,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDAyMDYxMjE2cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTQwMjA2MTIxNnEBYS4yAAAAAAAAADOGAO7rUu6/10Bi/LpX0T/fur+BKODyv6YnJV6zzdQ/VkG1vqNLAEB3tap9R7fpv6puukqZGvG/cK76krNB+b+JVIhDfQgDQBQD5olB2d+/Mvxj+BOA0r9GrgGSB4niPwV43Nm969a/gn/IxIiC9r/l7LPSLjypv6MoiBsdqMu/X6MMuGGv67/9WqsNfobvvxcJUWbSPfe/bEtZa3so9T+3nz6eARLrv4YDxLLfL+2/AKFzEgHU/T9gVXPN9WDHv0R90bOM9dO/ono1TMGH7r+i8RM4SlTPP0T7vD6ynQbACSZ8Og+B279ssWuwkC3Hv5dv+tEGbuM/uWsHvvBP8D+JDSaQhu7Lv+j/mWODot4/bVlxlv3DsT/JokPR/6Puv/uAXqQyNOK/Wj4PCiWj7795ZezzVP0EwC8Bf+s3Wv2/coLsXL6XxT+XdTeA+eb5vyTzukeZDOG/r8WDZHDk9b8ucHnECY7kv4P231ri9u+/Wo2doEoj3T8nh9yxD8QBwK5HDcxL3fq/OiZ10oGu8j8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDIxOTU3NDA4cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTQyMTk1NzQwOHEBYS5kAAAAAAAAAOrEFWdTkZy/ENdj4zmFxz/72Uw8G27FP2ynLBOQJ9e/F3OFVhdULD9oeZOF1mXNP3wexi6AY78/QH7OVfdQzT9wgGHdNzTQvyOxg8sKprM/LwoYRv5BlT8NiWIukO6fv65XCmiJCdA/ZPsCwZrExj8J0O2BDuu4v8Oli97bMoY/avfAuKSKsL/MEso3M2WbPwQ88jjZAJU/aeQ+ynfhvb/RmssDBZTOP689z4qGcJc//Ym/DUK/wL9ry2b4KNLLvy7MRSQhhIM/GzZUIC9QmT8sV5x+m4uhv1BqPtyiW8Y/SgUuw9GjX78TqEBBMM60v/ORqWDHCYs/ssIBR0zYzD9A9+njAB/IP2iec4B2Opu/AKJW8CFGsb8YomiWT6h1vzLQLT4X58S/ioCZ7bUQ07+UZVvipyLHP7pkFXJXjYg/A0g6m3Smtr/1Jl4Lj6ONv12SUw/fccm/hEgfcrcqpD9pssiTKH52P4UqWEopQ7E/1F56QGrlw78mqfHOSjSzv/Nxg5hlJpm/aI9UAXbwmr9z9asUertwPzmcJeRL3VY/XlMInoHzvD8oxKDmw57Dvxp4xc11z7A/5W6LY/1cxr+BtRilil+Xvx7f0ty+wcg/HIAmJHnftr/PRF8laaHDvxTRc9xs+GC/L8btPy7il78xfXdakv+3v3PrC7To7sC/gagy7LVdqL8cE9tsk16BP/gr6XlBjF2/waGa3Q6FiT8q7AeHjlujP/c9k1owWMa/RdwB5E2dyD8hxEnEskbQv5qoHkbh7rw/3S2D1+zbsD8TyFC6jaOEP0R4i1nXe5w/SFsR/JQxlb81Ga9ITFnBP8uz+IvaZLA/ySa9tI1Fyj87Fjqlq8CiP5WVFgZvFn2/gtBGQ6E/r7/xsJlvCE5EP0qC6euNFME/45zM0OE2mD/N8PWzq+bPvwh8Zl07Rq4/Eh8dZh7/vT9zxezxE35kv/Jfu4bsuMY/pUarXSHZtj/sI7U1+eK3P+eVW7LAM5m/v5fA8N6qjT+K/81A6Ba3v4SkY3k3VqS/KJS0tyyHbL/0/TGpAcimP+Zs+tipnaQ/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNTI0ODYwODk2cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTUyNDg2MDg5NnEBYS4CAAAAAAAAAJLDU5itObc/0MRrvFWBub8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    8,
                    500
                ],
                "values": "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"
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -1.9960812228604277,
                        4.1333782224088145,
                        -3.3739085770396064,
                        0.31476318123675434,
                        -0.27800542205423145,
                        -0.873649520597535,
                        -0.5530605433285315,
                        -1.8677570895718978
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8
                ],
                "values": [
                    -1.9960812228604277,
                    4.1333782224088145,
                    -3.3739085770396064,
                    0.31476318123675434,
                    -0.27800542205423145,
                    -0.873649520597535,
                    -0.5530605433285315,
                    -1.8677570895718978
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 75
    }
}