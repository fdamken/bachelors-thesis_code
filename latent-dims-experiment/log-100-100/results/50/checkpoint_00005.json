{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        8,
                        8
                    ],
                    "values": "eJwBAAL//fLpj+uapu8/mzCKtERPnr8aU9+cauGCP8ckKF1+y2i/t13cybTIib+pG1XR+DKUv7MADKOfhIQ/sUrzpH4Ikb9Ebhp0ayxEP+jOqrMvBPA/oYDC28nMjb+wnYokWuJmv0vxmer+DVK/DNfkebT8oT//Pmk10MCcvwGVQnvYbZS/Rm87KlXjej+X8E1ghIGgv7Lt+SXwE/A/ySZRGtRzd7+YPykSAxGCv5j87RWl/I+/M5TVpoofZ7+4kEcrozyQvxOl8DW4mk6/4LiUMnyqj781usxKk+pJP74yg0Fxqu8/hgiDp28MRT8+qLlBdDqNv1zEhCrQZXU/Vz7z/15Seb+9yh5hV5d2P3d4ZMpAi5e/CXcgv3ldZj/BubKVsqVQP/2cXkHmSu8/3GEKGWvSZr+Nt3HGWtaCv0+6P4Jjmpq/CYQXUzLwZj8+/N9x6d2Vv9qcTxBqH3M/6UZvHoHac79Zm7q7AmGOv1NXuBPIJ+8/28l3qDaOb79l7mmTj7SSvzCiIPemgFi/RD8DQUYHoT/RaUePRJOHv5xifAw2JEI/AOUB2OUYiz8Kq9QM16+AP3Rmso06ju8/A/VdLXZQmT82qL1XBks0v5/1Xc34k6M/K/3FSQGEi79KfrpmMsVxvz3cGxMGWYM/padi+BBooj+xh0oUm3yav727OUEodu8/zQ4CFA=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "strides": [
                    8,
                    64
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    1.061124188020146,
                    1.1715735848293172,
                    1.4666115428546895,
                    0.9964548648097193,
                    0.9947415620764206,
                    1.268802637021563,
                    1.051124208920331,
                    0.9582012636537565
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.02394327973991858,
                    0.02473366033275613
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "values": "eJyrya50WL3ohf0CF6umxfsX2TNsU2qfe756v0JtelrTs837HRgmM2pq1O5v0LW86l06Z7+N7JKlG+8utv+TseJASuF2uL4F2uncqo0P7BNsV2fuFDpgz8Dx8sGcrkX2CZH3hL6q7rV/wGspLlRzdH9C/4a3oTfW2jNc8dk/Z+ru/TD7YPp81gnfaJ/x2J5hwpnpiscC9zOsal0y50nX/oYXJXmn21faR5j0Rxw/cNje4XyVC7/xXnuYO2H2wfS9kPv73YL7pT3DI62Jim+m2jPs6p+ze1LD/oyyjbesbmzcH5Fw9fTL9QfsYf6DuRNmH0xfXGD/+mPcr+0ZHLXu5GettlfwmXrlvG+//QKJZ7+cxJbAwwXmP5g7YfbB9M0ofvD47oGn9gwBz3ryv8+2P/BPI0pOao89LDxh4QLzH8ydMPtg+q7Nun1fTuCZvYDd2Tl/eufuh8UDLDxh4QLzH8ydMPtg+hJmKc2/tPyxPQCNxAFB"
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            8
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            8,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDI1MzY4Mjg4cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTQyNTM2ODI4OHEBYS4yAAAAAAAAAI0Nl4n1zum/eQ/ZI0f96r9BFeAAMvrlv9zD9ssZcck/eNtwJuZj6z+zUwx9qJ3qv5irucU3BLQ/LN1r1ten4b9fF7A0ZN/2P5DWDhFIVNE//EHdacAFvz+CNJ65Oa/JP8E3P5JnRtK/ABNWjdZs878wtyTYA5bsv+I+wPpm5rU/Ezo3eQpetT+h0ZkPK3Lqvzl4Wa6a8v2/x8qz5tda0j8QEZBEIKnGv5Afmiv1Iuy/+cvy+GkQ+D/FMzHF9OXkP2uBzTqrErC/IjrtWTaE5b9aZinTxQCnv5FxKUGRFPu/IRNLITx8yz89N4LoyJemPyeDV7/aWPE/q1VLr6G1wD+TNbuuzEW0v11XYBsN18w/0Nu9fLZa77+Ag2Ari6vrv/UhtOikBsg/YDRK/9aS1L/zXMiLRYT6vwM8Fn9FePK/VeMOjFD53D9gXnPFItHpv1D69/3gl9K/b+syffSh4L+c/slIKSfjvzjI9wyiKtm/5ebfBFA73r/BeqfwOOfuv5SC/+TXody/WzGAKzYr6j8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDIyMDM1MjMycQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTQyMjAzNTIzMnEBYS5kAAAAAAAAAFBOQtQSqre/wvzNbuyZwT9Kbo6NMQ7CP8qVzidoZ8i/BCh3ilIfoj8izfc5o7nIP+qzZM+9c2o/bMzbbwhZxz8zx2m8wizKv9ghMii9sJI/Oi4dd8DKtz/c0zhjzMjBv8iayzrPWMc/rAKi530Uwz9HYvwqwnzFv8kjnEdy6LQ/iu4QHJiIxr9dulOIxVO/P1HRwmnu9dA/gmy4rk6alT+SHhCqx27FP9G/fRE38bO/AtU6l6Uasr/njn3BVcvJv5ptj4DgY4o/NV8WSE6dwj9jhPuZP/bBvxoPYLj47XE/ffDxdrlWwL9ZjEYKuHe1v69n+mEVWZO/owVk4493xT+k0bAXX8LDP3pmMYsclcW/1bgL3V5Lm7+QwwmUAdKzv5BFv2jJe6+/89/TAlU5zr8NGNffv0S5P5NoeGnOhLC/40hv0KSVxL8uE5gMPNLBvyib6bF/ac+/zczHlZffrb/k0Tk6GfarP+s/ub2BkLg/HordyIaq07+NDyrl8o20vzoK5TYHLbS/ly4yBwNHoj/0laD86Q++PxFJuSrRK7o/sp3xFKpOwT82+d4MBc2QP+HgQvABkr6/Q1pWkJo/0L+vctCF7DmTv/dzx3ts0L8/Dl9Ryq3kur8guOobX5LAv1w5jFv0362/Gb4AgZ2/eD9N+/iSEV+0v47kdzJk9pO/aOtvVrN8qj9zy8CGR/urP1wMq0lq/rU/0rmhQuJuyb9N7IGtrITEPylfYuZoe8O/JxMZ75Fxpj9ByVwuhevRv0jXxmDtQXK/OECx+Gr6uj/oRbQtERC7P6rphzQWRbo/uSpXyKQVsT/lHHxd0WvKP38w+lmjXHG/5XuVIVbSvD/cf6mz1RzRPyjer+PP0ZW/EBYXuI2Hw78JqBI9nMOCPyQOqqOHT70/c6zExJS8uz/NizSYcffQv+AogDto76I/3D3gmmfxtD9Zn8VH6Q+nP4DK9+udvb8/2e4YrpLjgz+8NhgJoylzv26A43pXnbA/m7JcR5Efvz8MMSjLhsqhP6kd14H6rIY/1QUPgYIldL8+8ux8LCCmP99CrtB2cbI/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDI1MzY4ODY0cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTQyNTM2ODg2NHEBYS4CAAAAAAAAAA/v01W90Zg/o5xbgCDbs78="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    8,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -0.43517329429482604,
                        2.6376102325052737,
                        -1.7075831279940656,
                        1.8953673372938638,
                        1.0590274125623655,
                        2.458552031446593,
                        0.4273118030023469,
                        1.0008230049698146
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8
                ],
                "values": [
                    -0.43517329429482604,
                    2.6376102325052737,
                    -1.7075831279940656,
                    1.8953673372938638,
                    1.0590274125623655,
                    2.458552031446593,
                    0.4273118030023469,
                    1.0008230049698146
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 5
    }
}