{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        8,
                        8
                    ],
                    "values": "eJwBAAL//WUO8XAE/O8/89A2sD9TV78z3gHMBst1P4vjJuvtx0M/45Fa2jnlRL9oT6bb4EGBv7A2nJbpg24/9SCbIJTedD+rAwOUf4FSv6Y0Fzm9CfA/jzDWB6hBfL8QD/0IRSYyv8m8MXVuKBI/BB+pZ5gGhT/g7ykFnRFyv1XXM63RJXa/VAEIrs4dWT/azekg8clhv+5dVR8OEvA/IHYbuWUtCL8+uvjnMrs9P9ZDd8KY7Hm/eH/4B6xHZj9QZAgdCK1nP7908BhCHkK/5E6pmeqvLz/XAmvWBm4yv/VBEvKl/u8/KwQBzGoaOb/NvsB2SOwRP9TXRfZSfAG/7DBJBYfgLj/yyq7J4j5iv9UUbkoQd1I/k2QVPrPb8T4zzqDE+7Y6P12lxuJX9O8/Cr+3BgizWr+ccpDt/+ZFP7O5YrKTq2A/7ciKXF+/ET9XwKB33VNbv2BTozwplnU/PYk/lulPMz8tk1ZFQyRBvwJbq397uu8/fjdk8L/PbT9Wrql4a3ZzP8LqM/t6QS6/SPqJcNKYTD/IOYXmRfJivzu7eH6MkiO/uPEjOTmX/L70054InlhrPwhk2owY8u8/T5CK2KZeX7/wIyUW9flTv7PO1VSryWk/YGomgCVQgr/gOLP8VQk+vwsVlSRZKv2+7FRyO6G9iz9RC7LN/6N4v9TxhYsGwe8/pNr74A=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "strides": [
                    8,
                    64
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    1.0396109228624304,
                    1.0456390152718005,
                    1.1362596798934534,
                    1.001973764653906,
                    1.0043994360661717,
                    1.1327682377113577,
                    1.0200879681983288,
                    1.0048154157176725
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.3962379314258651,
                    0.23186342462031834
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "values": "eJxLUJgRte/GW/sGnQ8Fk6LK7NNMG1YKvJu/34M5NOzf/jX7G4TWu39aV7ifYZ9L45fgyv0BJzUDrsyYZy/TkF+5YtMGuL4LE2fwOKa+s1+2ZGJh88PF9gyHdz2/V16338GGRSCEd549wwa7udmCM/Yz7Ji/QX1K8f4G9tyb93d0we2D6buedntbne07e/tIt73X9k7dX+uzRmB774z9BYfyhb9GTLG/elpyWXtbp31ZcsfNtEOT7GHuhNkH03fxW1jzb9Z39gwcUpMdPmTaM6wT+bHHqGH/gp0y7Iv1ZthLGBu9n+220R7mP5g7YfbB9HF1xaRY+r63Z1ALmVh2sdeeYV5W8HmvYPsGN9WYVfEN8HCB+Q/mTph9MH0xyrOFljkDzVldeqRTrcS+4f/f2ZmbJ9jDwhMWLjD/wdwJsw+mr2xR/JlF7u/tE/qzqxZ9mbcfHg/Q8ISFC9x/UHfC7IPps/2y4qa9zVt7AN6i9vo="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDA4MTk2OTQ0cQJYAwAAAGNwdXEDTZABTnRxBFEugAJdcQBYCgAAADE0MDgxOTY5NDRxAWEukAEAAAAAAABpnwkY6i7Vv/sDVIbSa9G/nyQfpkoa1L8WROHnymvSv20P0wPBcb2/kpKSsw7Klb8z7y0HiSfSP5LhEm0zc9c/cnFLIkzkwz9k1zslV1jbvzRhw34fR8q/RjKj6Tvct78/wK7PnHXeP9mtYST7dN4/GZ5DcMZfhD8Yfa5J84zRP/1kT58Rtc2/u41IFHHZyD/YB8GoxAzSP720U+clasu/qV45U/lIxr88/rWqMdykP9OFQE1rmNK/OvyWpYlK07/yZSANQVXWv/qBY3Qhc9G/Nr6EcNcf0D+5XZ14m5bbv7W8RtXYyLK/e6eS12crz787j5GdZWbPv6LQUk9P7tC/tGsL1DVP2r9qskQNhq9wv5a0jFOLyMO/8ysaRg060L+jeqWGzHTbP/quJU1Nb9i/yhKLYrKf2j9oGYicTsDgPwHA5GXctdI/HOG93Jag0L/3Uc5/tY60vxAlhq7LzsC/QFB7K+cr0T+mhwdTHp7RP4Q8msyOCb2/swxRnBq01L964PTlHTuAP8+XPQfw4bc/+kdtim9qwT9crNFo9TCeP35WgVVB8te/P5HUPLD8vT9lbu1dBuCXvxKRc14VL9c/mnJGZVDQzb9RZ9dW7RTDv2X9EcUDBsA/AApafbnKyb8OzYfsWMTJv7puI60mXsk/z0fRDRhky799vEJj18PNP8uBksbedc6/09J/OW7+xD8B38uJltW5P7gCK0a9qr0/T+oNc7rapr8lv1IT+N/RvxVx12W+o8e/Vfkrwnt40T+MauWxHgO0v4kxZZv00da/YSy2mmzLxD9kWbafQmjhv0FUQZRhJrM/geAVwU0Frj8K1S7d4k/Kv2tNR7LwK72/4vVOB+J/xj9xDYDhNH12v4ajUX63AME/zoBvhIvS0b8VWNSdJKfPPxE+9J5NH9U/U2jaLPUhyr9bFHpIXKHQPyuvz4Sjm9O/3GJVwbf70L/kzfo8dEbVP/t94JpHJdM/eGzxcxjO0r88U/Xmc7nGP589ieDprtA/y4IqcTto1b/tBy23C+yoP8Zsamjcj6Y/+x/L/kVw1L+NJiZJVPPQPzD9kuG+D82/fKP1D3Cmt7+RV0YlEQjSP+dT8l9YY5c/1PMikpDLvD/0I3lwgs2xPwbwH0oIuqm/DKh9neaLxr/4dyVLPlGqP4NtMF4vSME/3jJuDH9ps7/Lg9H6xRnPv7/mb8uUo9+/Nxls1J0mxL9SEvPwNw/Xv0QwmY65vdQ/qR1YSRO00j/Bbh2A3WrAvw5S7E8VIcU/9uDj/mSitL+NAf+84S3LP2jlHusQPsy/pEy94pijz79XQdJ5cF7Mv4F9oSMkmdA/tRIbgrcbob8TSBUinW3Bv9DTCi8yPM4/WRz1nyc60L/oFotIF3XSv8XuGezrpcU/SVKQsQD30D+FF0BMZQa0P5byCDZapma/ID8Mgymq1r9w0CgTfbLUPwRyjYlAp6+/BkW/D/fJwz91O3Nl94q7P0LHyO1eWai/CFd2fSBRxL+WdhsUgFCfv2600pd1/MO/nTe7mgf/wb9P6kqw8mZ+v0extUtDgIa/b6dVPpaEpr8T3DxzGtR8P0L5AE7wDou/eaj1yHyclj/mTiii0Hh9P5qGPx56TpG/h/5frlsbxD+/gzVlK5ixvyXTuuWgnK8/FlHc03iwwj9si4SXwKW1v0F4bjC6gc4/ym8frs4Ruz8vfFe0rsXBvxGIKlOrkcy/5FVHt3u61j/6EF9eGeKpvylVSLYStZK/0/ZUrTpE0T9BunqW04jGP3cNvw3dEtM/vrWBCapR1D/LIiLFHwy0P7Fjgj0TadC/LjwYWH13xj/DBKcpBx/LP2KSLYshm8I/VY6cUwbjzz9AbuKM6DXEv3TFAu0EadO/chQ6WNc50L+lIGIQWhbPv5gBFGOe5bS/jHUDlk8Hxj900n2K0Y7FP01O3Ms7qaW//ajxInGH0j8vxMuq5h3QP5POxzdcC8i/hLnYpETXwj/JxOJt1D/BP99jt+LTPcq/E1c63vUtzT9OyU2QB33Av1bG74dgp7k/juC7WX7Ss78jLGwYYZ/UvyfXODD+wrE/YbN1CVaJwL8YvYrzX6jCv5yKdVgal8U/EuUIN7DEwb9dVfLyuP/EP88SkBUNm9W/VqOMKjoe1D9nHwte1e3Gv0c6smHQJNG/06S3laljxb/0xf1eDPfUP9G+Qy2xodQ/+jJJOGsVyj+u44fIYnjFP9xlkodatMm/WrA7q8cSsb9mQKcx/XfHPwtorwnYvd2/4d4E5Q4k17/rKcge48Ozv7RGFYVzvba/zAmK5QB5vz9q/5fYLtrZP9yVmXWXVni/ovEHlA39zT/0HE4OhZPUP2AZ7/Bak8y/YN9dZAxD3D/sFK1gwUfZv0QClwPRQ+S/VKaoj+Bgyr+uUlQ8ZxW2P0Kz8hs2D8w/EzVxvY4+3L/ArVNSURvZP5I8mbJVUVm/Gg0UdEGI0D+iJpxdvwyRvwpKaYtp0Jc/Tcr8Zsobvj8YVb7nNU3SPySmH4jOhak/B1qAVXhx07/yhVMq2SLIPy2cxwnNz9Q/+vQSqEqmyD92Fq5XYWbYv/Iwxu4Pbbk/JP4rRIoLrD9Sd4AJ8jS/vz3XhbctxJI/2+eig1tmxr8oGqcI4NjPP7N0kmCy2rQ/2rP1vzGGrD9yfNGCGOXQP4dRXls2w9C/rdreI1o61D+Bp+Uk3MDcvzCgMB/RLNi/zsPjFCQXy7/XCx1Haxixv9I6UAPpB9C/Wr4hOJE1pj9ZCLEHk9+yv/EvNTGE19C/O086rYr9p78vuZfIqVfEP0nU9yR/hcw/pXtJk5oVob9qlFvYx/DCP4plfQRskNG/JTwt7i1tyr+MIoX6Rm69Pw5xEQJIQri/LqjMBosVwb+3f3R0D8+oP9pOp4jjUtO/0UpMAjfp3T9qUubob5vBv2VwGe4ekrm/BJVozVm8hr9WxlshHOHgP3ju3OZdH7i/N5dW+1bitL9HJpufwQTGvzo0BpRFIcw/t0HBXpkPxb8FB/E0QN3Iv8hscYUgSrM/pyMHl2h/sj/qz4qNXHvCPw6EprfEkL8/Nu/Rtt040b+xPAILQdHSP7J3gbtFPdC/lMRcb9vyYD82UTtIKi6/P4FvFz0oRc4/4xZwB38jyz9I17JUWnvBv11ZE46KRaw/Tb+Kn4B40j+HzOfz80XUvz8NZp+2D8i/wRcP1Ehzuj8gyLnMLBfSP2ptgHUMZ8G/5bCARNvY0L8FjlyrdJnSv2LlBWrrKZO/47ikjaHEsb+pKnPg89S0vxRLrf8ZDuQ/yT6SjEaO4D/DrWdDAjqXP7Xqfw7e7+O/3xEqjC9TyL9FlY+Q7djdP+viWPa6n6M/YTaG6QX/wL+yLAiha4p/vzZNlIGeL+a/KRJ2w7IGzj/xsKiBPLTiv7wbX5AeSN2/NaSFnXF+zD+OwUVfxUmov6ZZJ/SCutC/4fWdRK/lzr8l2XcGqYrHP4uB5PnMXM+/K+hMNeyExb/VUMIgNLzQPxfJqJsmZ8U/JtR7ZGzJtz9FaGuPuTzZv3/uXzBQId2/g0yt6FNv6L/7m7iouZqrP2gSW02fIde//MqzL0Wa078MU5N8rSfZP+nWqGEgVtW/6ZwPrZBMzr+s0wF4yWvbvymn+kaIxNM/W+Zs0j0Usz/mk2UtvT7KP50Q/UQFJrI/qx93EMFkzb+IVSTKn1u8vwaErC3Jcqc/Yss2cYHl3r9dYM0Kst/Qv+fl6dANqtA/UsET4q6Iz78MCw9kCevjvzHBLA7vWcq/EARQXUtgwj+5o0QU/gqiP2CMrJC2nNk/G01tsb/pvL9mbIc1yJPAP2YgX40QUsY/u5mza0NDyT+O8BRw0HLTPwcf0oDQ3ZO/uLbHU5Lan7+SWdl8OajHv+iVFsrqysq/UoLemMTTyj+WEIDCWSVhP21gJ8P6HtO/NJeGarbv1T8cP4/nfJ/Uv22t9xZrp7a/1GGjJIJ/0b/viWSYlIO4PxUSaqaa+8s/8Rf+b8N7zj/sX2cG2/nFv7jFdzM6Y6s/Ss3/NDJc0D/ytPW+YZ3UvyHbKTsov9y/4wJeqWB68r9YI0JimGOrP5g+mBmiSq+/fFkf5APAsD++VazWr5jBvyV6IdkIrrw/PrVmA+h6lr8T+s9PbO+qv4ZacOmErtC/LQ55XDGakj+boq7j6+Ovv4wlVzWki9q/DeTMNsBs1j+CZmqfyevXv1a2BX9vhuA/Sih3e6LC5j/XruD7PgvkP6Hn2T0+9ss/AazEb6waxr8AnYIyVAfXvw=="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            8
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            8,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzk2NDgyNjg4cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM5NjQ4MjY4OHEBYS4yAAAAAAAAAO/laOy0q9a/w1yIggVR5L+7gophCxPWv8M8D0ZOILs//9gosZiG6j9XI4DEc2Tev34LEBMmVHq/99u56Sx35r9H84JV4L/YP2CYZm2AmLQ/YDr1okKsvz8s6ZGGqfrlP4Ii/T7Tzr+/YNRI9iO9vL/SNYnBLiLAvzizVprMsnA/zTq1cO2o2z8DDBs9fsTwv8Im7e/Ct/G/EOnvf6cQwz9H8h+l2xq9v4Uk62+Pn+m/SqeydAug6j+BTaXDMfbeP9OhSJml0r4/yHn5jCTy5r8WUz+p1NLRPyZRl+RnGfK/qSqBVeEZzD/vuo0H/5zXP3CIP9OTh+s/wwFBTSxe178nwHZpnO3Fv2N1fvrNyN4/1fxxTyNg5L/NM2ieptHdv07aT+exjLS/l6mcryyP4T9kONE2iPXnv7VmSrlIhem/PvOdwrXb3D+e6wFqGHnjvxjA80UqR7s/8Tdc5EbZ3r/x6+4cBga/vzHxbOzBJ8A/wuhLzWyh2T81PaZJNCPgv7HqD2vE4ZE/V+R6gFdF4D8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzk2NTExNzQ0cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM5NjUxMTc0NHEBYS5kAAAAAAAAAPv/oJI+D5U/o/8czF/ntj8NHRIdRfbCPzY3P3qBfb6/aBPOMoCBoj9R6rtYKdnFPyUbsMsX3pu/ll+McHT9xD8GaIE7yye9v+8bPLwiRHk/Nj8xMMthrj9P2KTffIezv5zg5yKVxsM/ufgVDPSstD/amC8SuQGJvxpwmDIuYcI/K/v0wx/Yw7/Ll4NxvLHGPxuHAxxcXMk/g0oOjEKMkb9EPgMD//7CPx4huOjOdcC/Ct8qHBNEt7+Qb0ns8Q7Ev+af270rt7k/La1DChSzsz+jOrrJ2wXDv4l7GSn+Xpi/tzEBmLNesL9mkuXTHM2zv9+AstNancK/jGu1rRKUxT8PPTtd4l/BP6AIiLQmRL+/S5hB/AIsiT9lweZLkcyzP5uY/IKducG/QbvIBEHGtb/34PfK2ymcP0vuVRAdP6a/rsLMi/5Vw7+QSgxG99+7v4mVbR65m8S/YDFD0Hyeob8zoOHs34i4P2/SlEVFbbU/anFJocK0ub/iCpSNcRywvwP/p5sHNKO/oSVd5X/Ipz+VgvwcJCXNP92WpDOtUcE/b1HzSS2kvj/iKtlOr4acP00Cw/atrre/xPSf/N3ewb/aRYuxWbDFP0LKV2P5r5W/ey5o/F0XuL8bC1ILMy7Ev94wxuo34MK/jzFTdIpLqL8W5tO66D2vvxc7viIY14o/WBlXPumSoj/Nyp1bwQTEP5Rq3iW3EsM/QLsRgN0l0L/RSES20f67P3u+LE6AnsW/uCXJknmEtj8M9H5Ali7SvyQw2AZ0QZe/LaHqOBC7sz+KgoPCJ3zAP9oo9Z8QXcA/7YLOXC4Qlr9xpgJW0b/GP+FDRBmRL0o/Q/Eh0R2ttj/BREzy6ybQP4GQlg7ru5O/qdAhLxL8t78oIZte7hV9P+P9PA3G4bg/DtFbAEwhvz8GuZLKMErNv2X9YkWzMJ4/qTaJ2Rwvtz+L9yHE72CkP1MSV7M3NMM/d8VqCDHPhD+KalgJHGOyv5Lqjiy9UbA/T6Lww1CDvz+dVb8G5p2YP6JTA8kEh2w/90ieaGF7ib+bc77FnquhP6q4pooniKc/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzk2NjU4MTQ0cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM5NjY1ODE0NHEBYS4CAAAAAAAAAIB4ZWUZqpO/P/KxRvPNq78="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    8,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        0.36527307636915174,
                        1.497638546676077,
                        0.017939519360395617,
                        0.9865381632686858,
                        1.0579357832528362,
                        1.8343240892167705,
                        0.6219422202641061,
                        0.758688263692183
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8
                ],
                "values": [
                    0.36527307636915174,
                    1.497638546676077,
                    0.017939519360395617,
                    0.9865381632686858,
                    1.0579357832528362,
                    1.8343240892167705,
                    0.6219422202641061,
                    0.758688263692183
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 1
    }
}