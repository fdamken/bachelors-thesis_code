{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        8,
                        8
                    ],
                    "values": "eJwBAAL//YRHp20GhO8/2VdI55l8o7/B2ZsqI0ucP0iU1SbHTn+/kI/75Bq0bL/nS5zYK7mev2QLRCz4VmY/kLW/xQEKib9oUmGkTBBqv4xa6Tvjv+8/iMxA/DWDkr+2a4IVSuCNv23K9cT+u28/Y/L2MRCrpD8JuMIjjyuWvwmU2vAkm5S/BEMiW+0Jkj/T4+bLZeSjv1LciNLK5+8/HvsVDn9bTD/xIdUCHPRbPxWKU/ewjI+/g393DGQLdD9ibTwWs1SKvyI9iTm6YnS/QoGzp6R0cr/sDsfsozV2P1clmQ7Jtu4/k6mM61Fnc7+SSUoj4kpnvzmkNPd1dHy/gPUNKR/jPr8kFypTDtdaP0wZBEnXL5C/048stynZfz8ISM0InqyDv93Q+Y6ATe8/H5YDuawXj795AxHViUuZv6J2vszJSZi/Fag4A2k6TD8Ke5mKrf+Lv+740Z9xkIU/BwRyDc44d79TlOE4yKSIv3HHJGKu3u4//OtqiiMKlL9iYSSBlaqWvzZKZoLkfpO/tfQEKi5tqj8k55rnQ9eJv63QLe+f/4u/a3UlX8h5fb9uPZuiIg+RP8ki1ryo4+4/jJbwyztLlD8V4JRhObOGvxHGKYbeuqY/KMoByqvcir9OSUInIcyQv3hNuxb/JHg/pi4PhyxpqD/je8MvM3mZvy96rPW1se4/kHUCOg=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "strides": [
                    8,
                    64
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.803298923373202,
                    0.6949189219010874,
                    1.0768381233364652,
                    0.8960898777545799,
                    0.6311717097889563,
                    0.9281524699193566,
                    0.5822846904031143,
                    0.4441344274850042
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.006838788837048923,
                    0.0067958928241457104
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "values": "eJzbUqjE98LskX3DpnP5LfWL9jd0HP86//XM/RMUPe4lv92yf0XtCckK60P7GWK+zcjd1muvELIu4qvvVPsdTkYblJU3wPUtcDv0yGXWdXuG23M3bGnabs/wZZ1o9qxse4bjzeeMnjbbO8S2hfyz37f/AJ/mzUvRE/dviH742W/RYbh9cH1+V9a2tl+3d1hwnynOYZG9Q9Dme8nP9+xvmDB734z25fY3Xlq/21N2zP7Cemdb0aKd9jB3wuyD6fuTOM069/ZDe4b76u9u3Ftmr3BAdsUOo232DmvEfSMebt6vsOft1nWZq+zh/oO5E2ofTN8WU3brrDlX7RniJyWWndtun1Ak1fxIY6e9RC5T9TX3TfBwgfkP5k6YfTB9D5yrdmw7cNe+ocRT4NLjXfYbTh3stzl5FB6esHCB+Q/mTph9MH0TDFc6cjbfsP9wiOnW4aS5+2HxAAtPWLjA/AdzJ8w+mD4Zb7+XO5bfswcARYQLFQ=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            8
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            8,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDE3NjU5NzI4cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTQxNzY1OTcyOHEBYS4yAAAAAAAAAGzBuKJUfea/5sSk/Nzn8L+obZ+FXSnyv4VyLyLwwNA/vB3A+++l8z/kXuTzbcDrvx28LuU5tfO/1aBhB74l678YqSsjz/T6P3Qhn4ELZrG/sIkH4SEIkT8BjXtUVsa/PzWRz0DJBeK/VJBYUlnu9b/pEZYdmpbov68bEliwMMg/1I80CnlJrD+ZZhOpiO7nvypx8roL8AHAIpy/c+xQ1j8GclWh3b3YvwFQb2bWcO2/iwp691lG+z/PFj+JGVPiPzM52IEwqLy/aU2CgcfY5L/LOc1zQa7Ov8AAr0xeIwDAQlrLlaLzsD9H/QPag/64P2ngzzcePPA/MwQLT4vi0z9R4ESo1L3Vv7+drvSOFdQ/YmBDKdrS1L9q1sLsjkjuv/L3lw38dMM/miSG93EH3L+EiJCMITMCwOmYJfk+3vK/J350CRRt3j8JyhidFUntv6rtAWsLZ9e/Bqbnwla63b/VUG0NcJ/jv43Yqa9ZFOi/wtD1ceR81L9zktQLgG3zv+E33mOa4Ne/VETYHB7d8z8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDMyNzg0OTI4cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTQzMjc4NDkyOHEBYS5kAAAAAAAAAP5WCByOeLG/Hzrspo4/xD/pOsc0C3fAP970+EKvwMW/6uEJTIFYoD++fNE8vQfMP9TTBEAWF5M/A4yDMOk1yD+ao5lLtbrNv558XYC/9Zy/A1zHcGRjuj81KtvLPLLAv0fr8FDbTsk/aVl/AEhdxz92JRdnfPG2v/8w/9mxqrw/YrCkiuCWwL8B+qI+MTW3P/sEn9AMENE/bvRyNGjNZj9FVq2mmqDAP8v1jhAFvrC/UbqaVR+HuL9/17z/cuzLv77OKCffDbM/oqscuVzBvD/VBknk9Be7v09oQ9xiyKM/CI8io474wL+aKIIN4Suyv1T9VfWDRJY/Ki0lKToSxj9WYjC/hT7FP0L+i5QEwMa/kvjgvKUEo78xnLpHrS+9v4UI/JUbV7u/pZ7we1htz7/eeoNhK0++PyjUiUm5zbK/zV0dX4Snvr97RjevtI7Cv9AuX1Kv38y/olynT8Yrsb9mRD9uKtS3P8cl2043MbI/plzGSBX71L88DEawnsm2vyL6N/ZTrra/qcfJtb53rD/fTxiN9gezPzjwzsmvLLU/3GDPGlb6vz+6GxgOQPudP2C6dFiMery/SKA50rJC0L9QbHmW3RWhv/cc9qYS4rE//mtLQLUyur9Rm+/+YvHBv1+MPQf464W/KFHxj7mFor+vn2pSDgq3v3Qk0te6a6C//CLLsgtZnj+5MJIRpS+hPygDp2zhPrg/9JNd1q/Dub9U+lRLE6fHPziCen8UI8C/b7RZZh+Qnj+SZpsHFarKv4KLcHXSjKc/BBSAxmoLuT/VyezuXva/P95bjPvte7k/yQw4Ak53tT9CvbbJEbLJP4u1vSAzdIq/qAB2StmLuD9Mh0gG3ZTRP58fCwxecJW/mMPP5hgRxb+KTa5bi6h8P1aZxvnw28A/1KGdo7BmwT9PxAeo8NfMvxLLHA7a0ao/JipbiKF2rj+51d6LTV+kP3NyMLUrcsE/E5SYAdgvdj8CeVkSpeyYP+/iY0fwea0/D6Vv/UepuD9sySbpvuekP+kco7jvp3S//yWSv9IFir9I23f66p2mP06NjGhb96k/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzk2NDAzMjMycQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM5NjQwMzIzMnEBYS4CAAAAAAAAAEbnJfMPoqM/j4Ba8yTHt78="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    8,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -1.1459629555159936,
                        2.6639915940969923,
                        -2.6512172270119296,
                        1.4034286915515382,
                        1.1298683895729573,
                        2.0784511223624493,
                        0.5669387484286537,
                        0.4897437138534704
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8
                ],
                "values": [
                    -1.1459629555159936,
                    2.6639915940969923,
                    -2.6512172270119296,
                    1.4034286915515382,
                    1.1298683895729573,
                    2.0784511223624493,
                    0.5669387484286537,
                    0.4897437138534704
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 10
    }
}