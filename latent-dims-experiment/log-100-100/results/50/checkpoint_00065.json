{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        8,
                        8
                    ],
                    "values": "eJwBAAL//QVesZHEdfA/kOsOdxlslr9odfXEtX2zP88WS6Z+OqW/PBCQTwuBoL8uzf7t8EySv96+7R0RBKm/LRQfFjOmfr8OnrUapuGmv3dIXikCSu8/foqlRHg6w7+mjEiQxWCev3zN+5voH32/7f0C9rUwkj+AeeVTgxN2vyjlfY+Gv4e/v5IDJ2mLfT9q3/v7dTShv8hclSs3huw/g8fMrWOVS78eV+vll7lwv0Y1FSj/MI+/0IFX2Xm6mj9iaXGE1x9zP10rDNxDwqK/gYEidfddfz/1z1rfTc7Bv49yebWjI+8/bTaPb+zanz/hdqe7NQObP9R9ky6WvqC/DfW1+3qGgz/fsGlViDG6Px0OtcrE3IW/ENxbi17njz+vyRP4sgumv7IYLXDtze0/50lCplHIlj+sAH8wlQKiv3d0hanMPJC/8kuGgmMOpj9fwU0ObcuGv242zXRPQYc/g2EMJU9Mqr/RZ/rsUnaWP+i0yDlRHu8/noQadKpwoL9bUposfaOUv75WLq9Qu5C/O94q4FgvkD8FvxwosrOnvx5p7AxigHg/EpWL3JwMsD8l3OSg5pmYPx/oMwFfQ+4/4hL6h/G8iz+KrkAGw3qEvzeWK2ii9ak/Ifvlhcl6nr9zmqhwhRixv8CTkUk2bZa/p7IXIT4cpz84iwVHLhKGP7YYa8PBGO4/rBkDAg=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "strides": [
                    8,
                    64
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.0018666286906338285,
                    0.0005135304789342729,
                    0.002204861062155889,
                    0.00024915292816875257,
                    0.00043673412359228,
                    0.00026260576726167575,
                    0.0006562590072431642,
                    0.00013823301485568
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    6.090209466674423e-05,
                    3.714694782127026e-05
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "values": "eJxjuNCrr8wSYM/A8MgtMEBwPwND55OzTsb7GSoWcpzpsLBneDDB4uNUtf0MDnOa958TsWdwqH3F0SIHVHchOuX6Yzu4vgbrtZbXHIDmfH9p0eAMVHcycN56HSDNwmB/Xn4/wwGXNNn7GvsZFByN5yYDzWdwUArkYUPYB9OXEKCnxZNtzxDwNbn0or09wwE989u2QP0MjR3VGjpAd/C1XD6hDKTlulz5re3h7oTZB9PHY/e2m8vfnsHkttWuBcL7GVqWTd/vpm7P4LL9xIpJVkD9W5/oHNNE8h/MnVD7YPpeCSXa/HCxZ8jYt5jnPdDejBMusdJC+xkCuo/d7tFEhAvMfzB3wuyD6ZtRcUU73xDIP9rs9F/JnqFhRtzpyRKI8ISFC8x/MHfC7IPpm/xzxglZUHwJfpY2t0WKB2h4wsIF5j+YO2H2wfQ1pPFN6Xa2BwAMeMC8"
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            8
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            8,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDg1NDk0NjI0cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTQ4NTQ5NDYyNHEBYS4yAAAAAAAAADkXH8Y27+6/0z/pNNvY0T/inUAIHAbzvzxUwdNArtU/4hF5LgiTAEB19uHMjLfpvx9Z3d2/i/C/Ioi4c1/g+L9O/pHGmfgCQCngpMeYI+C/n/U+8N1jz7+B3lao/FziP2/tAig9MLQ/vcMHHXV2978lFFG08w22v8HLmpo288i/OhD42vZY7L+7B0OW6qfuv34oUelEi/e/9fEGx6rJ9D/iNM6otmvpv4WfJsUkteu/tyqIkj9w/T9oZoWUbXXlv7VMk4A96NS/5qOH5JdP7r8pfgwjGknOP3lb4Pu5tAbA9xd6x13q2b9HQtrfv7nJv4fOjhn7n+Q/06qM55Z78D+KcCZN5PjRPzvbVltVVt0/T5+7MVXMuj+K2ouT4bLsv88oSlNzCOK/seTAmTq7879JaViutN4FwBXa7oNDyfq/mMASZfOoxD8z5jIUpaX5v2Y+pDh98u2/HKcZqtfr9b+CGzimfwvlv3Ixz+SwMO+/TwfHu0n02D8kp/5eb0IBwCrDznCQ0Pm/MKefiNBX8j8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDMwMzcyMzIwcQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTQzMDM3MjMyMHEBYS5kAAAAAAAAAJwh0UkUuXM/QcbWSGOMxz8/1tIMWGnCPygoGAaZMtW/ZaSKRDpdir/L9/WapvrOP51KB9LIAbk/rxyMTTXazD9AQTTw/IbPv0d4XohMg7A/dZIgt+GdqT8AFm0KKdmSv69MwxoeDdA/h6rxYAa+xT+hR53qpR6yv6zgbwosXZU/RdSmg/eYsL8i4PkXiUmdP3WziWQkOpU/sR8Oly41t78h+qEyAqzMP7Jvjf+dmps/U7gCKUqPv7/wLdFdUtnLv7RTXGe5p3s/T7+chqnbrj+vMBK/BKGnv3cauWzoTcQ/ZI9QmkQvoL8bCyMVC7q4v4cog3gLdJO/pLF0rHXfzD/roRBCKibIP4ULPGT3h6e/+9qsGmWosb8o+HQR5PWVvy7AoKNA7sS/kfdSoEoU079x76nOefvEP/ymAOzhlXk//PG0nGM6ub9wyQdrzWyfv1ALxnQIecm/yRvoJdYulz+ILzi+MtiAP0cugqayWsI/lg8kfKNoyr+nibkrKEWzvydY0jqpLaC/5eU6WCN5r794ayHKjaJ9PzOqn/YINoU/7KYdvFE8vT9rEqy2LsDCvyuHTQpsHqQ/LKUer1XUw7/gPSMLMxqSP7//G5yDm8Y/p5xhYyr0tL/AFuPWaqHFv7QjMviUHE4/8oWKKJEukb+TPTVrRrS1vyuXbGaziMS/ywRgt6nvkr8Pe8mY5emLP84gWKnnC4a/3MgbFSJ4eT+iqo5lJvKnP9ycO3GKJ8a/pfwdpI/Yyj8vkFFzVxnHv772l1FRkbo/OoGG0EEhrT/VE4juQW+QP49MYr7m/rQ/b5UtiU/eor8tt2TykNXAP75bvcBADao/QzyDdYP5yz+ZiE719P9+vwpXfbg/eV4/nyzPaQmpqr+jrUkqfuWbv6k+DPL49L8/iGihQBCeqD8J0MvVKIbQvzA8336jr6k/8mnbUSdzwD+QU6/SmoqiP8HC46l2/8o/98MTjoZ7tT85cnJGrZe1P0cWnP/soaS/dD4Czm32jT+cDcWQhAa3vzQf0mtHP56/9tAb9s8hjT+IYxllD4uhP3jKjztuCro/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDAwODMzMzc2cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTQwMDgzMzM3NnEBYS4CAAAAAAAAANmlOWMASLc/cXEozQk2t78="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    8,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -2.027195329259826,
                        4.168907229099711,
                        -3.368829534922844,
                        0.26899734030628,
                        -0.29741609357601784,
                        -0.9065017994413437,
                        -0.5387548645412626,
                        -1.9004998556738768
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8
                ],
                "values": [
                    -2.027195329259826,
                    4.168907229099711,
                    -3.368829534922844,
                    0.26899734030628,
                    -0.29741609357601784,
                    -0.9065017994413437,
                    -0.5387548645412626,
                    -1.9004998556738768
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 65
    }
}