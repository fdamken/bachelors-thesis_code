{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        8,
                        8
                    ],
                    "values": "eJwBAAL//X1El7bFVu8/Qyt/RbrXpL+6d+YE35CsP5iJvsG5B5m/O7kUouqejL+gKxKJnUegvy3YuwkW2Gq/JKsqdstYeL9XjGTzmbZ6v7J7Aisa1+8/01R22GDGoL/7dIbC44Odv+mZsUTCSXM/s+kCYRZmmz/WuhLRZUyUv6qPd/nIh5W/yanhCIM4mD8w2NmOoVGhv7ifLX7LDfA/ITdEjLvEb784+VEQovt3vy4JhpKRdKC/UAvEm9sQdj+1zwRglMOHvwV5x6W0h4y/gM6PVESscT95MXINN+iPvy7BZEc3E+4/rojIbwUfND8XQDvqXaxdP6HMUGOiLmc/Q2ir8woPcj/XKcZukrx9P7wREA/h64O/Y/vgASdhoD9sRrag+tybvx+/xdUAze4/1PCYDeRgZb+zYzGWQ9yYv3inL+4PVJm/4B461rcMiz8ujNPx5WWPvwibLSYe+qE/EysMsikRkb8Dof8aUgiOv6XxF1iGzu4/HqfFzbdmmL8rvCbIb5OUv08W9q+yA56/8bTEnUwIqD/ENW948WuYv/yt8bwVCIG/XW5w6ztEfT+qcxLsUjadP2x4X4gxv+4/8C5vIBJGlz9smfqJASqPP6J89oUXbac/Kx7A0g4Ep7+qXP2NPhCmvyb2r5Nlpo0/s01qRTnaqT+zYk5XlSWLv21BJTgWUe4/Mhr/8A=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "strides": [
                    8,
                    64
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.48439855763860684,
                    0.3125311195644662,
                    0.6511624579292555,
                    0.8051978842679914,
                    0.32508528051326935,
                    0.5272170936233326,
                    0.2962549632123087,
                    0.18204982867666808
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.0035026523907872617,
                    0.0023244876190669857
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "values": "eJxrsK+ML7G5Yc/wpGuT86GG/QxqfMJRd6ftP7DlSfE83tX7H8Sm8bxj27a/4cvhmHfz59pbnNrXaXFqvX0DY1ecjV07XF+D0uKvbV3H7RnK4n/Lp6+0ZxDMDNC9MWH/gWSfwId3Vuw/MG//MdbrK/dn7RZekBS4dH+D6mT3C4vXwu2D6XNoiuX6MeGCvUOr/fPI6RvsDyTt/t8RvWX/gZsPXu+u2WSv3qA89WzcIfsDzp9+cilOsIe5E2YfTF/Hv0Wd7KlX7ResiqsR27bG3uGh7tvDL+bbX0k8qqd8tGx/Q19khOq2zfYw/8HdCbUPpi/jy5edk6eetWcIMdit7rzX/kGCYkPf5AZ7jwlbEwP2rrCHhQvMfzB3wuyD6bPR1TlmLH/V3rf5htVl00P2Ha4TDomd3AcPT1i4wPwHcyfMPpi+Wev2XdHiOGHvHxS5Kn3+Sng8wMITFi4w/8HcCbMPpu9HvcyblPUn7AEF0wIx"
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            8
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            8,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDExNTc4MTQ0cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTQxMTU3ODE0NHEBYS4yAAAAAAAAAEodyFqjt+a/0FJnHKKY578IMr57bSjzv5s0Zv8oO9A//BRBTIzq9z+ayHst2Tbtv837cpmmRfK/Bb2dqwFm8L9PVcCh2F/9Px7vpAbZF9G/UjNix5FBhD+mif3wlizJP+LJ53PYAsq/tN1SkW8/9r+SMMzlBnHmvxc/UN/Tm8E/OeXdbkslsz9W+w/1Syvnv9ViwVUwjwLAao75gS813j9GMMDMcM7bv9/WB+rvx+u/3CjbTY7V+j/O+xs04TnjPwrR+26xH76/I5muFRpV5b9xVWyOjmbKv5nLXiKXZgLAnSX4eAinzz99oLZDhTisv001pK/iguw/AVuInTGd3D93VeKS1JrXv9NhCnZCRtc/vOQ59vwzzL9LXRjUd3fsv8A1wEzcUM0/8UaU3VvG77/MQCeWmx0DwKKTd+sCQPa/wMtYPRpB2z95sV1QxkP0v/qrjj45rsu/b4VQ0C+q5b+pXmRkh4Phv4knp1ZLWei/USWgNch6u7+yQkibcCD2vwjMQMMh2uW/MgX/ht248z8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDMwNTAzNjQ4cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTQzMDUwMzY0OHEBYS5kAAAAAAAAAKhCkIzm6qm/m2pb/3Grwj9ybaPb8wrCP7v+m1S8vcS/MKO6zrFSkD9x63y+v9LPP+MPVeYOtqQ/YYmsLHRRxz9tjjUXNMLPvwz9Jva65Yu/LJwa4CNZtT9ZISL8rkjDv7Sb0fNPB8s/ulBSRkAIyj9xSwWLrdm5v1EejhsBRLs/qhnDu18Hqr/JItMnsUq2P5EOesisKNE/MRS+0AJ/eL81ymUJMW7AP2H4BB35RKG/kZeSKs1puL/80Im26FnKvwXEfymJTI8/+MOm1p19wT8zxaXx6Am4v21IbjHmarE/LarMe0WXvr/YJ+dh1Pi3v1R8NKKKRKG/sy5I8N7Bxz/Fay6ZxpfCP46EwkVXy8K/bM++pY2PqL/SX2YmgBSwv0JA/GXKKMC/qyvEwdGK0L+/u3tAetC/P4YOFYaOHrK/ayyX3QiGvL8PEJAab4HBv4677hDWb8i/wR5g+VPfrL/8w/KgCtmwP8kdhJ91Gbw/DhDMvlBW07/pDL64s1y3v20hjgq6a7a/TFW+GRiam7+aqFhU9Ia5P5NuVvUBX2g/uqoRnLrSvT89hPEVPEaWv3GRQxliILu/9AZ3Lq4hzL/IWojpef2gvyiwwgJD7MU/5O4T6bBzur/AnNCYVOfAv2wSJ427E7O/9WvjSwsdl7846C/vh4e3vywfdqC4FqW/T8MRhYDykD9KmOqS0GeXP7JA7Byahrk/X0ccUz4lqb9Qdg2fljvIP8bz8lGjpre/CvIwqKpJkz/2t4AFecvJv+t6jzxwlqs/I7sXpEdstD9HOF8hzp66P4z5Kih4wak/V/xneWkSnD+SVh4zQyfLP0LJ6Ng1CIm/vQUZArYVuT8qYBpxh6vQPwE6uOwMFIG/pujqRFLyur+d5a0255mlP7McIAGPUcE/wb2h+7t+wD+zzp3MmhDMvy/pBFtlVq0/yczMfknSsD/1iq8XZ2GgP9QFEaByz8A/NXEU3cpgWr/ATFpP5Q2uP8+Ro26tEZ4/PJ68By79wD9dK38/xqYov7LIbkCpxY2/KmgiW8srlb9QCY+5qlOSP4xrtwZ7pqc/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDM5MDg0NjQwcQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTQzOTA4NDY0MHEBYS4CAAAAAAAAALZxaRkiRKo/ZuVn+VUJub8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    8,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -2.097435057778552,
                        3.205754109302795,
                        -3.017935509022373,
                        1.452621617061205,
                        1.0781239705477268,
                        1.0838371193864242,
                        0.003936169573118514,
                        -0.5061512920231589
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8
                ],
                "values": [
                    -2.097435057778552,
                    3.205754109302795,
                    -3.017935509022373,
                    1.452621617061205,
                    1.0781239705477268,
                    1.0838371193864242,
                    0.003936169573118514,
                    -0.5061512920231589
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 15
    }
}