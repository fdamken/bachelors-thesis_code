{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        8,
                        8
                    ],
                    "values": "eJwBAAL//cFWD/f6YfA/hIqbFKCIlr/cAz8DY5+0PxGxoKWU/aa/NJzvjljqor/g7pl7rQuPv9ySSzxHAae/3I4uzQv2gr9gcj7wKlCkv3NbTKYmK+8/09TAKNuFvr8TzHYSbk6hv2+ZlwEei4a/FxKc7f/zkT/wmuUnK5mBv4DcrhFBgIi/sJyCz+ZKjj9INRb+xBOjv7dSHKtCYO0/839gDT9TcL9+r7POgWhvv0ktr+Tsa5K/OjoGyP8akz/RQxKyaS11P8p9xqjz+p2/ZqjrTy9HXD9TGhsaYle8vz3bYTfC0+4/RamUYi0Smj+maFuSSvCWPzsNlPOCwKO/UnNGZtGGgD9655IEDb62PxFbfGistYK/Uq5KugtvnD+MYECNL0Olv6WBvzKM5+0/r6MslcNFoD+zLdjtEAycvwCqOuhmYZK/MQ7j2sbYqz8maA++4gCKv1yX6X6UgZ4/NqrcvM2Or78/inhOPoGTP0QZi4Si4u4/PvC63gOWp7/0toApGxKVvw66ZBogg5G/Uk9YBVGnkj9W01kxjj+hv/W9zjHKunW/TFA06gIurj/IJB7RY6WUPyf9/gb7A+4/+8XC0dRMhj+8RJ433yZ0v9E58Px9Bak/nqrqm44To79t+UfLHOyuv1QHOuw9iZO/aS4UoOCZpz9cOX2UZx+LP22x3NSsL+4/XkwEPg=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "strides": [
                    8,
                    64
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.0027796549887887136,
                    0.0008363838814018632,
                    0.0027676173620107248,
                    0.0004412264600091703,
                    0.0008256561677416847,
                    0.00043031405577479716,
                    0.0008993526322713538,
                    0.00022473897180081516
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.00011672652844754338,
                    4.969544739645926e-05
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "values": "eJxjEHiQ7FwUbc/A8ODKjb0S+xkYlOd0VbvsZ7jEcMmj1smeoaDk/5UpxvsZDqxzT7cVsWdoELy4TkkTqM4nLSvjqR1C33XGLSu97BkcDOeYnPe1Z6h4n3iL0w5o7hnpNY0G+xka9CSrpYA0w6ONF6ptgHTTiX21Igj7YPo+yMVw2JXYM5wwvL9Axgdon+X35eusgeq+P1nFqAo056rkz9/K9gwJD1bIvXG0h7sTZh9U34Mvy1WcF0fZMywJ5Uj0BeqTmq3zvdLInkFT4uYiWwegfxY9OzZZFeE/uDuh9sH0aRgujH4cZM8Q8TBMIERrP8ORBSbVaUDa4k3l5CQLpHCB+Q/qTph9MH0PPier1pnbMxgU/olL1wWGyzPx8BXKSOEJDReY/2DuhNkH05d6u2NbZyQwnF796ut2QooHaHjCwgXmP5g7YfbB9C0oKj7Q72sPANfVzlc="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDMyNjc5NTA0cQJYAwAAAGNwdXEDTZABTnRxBFEugAJdcQBYCgAAADE0MzI2Nzk1MDRxAWEukAEAAAAAAAACq0nKEGTdv2MpciC3DLy/kfQdDiAq1r/EjUMTkBTAvwbYTxgyFrW/KwHw2NNBzr/dXeP0c7rUPzOHo9yDXNg/bH5s9iMA6b+oInrNw7TwP99kKg4M2vy/9nCwEhhO8j/5dRihL9LgP7L+4FrSYvO/8SOtVCNe8r9Mk3Nlz+ziv9I6pwO4PME/AQe8dHY1w78D7/SS0OrTP+zMoICafuE/wJJdphB+3b9NwcBJQl+/P5Jg/ZXq1OC/yKdGeJxe/b/5M9vmYb/Pv/+s9p9i7eW/Mw43eB3dyz9CbJ2/LnC0v+eok9O4MtO/yzTmMLAw479lsxoqHKbcv3nTjAcrtum/t5uuvxf827+geG5AhTK8PyPsiiT4ENe/5jPaoq3nyD9MNPD+RNS3vwfpKZV77dy/kl4AsscK5z9OmQwMgMPuP6uWj7zWUNU/8XE91qBK079Ory1wrBN9P2jDAJU3GuC/u7nW+wqHqb83RghNy7zfPzT3lpE9veS/ees/0GK55L8czAixR5Tbv05pG5dG5+w/WksRP0rPz78h/aCOSWLlvyQYzJuXMf2/b6rgAtyi0z/3jgzBBkPLP5fXPc0bt+E/Nri44SyDs79zgjaeOziyv6sXJfW/nrc/FrMYN+7enr9RwcwpZLqiv7t8OdRl5N4/QVHXIygG6r8MxzfvVyzYPyHWiUrMJL6/YaTP5s74uz8Tpln8Q9fLvyUJSHESxbi/2C1a4zynyL9PJrhOX0Llv7iAK4/VEuc/aDzDztsd5z9oHBoUenHRPy1DJfnPPY+/WUFmkoAC1j88pRX8GLXwv5CRSXbP5Kq/UBRIcq3Lzj98xmDqZL/dv+wV46nOGOK/9RYsMlZY0T/ixfAFDz/EP51JZc1kCM4/1hS+ouRc2r/osR849gDmP5VKW2dBleE/kXmfRTqr1L/VvTMtf4PZP8FxUOf08lE//LN3ViHf3r8Xo3HH+3DCP4sOPfm5aNs/Mg85d6Jv8L+JS9bTdnzBP32BYozk06o/Q+2ubeRV67+4HFJN15Dtv0+t8ubJQ/A/HyGECPuP+L+dji3s8h7xPxBCGeTEK94/N36gk5xT77+zKyax6t7Ev3C82NO+ffS/vXObDmShyD/YGf+r427Xv4sz6B2cKcg/LbuJNHWe4j+2T7tuinptP6gp6wfG+dc/i3sfAlvP6L9XAvDqOhjtvwJ31KpTE5u/wpd9nnmwwr9gupLY8frTv5D34xiKBdU/iideVasMAsC2RTn5CzL3v+sBlCRzeOa/M9nj1JpI9b8hx0v6G468v94M+z1Mod2/6Hkili+myr8zFSa1aw/Zvz+R8VVdpdI/u6Q+6jJk3D+idURDFoiEvxMgNguA8+E/SMBFv5WJ6T8grF/qgynyvz5EVKaTy/E/e5Axmqu86b+uAjoAFbfev7nlmT7N+d8/zXKzItSNxT9PsctbT975P5SAHX37G8G/YZMmo7JM5D9x3P0A46WyPyutqisoCuS/nVPA1tGA1T+WuKgAQYrTP5W0r2UK4dk/N1cBqw/G2D/h448Y+2frvwlCngwld+8/9B8ktTb/7r/QqIn0hbbnPzagJf4er+C/WfRbWjX53b/sciLXFSHov9ixwtSUrOu/J6GcTe67tr8V11k5NDu9vz8J58CRFdA/FIDQ9Emp8T+W4AG2DOLgvxHxgDu2sLq/YW3pGTP22L+aYTq4pbDtv7wlrIQN28k/okesMogP5T9aIyEP+5bAv5jijJo/qqa/J1gqlp5J3D9kV0tvrHTVPxdwSxIzTeI/Q3mek4dc5j+ykLhjUr3YP4Xtv5cgj9G/dgQGeQAQyj97KgCds5bsvzRgKAMQYJC/tBztOG/gyT9nEW1s7jzOv41l8M7kv+G/6KJmoGrV0r/uS+fA7XrEv/Pf7TJSNM+/IRWACgRN5j8CnPRODN64v7bEQxymqeG/pEb7FWG/0z9zfo6uIfy5P6NdNuiZlvE/aXPHvH0D6r9aqXp5XETyPwJZUwB4DvC/5WXIumaf5L9gUe8vK+3sP2DIytjnVvE/VzMFUBQC/D/a8JymRL3Vv5z+wWykhL0/VyjAdrlH0b/y3Fg1eoOZP6lIb2rnYbY/+xKfuqVLwL8E4iqx6TPiP1L905pZftc/ZJGIW7TJ2T+7qbAh5LbFv5CrHGZxX9W/C8tZ7lcs1j/4VlPVFt3Rv2Gf5uwv4uw/30N+KvOv2T+PV9MPHdfFP2UwFltSgtK/aafZrG8Irz+Sz2vTPiayv8xZZT1SHcI/DG+rAzho/7+gwIkK6lnRv2zfVsV5NMa/C1vIzJOpw78xlzEQo4fDP35Q3XLlLMS/Drvn8WNK0D+ujeZejda3P1UxThHrKsU/n2XHgM+v4D+Vcjh1Lwbuv5oFQhTa5/C/rygviTkUyL/cNIEEq23SP+Qui0s8A8Y/wZLUeCoM5b+FL4i0SrPsP6221A0vSuI/H3QksHkO9j9IgyFksmblP+j/Z2HxqLi/Ocnaw9da4D+OioeDb0PHvyusYoIFhN2/9i/infaJvj/gHc9c70S4vzFEsQ9ML+c/W5vVY2J78T8HfJSJHjfCv/tgH7Uhg8o/oO0pY8lFqb9k1U8YbA/Bv/dzW3yhNcI/bC/t8PIP1L8MthhQ6aPPP57t1L2xn+Q/rDxRTYw/57+D+9gdSMDuPztCQjESSPG/N3XFRiH+6j9CenXrwczJP0HX08xJAvO/yG1zrpn18r9kj5ozxmv9vwjr7iw/jdi/lZLXi1aU5z804VLH8gnpv97iWZBqXtE/1zNmo+nSxj8bgdQfWgzSPzYRvEruz9E/5vUfLQ/bpr/xDO2NvFmSv8MHdKKlq9+/QELJ/4xSxL/CXC+Vab/gP2djbIAjLta/RXnXFOrS2r+7GR49b+ykPwiKVI4GO+K/mDwLISJp7T8Xw2Zh8ZbcPwtb1vOLYNE/OKzgn2FUzr9+qB4iMKXBv+15dY8hr+a/40Ah1/halz+mpC9Fv/HUv083T5jvlaY/hpzskSoBvb+IO7akqijbv5JpjU6xe/A/6BKWD8VYgj8WhLRPm8Cnv+M6rUQyXds/fzd4nyfsy7+HDBZYqLrzP/gEci54pPO/k2ooGEci8D+dlYKosRLov/P0Zzunk9W/eamfe6nL6T9AwvyKZC7VP4uhFXHSM/o/hfPqOqdH9z/UQNXUmWz2vyIfk5ShHPU/IutELCke8r+xq5XEJVDSv6J4cZZWuuI/ehn2OAnapT/kAnOP0fa+v9llLs3p/8g/lw6N3QwhyL+N1iWpNWfCP1XqLhtvwtI/khDtKq9umr9i57Kx98PRP6Lt1hfuTue/zxPn4wUC9L+7ARsDIY/JP+sExnJ3orU/mGg0Fx4H4z90pI+Q66Tiv05HuH02VfQ/VrIAHNSO4D/rXAJfCKj2v22qt5RDBPS/L5DQo5PHxL/d9jkC7rO9P4FzKcvavtK/hUFOG+IW2D+E4kvscnbePzhtUbsXmuG/gfZBJosK2D+/9bhnfRbpP1kK842Y67w/hoqGcZP1vz9GW0OKl67QP8kcCz+7ve+/x1+lAA0M3D+PDvHZ9RnqP0vQ8Exxxvu/P5lEdZrT1b/id+z32xPzP76DDCgPtPO/es7wwPTQ4z9o0tL9Nzf4v5BNPgN6FNW/P73gpgaJ4D+4lzRu3BLwP0mhNz6iO/g/cCHk7RU7wj/cGU9t7TaRP7NajBDOZcg/70qv+0Ys47/SC3rY0hvaPy5GUeCYmK4/IiAp47cv979XrS0j+fDmP/dvJSGI3tO/kOoHyhA/1z+lZuigyqG1v17Yir4Fsa8/Vs6+jnHE07/hk8HNa5zDP7uznB83OdI/+SSyB4ur4j9VBxvYbKTUP9gBYWivYso/WaH7t9hwzb98qE9np3LivxKj6TiSLOS/2KwNMY817T/W6BXRhCXSPz++TK7KiKS/7Zfyvowvob+mcVaXYenkv8OGTrQjO8e/SiSzaqMD6T+gpiYQ8Vfrv3HRsk4t97s/PfF1hG77iT91TI8eKR3kv6BKzTcV09I/rybGvxRo1D90Jvi9PiTAP/7jDZGBUva/WiGMavnC9D/7nMnubZ0AQLc/NoT3NPK/tRIYOcgEqj9Y66sNo0TSP7MH9D0Ry8s/fBigA8C+3D+cuONjmnbUv2UD9vB2hP0/X31UIETt9D+UeSGjJgTzv0xAqwJ4UWI//hnaUcfSzb/NNTJQqI3ev1czUg4gMNI/maLMTJ579j+69rNOey/lP9sDOnyMccM//4xWmEkLs7/iygO8M4LkPw=="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            8
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            8,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNTA5NDk1MDA4cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTUwOTQ5NTAwOHEBYS4yAAAAAAAAANvttDWEI++/mvIkF6UH0j80NeSFalLzvwEAuafcd9U/I7y6MVWFAEBiieyYPhvqv/wBUldfZ/C/Ob94nBKv+L+ViYBupu4CQPkcU9nUk+C/CKmq7jvFzb9OSfnxzR3hP90QHXchlrY/vtIz79f497+YWMiJRcu1v6Fw1Edp88e/Evl7D+d27L8nDP63c3zuv772PL+yX/u/S3k2//ua8z+mL/JoG5zov7FZeR2oVOq/Xah9cD8b/T9bdz9Xza7lv8M0bsfAONW/QnHbJb7q7b9LGWopK4/LP3SqE8t2lgbAH9u9P6uV1L8LKQABDI/Lv1Kv6cL+b+I/lh1d1eqC8D+TPoNKhUuZvzjONajRRtw/HM6imHFTvj8BCi7m5WTsv1qk/632/uG/raM3r9jd879Cas12XTQGwAqOopoYvvq/QZlntzjHwz/wIlbo6Xr5v2Na6bOvM+6/9SN2aKgQ9r9Xj+ALYEnkv0gUCfz8Fe+/3GEqM5Fs1j93no/EHCUBwMVLmh9OJvm/8pjK/AZh8j8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDAyNTk2MzIwcQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTQwMjU5NjMyMHEBYS5kAAAAAAAAACkCYQAF83g/zs4cOccixz/Kxqo2d0DBP0raKNyPFNO/p7PsdD8olr9WsUcI/tXPP3VoaQfEXbs/hmVt6JJbzT9YlGgXqxLPv/XS0ckjr64/D7Na6F+SsT8yl6mxXjWkvxeizCWgsM8/tnfzPRcxxT9/2XyXIlivv8wLfnTMhKE/0ctlyH6Lr78w85f8Y+GVPwCnt+ZD7ZE/4mxzKsnksr8OsoBCqY3KP5jJ+iRqKqA/GsK24JUDwr+ZNhdOtm/Lv2Np9bDOhI0/Y39RQuRKsz+4D0FhgvqKv++s9RCfh8M/lGnOMbORpb+cesRntra4vyWmHnxb15g/Rbq6nNl1zD96Dks3jrzHP2srNMwMv6C/LpBgWikQsb96oAGEytGTv/fI5pOkhMS/n/t1mHzf0r8gqpjFpTjEP8nGTg46Jm+/eTM2sNO2vb+NiO9B70Giv+ITDGVsD8m/j+VQq3jWqD9/jzwXNzVhP+Qdhv6TmcU/kKrBDFzPzb+prBa/9dexv9JgjlWkLZ2/aABX63vvqL+VyOPHwY+aP+43b4Q6pZE/OJw0ik6TwD/zjMUl56rAv2YYmGjcCaU/bIEDALsWwr/4VkqkKh1wP/le8dIn/sQ//6Xfbv7Bsb/WntsZg1bGv0B+xu3LqIs/QOFxvhjxhz/ZZO3ouPGzv6PvZih9i8a/eLnrUkqwkb8Mmb7Jtz6bP09zy90pEJK/TqRftkt7Gr+n2yJqQXerP5FABj4kR8W/oSFO98v0yj+71T0XIWnDvzeju176/bQ/3s/2yyacqT+MkX7EwFKkP+eirknQvbU/V0kVXUw3oL8iLRVZg+q/P3szVbAOWKQ/VbzSzr7nzD/NG/gBV/SMv3dwTgmU44E/vZsxbu4jp78bKvqQQ9SNPx+ZZt+Ca74/gxH1n7fZpT87xl02zPbQv7SKT3qIKqY/caGf0wZFvz+vr1cKKU+rP3pdqtpkGc0/vyfouytosz96mSrEH9WzP58zecBr1oA/jTZ1ZZOkmD8J0QzxCYGnv6Pt+uIJgaS/8CKyPpvCdj+dEkOAHpOXPxP338DQwsM/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDMwNDMzNTA0cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTQzMDQzMzUwNHEBYS4CAAAAAAAAAEa6xUPIdLY/TJbgSnxztb8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    8,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -2.028741333067708,
                        4.175984433473094,
                        -3.350511782170714,
                        0.23675980391644819,
                        -0.27217895401606285,
                        -0.9325912780661165,
                        -0.5464043063013454,
                        -1.9119025770809084
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8
                ],
                "values": [
                    -2.028741333067708,
                    4.175984433473094,
                    -3.350511782170714,
                    0.23675980391644819,
                    -0.27217895401606285,
                    -0.9325912780661165,
                    -0.5464043063013454,
                    -1.9119025770809084
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 60
    }
}