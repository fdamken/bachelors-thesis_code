{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        7,
                        7
                    ],
                    "values": "eJwBiAF3/ltYhvcLIu0/lXLYbcIQfz9ouMXeYQ+gv6LVxcZf3o6/r8JyDdZNiD9Qh32WmAeOP7kSSZyM942/tkQbt9twxz/f7WL8NjPuP/GDzFbNDrO/GkfY7v8NmL9vWDpNTnOvP8CiE+Sc02I/vNeV/L6rur9wq6FZZdqRvxdHJyumJ5Q/uQzn1/Eg8D9u0YebWy6cP2D4deD7Zrc/DuSir5qQsL9muNcYqZ7AP9lkYLyuy6Q/AR7UKWmqnz9C0Va2R+GaPxTg5Mgopu4/0YE8LSAgwj9QGnqryaCpP8bOZeLcrLw//96AWquOpT/3hs/6cLSHP8qE8WR/xXA/4m50zO/yfT/W0Wrs957sP9iVIk3TJ3W/vJbeBsydoD8ODktHGk+fP9xBe8CCo1q/XRD/WCp8i7+RL/uAj7OSPx2If3gFWIM/UFtsxzpX7T/cHwNkijl6P2VMflP6EG4/tJXBjW/nYb8NCmxbG9SGv888HChKi5G/NCwP32sfl7/NdG/7N+kwPwWNNsWwKe4/URnK4w=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "strides": [
                    8,
                    56
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.1578962393343212,
                    0.00982704360518289,
                    0.03176892036297974,
                    0.016986640660884397,
                    0.18865252941387353,
                    0.08395732982151054,
                    0.12459648294943125
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.03729293399017661,
                    0.0059312005205950985
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "values": "eJyboL+7Srt7rT1Dz905L/g69jOc+Pa4QMF/P4PIxjX+N4vsGUI2+G5+mGzPIDb/bnX4ov37Z8+/6mO4AqF+w48Vz3f12jNEeOywc6m2Z8jxm1Z4tsOegYn50O0TPfsZeta+KzKutf/Bx2G9p6sRYT5M/RE/p9tm/fYMDbFV+79n2DMcMLZfv7HBniHvXk1sXLO9Q2TrpkCxRIR7YObD1EfwbGJaNNuegeNhx2upsv0MNzI6N0zu2q/wwrRsNX8uwv0w98DMh6o/IFNUZ25w0J4hcPeHsJeT7Sd84mllyyqA+xfmfph7YObD1DOcn6iUk7bCPmZrYbGE4FR4+MD8C3M/zD0w82HqPTfuknW7tNEeABTAr7Q="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            7
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            7,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MDI0NTEycQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4OTAyNDUxMnEBYS4yAAAAAAAAAHL+DZWgetA/Tr9YCgPx8L/am2siaCHmv6f29jMr6tC/G5zIWyZCVT+9O38NdrrNv7Ja1jPm780/N1qBDYvm3z9sRrCwu8rUP56WMdAvcde/LrD7ki5l4T8pDuG715jhv3MqwTnZa4C/FSVGGRqp1b8j90AcLXuGvwCTfagOj8E/eS+3eJMM2T8f9K9hcePcv7SrYmk9z+A/pjvBrN818b9uUFsPHTHSv453qE7v1dQ/cjc2bJKV0z+eoqR1dM64P0KPpthZAeU/LuUe//oy079PskF/ppzXv6BX6//ONaC/Lia58W9G4b/EU9sMljrQv/lIhfCNzum/3gcG/lEbuj8/QulA6TPAv/0KDISLzck/SqArbbxNx78J2ViAry7MP5Q9mAlhRNQ/TMCvb8vpx7+JLpNaAfbRP7uYhoUofps/DBqh2gCfqb+aogPQ+3d9v7Ja5Ipn78q/1xjn0FJNyr+KplcwFCyzv1v0BmBCbri/SARgYqdYyL+elnWJ/qrCv+hr7busk8+/sU5McNXT1D8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkwMTQ5ODI0cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM5MDE0OTgyNHEBYS5kAAAAAAAAABWOCZdxxce/gdZ/YGpxxb9GkXONB0uxP97EFyXneJw/fx8LQBNyw7/QIR9OBE+Uv1eLS4t4IsC/gG8LlLWNsb/MfbS1Tm+UP62uQX0MdLQ/uU6LWsYyqL9Y5luUtZ+4P/z2eGZeepW/GbuVDH7Nrz+tuYNGXXjCv0mxO39Jwr4/706M+bnxcL+Kg1W/wCu5P7DKOhrVn8K/EbWbu8X5yj+vGu5aBGjNP/fEUqQjxFE/dCj9xI0azj/IVwqwOr2xv+u3FeaA188/Hq2Ei/UVxb9xajjjSOd2P+DpUjBMAc+/2QC6dBlemD/06tikdyvFPygsjzHtS8A/tpTApgJOtz/S9dUd4leZP7msuu15EJm/dFjEo8R+cr9ZH5kDKsmSv7DvwUSjktO/bxZZs4+ctT+NrejLNJmwv73PzfALqEQ/sOHKW0Fssj/UAGOW+mmlP4n9BN/qmXM/ynLPfE9/0L9IZpXBrr6CP180RRWnXbi/kAI5Cmb1nr+t4MbMkw21P+EluhRZ3HS/CjpQhPqZzL/m/IIuJZe5PzmEP/RTa4y/iDNMIgUWor+nSKfP6b2VP+nKS2FkKKA/io2i3OSNrj8JNShAPbfAv9wb83CGsqY/K6u5ag1vtb958O2y8qCcvzcMRsBS6aQ/PaB7h8J9qb/svNp3qISgP+uFUtjt4K8/3RToXXMIxT9A2D0yqoe6P2ysfcWelKW/Hip037Yh0T8eDX//DAm1PyRK4LPrEJY/Vso2OjhptT/6+M2OeQVKv64XuMxuLJQ/Z9e49mGepz99dsmEWRWzPyBYtN7FSqK/jYHVCmqq+T5ls7MMqIOdP+3QP49pdIW/fdgwq5JElj8RC5LhGauSP+xY9KSjr7k/kCnitrk5n7/stC8bYcydvzN1hfO3HaM/5UeYjgFykb8LXLkjfmnGv+Hh4dVhgbe/x230iS3Ymr963M97qDe0v1avCTbH6Lq/0HJz7rg5wb+M6LIyQUGjP20iLEC2H6u/6SQiT8p5bL+MOqExCyfAP7k+kRSWt2s/ZhdO1EdavL99Xr3NFELCP6z+M/DaP68/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkwNTI2MDE2cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM5MDUyNjAxNnEBYS4CAAAAAAAAAB7V9eo5Ys8/hfZyUlCKwj8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    7,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -0.5049773357671029,
                        3.1090313971396504,
                        2.956781204829029,
                        2.8915833397108175,
                        2.161611381435622,
                        2.1992179258868547,
                        -0.037571148013480715
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7
                ],
                "values": [
                    -0.5049773357671029,
                    3.1090313971396504,
                    2.956781204829029,
                    2.8915833397108175,
                    2.161611381435622,
                    2.1992179258868547,
                    -0.037571148013480715
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 70
    }
}