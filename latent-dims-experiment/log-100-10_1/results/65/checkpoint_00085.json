{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        7,
                        7
                    ],
                    "values": "eJwBiAF3/svthLZyr+0/7GGmqQZIdT8Gi1ikWfKiv53Au8SMS5i/zZkY4uRDjz/o1ngXvlugPwmh56l5tJm/5CpHihYwtj+UVs7Z4LbtP2fu5HMqzrC/zDqzeCMtZL8fBajxiyOyP6ohO70YZIY/VMOl3Jewvb8/hmJnV9mEvz6vADBR9Ic/EYNq0uAO7z95NtQkOHqVP2BUvVHyB7Y/MPtqIEtKqL+XRHLSjz25P13pDXBBk7o/1/bmYGZFqz89ttpbxq1zP/YsQNO2d+8/y7En0eURxT/BUAM2D2G0P154kbq3TcQ//q7aFabspT8rqo32tv6FP7bs1kDvFIE/0lGk1geQdD97AMZtK2DrPyWx5LJOcX8/0/aIvYGymz/TV5KKH/CqP1m3YQ9E1Wa/C9CNUI2woL8K50LNAAdzP4Y+IYBHII4/EBo/zadp7D+gkdWO1Runv0YrNNvVjIQ/uEpeaO94Xj9rN0PIoExiP8wQPiKJLIi/21RN9NwOgL+hYkqciMKUv0tz40MnOu4/CPfFUQ=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "strides": [
                    8,
                    56
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.08808644305407576,
                    0.008362577487226432,
                    0.02833012413024251,
                    0.0071855435077197915,
                    0.12473215839873593,
                    0.06606274243227937,
                    0.11464402634587595
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.011305754335966412,
                    0.00408303820690054
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "values": "eJw7sHF1+rF/C+0ZJtS3MXPV7WdwOPGqaYPVfoYtSVOEDuXZM5TcknvE3mjfIB3VflVtyv4HjcXKn47NQqgPmFObv7LRnuHBx6csWjn2DC8kun+El9szaAR/k/jZsZ9hwoy9VXwl9gzvroXfty1EmA9Tb6HWmfG0yZ6hYIKaY1eKPcMZw/P2aWX2DCdk60OdK+wZGM7fkt+naA93D8x8mPqCLoPMk+32DAm7GJj7E/YzHFmoKlZfsZ8hZ7PDdo1EuPvh7oGZD1W/wP2R26uwHfYMAYZ8+vmp9gyzJUO0O8rg/oW7H+YemPkw9bbvd1/6PMu+Icx94o74BkT4wPwLcz/MPTDzoeoXrLuYaGa73B4ADY6kTA=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            7
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            7,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkwNDkxMTM2cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM5MDQ5MTEzNnEBYS4yAAAAAAAAAPIc4qpb38U/7x3CvkEo8b9bJOw2byDovwFuBWm6adO/Tgyq+XK9yL9F1Sqkb6rWvz/ETP/4WNI/xzCsWUQL4j9+JxB5uELSP7gw767Y7tq/GVP/r4+l4D/b3WEMg1Plv2BrVH8ogWw/kQM89pAk178Waf/NrgufvxK7Cx26Jc0/CE+XNgqQ2z8YCaCgbznhv2odW4Gw9+E/rWFj1A9+8b8euWbMmHzUv4RWDKzJU9g/k1zyJU9u0D+oLxosvXTGP0wWwVpIlOI/Blkdvt5Nz7/LyKvP68bWv3yQ4b3oH7O/WW+/aVek5L9/sZTHSxnZv7F8PZLNV+u/XFL3Tl6OtD/mLzwsSu2wv5MMD4t5rcs/lcz6Oy5qzb9DEbylSzDRP4HO7ol8ANE/2Cm9+D3Lxb+I8ZAqnuPSPzZFI/nHHq8/QCEKn1LZyr/mDxDY8ZatPz0Tt7UXstS/VuldEwChy79VtlGPfu9/vz9LePE3dLq/eG0dNaBOwb9EmlRimPXOv/HsqN65lNK/7p1grZvh1D8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkwMTg0NzA0cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM5MDE4NDcwNHEBYS5kAAAAAAAAAFUaJyyb/cq/UI1tEMM0yb8R+jCpixqrP60iDNy97KY/RwKA2Cgjx78JlbKDds2Ov8Xr+WA3WLm/Tx4Hw7CUob9akpTmqtSKP8Jm3I04mK0/7C3xSUmDtb9Kz1GwkPfDP3ANWbu2bZO/QJUeO5qZsT8g2dkcThjDvz+YAN16TcI/GICPgifKkL9JHhj+2XrDP2DV1+KBx7K/saeF7B9uyj9IZyhggPTHPyG9WSEwCLO/7dr8GAno0D/oN7z2PvqOv/UH+qmmzNE/U6BvUZ2ix79o7v9UYqCiv7/Uwigr9NC/HMt26LDboj//I/rgQgnBPy5rWzjRkrs/YLn2vz8psj/o6DRFKg2qvyU2AQv+36S/NkpEOL7nrT+BLYVI5+aTv5uy4SjxrdS/buEQ6IrHmj9AL3eLH1m5v0lg45qynoM/UShprvPytT9URnR40FuTP2iVjUHeIbk/tvwpBrdW0r9SxfM+PUt9Py+Fwi5JZbu/AR+FRTuRq79rzgBZAPSzPzZKLsRtMIk/xhtaErMYzb91cqcnFvC8P3I8WY6qKXw/pLmn1xhBjb9/N87jaXyiP+80U6Z4p6o/nexu/Sesoj+MB84JWxm3v7zmRaDctYs/3BDRM7Rwor8vYFSDEM56P84FzCTgyZI/a8K9DZW9s7/1LLwfHO6hP5/ZOLkMqqM/DCfpWE5oxj+c1waq3Nu5P3AtgpY1q5y/mDIoRH0d0T8Wh1UHEvy0P5FUk3R0e2o/No2dQL9IqD9kJXBUZICBv6sR6tyfiVi/JqGEiyK0fD93kZO9332rP2oFMyN4n42/qvxiF693aL9vKE4FN9moP8uf7IbAfJc/1psJWalXij8JRXsC0RaPP+XWSKGJVbs/NppxS9nAe79xs/7BQpOcvwHLW5UOc5A/RhI48Abdg78XztxDbm7Dv5mUkadwmqa/AFCUVqfppb9v6spXs8Wnv7hnFTg9aLO/rPjp+n2+w7/6NeKkbmCVP+teq3JiRKC/T+T7hYn6nr+VkNVRnlrBPxL7N6sVD48/pjWdkm3Nur+W2sFPvzjCPw4Yf1ZPg6Y/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkwNDY3NDU2cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM5MDQ2NzQ1NnEBYS4CAAAAAAAAACqxboftldE/iTq+WDPJvz8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    7,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -1.1123987181407444,
                        3.6122677980678572,
                        3.0759601224082864,
                        3.4607440051346163,
                        1.6706015334925108,
                        2.241861731873617,
                        -0.877807771045134
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7
                ],
                "values": [
                    -1.1123987181407444,
                    3.6122677980678572,
                    3.0759601224082864,
                    3.4607440051346163,
                    1.6706015334925108,
                    2.241861731873617,
                    -0.877807771045134
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 85
    }
}