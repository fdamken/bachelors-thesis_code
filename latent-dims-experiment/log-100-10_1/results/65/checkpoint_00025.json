{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        7,
                        7
                    ],
                    "values": "eJwBiAF3/pGxXFR6wu4/8r1DuuLNg79pAjqpFV5rP3G5A+EI+Y0/KgRRNcV1hD89myJb576kP85PTZvGMpu/w4zkOlT8vD8HJ06DUSfwP1WJBr/w77a/zYdnXoYYmr/SRmfTIGK6P0wWVoxZoKY/1GwzoPH3sL/WuFu1KOikvxviXlQOVYg/j0j/9Uyj7j8thnN57tiDv9XFwcizYYw/jsFfoXqjrL+D3daTAfihP/J4KRoGfKm/23b/7uTWXD+zDj0lU9yjP8zs3VRNQ+4/uQd9zoz2jz8lMFCG/pttv3gEUZop2KI/85dwX6h9mT+XKNEveZSXP0fsaYlcZ4C/aWodxVqnXL9kWQ8VW+HtP6zMH3lj6WE/gPRxJUsGkL+3a2/Yb7ByP4ZDDtOvBYC/9m4loz/PbD9QF0tkGY+VP0tgsQriHWa/xmOP92n07T8eUfP4im6kPzzX++drkpK/qHZm8xHTjT+ZLxUctXNxv00RtsKYko+/By6Wg72aXj9IfcwDaA13v6VtHtmGv+0/vtDGlA=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "strides": [
                    8,
                    56
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.5362578842709964,
                    0.11095793912579917,
                    0.3686339197238759,
                    0.26091143176541254,
                    0.6852213318630521,
                    0.4383199413950678,
                    0.8002003585358666
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.07223469474964259,
                    0.03174775709548754
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "values": "eJxrWO4wcxrjKfuGm7GOPc4z9h+I7XBfvnaTPYPpiunqsxvtGVSm3/nfPdX+Sn3a/bULD+//oRUszKN8AqE+i+GLPt8BewavZ4VPjk6xZzAWZ/7Xute+Ie1e5RztPfsZTKoXrkprsWfgmqXzYl+ZPdx8qPoDFhFSgddO2zOYVb3i9lm6n0HA7U3MsdL9DJ8jZl9WW7vfYfti5prINQj3QM2HqW/4y/KWgfOkPYPCq84fvIX2DSvyrUMXTt3fIP08dm3XArj74e6BmQ9Tr8XW6TPjsf2DA2e443fut29YVLrDJGoj3L9w90PdAzMfpn7K3uyWR4Ln7DV26vUtCtwADx+Yf2Huh7kHZj5M/ZKinV78KpfsAWy6t6k="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkzNzc3OTIwcQJYAwAAAGNwdXEDTV4BTnRxBFEugAJdcQBYCgAAADEzOTM3Nzc5MjBxAWEuXgEAAAAAAADe4x5OD8ZqP0yyEGFXzPC/CYvt4wWbz788G33o2D/Sv4B0OmOqE9U/Qd7YhtM9xL8nlC8a4JeQP6cPi3mKtqS/JW7Hb1zt6L/9EstVfkLjv+P+BeK2neC/Rwaw04Ya3r+CmSFveRLUvytOgGYnXss/K6UvA2BIqb9zO+h7sAvEP1Znv+FGZZm/9JABbnj+xD9LhN46v4h1v+L77ZGGmba/kUQkAl9L4r8MAtpPk1KxPxL7UoGqNXs/uSIOgNVAwz8PIdnnvGHgv/okc7a3j9m/B66jtSDm4D9U8OfZm8yZvyGb+Vz/coS/wGJ8PHZw6L/01Ufluhi0v+kLQ12XmcW/xujlfHppsT9EGZCaHjWlv5610YabvrK/vEfLpKWm0D+Qpt5WQ6/CPwSn+GVWMte/EKHan6x65T9kxoVNcEyhv2B68cTuYsI/Nm084N6r2L+3R6rxxfy2P8/7gkO0u7O/wP/DXbBg2z+dnYHFco/VP0VZ6ZpdHZi/fL0Vgs5gwr+0F2PFljyVP24EsZ2HN8I/xxpF2O7Y0j/YvFC2Ywy7v/6CWML0jNW/vhnhD0nOtj/miM64xnu+v8UQ6qqsZ9s/ip8w6kqbqb8lhTWSDRXAP5RE8FMYReM/Wc7ktvzWsb9mMm85iTPSv2dKN0rRKdU/gc37RPYkz78SEVRCsgmkv4SmY10ys9e/jziPUdDnqz+XPAAZbzDMv86f/F/zaNc/0qvSzAYqwj+uG/M3IXizv0f+3NgGmrw/P+LKZ2Yh3D9iJ9N4i1N4v6O47PjeDdW/Dx/l3tE/tD+61qJeR1HJv+iUto1SAsI/F0T+lp1/mT+8/klL3bjYv0U/38j45MW/KFBFbVGZqj/rM2IVgs8zP72Gajg2obI/e4KNByX20r/ji+yFWvTUP7q7eqChDOg/ALgbhP17yb+mh2Ufcgq+PyUHbYJonNO/oF63Czn11b/AkFgit4bJPzyl++yNbdc/9LtHYDVkqb+gdIWdx42rv4/bwcM31cg/umnU6L5Xtb/ntUak0cvKP/B8825Qab6/Vin4bLWJ1L/gwDR+Nf/cP9PXu5J+Iqa/EK4W0PTskD9jtVHS2e7FPwa6Wzskis+/46f60BcLoz9yuNUnVjzHPylkfa6DNsA/FaXYtGsqrr/Ww6OR993JPyH38C5LycI/YBtdY7BTpj+ujWtpdafGv0PshTQ91MW/Q2j6QxDF1r+Zvdzof31xP5SmuL5mDNU/E9xkZb4u3T+A0ScrwinWv4cb5/5oR9o/qrm2jjZLkD/L509HXW3RP4SnfzcbPtC/Y002rzMv178JYsvJn6mZv2XyTGp+pse/jnNAEvqjwD+F07wfBQbCv0x3zJA+udU/i5NKhq6x07//XWrmTRTcvyTsuUtR0Ms/0vpbx7OHYL9yVyiFLvqEv0Edm1QFZ9U/xF3c0PrMx79vuDWJ0m2TP94UwGo+6r+/An+gfe5SlD/9M9ppkmPcPxgAKVI3uLa/DQWlitFxyb+QVMn2FB3PPzbGjw/k2si/D1pQNnWYyb/hA4Pz0wKzP03G+NEAwaU/f54qfSUHwr8eOYazJLZxv4i9cd1LB8C/DKlqUpec1D/XrhLbqm3Rv03GN2K/Bbo/FIxQRBJctj90MzRYHPC3v7w6f+TpbME/a7RA0cD3vj9eCpiKikq3P5N4BHk5gNA/L57TRiKN1T+AnBNcEXawP1IRchlNxcy/ebXnCAc5hT/OEYy3eRDavzeJK2ofQsu/+FMhkoIqqD/zHcnt5HTLv/1UmhC0r9E/jJByQJf/5T/TiGYCj/TJP27iF3fv+rm/rJ2KZ3Uy3j/buja5Pl6hP64kzgY6WMs/iDnEEr8e0z9x1FGVT7DHvyUOAop9atC/yRqmd1K+3r/v5ewoYMLYv82IHBfgXLu/8PWQ7+kVvD8gJmLCGSDQv8tDPtPZ77s/jCoS+vjW0j8Y0oAycUjHvwDNTNbpf5i/JDunqGjc0D8ufvaxA8jgP0dQrt5rUt6/ANdk8+9vxj8LMfqm22HPv4XuWI8US42/CD97ZeXJyz/adw8qiIZRvy4vfHw6eou/mKkumnAwvr/Qr2xCFFzMv52fg3KGKMU/edCuCr0M0L+0MAafXaPKPwQpO0umLdG/POxa4JgGxD8Fg2xS3M6Bvz+GSyGPw8C/emejfEzCuL9+34In3JrRPwSPG+vy8EY/hRNBCPcZpj8KXdoryFXpPy6KEa8yyqI/uOXlJVYg1L974EMt7jCzP1mjlhxwgOG/MbVPIYP1xr9xwQofRijOvySwxvmaoIW/1nkVZdsj0D8hHKXoLT+2P1PpZmmqIcM/MqOfJPsxtb/NS1gGeF7fv+2q+8jPVaK/IfDxwP/rsb/x6Ipj6gzZPzLtdKQr4d+//3LYZzXlyL8UY/1vF4S4P5L8ZAwZ1cU/KS8MLi3j1b8D/nh3auvUPwmxR7pxhME/K0lHSsPqm7+RV5th7N9ev4SkIkXJyrA/ETQYLl3d5D//MjEG7DnWP3l5JzaSbc0/3D5WrtWYy7+Zd9wM9sZ7v8sDS+Hs8s4/yecwKSPvsT8dhfOs6Azev5r4FKXAH6Y/M7JD/mg5qD+2Bc6fYZHgv3DeIoB+ipI/PKsPAS+myb+o8r8GIljjP7XVmkrh4cG/dnVQTI3ybr9cCiCRabvTP07OQOrNmci/vY11T74Kvj9bEmpgvezAvyWTKH9zSMy/Eeeg/VJV0b9/x0EwW3ugP9LVEC2W9ZM/ZVJnjz0dwr/2GCQpKJG0P0HtrxThtt2/7GfIYrNAqb+oIIppL1enP1JKGPJJ1tE/3zzP43BstL8iaqUUrH3VP3Zl0lQcksu/7fd5QulEpr9xOmEFjIfAP1Qgpf0ENaE/zccgNXvIqb/Gy2xzHE7BP74VjO2d5cS/O1tBteWL0j/lOhmIX9qCv4MK6KBwkNG/5mLCF4lAw78k/9DlosngP68DZPIMkLi//xjle7vKw78hpAqBoGmnP1QH0MbEh84/23RHShQM2r9zUeDtZ6jQv/1kHpxLJZq/NxtjQY4Qsb9wr/ZFp5nFPwkkUBHsrK+/EcDCH/Cdy7+Uj62N62Cavx7r7iJC/uK/Zt7ohiHa0j9hF/n/UYbEv6g//e6Bp7G/KGIx7tchwz9z5ymifgTEvw6uCU0YPX6/QYI93SKuur+oX2g97yTbv+WVIERmbLI/+vjG2B5T4T/LNAiClkfSPxwjbz37s4e/dyWLeb7Q4L9mItDnVfClvzJNDOm/BdS/Xk92ko2Exj/clmlAd2i3v5aNmN4LG4e/PdDqZJR6xr+FMKvrCxyzv/6WHiBr0uG/p9R2/KCQqT8Trr0+s2/UPwXXAjgTNMO/O10FrmyIoL8JuuTzltWsvyjTU4X6IsA/nFu0Pvif4z9P6NI045bQv6GNCduaPoE/OtGtGHaXzz9Q6jh/XCi2v4yMfVFOJce/BvIU6bZtsL8dv2RyuSPVPzMg+T2HU9C/o3ZsEnWuwL9KSzSeNSbcP+JXDr/aGIi/eyYgs5Ifob8bKaWmAVfiv1WhXai0ede/7CVbXUhgwD8cF825N4THP1nrzrSO66+/Ex3ALaAdmr+RH90YaBHJP6cBaWESH9u/cjI69Bra6b9DG+cB/hLRv51mYukvt6g/+hvs+qOJsL8TIu/tYN7IP+tXC4fnNtK/lLJvgTaceT/sRK5XI914P4WfVSD486O/vHunkKcazz/LjehjO4TQvxaHkm457Ks/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            7
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            7,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5NzkxNjE2cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4OTc5MTYxNnEBYS4yAAAAAAAAAA6RzYWpftY/Ic9snKDl4r8/19KzNi/jv3GA3LqSkLO/8WFmWrMbyj/UO2Gi9pq+P2IhiqKwuIi/jClyoZEz1D8D94NOV6nSPzwh0DAfeM+/u1fjrM723D+jG2cmmLrTvzL/1eT2jby/yqTOUiYDr782KKsBuMqyv0c4x5FlR7c//3MOPq6K1T+0/q7mxdXRv2FIig4ah9g/kqy8ptqS4b9X41kaG6iGv8/nNEB1Bbs/cDR3719LxL/6i+8/3s62v+rjTH/KAbo/dCo2zQXUwL9mSTJMBq3Pv3cscgiOxM8/xsJEfqud4b/2pt+53FvWv6QKfIiPyOO/XHTfP4yBmT9qwmj0MKfOv/lpLX6wMKm/bjUVtbLaxr9hfma1/3y0P5aZ5RadI+E/YNkEuu6/pr8iXfz7Rf+eP7FIbwHqCrg/gaYTA0p/lD90lp0RRai6v3p5WtRQfb8/LP6th5LJpr++Mm/DgfC9PxZLAzktY8G/N3hQ94dZyr8ebwf7eOqRP77Ylq2Ppau/hwfcku2ir78="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkwMTU5MTY4cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM5MDE1OTE2OHEBYS5kAAAAAAAAAC0W9lczJ8u/TflBbZkfvb/GV7kLg/e8P3WWHKhOobw/w1scbYuqvb+hvgk+gRKhv2YI80eqaIm/Hi0etenPrr/dy7zuzoeTvyc5PBg3GbY/uf3HmrcXlD+4aBYgHZu5P3V4LHnSWLo/dnBRH+vfqT/dLUbD0SPIvyZG1fv3HLI/UpyqbkHSsr8L7ibUG82pvxWfmlZNEjg/xIAW7DxPxj8TmvamTwpzv+tOXQWgWL2/srDh9bo2xz9EjK7dw6Owv3byYSWY+sg/zT6iEpIfvb/KQ6G0H7O3P0vLXkCE/8y/EpZ0u1EvtD9yGsfQbunEP72QrO/Zw8A/HHpbixT+uz+8IW5R1M+Yvz0wLffnb7S/jod+7Ekosj8SPePzpw2sv1OvOpFZZtC/tCsZ4iOGmT/rrAULYkynv/m5h42+n4c/exXqmR2ZwT9ExzkDq7G/v5r37Nvbgb0/E/KS7Iagzb8fZMQH1NhiP8gqv7aJepq/51VLc0zNrL/RG7szG8i9P6RrmIPTHaM/fixwXjAty7/GIXH/hF+6P3V0D3JuOpY/TxJ2vtr0lj/JSXA+GHacvx5MODS4mrE/enVvTSamuT/CJmwSzlWHvyUrHBGOCa4/zU1z9fxdnL98gGiIBdGov0Hk+/c9TrI/xz1kZQuskr/cbGix0eq2P5i4Oiy5/Ko/4uB9r7nuuD/B5lSrZkaxP92QzxcN27W/YH6kQDuixT+vcKxPLgmjP8Z2+6wnNKY/XZtfa2t4vj8YlUHCIgSiP658j/CASJC/MrXjcOeBm783DxvxfBukP8qGpEE72lm//JAi0sZZsL+g6e7CbXyhvzr9zOZh2aK/WvYvw7Bror+H7/weaKu4v/CYFrtZTrA/bZ6lXkPHsj8+Kk3ZK4G1v1DDP11otag/tGik6Tmirj8epn9cOVHAv92Xude+bqe/qEEvcJQAh7+K3xYoVHm6v2uMt9JTMLi/eAkZecfmhr+Y7x3s9Saiv8Mvn52kDH+/nQ6zfbwKtD9VN9hJuGWav+s1wpkv+Ku/ZL4YD2xAuL/B8qVhCa+XP1PNusJ6rak/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg4OTg4NzM2cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM4ODk4ODczNnEBYS4CAAAAAAAAAALc3p0Ne8g/8hlLRu/4uz8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    7,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        1.035222042204541,
                        3.0980522419317587,
                        3.0875383390801447,
                        3.6344950271314,
                        2.974098411864572,
                        0.8703353187701859,
                        1.2078091484778433
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7
                ],
                "values": [
                    1.035222042204541,
                    3.0980522419317587,
                    3.0875383390801447,
                    3.6344950271314,
                    2.974098411864572,
                    0.8703353187701859,
                    1.2078091484778433
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 25
    }
}