{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        7,
                        7
                    ],
                    "values": "eJwBiAF3/lpua1jMYu4/h7wMSWHtY78AmcShiMaQv+YbaUgaSXQ/5DrTiFCvoz9rHYSqNVujPw5Pdk7/HKi/Qprl/ETGuT/jOI4zjsvvP+sTfY5dPbe/kNw83jGrer/3noO1l0iwP8X5foPAq5k/Qf+K1Gl6sL8i6TY/9XmwvxE8DoxE/IM/5IZ06tnq7j+NeMQDjPCNv1rVMwuNeYk/VPUL7wHytb9z8GpkfFK5P+FtlgkFaqW/VcB9UzfKgj+qwYfb3zOlP24nfGCLkO0/W4baWyqgoz8ca93ndHpRP49h5Raxx64/UafUhxnWoT/TQNv1awZ+P0nwYMUkeFO/MhWEIn4GaD86l1j5As3sP+AbxRnjoWm/fjCJQBX7TL8Iv20OU+CCPxq/Txf+n2q/fR8H/zzmSz+j4YQJHz2hP337vjXAnW4/vbHceXXh7T9KukHGH+uhP9aFvnYAbYi/StO6GKA7hz+fNXHPWz9tPwEauXqCa5O/q8xiFzyLaz9DD+TTJ+uSv9iQP2/fJ+4/dsDE5A=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "strides": [
                    8,
                    56
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.4171648814381352,
                    0.03767891681796,
                    0.15611936950506036,
                    0.14660898313284082,
                    0.5705935595477729,
                    0.28794584944413815,
                    0.648983662538623
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.08478382480000983,
                    0.008716622840238528
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "values": "eJzbc97p3xvzw/YM+pxrTya07W9Y6lBbFT7BvoFN+lui5Bx7hq6OS5sOd+xvKEmflFZ4YL9Pv7VnDccBuHoGqbTUuKil9gwexyvm3AaqP6Ky40biLHsG7wkrz59Zvp+hYd+K27db7BkaylWfmKvbw8yHq583d2Ng+BZ7hoIg7VMZBfYMApXf5J817W9YP0N60aUJ+xnyYhROLKncD3cPzHyo+oazkWkfSjbbM2zTnLaTZ459w6lF95u1Fu9veJPJw6c2G+5+uHug5sPUHzg/M/jUruv2DVlTOKc/2mTP8Fe38NisZnuYf2Huh7kHbj5UvYTzgtNfd56wV5gvubqvfiUifKD+hbsf5h6o+TD1X9KLX/O7nLAHAAewuLY="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            7
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            7,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAkAAAAyMzk0NDI2ODhxAlgDAAAAY3B1cQNLMk50cQRRLoACXXEAWAkAAAAyMzk0NDI2ODhxAWEuMgAAAAAAAABP6tFqeuXWP3WrsOZMvOe/18JB/l/g479maLcGh+rCvxmOWoNUlsc/gYvsGI2GrD/vHup5YguzP4BYjXmTGdg/a0V4Tce60D9Z+nIvLJ7Sv5yunmToqN8/lZFwrfog2b9bRqQijditvxV0OJx3YbW/BvbBN1+Fp7+9If8Zd122P67PFgH/SM4/Ml8mW5JF0b/LLkf3SmzfP3E2FJ8mr+O/1M+tic+KpL/sK9eAMO7EP6+e9Em3RpS/hIzlku2apL9Tct2yFoTQP5VcR481csG/2E9snrPV1b+ZKahBZTjSP69qyvE+fOK/t/hOtuOy1b/x+tAhO0Hnv3L067sZNsY/IMSMhZQKy7+3pSZTYFSAv55KHoso58a/nuvtIWjmwT+XkewVkzfaP3WMCycqebW/UxGwviTlvj8HxyK+Y2mSP/0v0SNHT3W/qYdg6jThoz+P2UeR53x9P3a1HCIQC6W/3mZMeyJgxz+wUsywpMS9v5XusXvm29G/rmyuJOB1rb+n4g6ZVA6vv8evXLWGD5G/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5NDAyNDMycQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM4OTQwMjQzMnEBYS5kAAAAAAAAAKQv1Xxt/M2/H1VJ4BRUwr9qssgLBJfHP3mBEm07ELI/R13elmVZwr/Cc/DUdFCWvxBSBJjzuLS/XsP5LD7BsL/JZdRb0wFtv0T6G9B053a/bhKg5fisnb/bxEUOwoWUP+syHha55qY/d1xL2zotrj/xrnp/q0PDv5s7P43lr7k/+p56ft6frb9c8J7WZTZ8P1MVvGjdLaC/nJfrNm8tyD/J2ctFWyOePyQRKBCTq66/XnzJbs3xyj+8T9mSKDezv6tG6hZTscw/TwcaZ1JDwr8IGnu3ltGyP62rb3UqN86/NYxY7L9Ffr91opQQqc7FP3bfmbX9oMU/vpiw1CtLwD8TA6M4yFBvP5zcTMEuoKy/VPZ8WqFcnD/drVtWuTKvv+ksbFmcStK/4UBUTTgkkj/+OePg45Wrv9S1Bx3M0rO/AyJtZmRUvj9d90x4EyGFvxhW3Y8XzrE/D2N8dtka0L9Fqa68ppmhv5ovfy0QJLS/5ue60fevor8jnBXOOcizP++0L2CLaqo/+rgQnu2iy78kEZCypD3AP6k+iye+oJg/pThV12CKcz+DhbV5elqTPwACYeRwCLc/aNKbJfg7uT9YwnNwZk6xv3wpppj74Kg/wvBGfTMglL+uTBc6OTOnv8u8mV2XBqk/DpL+H6GZkr+dVpzA39+7P6s9Z1QtNqo/uFxqTaFWxD9plATSsK+wP9RVu4ziVKq/Pb5KEXfMyz9lSUZZklKwP2zaeFeiaKg/CfuPlzS9uD/jcVjLVy6SP6eM7g/0tZK/EFhvxbdDkL9IJ3iPaNCiP9FR4JvyJlE/aVahd/SppL+cLX77blOBv/2mvrxNUHu/opaFwjK7pL/CkaVI4i68v97gR1CKjbA/YknTQtGadr/lGI9QgFyYv9lKkUtQIao/sUHXf1wlqD81qkMakfa9v9YXRI2WAbS/505dbu8sjr/kLzL5WH++v8+Rnts/Br2/vSSnEKaVQ78hgCmGYtaYv2aib1Ms+ju/xgUQkJcWfT8eCGsRshGcP5Thl2hVUbO/9cO66U/lr78If0pIyqaoP89Rqd3W4Kg/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkwMzY0NzIwcQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM5MDM2NDcyMHEBYS4CAAAAAAAAAJ1JL6VcP8w/axUOp51fuz8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    7,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        0.8283813337764289,
                        2.569410041401908,
                        3.770115116088608,
                        3.1166342886729526,
                        3.8708757162170313,
                        1.04011381230379,
                        0.7566330586296068
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7
                ],
                "values": [
                    0.8283813337764289,
                    2.569410041401908,
                    3.770115116088608,
                    3.1166342886729526,
                    3.8708757162170313,
                    1.04011381230379,
                    0.7566330586296068
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 40
    }
}