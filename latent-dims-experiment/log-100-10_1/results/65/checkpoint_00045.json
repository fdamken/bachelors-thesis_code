{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        7,
                        7
                    ],
                    "values": "eJwBiAF3/idsLHie9+0/xGcM3hTBaj8+RFH3CWaUv9RrCKXWGxA/Ifg/UvbApT/ehpeb35OaP4f2l9YLa6G/d6Y7Br4ztz/LVvSsS1zvPylCynX/lbS/jp3+tNfYi7+ZjtxjQHOjP8iScuo4kYQ/0JprTdVsnr8pA78E+Uivv4m6jpgd3y8/z+qzgmJP7z+I9vKZvr55Pwmevuw6sZ4/0IGvgn3xs78N6vUn3GTAPxQmihZXI6G/dvt3kHySiT8cDqetFHqjP7/CiFkFme0/cbgL7PWLpj9N3T8LcbWQP/+ocjJAlbA/ciulpv2gnj/yy4jAKwN7P88rwGsjhWO/ocXATo/DWT9WJWd0GFTsP9SdkNVkGHW/gULMfr5teD88dpSc39WLP223Fv0CL3i/zMK+UyS5cz/sfkcIgLWhP56M+uIrbZE/HQIZfAyk7T/x4ExRqz6ZP9m39tJrMYq/bF9/YBKhjz9ZsC0QciVzv/tXpnV+UJ2/poO8ISy1eb8kfp7+48Wgvxy7h7CPGu4/BgTJZQ=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "strides": [
                    8,
                    56
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.35689732521336964,
                    0.030308795522388667,
                    0.10950916416681766,
                    0.10479229317752105,
                    0.5339222572612765,
                    0.23425852841053907,
                    0.46091344613341423
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.016136643193158308,
                    0.008499048804839275
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "values": "eJxrmP7k38Zl++0ZHEUu7Fg8YT/DtF1MldG99g1vltg7PJxizyBx8M0BmbD9AhalTBuW7N7/4uel+vc/tiPUa5gYPyxbaM/wZuHuI3un2zP8Snlg5TnZnmE34wPtpYv3M2zwfuos0WfPsKxr57fD1XDzYeobltumbi7bALRntk/9ziJ7Bg3HbbZby/YzcB4V+Z7Tu59hk/cP5+O1++HugZkPU29Sfyv/JVD/vg1ntN/Ptz9QojJnN//C/QwvFt78bz4B7n64e2DmQ9UvKCz9ILX0qj1D9Hemj9vXANWXSPnO6LOH+Rfufqh74OZD1Z+JfWKQKnLMPkFfRNb89DxE+MD8C3U/wj0Q82HqGRzNHi04e8geAIbKvCc="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            7
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            7,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5ODMwMTQ0cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4OTgzMDE0NHEBYS4yAAAAAAAAAD8UedryrdQ/eQPcxIIE6r99EYmEtPTjv4/8Dyd2RsK/hRAp4LPOwT+VIPc6CdGTP4I7L2SLRbw/4PigQbyI2D/RKMXE7yjRPzO+yQ9rWtO/pa5r+oUB3j8x/i4IXvbav8nOtKKUs6e/cEWdZY9Nv79NENRSIZa2vw5fZU6LvLI/sLI8Q3G0zD+hUuIn0P/Uv+ITlif0st4/sc8f/xf+478l6xmsbXq4v5SRbOTGq8o/RnEmZaFWyj/j4ewqgmyfv00mZ6A0y9k/b7WYC0jWyr9m3ZPMKYfUv+sQ+IOGndI/OoNqzUST4b+mZPsuUqzSvzDBELnCMue/hPcZsUQwxT/8p9AQZbzGv1MNRSbhY38/JMdPWNYByb+WJl5OTs/BP5jRKcwqB9c/Ohg5pFE5tb8gy/NHAa/FP1M0N9LRHpk/HHnkPTTunj/9Lws2tryaP39/+Z7w6aG/WjnUGmVqqb9COD7JIdPAPweVBofV2sC/IgtvXu8f0b+noyozYomwv1OeDEhF6LO/y7uhutNSqb8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkyMjkxODA4cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM5MjI5MTgwOHEBYS5kAAAAAAAAAJSVdSso3M6/QDW2SwlzxL+rP0mqjvLBP2VnEDlgyrU/HSzzTF87xL+2K2+fWUqQvx3QduYDDLS/VERqHHCNqb+s8thy402TPzUTgB6Z8qI/+wJ4cjxfoL9fYJImPR6WPz2tjwUOZqA/Mt6FUNJIsD+7iPoxVnTDv365HiXqtb0/4Ek6EtMMsr/kz3mGiNuCP2BIyeAalqm/K4wMGo2yyD8Niz+m33upPz0XzMnPgbC/xLwDg90PzT9O9GOtOHbCv9GBCktTz84/Z7lULmpgxL9sKN6CF5OyPyIDtJGwGtG/KAs5hJG2dT/0/pSYuibHP/iAwSPxqsY/6rujVrnpwT9adbljXrChv+sw152C7Zm/FAOfa2eZcL/m9+9K1xy5vxn7dOT4UNO/3ony6Ewpgz/vjk2sHASyv4fhUK0UXrW/WvH3RHkswD/fkVfkiMOEv58XuCJCgK8//0WmCcUP0b/WHjEmpBmKP07xbLRwubm/8d2s8hIfqb9JkLT1OuuyP0qvAXCIQpg/Q70RZ9j4y7+Y2vsjR9e7P03P6chGiG4/HYrt//9DND+nMT86hV6kP8SjgcZ8xLE/in2DY0v6uT9tAA/zmKS1v7KlIQQCNaU/bnLx+a7Dsb+VxhR11FBxv5U24txPeKg/frc0B1uSjb9aPG+C0wa8PxhPBJGR/rI/H2nA3ElhxD+zMNgJrA62PweNrMjWVKq/nIpB/SiWzD+/jyctA7SpP/e1ngzVY6E/fQNcSRiluD+O/I4bgytqvzACpRrsc2E/Td5VWSjUjL/L4xMu+z+tP62VIcoAcpO/sWjbYDTanb9+xHccKjNtP5r1xl+lH4O/q0Zy4AJWkb/PS7hg15S1v0hG/eOyOKo//022OO/dbT9Is68mNuyov78j2oAjerg/Q4r1QsIfqD9pSQw1jZzBv1ITd5p/kLC/1w2QJvbQkb9UzmI4IdO9vztnQ+1rLsC/lJ0YzYQvmD9VMfOthpmfv9cDR4F7+JW/ef88tiLCir9fVRh2mv2vPykUbBo2Lqi/YgiAw+CCtL9MSN7OmyqyP4lADi4/76U/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkwMTk0MDQ4cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM5MDE5NDA0OHEBYS4CAAAAAAAAAIiL1ut3X84/PxtWMzlKwD8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    7,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        0.9651330348983704,
                        2.6372134394781126,
                        3.6510750886291086,
                        3.2833827212230173,
                        3.9971142612603074,
                        0.9830016244188897,
                        0.9743998868587633
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7
                ],
                "values": [
                    0.9651330348983704,
                    2.6372134394781126,
                    3.6510750886291086,
                    3.2833827212230173,
                    3.9971142612603074,
                    0.9830016244188897,
                    0.9743998868587633
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 45
    }
}