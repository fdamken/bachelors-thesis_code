{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        7,
                        7
                    ],
                    "values": "eJwBiAF3/qs5JTJMOu8/X5IjiINxjb+DUum68f5gP3pV3qxaeYo/y1lfWYrEfD/jtSrUO46iPz6RuqJuZZO/nyKWlAQNwD9K49IcWD7wP3gmfHN5k7G/ZsTKBIPXlb8mrLUO1r+2PwcRFZ/sH6c/AoZ5wHiBsb/rBztoXmmXvy66mcudY5E/KUE8rCz57j/Ks4l3A4qPvxvr12tihFs/yO4y9+PGpL/l553XSgl0v7dB+uJml7G/DriNYhoqiT9sYfhTWdWnPzgOnAh1p+4/H8Qo+adqgD+gqJPKVkuUv2wn6Z0/DqI/1Yq0SR+Soz9tpqoybm6SP1qXQ3iycY2/vDSGYq99bb+lMDSS7V7uP1aENjq17Io/GNd+dp8YmL/CetC0t691vwvqwSMBgH6/OViLGMareT8JBSEiajiMP8YwCWrwBmy/vBrJ/2Ed7j9QwR81lBOhPx+Iju1GOoC/g4dnq//IhT+/dXxx39GFvxc3zNGxjYm/+guoqTaRbL+JouYvTDl0P7K3SPua3u0/cBXDmw=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "strides": [
                    8,
                    56
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.592797023124054,
                    0.1532048663534542,
                    0.4200901624504305,
                    0.29416870278832274,
                    0.7506905140435776,
                    0.49141916116065126,
                    0.8606897892436454
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.06887761075098206,
                    0.01800926301157574
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "values": "eJwLub/NX03tjD2DsaTCyYxZ+w/E1HrvPr3RnuGtnxHP9Gag+J2vq8ua7U9YNtr5ZR/Z3/H3YUqY3Gm4+oYXjZyf7h6zZwha8F3v8Ex7holvex2OHrVveJswk/Hl/v0MN19ptl+abc+QIflYgmOWPdx8qHqFhPDbOfMv2DPI2HJ3nl+8n6G27tpsu8X2DrYJxunpG/YzTLxacad9OcI9UPNh6h36D3yU8gLq12nJPJHbtp/hkNHNxwrF+w9sMAvUTV0Ldz/cPVDzYeodrl85tevSM/sFeYuMvpsesG/ofsyn770U7l+Y++HugZoPU//ksprBIpEL9g+8Z6zcUrgeET5Q/8LcD3MPzHyY+pp53/Yf/XfFHgCZPbzI"
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            7
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            7,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MDYxMzEycQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4OTA2MTMxMnEBYS4yAAAAAAAAAKAo73/VqdM/itWeiFGt4b/gjR5TEC3jv4Svn5D0Lo6/Gsu+XKNDwj+EaKL4/sy+P29sc8fGRqS//nFcjoyx0j/Z7JcsfC7QPxG7ti7JWsa/egOwmFGJ2j/9oeyurujSvz5DFXJtH7K/JRuR6+yGq7/FAXxUaw2wv9pdhogPXrM/N33IR7GN1T+3gH4eieDRvxN2a/ceSNg/5NnucG/A4b+nEsRoW+iYv5Y9TZb2X5g/z4q/FMmmu79USPEvkKugv/dYHhlS/70/Y//3wAIntb+VLMGbgk7PvzuFfgrvB84/1Vm7ESuU3b+2wrK3ON3Cv7CQgVlIH+K/IQ2108rgjT98WauBcOPQv+NHzov2ILC/0pzCBo80w78zxJ+SI1+wP+DQi/z6OOI/DQQUeF5mgT+IjP0TD6qiv/SaixaIibw/k4ukN8YFnj+XvBE2OkK1v4N2FpgE98g//adrt3W0pr9DxlDRSfXAPz87kSBbD8i/RfWLDU10zb95Q0HiUDm1P9xx+CCS8oM/nkL8RRc6tL8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MDY4NjA4cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM4OTA2ODYwOHEBYS5kAAAAAAAAAA9TtzDLCci/FHGxqD4ct7+OqwyPkXjAP9P8r2uz0sA/Gqm9iKubtr83NiTPn3qtv9SYcmNHfqC/iNURLDVKor+Q7TZxmU2wv9UTWHTPo7U/4YHG5sWwo7+VY3Qi5KeoP6j8KkUOocA/1N0XFao/nD/Wf2sQe0rIv1cB243LNKg/lL8nUrGrur+ktjgoVUKuvyXdT2QvOoa/+tYbYFv5wj91vy/oR/+bv8AY6qvd8Lm/mMd3EP0zxD83D6JtcX5rv0dCPrta98U/ZUL5ZCEht7/faQhr7VSwP0hefrtc38m/DKGlfXdVuD9qRZ0yOejBP4ScryGZ1sA/LNhbIEiitj8j2v+VbPyPv5zBJ9M/abW/hQ5FM4A8oj/HkCB6Loa1v8d7SNMHGM6/XTv8NcZJgD8CSMCfXQehvzgvYQzlyo4/lH+d/mprwT8B1X50Doy3v/cjxqJRK70/vOyJ9/rNyr8lMXtA3OOIP34HY0d01ZK/c2ru3aBWtL+ikcQDzKjFP+xm5qOLg6I/9mgtS05IyL9lb06kJi+4P69Aa+7vgJQ/hgqNFB4GsT/zXVffDNKSP8nWGobo3LA/1CUJ5XQuuj8tNsVvDdORv9zQNffMrro/vtvJriEpob+PaYNUnmWTv59MlNC6G7M/W3QPOXX4pL/oaSHd3dCzPwX21IZ59as/AARxrkKxtj/5HTN5XsOxP8NXUVdIyL6/glHyMgtowj8HmctctKyqPzX++anwS6c/JGdq+KVavz8zFhNnpICsP2zlb4loKo2/L0XNhVpKYL9zJbL3wAulP8fyUOPtIGu/SUATdKtkrb9Z/KxyLYKivxEa1kvpznm/8RfdMNkhob92hneah9ytv6Ea1bXtN7E/L61UAJ5WuT//LPq9Abepv47RZO/mILI/A6PrrzSytj+3Fw1o0cjBvwD0VQmMqrG/yJYAokqpoz/a1ULrLE69vwKZlDQkbre/vVNgM909mr8sV40TMsqnv1yLAuD9r4q/+Dnw5TFztz837PZBAjaXvyJAEudS+6+/iqNWt6pPnL8iozcR69yGP7gWisPy66g/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkwNDcyOTYwcQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM5MDQ3Mjk2MHEBYS4CAAAAAAAAAGqs+/hfecU/EVJR/k1nvD8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    7,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        0.889716705556143,
                        3.0127038170175258,
                        3.2284174665002556,
                        3.282709810513638,
                        3.1536175152245423,
                        1.0106553113913612,
                        0.9608563049493114
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7
                ],
                "values": [
                    0.889716705556143,
                    3.0127038170175258,
                    3.2284174665002556,
                    3.282709810513638,
                    3.1536175152245423,
                    1.0106553113913612,
                    0.9608563049493114
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 20
    }
}