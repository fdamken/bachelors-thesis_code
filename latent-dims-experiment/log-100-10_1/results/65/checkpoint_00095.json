{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        7,
                        7
                    ],
                    "values": "eJwBiAF3/qBMlBV1oe0/8SHsexg8Yz8n1Cm3m66qv4wWomlrMpW/LQNq014HVD9OzhP/tVGiP3Wlb1YuQJS/WmmiWq3Prz8DdCJT7pntP9myBU5fzqO/PodHpF2Skr9mjBVYNwO5P5Vdt9IajoU/7Xm1lM+Eub8nd1/EncmTvy2Iw4IVVog/wNQGeKyV7j9rl17C9FiTP1ujHjVmebc/tMjtIXaqpb/6fbpjk7K7P87xBJbhY8c/F3/JQxxErj/ny+XaA5qIvyOQ1yv/u+8/XeElvFQIwj956DUcmEy8PyeEWRhNMsg/pyPUIWwcmz8FMHniIeCNP899c1TBcIw/9Jt1SuordD8hJ/HMaiXrP6xFOn88spE/LUPYkUbwkz8q8EspSoanPyFPGSSdIVk/Jkufggo4nb+M+YlgBqh5P9al7/jxWpo/VpcJKwDv6z9X6WTWWDmuv2PPaKBX/H0/9D3rUT2fWz83iOYkPPGCP2DWed0qnna/MYGillNbh7+UbJNHFlSgv9xqKldJ8+0/jNu9iw=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "strides": [
                    8,
                    56
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.04751350403713735,
                    0.006741481939398109,
                    0.026006587674759746,
                    0.004169228808815253,
                    0.08147753446308102,
                    0.05682451212431512,
                    0.12793161885436455
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.013436010121307846,
                    0.0057424320274279805
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "values": "eJxziN6f11wwy56hp8533/ey/QwKW72mhLvtZ0g4c6xfK8meYZ3x8SvBpfYMi5w1v0/s2s/AxWpnYD8ZoV6j59bqv9X2DAxzq7c8T7dncLj/9vjKPHuGjOJslfxWoPzCMzfOFNozaBgIhUqlIcyHqW8o3jxvbo09Q4LulSs3U4DmhKY674u1Z/hyVC+1rdie4UD1Os6vAfZw98DMh6t3V1TZC7J/6amILnF7hoDT36ybUvczNBw8l7baDuF+mHtg5kPVO7xr42kL3QLks744qSNkz9C1K+Z+XDHCvzD3w9wDMx+m/pn+Xum7k+wZcurKX71OQYQPzL8w98PcAzMfpt7lj4lf/GJ7AIh2oho="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            7
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            7,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkwMTQzMTY4cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM5MDE0MzE2OHEBYS4yAAAAAAAAANrie9Fta6A/Q+QljsO+8r+IBeIji5jov8031z3LatW/HlCGF5A92b/SuDZ1LZ3fv/Paz5sWKNY/0txs+iw85D+QTJT6/I/RP8G8PEBO9t2/sHbB1Gog4T83HmUg7sHmv1svSuBtUaQ/+OX6rs2Q4L//r8UtxJOhv09tchPECM8/B3Mp4y5G3T/Cw4n4udfiv0goCAwNoOE/bTZedCdN8b/oNDaPUrTWv4YpQ3rY2Nw/pldysZSS0z/2/cPV7t3MP5X7vrTAs+Q/0Yw/u8uO0L/ngCfNXHvTvxbPSV0Mrbq/Nv8UpAo25b+XM6VQgPLbv1PfSAlr++y/6sTt6egfgT+MsmelZSykP3gzuQkUYdA/ipZxHWc1zb88ViXYd5LSP7nOxa4KINA/oXQD6bziyr/fAzEcURrXP/JKut73r7A/qcRaTExJzL+dNOPlQkeyP4rzGVPVtNa/3KpVgmPoz79iWGUofNCLv5ufW0qxgsC/0LsCEPojt78aBSCPCqXQv6hw/7ouKde/2meQGcf2zT8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5NzczOTUycQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM4OTc3Mzk1MnEBYS5kAAAAAAAAAORFuw5MrMu/XlK6M30Dyr8NQBIFw1SPP8gVHD/3Nmw/MxWgshXyx78AOcCsPO2Fv8Q1T5yJWLq/fjJOJM59s7+YWJB2UT5sP+bA+1QT6aM/Lt8EvdgHf790WEhuteXKP9CxqTHZ1KK/sJ2VZtkYiT9EH0U6TDvDvzjM+Q5/CcM/Ff0ZCXNtLT8tZSOW2OHHP8fQmv2G6LG/ijwmC2gHyT/SdSVtokW3P+bGZ++I/ZO/LK6ZLctJ0T81QuGGwMa3v4LRfYWPL9I/QxuA7jBmx7+6d9oFRgybv8Xn/y/6VdG/bTNQuXV+qD9WRnJyl52Sv0QYJA/Fb6w/meK7ePaXsj9/bdgHVIiQv0IL1eN0EKG/7LyZv4XDk7+7+ETIT5KKvzifLYxrA9W/5dR72iWRnT+M9fKrskm6v1tfB29YD5A/9UPegq/zuD9C/hFpraRdv2Fbu5j9/rE/zXR15lSl0r+mjPGyJ/ONP1wZMeKTmby/Kkt0ajzyhr9JfpN452S3P7eVzOcSo2i/hahp5du9zb+AuyYSmxy8P/sQpLpMcXA/3efsngxrd7/UvOdlQRSkP4T7tLJ7L6k/yEUv3ek4mD9epMv8O8O/v8I3NP5w5JG/r6qXpbmApb+hwB+E1uJCP4bma6TxCGU/P8+SLFrNt7+hiwxysVKePy169JlpWqk/iI7utcCjxT+yJulkbZa6P9D1GJwfO6K/qPK5TkEh0T8XuO4wBOK0Py71Y2FyF1S/Q0ZG3788qT/8bQPOIPeHv6jX+5Ux81Y/ZJyNcbKbXD+5OjywBvmsPxI/ILRqNpO/PmZN5TR+gT/Xo5GkSBinP8OwoRBs3qA/VmjMsPJNhL9q6qHRcKumP0fOcp4kjbo/PVhgTfDrgr9rT1JmDqKxv51/32yKXGE/0z4IUYWofT+cPfNNlMzDv3NySfy63Zi/+skkrXiGo78wn0Y+GnCnv2vwQaFcM7G/1yiuEp3tu7/jV5cjKOijP8McCKDt06G/Vy5j18bRnb8I6VBDbkfCP118V0bS9oK/0WiBjs+Nv7+zJ1o4SqexP2nMaIHzi60/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkzNjY4MDMycQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM5MzY2ODAzMnEBYS4CAAAAAAAAALjZQgdp/dE/t/wrdVtCwD8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    7,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -1.265186864559964,
                        3.7422589034150486,
                        3.14814510986388,
                        3.6095404355287997,
                        1.823831079545306,
                        2.3608271205936306,
                        -1.1124852487875379
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7
                ],
                "values": [
                    -1.265186864559964,
                    3.7422589034150486,
                    3.14814510986388,
                    3.6095404355287997,
                    1.823831079545306,
                    2.3608271205936306,
                    -1.1124852487875379
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": "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"
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 95
    }
}