{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        7,
                        7
                    ],
                    "values": "eJwBiAF3/iB+vnSpK+0/QTXHI6vjej81PYaLKtaPv/MhmHbJSnW/ke/QwucwmD8EejXWfqaCP0OMQc+oQWq/IEmnYTiqvz+W3E4RQI/uP+LIiATEGbe/lX0XWJyFpb/VmfurgddTv1N/S5EHnqe/qM6XlFE0sr9egWRr3Aqevz60I56g3G4/DRUR8Acy8D+6Nfse9yyaP1L9aiS8ALU/ubAK4wFwsL9iZvGLwcG9P3ABLhjv05U/FEeEWPORlT8QXdc7EUCiP5nbEYemwe0/NPvdcJjKuz//2+WdAraMP9oWV1R5jbk/FY7JmTENmz/rNO+L2eCDP4UD4oiVnXI/1SPhJmCeXj9qbyg6UA/sP/7I77f8/Yu/kRm8EL0omD9naO3fblmaPxMbfKVt4Hm/tzEabNbuaj8y9U5xADugP43MuU2zC6I/2BC8056m7T8R/dE/ovyFP6XDPaMC5XY/I9f3NhfZdD+2C+SIp8N9v+PswKY78ZG/T1SQMiEzkL9GCDKC4fuMv5LsKX1zeu4/nP3GHw=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "strides": [
                    8,
                    56
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.24282604968340604,
                    0.015209712117624265,
                    0.04136682563154329,
                    0.02904630742324537,
                    0.3081175740895753,
                    0.10752320979046712,
                    0.1540476312155968
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.05558418998722118,
                    0.011402748519949057
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "values": "eJy7HyV6aIrnZvsDqvHFBw379jP8rp4bohdpz3DpWKtWfJk9wy2FPz/bEveHXE785ZG1er9UaVmP2ot1CPUpt4IXVE6xZ9jj+zVtSos9g/Wj2bXXJ9gzPNo7I+BM736Gkpc+7J/b7RuS+NsabJoR5sPUv6l2bn07w54hYrrmapUie4aqqZ6B+xvsGXxKHoe2ltszyE1NC2wo3g93D8x8qPqGfP5g1ReL7Rk25MxlXxJizzB/n8QjwQn7GRpPf41+Vwx3P9w9MPOh6hM87PIcxY7bM8TuO/NEZIk9Q0Fz/Cn+NnuYf2Huh7sHZj5U/YGIa4r1/7faM9Sw/DfYNhEePnD/wtwPcw/UfJh6kR85POLxO+wBvFuwEQ=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            7
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            7,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MTU1NTg0cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4OTE1NTU4NHEBYS4yAAAAAAAAALCFoxpCNdA/pyskv2x98L8cA3r34Jbjv7wazX+U5cq/Lah9PqzTsT+Zv+lVjuLEv54d2q70S8k/GSzH/4Ik2z/ckb5GUNnUP3sD3aLR3dW/SfcuIDiG3z8IE9qrbjncvymrplWJJKC/jXuzZ0PWzb/Pvi4VBOKvvxtymTXypb8/RIfyHtit1z+fj3fsp0Tav9eGwokKzN4/CEp393+U679/+06OkjjKv3MEX8OkitA/od/iZ1YA1D9WVK/ckVWgP2Ud5cgSbuM/vlmQB0c/1r+Hiy8HgnLZv0EdQf9eMMg/nJFbNs5O4L/GpBeLjkzOv3o3P3NWy+e/YsHU5+a7uz9wda4TTizDv6uGo9253cA/QrVsLsSFxb8+76x4+RfDP7ULCqO0u9M/aRQgyTpIwL/WGYj3wfbMP9BPpoCup5Y/muggyyftkj/5D5BWDm2pPwtmscUvAsS/vGKG8+4Zvr+pZKsWCJ+jvxFFj6814MK/mybeeHlHyb9+MKmNGw+2vy36caUqssu/VZSizY+qxD8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MjMzMDg4cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM4OTIzMzA4OHEBYS5kAAAAAAAAAP3jgVz0r8m/RWATG/JPxb/PCPDieOChP4R4fqkAVLU/pgM7ZCq9w7/Gsn7Za96Wvzd+KDyxf7+/lSOfNoL7qL/FaRqf1suhP/VFMfHCoKs/VS21aJ2to78vOJ3wyOOjP2j0LA4U2LC/MLq2EbwtsD9ruNIVAF7Av/xJcKJYwL4/0GzGjvcjmb/Kb3I8MHykP/C1+sv4pbe/jMAMJ6hsyj9HTaML7u/CP/Fk4GTBEZ+/8YzhfxX5zT87otuxy+G9v+SNi2hTts8/evmd3xxBxb9sML9TdzeTv4L5KHe3I8+/FbgEfwEaeD8PYvSxI1vGPwjQ58ZjAMw/35mB2oyGuD/9FxzgmEiqvxC9gTHPrKW/6ACZ3ROhbb9YZ/NFjOedvwowcs+1o9O/ezPj+9Cjsj/vKhTBiAOgv4qynGCId5S/vFjlePweuz/S2FFMrXiOPzusnmThIHY/PUSFuA5/0L/iug1f+0dVv8OU1e4bY7e/f/iJVsEBZj/l9YNntvvDP1O/0U5yOqM/X+vLHo9Oy7+I0XyM/K+7P+6RFqsT23q/3JTFDU2ekL80UFWgCGKkP8N/0vvNgKQ/9C/8i1SQsz+0iA/NoqnDv88x0SSRhoY/BILL+zAovr+A4AM3Qsijv3DkZ55bEaw/VsA7F9VSIr/3AIWRHPatPygPz8zxabI/j5XhH0tdwj+9AF1+35i4P6ygp2mBU5m/G67NVnSRzT9zQusBTdawP6Ql2cb95aE/arRafhFOtj+aMrnNBCyQv4aNUCGlTYk/V3YKtn4wez/6UDSrKTWxP9z6TnlvTp2/acE5nQG+jL8UdJeplCejP+heJYCTLZS/x3vV2/u0hr835tH3eUCLv+9Fc37SYa8/3noXWQcWoL/HQmdCMZKiv2njTBBkeqk/UJePVIegf79v3C31H2nFv7IPrn9oTZ+/uC93nDSSg7+5f1Vv+u24v0vK3z9HeLy/Lz70U58utb+5AVlJcgCTP/6fDfwrY6e/+QYpNaoLmz+HsxlyNXK5PwRY/DDXMbC/eTv1ghSMwb9Epc+ahiTAP7rc7O6N86U/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MDQyMzA0cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM4OTA0MjMwNHEBYS4CAAAAAAAAACWyI0qBP88/kUNMTU2bwT8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    7,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        0.13815695421431223,
                        2.881587503292773,
                        3.140227247846483,
                        2.676561955314623,
                        2.3904053164636307,
                        1.8652396412944063,
                        0.5658733985546285
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7
                ],
                "values": [
                    0.13815695421431223,
                    2.881587503292773,
                    3.140227247846483,
                    2.676561955314623,
                    2.3904053164636307,
                    1.8652396412944063,
                    0.5658733985546285
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 60
    }
}