{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        7,
                        7
                    ],
                    "values": "eJwBiAF3/vB48npDqe8/2w++0rT9kb+c1YFxSQ2FP+WlmFvMF5I/Z5qv/bKqVb8qPQmgM1eWPxnh0/GVcHq/RhGAMDHZtD872fMj+OXvP8un/DgIVKS/w0rCPY23nb/YAGSZX4iSPzsujgfkFIg/53bHuMQ8rb+9jKDDnJ+Wv5hnYD3JdJo/4dEguw1a7z9yWVKN7o6Ov64VRW6x5Vw/A4VVOLF2nr985HJQ2U9lP9gMMOQLdKa/LmzeFiDwjj/ovdgHF96RP6fNm+025u4/LwSsSEIfjL9ldW10nOqXv9l6Rjx5elk/YXh+7MSSnD/WCCqVeFSHPyb2GyvhlYe/exnXx29Njb+HDkZo2oLvP7gLI1JdzFU/XCFMMPOQnr9rfPCz6maZv26n1nvEgYu/26tMx9xtlD8oQRhdzHuUP4GoN0f8qXm/IQW47o4T7z8g8AKw50maPwF7NlC2p4K/yx+OTxgjOT8RCN0H8bdnv9hfKRNNYI6/EdnBNlWmiL+dLCR1s0Bhv4zXczb/wO4/gG3GAg=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "strides": [
                    8,
                    56
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.9848832352099033,
                    0.54586579180801,
                    0.7925611748358129,
                    0.7029070854128031,
                    0.9446002063467857,
                    0.8034719273992652,
                    1.0504009391141278
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.032631174350524816,
                    0.008942481429447525
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "values": "eJzbuu7dgn25V+0dIgyMLr6dvd9hUwuPiNMOe4eyeVpW7xbtd7DL8/QSm7p/DgfH/pcWW/e/0lq551vWdbh6AXv9X9Orgfw1l/cxLztlf0FbR2bCjYv2B1YWzpl/Zcd+jY1KRZdfrrNf9U7US+DSMnu4+VD1H1Ln29wSeWTPMM16a6Hg4v0NM34UbmPbbO8wM9+L5fjc/b/DdToyOlfD3QMzH67+QlmVpcY9e4YcQX7tOSvsPxxwjTypv3G/gErkuY0XgPZB3Q9zD8x8mHqB548eCqq8tq/x7PVd67LX/tb0S6UODHPsYf6FuR/mHpj5MPVFvytz3L7dsb8d2zzxK+8We1j4wPwLcz/MPTDzYeobpU8ebGp9ZA8APGbAog=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MDc5MzYwcQJYAwAAAGNwdXEDTV4BTnRxBFEugAJdcQBYCgAAADEzODkwNzkzNjBxAWEuXgEAAAAAAAC8y6/he7G5v2lg4J4N8uW/j4yFRrah0L/k3z10embSvy/0gcNYgdE/5DAu3b621L9mSAAIUomhPwyKGVMqxrM/Xw05zkrq478MUB5L747av2meArFuA9+/wTmL6tez0r+B8DRnK8zFv1A8/ceZy9U/tzCoEVfhtL/x+MUVxjS8PxcZF1yNTrq/B8feye4wxj9/Ux7wlel2P7Z5lPh6AsK/yW8QIrC817+TGg/qjGu9PyieOMIyPLO/8vp/MzTllL9jlVvAW/zdv9VMktMKY9a/Oa6fKE/l4D+fSyaVAV3JvyM4Xomsk6+/HEL/WHQY378cXT2R5Oahv9wOt5IB8sO/+cBq5g0UmL/4MB3Ki+ysv2oFpchhXny/hhErMLsm1j+5zqe4LGTLP4KR482P7MK/9ieWnpTV5D8SPXqAV3GwP0rXMBXpX9E/g9K82KYJ27/1p+rBGzi1vw47q7hHyMa/ij0r0Dmq2T8t1iPthzbLP+ad/meZs8C/e5V++YX20L/BojWuWoTKP/d/EDa538A/jjS040n21D+QURnhOrG7v2m595rWttG/dGYn9NPuvz+ICea/oJjBvxrOjOX7vNA/ppUDeZtQw784Vw9kVUykP5f7odVpkNI/ikZASm8yu7/3fbJbmgPVv/6q1anmuNE/FxExpftgzb+P9TTj8GihP/BdfZGiGc+/bSOpG9N8tz/JC84mGBO2v8mQWwPQMtQ/WXcTR6kt0z/tK1uYGRDDv3UaGw3ZVb0/u5uLJJsN2z/j2XXuU4C8v/4fl8nWida/e3So52OTuz9YXUoJm0XKv86EUKJ/aqU/kvBYV8iHrj8kaUwSkqLVv9kPBCGiw8S/QcGNYNqosD+rMLF2HORFP9VjjL2Gxbg/fI+G9p1Yy7+NmL8R5TrXP/CUZOWiyOU/9KXlFFGnx79OAuhly27IPxbSLSxDQNC/6q1uuwS10r9B+kElk6TSPyvYFQMPj9k/uKUeAYzNl79t73PW18SvP2M642cPxMY/10zeW+CFqb9rrdVud8w6P46XB/Hf/tS/yI9QlzXN0r8A6744FPvYP9s02SxabLO/0DrGNyVvrb/xOqbrnXXEP5ZGAA13xbe/ley98QI9zD+4Pr+xHdKwPy2PJiOFK7m/jAYD3fEosD8G6rqO7p+zP7qzuqWQe5y/OMv60NCNwL8xVQyfvrXTv+AyVJ6wf8y/h4R72bUWy7+SDj0LGXzOvyZpqDL0hM0/eYEIJ2e23j/fkwlzNX3av0pJfLP0CtQ/rkMgTvaKuj+k0Co3dr3JPyeir6xDtsi/0BjSH0Za0b/fWABEGs6KPyZ81AEwNry/fQm8PORwwT9pM6mu6IG1v9k7V6gnWNc/YWflDZQRzr/IVZgsrDXYvzcnA6pxZdI/S86vn1sSmD/xG/SMRO65v4Xy097g5cA/ZtP99JVhy7/q3YF0xqrHP4TX8qXMAKa/8GQm6JbBmT9wOvaRve/OP/FFWlfpr9K/M+l7jXsrx7/FqUbB2bPKP2MUQKfDL8O/O+l4+8wLzr9rfAC0V06qPxmWr/qn3rM/e3/z7SM0wr96IKH2NWmzv1PMxa4VZ7y/fuguMwg3zj+mVfUwO8TQv6FVUNFQKaU/CfJ/rAHonz9x4VbAOoCGv28G/upcmL8/9+0KRJspuz9X3X24FHquP7BzWipJY8Y/M6RFkup4bb/lR7jBH66Rvx+Ejz5vxsi/uGmiuXYvzj/CJB1kdWfKvyYxNOQA7r+/OSNSt4khzT+1CD3yJfOaP4F5D9y6QeA/etxxTI1Y3j8liqmiDyzAP8aidHR73MO/NIWOhEWDzD8YGBHgvtC8P+GLylcQgrs/LEsfW9/60D8JakCYAwXPv5iFx7jfMs6/BBNUbT/r179p4Bmico7Wv3szTquoPby/Fn/X0DNlwz+d8L6nAFHGv0SdQ3QC/bC/hACVL4e11T/leqMPLdWgP1VNYepHVq2/Q9dCIEvYyz+Oh9FZdwfdP+m+BaT1Pdq/oWcVKA3Osj9NCkpXBPfKv31ok2obvbW/QOCtdGbRsj/DjfEiCgvIv8Ri+FZGr7a/6y/CklxRzr8nRbyuhI6VP46Q3ptEOcM/PRBJ0jnNzL8ELsAox5HSPyHAZzTnfdC/qJBf72jouj9D/f039hqqvxNbWkBmE9S/GImro0NipT+XmD8ZUb7hP/YphGcLrdQ/lvCWIjLv0z+sx0BXGgfXPzcNLxCP67g/uJwTnHis0b8fN5PqMhjDPyIbFBPg5+C/dgv3mlrOw78AYTlLfEvKv0m7Oc6TmpE/XtCOD1rt0z/e4Lw7aCmYPxyOdWr/fsY/SpwxuEC6uL/YuThkYbbVv8GWMjMxtsI/LdzAdvnDkD/kOuhrYfHUP0G0dWj4OuC/uYqFt2Bex7+EFXp2zbDNP0+nIMEjKLY/DpmU+i6U0L/mHfSrXX/UPx7ZdrsjssU/Tca7hSrXuj8Kjwu2J9Oxv2Gp8AMvyJo/XDD1nQzj2D/0bMTg+YPSPyVjF0zOh8Y/rjeMBrJ20L9tHVUMiM/GP0lhz6SLndA/YKblL2pTuz9VU2TAihvbvwOliss7kKo/LDn7mW8Moz/+Mxmec8nbvxipmysCU8E/g0pVTMQ5xr/Abtn8L7ziP3A/KW5eKZW/qby7GmSPTL/UG60zHD3VPx2RUggn/My/fnc0REcouz8qT0hF1n7Cv2gbAA5xJMa/HoTZq2su0r/bqYWfltyRvxgx7kldm6o/BQxlB5G5vb9m6fbxhBeOP9JFfryBRty/PbNw/X/XYD9GKeabuGyrP9MTzpIj4dA/xeHfUfC6ir9T35+jnzTTP2na5BhSGdG/BQxg3xpoOz/KSD8zR37DP9zhS7twAru/4XbCyW91sL/y/5JK6ji9PyTzKB7AW8m/5RhNyNSIzD/8/39co1+fvxQ2e/mM5dS/lZj6UeSszb8Us7rHzZjeP+O+thO4IL6/hjg7BCbmxb8ZlglPCmmvP5Y9rkcYyM8/SwjYsld70L+0ZoXL/KLAv6ENZ4BEPKY/zPbvNxxKkb/o+8NBi+HRP4HZg3Wmf6K/EPS8C6cHwL9SYA9bZxXFP9GH+/xwEeC/p0TFW1eryD+2awID7Wqrv8SVvRURDaG/pgrP+s4juD+z5nt6YfW1vxabCz69wsA/9Ztv2+SX0j84PLeEs4fQv3z9StqXPcg/+s0cA5ou4j8fK4k4g0jNP72VqVI37rm/p7pf5cb/2L+f+iHvqiqevyqDeQwXEM+/WfFmmr//wT/tSSGMJYrMv3xi6cB56KK/n0HGlpBuvb/1zIiWvRanv9Nfo8rZO+C//Iez+Gn0jD/X1EQIABXWP2lWsSMgTLK/DGSYGG20yr9Iy38+MYXDv7ZzqKhm4LM/+egKT9YJ1z+NzaAJFZPRv+sGw3IJT6e/4MaXh6yxxz/ftlmaZsSdvxhDC1NARdC/OWuqre1Mnb/E8iJelOLGP9wGuf73V8q/Zgib42CKxL8UDfccJJDXP9qpXmreMsK/hBPHS6pGmb9JSA/vvfPdv7OxWZehAdW/kE0KViG5tj+JJ1gAZK/LP18Wpf1afLK/4h72AOhFwr9eG8AKg4jWP2NGAH/xCtS/CQCOlIav4L8QaCEm9qK9vySt+HQvPMY/XnUfWun4uT+MKTr1kD/FPxUtjGU1yLq/KWHhA2Cxsb/znaIwWyCwv/pI3WJCnmw/0McEt3Iexz9cEhbcPWHNvzihZSPgENA/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            7
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            7,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkyNDE2NTEycQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM5MjQxNjUxMnEBYS4yAAAAAAAAAIvG2GPpasw/dksNmsLF3r8WeKSX4RvhvxUBAVXenK4/cSCnCLqftj9g82GjPHnTP8WYi9mwu8e/+gPKHkrN0j+u+D/rpO/IP2PX9GbiLLW/F/axt3MY2j9uobhGKajQv8QHK+l7dqQ/BEfYp3BNe79khijkmuy2v1AFOVfZwZ+/2LIsZs230j9Xyajih27Hvxp75AnTm9o/IofRsIR+3r961EG5uMwDv/tU8+fOXKC/D664IXCK0b9cjGKkwDrAP2+i6MqrP70/hggmHz8Csb/getmBdyXAv9nmh/8/U8Q/NF0UL2e53L80DkqEH/u7v10PUJPVp+C/SxxP9d7euz+ECNUOmx7Rv/zLGlxGDMS/dic3Mo9AxL8vBkjbSzGzP7dYMusQL94/wATqIUX6u7+xvqmQQOOnvx9dmmn4g7I/+O2BH9camz8rdRmQf+7Dv2it41C8Ktc/9od6vIfltr+y+JusxJHIP4A/oJwvoc6/B42bjqkP1L8lHpLnG625PyPN0vdxSbw/5f2jU7FJs78="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkyNDIwMDk2cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM5MjQyMDA5NnEBYS5kAAAAAAAAAGIoHMpfYcK/VA60rxdIt7++CO0l6Qi3P1JfQagvE8c/SwmlINFlsb8AcW0jaXmtv1xvqXb0Baq/2he5/I/Tpr/AHYDXeXecv/jYaXQ+mrM/nyuKRg1elL86fds0Tj62P0pSJnrDQbA/H8TzH2LImj+zCl9qHRzHv3NjIjgp96k/I5I6f2HtuL9y61SZwTzAv1nUmq15hXK/TCeqTjKSwj8O2GqAdVuxv9+APRkUsLO/P6tWhfxNxD/J7M6t6/yxP2kgs4oECsY/BV9iSy9ut79IXnM1V1SmP+lY65U48Mm/PJyJGF2duD+a4z8MIv7BP2VFeJu/Gcg/O8E7QSsJtD9S5QKSNcC9v9RtagD+Cbm/PMz71Jzdkz8XUcONh1izv4AkamdcCcu/RLGlbiyIw79FXhyl7k6xvwKKiFfggpi/Xz5X++uSvD+EbVV6w22vv/O68wAUQrs/mnIDAAN2yL8i3UkT/UDAP5FUOnqPxHy/JMOXPLQ0tr+DJeiwCEm7P19VuiSgL6w/XC28ZnLlx79Wod1u7R+0P5+jv52+Mac/DZqSj+GasT8dro1u0OqjP/bRJrdFarI/X1zSBEnpsz87nRTta+2wvxE83pIACbk/PQEIBUuzkb8oOtk3TpeGv4FBK7Jk1ro/kQ8XCX/DmL+gxYoL4sS7P7AoiVnRNaA/nEHr7JBWoz8o/GgOTCCoP7rdKVanY76/RTs6aamwwD83AuptHb28P2yhc53L4Jg/1TY+PA3ftj+8TG8Uvh56P0JGi2xIRqS/2m7EV1bdr7+D/lSpZS2QPxfQUygdo5Y/QWJzfO42qb8B0gQGj+uIv+YHsTO8S5G/W7/hGQsTrr+TIiCB+Fe0v4m4nCQTt6s/EjL1A/tQsz+VA5Orgw2gv3UtGgUuCbE/+jwnwe1dtT9lA5pRjBfAv0MwqvxIyrK/XRAuXmj3mT/cb++ysMu0v+Nu0sws0KO/W7knPGUQgb9TsMnfMjytv21clP/7qXy/Yl3uMkRNwD++thzCVD2dP1QRT7eedaO/CgzMlAHNqr/fHAJGlaOgPzbIEY08x7I/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkyNDE0NDY0cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM5MjQxNDQ2NHEBYS4CAAAAAAAAAERK90VMj8U/NDyo+6rutT8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    7,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        0.6786964068407738,
                        2.2612191175305547,
                        3.6712191296986227,
                        1.8492449761469878,
                        2.081021674157568,
                        -0.24102549953194496,
                        0.009736090878047235
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7
                ],
                "values": [
                    0.6786964068407738,
                    2.2612191175305547,
                    3.6712191296986227,
                    1.8492449761469878,
                    2.081021674157568,
                    -0.24102549953194496,
                    0.009736090878047235
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 10
    }
}