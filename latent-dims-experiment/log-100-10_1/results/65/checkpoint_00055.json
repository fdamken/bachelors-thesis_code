{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        7,
                        7
                    ],
                    "values": "eJwBiAF3/kBieoo8h+0/aE/nT8gafT8dI5wijd2Pv2szvSylMXK/1KfrcZaBoj+mCOKbogp5PyaUQPKIqX2/iA5zYT5ouD9AqhnLKI/uPw4FVruZm7q/8k8V6X0xo784eNCRQtqJv3Nftjw71J6/gbfI3y02qL/YaJ2ZwTmhv0zxTohG01e/4gq+A0US8D+fEqYIx1KWP32fapCXMq8/2USks5rLsb8eyjf6hq/AP6Ye1+ijLIM/8nffgOj4lT+hKy+WLI2jP/egvFhcju0/IbmNBn1hsz9rXVUYMi+PP77CUwduPrk/IVcsLMNXmz+7kbNAxb17PxJnBEp7jHU/zuqYGeQSZT81SuxUS/vrPyQTHx3E1nm/I4vNqlxcmz95bvDtS4yRPy/neJX7ZXy/w9CvwlOHYT9UOCmNo/igPydgOzxMfKA/7nr7896E7T/Ohm/DmlZuP5nDLphCrGe/tiUpGSdzhj9lZybY9FF0v/A0xGpFD5S/pWkb2uI+fL/+5t4lNVuev4mSAFHL+e0/+yTCTQ=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "strides": [
                    8,
                    56
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.27229745591265925,
                    0.020282354666069445,
                    0.05810180139238885,
                    0.048973649116909955,
                    0.4387089296698271,
                    0.14064269227554665,
                    0.21823356500792074
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.026545763541711495,
                    0.012510811296944837
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "values": "eJz7kHR0vceSHfYNPw6Ef9o5eT/DDBl7Mc9ae4Zfx7/oXe23Z/iqmf5/dae9w40Xc7y+bNnfoCCw727HRoT665nZHZtm2jPMmV7eadFlzzBFUHruFqC+J/7xy61n7mdw25un+nmiPcOup0f3KrchzIepN5CUampdZM+gkFMhOgEonhG64PiOZnsGB0WNhy4V+xneHjjof6ZxP9w9MPNh6vOO76p5v9KeoWVSodW3SfYMtUoH9Nrn7WfI2Hjn7udGuPvh7oGZD1XvcPLkTKcp5+0Ztp/tyPSaad9gyi368swEuH/h7oe5B2Y+VH2HgelCaZ2D9g+SOdtFvCbDwwfuX5j7oe6BmQ9TL3Dh7pvsb7vtAUYiuDA="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            7
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            7,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkwMjg1MTg0cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM5MDI4NTE4NHEBYS4yAAAAAAAAADrzeLOJNs8/R4pZ19BW8L+4mKbiKCLjv371zeaZWMW/CiocIxwCtT/UBORoFs+5v/M/BsUrd8U/X8dqUDn22T+PJ6BIjPjUPx+bXtj2l9O/poeiQJ7M3T9MlGlSd53bvyK/Hh+Q66a/jEvzrzovx7/KCLzF0F61vyQ32IBZ170/bbkYmbDM1D/i5s1CiP7YvxnVhLGXVd0/bUi97yIF57+C6iSxNRzHvzwTVW4g/Mk/SG43i1pL0j8Nn9n+DkFtv5i4ibFo+d8/EzTl2fLt1b9EkPm9NJLYv/J4Wkhmo8w/FxXelXBj4L/GPsL64ffOv3YXWNVIIee/SelBbAVHwj+Tp2A0TgHDv8L96vgMIK8/LDRHVWLzxL8dxRG7/8vBP5jWsc7uLNM/DSwAzPlpub94NRhcP6zMPwzFj6S12Jc/nVuEwOdcoj8v4pqyH1+yP1mJeg0GN8G/aku6FxnBsr/e2MKFbK6ZvxU3camK9si/HtYLsQ8Fyr8eD8pGcT2ovwrRNxd/cMS/pPmZ4n9SfL8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5NzYxOTUycQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM4OTc2MTk1MnEBYS5kAAAAAAAAAOZoAmbfvc2/2VvcwxWqxb8FQb4Uvf6aP2w3q+zvRK0/xvGMTQHIxL88pzgtnXyGv6fWx8Ghtru/hT4++yfEm7+oWDwNs02iP7wK9rDuGYQ/jjjl5NGOsb/3Vad5dJ6wP5TdWHgxV6+/r/AnTkXSsD/2TVdQqrXAvywRez/2xL8/56MGYB6Mpb/i/PSg+SyfP8BoeROX87m/An2nh4v8yD/5vFeRRyi+P9UDTKfE7rW/vFJj3tVJzj9C4TB/263DvzdNZ4OLBNA/Q3P6Ub+Qxb+i/TzT0zeJvyU/aKAaL9C/OKqPlIHlpj8neQA6JsLGPxCTYjmNHs4/ex2WBjg+vz+fw3SfUySkv+w0XGbtj6C/d7Q6W6DkHb8FFbknHCKyv7sUEMTi29O/NXUXj3ANqz/dEYfR28yiv+bs+f8PIbK/WlswvNW7vD/K1gZUk8ZovzXglQvFt5Q/bpCwoh/S0L8S5gP8VURvP+Vy4aQ/3ri/NHiM7DJNQD+Qe1yMmj/BP9fMVs1Sm6Y/LbaOrZ5KzL8so84Dpni8P+1YmyCfYWG/rcwZMu09d79s/mQ7rl+yPyJbCGHk76Y/9eNmtlCqtz9AkDGkdRfEvwyBY7vcYG4/f8svLWYVur9E0y2NkGKfv626YZoey60/uPtNYKxWkr8pNnlJ/U6yP69d5kXMH7E/qvxx8qpkwj9738JIT5a3P0dik0ZfcJW/ayfz+4H4zD8QcKKINxi0P1iDpfIlpp0/hacM6FaAuz98lfVYcn6EP4bv94hUOYA/WdnZ2pFYiL9mi1UYeRWwPw5eWFhsJ5m/kVp3I+lCor9yY5smYzemP8IMhJk85pW/FU0axcGzj7+XXunBc5urv5yxsuJQHaU/VIrI6L9ynr/vG0fKyBGpvz6RTZH/N7A/QkkpqLZZlz9/p1Fab+XEv3ZGUjcSB6a/h+rKVQrkfb825zv0giS5v5bvt7J70L2/Vj5dEpOCrL8mRVnIxY1uv8hELlKW76W/nVI/ZnYMnT+yR7WVpu21PxY8vtFGXay/rBlQfbkku78tQO6D1Ei3P5hZfT931qg/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkzNjgzNTg0cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM5MzY4MzU4NHEBYS4CAAAAAAAAACRMJoUZmc8/wu90CZ0JwT8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    7,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        0.7978337783470287,
                        2.6501138771346744,
                        3.324526090388628,
                        3.1574280926338827,
                        3.6533390357954265,
                        1.1322372948789843,
                        0.8880954464561582
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7
                ],
                "values": [
                    0.7978337783470287,
                    2.6501138771346744,
                    3.324526090388628,
                    3.1574280926338827,
                    3.6533390357954265,
                    1.1322372948789843,
                    0.8880954464561582
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 55
    }
}