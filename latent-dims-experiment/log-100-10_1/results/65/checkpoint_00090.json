{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        7,
                        7
                    ],
                    "values": "eJwBiAF3/tElTGAq6+0/zV6DQDTYdT/ykeCQnuKlvwWtl6559ZW/ZEnGjetWhz/ZgbWp2yufP6F+KiN7lJS/MCtdgX2GpD/OmZZ2TYPtPw62wkMyUK+/sVEXcOrRiL/aRL46cqy0Pz4BpTHqIHY/h/vXqxJgtr/V3C9RRdWOvwdrjUJJC4E/odjzmtGF7j+jZqAFBPqOPy/oXr26KbY/0ngRqGVdpr8wxnuGmDy8P0PFc3wwwcM/rxF0oH6BsD8RiPKhngh/v+lGm01ct+8/e1G9LdPlwj+XtFyKLea5P08fri3Hpsk/RLnPF9Rypz+489xVniiOP5CD6I5zXIU/YbNYd8WgIL8MT1PUiafrP6KS73z8wYQ/U/D7NMG+ZT9DdNKdPe6kPxJgGudHyGi/z7rQaCD4mr8t4u0ppG6BP9xX9XRoMIk/BT5ORNEx7D+xE+j59Pmiv7b1z6i3XnQ/FQ2N2d1tYz9JePlpe+GJP9gJlnvmIm+/HCTY019ikb9YL2GR0Euav7VoOXqJK+4/4UjLYA=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "strides": [
                    8,
                    56
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.06635348811874074,
                    0.007476789957054225,
                    0.02717242664800209,
                    0.0059063877390802145,
                    0.09725290005061213,
                    0.06111903229845041,
                    0.12175115189679062
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.056928787066190124,
                    0.02299434650951184
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "values": "eJxzmHfz89HcefYMDFNXGfyr3M9w4Pa1iWX2+xkifFW3bE6zZ9jyYJmHQK09Q2//rKqD/fsPrImUORU+DaG+gNv9uVS9PcOFXDOG/Rn2DBUh6q9PFdkzXOIW4tnaDjRHtYm1B8hfIriPzTELYT5MfcTUTFkPoH4BBlc1C6B9ERahGr059gwO+Y5T+0rsGQJUBZM/+djD3QMzH6aeZfn70qBGe4YDfROk7vruZ5jQea7uTu5+Bovz0XElgQj3w90DNR+q/kGGcvbNhm32DA2Sck3NXvYM96KOX/YtgfsX7n6Ye2Dmw9Rb+zsll061ZzDZL1/hV4wIH5h/Ye6HuQdmPlS9Q1fjRYPHS+wBLymavQ=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkyMjYzNjgwcQJYAwAAAGNwdXEDTV4BTnRxBFEugAJdcQBYCgAAADEzOTIyNjM2ODBxAWEuXgEAAAAAAADcr06dyECnv38kNyjjRPC/TFfZ55gAxr9vS+eO6nnjvyxqM5ToBtU/DZJcj+jT1b9VdkrTKanVP34kBE+NPNa/rjTpGuyL2r9yIUzAwJzSv9hTXFzzAOS/x1w+wQi1yT+ZCoTQeSHov4x1Ykbqitc/0QbYDVIaxr8Of6Iied3gP/8zTKoT5c4/YupOMEGgrz8u+tRD7+TIP7lKyk5cfNK/BntMy6BQ278Vv1UNU+PEP8WHjRqdJ02/rCwn5eeHzz+ggo7m/2frv9Bo1hXMR9m/8AlSW2/C1z9rOyt0HEu2P5qK1QWP2Mq/5sdR8vEz3b/vWhJSUvHHP+2yQbIY+OW/YBB8BGqPyj8MP6Sn6Knfv6ue7aWiNNY/Wt5C/OKBqr/VHsnt5SjPv51esd+vT+W/6mGJ3jpavr/YM/PeDTzhvz6mAIeiArM/lu3xeg4Nyr+Blp3QHO+Bv0SU1lCXArm/EAUJiUdU0D+yf1PjGQTnPyAab460Ha0/bQBp2namtD810aXSHVmWv+ULf/rh2NU/wafTvZMVmz9/gD3sl67VvxkIE1gUk6y/ZywRoutQsD8mmWlyYbPDPy4c/ECantE/ZvLBIA2SvL9TuWF1zqDUP00BUKw8pOg/ZzcXBk/WwD/u8hBY5cfDv/6KQFSCKNM/NTFPUJi+zr9FLrZUxYGpv0MUgbRYh+O/jDoTMOiAyD9Fyk40JTPcv3ioaIFo3tI/wf4SpQtPj79gAGegxZO/vzdL7sdmrMc/o4lHZspC4D/oR7J+USCzv+Ep1AQP9tS/jrlsumZSez9vyiC/Kse7vw7WmS++VIY/hLLSG6GT3L9jz5VJz5Tiv0RSsUxPlsA/CwN8HHV8179kXVg67Lyhv7sgd+iPV8q/TtJOnnXQYT8gDSGYsB7ZPzOXurmgavA/cU62v19Z0r/fd7HJt3u8Pw/Y5vhPPNW/P3qLL2W3yb/RWOg/Eu6iPyjyX+RMqMU/I+f+OM+5vr/PTVh6DzHev8IBf/Wlwca/wSrO9Mv1vL9goilsJSDeP5sZ3OTUys8/VvZxMLw8sL8ady9rbzzxP+fCqnnLvtC/Nv46EPns2b8y1X1pwL7NP96F9mcxf8y/kGv2662gmb9oFQ3KZnV4PzBQDAWqotA/A5j1Smxi1r9rOM3Yui/UP/rqAqdcc8a/E8EGrobU1z/HNxTnIopvv75MjdY1Ja6/1wQeG6z347/HtC+tfyykv8xanQ0kY+c/+F6PwOTi2T+gbkYGkBupv8+Wo3ILDnq/noFucYekn79a+H5HlGvJP9diBM+bUtK/ndcw3dyQ8r/G9Td+BSrQv4Yif592ltG/qE1C+bojuj/VFy+/WcqHv9V0UAndp+I/AISnJ3wH1L/8cbzQU5Xdv6IXnfd3DNA/ekZoKOaYvT9YqEeD2Gi6P1fFo39027a/O4A4/KOc47/ybO4+Isvgv3LwWq95OKW/W9Vap5vYz7/syQcUi1XkP1d7OSYt5dY/ky4qTjK7xb8/DlWdmp3RP8cZRqvj1rG/4KyPXvMe5L9aTbOvVnbLvznmsvA/ss6/VD8KBSmRtL8HXOmRXOfMP/uWNo6nMKg/chbDLoDUyT9FjXh1uh++vzvEfInsdsI/XYxMIQi+0D/55DuXTuebP0Ei3EuM166/q8eir/ZR2T8xIYpm3g7Gv3bXkgtZkeQ/uXCeaFi8y78vwuTiwUzkP466SXOIQJG/Enpi2+BOgT9ZWML6PDHtv5GLlD6JSN2/diaShku7xz+ddM84lL/av/rx7cLs6t4/mpqzr1m34z/DB+BZoQS6v+JonqRkOtQ/ymJa+XD6mb/ahOYD4yHYP375XBaelcO/3BVoP4YB8D8Y37OZngaoP/cpYIvXE8a/pz/tZDIq0r/rQf5H/JrXv6dTu25AKqK/EzUlHPsd0D8ozM2W4fLVv7/4nHCpk8U/yqHTYRi63j+9Qk3nwvTfv8gXFjYe1r2/Vp8RXhKcyD8AFJdaWuTgPwvphHt2rty/cagp+2JFxb/0psrrK6KuP+jhzKyVTsI/4SWdBJjx5D9/pe+LRcbYv6PFKTZmOpi/th6ksksF2b///lFYvJ2Xv+dqU+3ZHso/Jy62Ksxy1b99Swu7Q5LOP2v2fVrestO/czwPdY/tvj+WcENWtnOwv/sgTfuQdMa/uOD55Frx0b9cyyFYmMq2v38Bs+AQPq6/Nb8+EbGD2b+/RMlTz7vrP556aNgcKa6/tQ9vPHiKzr8E+2v0FlnCP3Kd78EAIu2/Gjt7Cof9r79LMpu6n1Lhv41tJBNvKbQ/zGaWBy9Gwj+tDpBxBu24P1JiStLLI5Y/0tsOUink4D9L3oMcX0jmvyYlBTd3OuW/dCAXPoVuz7//SWgKebrAvwrsWB939o+/W0xTbbmSbr+nF7t52cikP8Ui+JMQqKY/Pm8AXJN+0b9WEOaqi9PlP0BYFBnnL80/opGIyz32tb+R/HoHEv3IP+lIqkXsv7E/Hw+/O/TK3z8xQw+edXblPxsj+URYCdA/IOjp4N07nD9o5VUrR7LOvwHgUOAd3MY/H8Os7558sT9ymU6Mofvbvyu59bZKGLS/XovAiCrlmD9GYgvOdtXgv8+toBmjpnY/OINOtOHM1r9DBnoz49riP6WhyHPORdG/xNuKHRg72D+nePjrj5jXP6zI5dJ7YqO/fXcP05JMib86SIHzQfubv2LA2C8HHtu/kf32FVlzwz94Yjul8zDVv0vGNF6fzdA/4uoDNnWX3b+QBp/t6pSzP2fvdIPh2+S/HgcJRuJCxj8KiYCp42y/P8DZWpCausY/jLJUrX2jtb/zvWOfle7GP28IqsHuvaW/h0DxjJdfs79DKm482HSQvx4hKIMmnq6/cCTilFN51z/HhmYSQrjWP9JMggH4S64/tE1n2l6cxD9t7YyT+QPHvx9+kStgd9u/lvwrbR0ayr8Y9cyLppPpP4V8RZ0amb6/xeztJFEfx7/rpNZ8pTatP6jNBwsHjcu/q8luWvd/7b+TzrnDt6/DPyIlM0Ef7rS/4O6OaWqvu7/eDcWBnUmzv00HWx8Kj8y/856gMRaN17/tuXtRbxnjv/7zEd6npeW/NUl9C61y8j8u9AXs3dupv+RZulDKnaE/VlKAFp6v1D+m8vUvttPHvzo1AeVvJNS/AbEJYmyzsL8dIIzdynLlvyUdF82dury/9GQG34Go2T+/vU6dQ1LJPytboXPEb7Y/hEX9bz8L4L+zxjELw53MP4Z0XxswleC/UNQlalNqwD9hemguOkTIv2RIL6VIPLo/q3UOU+m027+u22EgGEbTv9kkdZxbS9q/tQEuzo+/wj/TagrRbDTGP6YSHR/0SNa/g1LnCe+BpD+lWoj8hMS3P1n7sEo72+U/6LswG7Ho5j9F4b/QVVLgvyVKCM9kz8U/gj+Q2tovzD8SuDhmyUPCv0GMRIwKiaG/stZlqHr2zr8bkVKC3MTSPyAwUX8hUsq/xNAZZaozsb/Nr/k4x1TiP3Xkn9hwnsM/1DVLkmgr17/13TWMGYfxv0J/U4bV+sO/lc2rQaHptj+CJMlBucDDP+mc3ga21NG/EFERa+7Nvj/2Mwf/ANByPxOxBBUMjNu/fFQZYc4Q578KWJ7AA1jcvzq66n7mJq+/mm26F+Ivxr+Xzm1z9oDVP62+TR1CasM/U4BSo16k8j+xYDxc2kTEPzFogX8kBuy/7KzpcWEt2z8YcVfAwfblv1n7ZmEkg8u/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            7
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            7,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkxODQ4ODk2cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM5MTg0ODg5NnEBYS4yAAAAAAAAAG6CiDZihrk/24AYnkZM8r/nhBWGHfrnvymMQe+UxNS/iKQ5/KPH1L+GVXKbmojZv3tGcQwtLdQ/VypE2DQA4j/E7PhmfvjRP5B8z30PJNy/NdiDzfJu4D95F4NEZO/lv4zPi6pCZJY//hdH1p1a2r9q888gusaVv4o6PD9Ol9A/1QCcqJ5s3j9Zl4Q/QQbivzDW1dC+xeE/kcdy0HS18b8JCQx+Lo3Vv69n8gmr69k/egRLuj1D0j+J3aOUhhnIP99nvxWocOM/r9RgcUQe0L/1h/ATRgPVv37ln8WiELm/RPSBC4uj5L+eJkC14x7av9dhlXQRXOy/DUYt+C8xqz91fg/YmLGUv41yfXWwAc8/cAHZeTlnz7+99LuI4l7SP70O6xk+B9A/uCd/j2xryb/ChGdyB2LVP4C+JaAy97c/eIW8yzd9zb/WCC0Iu7atPwNgkyAgytW/mQQAlcoVzr/BKVCFZimgv0vlguwH4bW/igw3FWgfwL90E5HhKyLPv7tzA0LtHte/7Gy7uwbH0D8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MDgxNzI4cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM4OTA4MTcyOHEBYS5kAAAAAAAAAG1szqUMH8q/iWwigHp5yL8gL2241OaRP67IDUdewoo/fBHBD+xnxr+fu/rLPE2Uv/VSPNOXvLO/18l00YRQob9QLZ3sXK1zP720AXsCWKU/H/iSUTLAor/28mCAh9fJP+X0i3LyG6e/WpmZJg20qD9MgHF1tuHBv4uK30dbjcE/0uqHicQgcD/49dlcnZrGP6JnpeRpKK2/IfLOCe7eyD/nvTspfQ3HP79E+1faOZi/ozMQ+HOH0D/pfHWXIaatvwAaRpAibdE/ouEzB6xIxr/cWvuSRn93v/xrjslsk9C/W1N08DtEkT+cIGlP852jPysfUw1VjZg/dH/0Pm6bsT/G8sIRFk+Xv7QJjp5Xtqi/qcNU5CAViD/7ctDM0eKYv+Z+r6YpStS/UcqBVaJZpT9Vw9/JJSi5v/hRpqEy+ZC/fIQd6XDOtT+OhtabN+pzPxuDY//t+HU/cJ2qJqjq0b94xXSAk16TP84i4TU1/bm/flxmPPxygz+SXHvLsNS8P/2eTSoxiIw/0K2a9RRuzL/X6j6cXK27P6uV1fTPW10/rMZNJcQnjr/V5hinzBSdP//4rfvpDKg/uTur+62GpD/r28hkMAe6vwF1z9HNaZo/N085X3/1hb+2va8q7zd9PzF30lu/dqU/eqUKo5DYtb8HOZEvQEOjPzcyQyj7Fqc/pKjijFdwwz/m9dAwvii7PyCYEBf9Qq+/C61ietZW0D+YCgRrvq69P3EVwXMCh4Y/ZrAZNzHxlD88ZHK82JCKP8rFqXHMgW0/fnp0OVsAaD+F82ecfxuuPzNJVo+izJO/GLhUaH4kkj+A8YzVojymP41MFLkcST2/sCPBpJngpT/IXpal2HOYP4bzz2Veo70/WZBZ3AF3kT9Pc0RfqzmlvxCaJ0eSU6Y/1/18o8nqf799IClXWRXEv/38TWb1lqa/hnuBUTb1qb/c3wkR9wuYv4GeHBUMIqm/yhpXJQqVvr/kEUj0mvSnP2EKkS2v16K/ZV1khxYgpb/Um3jhKXbAPxCunFOlW5I/xx0dnAOXvL+JQYDiVi6/P6yBdDh9I6U/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5ODU2NTc2cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM4OTg1NjU3NnEBYS4CAAAAAAAAAJb8PAFZONE/K3yrGjaLwD8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    7,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -1.2747069383741123,
                        3.703434386364374,
                        3.0538840425764167,
                        3.557533071699943,
                        1.615953279855145,
                        2.332630280002794,
                        -1.0107537413365866
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7
                ],
                "values": [
                    -1.2747069383741123,
                    3.703434386364374,
                    3.0538840425764167,
                    3.557533071699943,
                    1.615953279855145,
                    2.332630280002794,
                    -1.0107537413365866
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 90
    }
}