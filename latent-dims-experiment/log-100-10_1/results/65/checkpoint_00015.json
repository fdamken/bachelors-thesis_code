{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        7,
                        7
                    ],
                    "values": "eJwBiAF3/hzgroE0lO8/zoSvJK4Ckb9WM843yQJyP+QYmOO+CZA/WJAXRJq2VL9OLJasslmdP8ue02gzM4e/Me6bHl/wuz+IfmWgFSfwP1i/rElo3a2/YB+sB+Ppn7/J35ulLVewP27/S/Km5aA/1abcQZzDsr8QJk0vMBecv5Dm6TrzupY/7auKRVL67j/ldyLtrviNv3DrupGogoE//rnJrrsWor+JGHfxZOZ4v2ace6/XxK2/SFTSaihKlD+8EllgY3agP9gZ+IF6pu4/PwIpmgLoX78vI2Ahc0KZv704MsfRRIw/z2WrtN82nT8+LuxajheTP3e8iqXGqn2//1Crie5wfr/1JxzzzT/vP2Xklx8594k/8pD4WPtQlb8wdOZGqjtwvwmsirBzRIS/s8BTzgJSgj8Bypr+w3uTPzJnaHFpIH6/nqx0YheF7j+biqywLBGgP00d94m6FU+/XL1xxHMNfT/p9ZuRXq+Iv2BcH7iXXYW/N3jPptLzNz/DqrF/Vv+IP3jHpp7Obe4/KibNbg=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "strides": [
                    8,
                    56
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.8195618990544983,
                    0.27678370555225706,
                    0.5444748878136072,
                    0.4709346530707443,
                    0.8552857178490918,
                    0.6205200977007966,
                    0.9911546006411674
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.05762641304419412,
                    0.01883967780817005
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "values": "eJw7oLNHnX33BfsGHT5J/8oZ+xf4VZaWr9tkz/Ckd/mmKaX2DEEun90/dNi/N/g0z33/of2yqWVFR5wuwtVfYLGb3vMIyM8Oe1hts8Ne4bKYdxj/BfsDkmeFF7Me3G8Q9bt0l+USe4dJRXJRf5fbw8yHqWcI3mxsEHDdnkHi1bkf3AX7GS5aVCvNXWq/IdL//ulb2/Y/kGH8OOPJIrh7YObD1DtM3uJ/aNZVe4Y3Vm/rT9buP3Bs2mO5GQ32FxyrVv6Yshnufph7YObD1F9weHh6Z8EL+wXsGlcfLz5g77Dyv23opxVw/8LcD3MPzHyYeq9e9c2y5y7bP9g1d26NWxc8fGD+hbkf5h6Y+TD1+z9mnL425bY9ACLlxu4="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            7
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            7,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkwNjA0MDY0cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM5MDYwNDA2NHEBYS4yAAAAAAAAAB7yuI48kNA/L3VtlxU04r8bP1IQk+/gv0g74ZoVaaA/Qz1p9nYCuT++OQ1YXiPGP/0S4nvJHsK/4i9stgjb0T9HJDbK1WTLP7rrboU+F8K/IsBg0vZg2D85+FpxzKzSvx/Gzr+5YJc/WLBlMsMarb+Ik9Ic6N2yv+aDlfsTn6U/vxVjcRtt1D9TxAJAMSDMv2T/T4TnKdg/2AA9UwG24L+/co06QrGhvwD2XvWEFH6/IIMMRz1lyb8CB4QsRFyuP89jzLr9ibk/9UJNlhULxb9YeT1BAtbJv4BksFtJr8Q/Xukh0w7p3b8gVcfIcmiuv282f340d+G/rjENy2Z9sz9MLVrZSAfRvyQXhCk9T8C/SmnEml1VwL9+p1uHP2SvP7ogjr8DCuA/j3Puo/I2r78Qmikhytemv7dAwFXgJr4/cIRhoCAqmT+KAsPJJWSvv55IFcod8dA/wCG1M5olu78NePjOWLnDP8UW0YYHvcq/LGW3emwh079OJrUmcgW7PwV/d3IyMqk/YrFFysEjtb8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MTA3ODQwcQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM4OTEwNzg0MHEBYS5kAAAAAAAAAG2DPh1sk8a/gO63PN9Dur+tDbh8yG6zP+X2w+aK+MA/YbSkOlthtL9gVjZT/Y2nv+mHyOFdV7C/MWfAQnaSmr9etC2kd9mcv2LQkaSlR7c/731jxLXRrb9b2551jYO0Pxg//Zej8rc/DtnHfr5hoz+R6p0xqrLIv0/9GcxdvK4/4pZsZYGzvL/oAuL9bLO0v0+7HMMpw6W/3O2GlpA2xD9I/GuGRN6hv/tsbp+hQLW/N5JgV0zIxT//p8tVSfSdPwCp4iXXh8c/KzSKzWpIur+lPuyK7HysP+ub9W4Ma8u/NLn6c0juvD870lEoBnzDP80K+5Av5cM/QgDegX+Otz/r1bLRRq6wv/JHsSA9QbS/452gJxCnfT8VdgKP/bq0vyrDiVSZYMy/pvtez0NXvb8anTmJdqqmv5GdyWSGJJq/RoshARAmwT9jj0G4n+yzv2CH6D1KC8M/VvRL6kG+yb85Fr2m0B2uP3Jmp/cie6W/R0GLjOJitr8PO3BDqdvHP8ej4dIxJaI/+lsRqRqlyb8yEIoxrLa5P+vCsT0+HJ4/pIJu9G+DuD8RLUEV2/qnPxPFVPDi87I/pMrYnKv9tz+KslfB9Ei1v3bl1/pqobk/1FHMaiyNor9TwVHI4TOSv1usKs+Ng6c/1AkHbC+Msr86eWt6GS+2P8tv7bSsT6g/TBWZ5xgHtj8iFU7Y1l+vPx2iycpKHMC/XJSNsEatwj96TICtC9qsP5G7hiZG76Q/S0pDIrugvz/1FhTgCNGTP5Uij5PGKpi/DdPLZKlYlb8HoEP6hVCgPzqBRa6q0Xg/QEoxCB1Fob/EMFxE6iCdv46/fMCc/mC/I1hz0mfvpb/iUw06v1iuv2WqVpPvNqk/A5RnpQmfuz8AClwHiSihvyYNnYUURKk/Uq/vHsz/tT+dpt15JAHCv7tysYvW5qy/HGMfspDcqz8ZO/ysWqi8v4Zqz+t/37a/bsZK0IPrpL84ChJFtCK3vw2BTDMiM2a/4cgPEPcitD+bwkab0F2hPxf0sGhZi6C/jtfrS1VFqr9thEHD2lSTPw0Q1CncUq0/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MjE4NDMycQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM4OTIxODQzMnEBYS4CAAAAAAAAAPIXKUgwDcc/g7/yenoAuj8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    7,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        0.9245073514060512,
                        2.7431296135140646,
                        4.141958499817426,
                        2.465157411235235,
                        2.9754025108882756,
                        0.3500826711640476,
                        0.4824284349434424
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7
                ],
                "values": [
                    0.9245073514060512,
                    2.7431296135140646,
                    4.141958499817426,
                    2.465157411235235,
                    2.9754025108882756,
                    0.3500826711640476,
                    0.4824284349434424
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 15
    }
}