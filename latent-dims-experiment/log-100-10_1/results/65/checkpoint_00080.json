{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        7,
                        7
                    ],
                    "values": "eJwBiAF3/ufLiPpZiO0/rua6D6v3cj+3eXO3EiKiv9FBJcAq1pe/igUakuT3gz/gEIYxHZegPxBIPn23XJ6/xcakaokTwT+060lJivvtP7N01ykVBau/b399Zu0CWj+n5fyG0UWzP2WLSwBZGoA/byz+aFzxu7/ih6ygLOuRv2NUADpnRoU/M/vRworl7z/RHVgyqD6cPxjZzIZbLrY/n5WcbQMtqb9GjsvqUC66P8U/ZKbmtrI/scmikqBTqj+bdrw9FxaCP2fOna/CW+8/mcmgiEzhwz93Qi+9ZEGvP61Gpi5M+cI/O1o6NKCPpz+f+sMNWcqAPzJm3mGgjC0/bEiz8pBDaj8Sn7d36oHrP/pa95d3ZIU/Eai9M4MdkD95lCW2WaqrP4mX8HxU53W/v88qMGBpmr8IDz2CElxwP1CAw/4WaIc/P8J4gpqX7D9asMUQKxqYv+JYrG3V7Ho/kLT2jZkgFD9X+LC/hVuBvzOKc3mTeZG/ktuZfLnyhb8jMA41Fu2Svwv5OXhyUe4/DPLEZg=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "strides": [
                    8,
                    56
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.11361019895472539,
                    0.009716139877772473,
                    0.029653194416769002,
                    0.009813624396225398,
                    0.1425687753584651,
                    0.07140300493802626,
                    0.11155159655549093
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.044740491350643424,
                    0.012889337284537077
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "values": "eJxbcPmyms6FJfYMk5MkZM427Gd4oGkr+9B2P4PchL3HGIvsGUymX5J6UmfPkJWeuOT59P0HpKYJNEsvQKiP2OX+6EezPcOEXEeGc/n2DAeS3+11qLVn6HN68fFJ536Gmk/RpodL7BncjulXfixBmA9TP2FJ2RbLNnsGBga1v+/j7RmeyK+RvF9jz2ATzrHLD2iOQIpmzwRPhHtg5sPUB221kGOZYM/w522T8tqC/QwWjFOUtBv3M3y5IXVOJQ/hfph7YOZD1TvMSY84JbzLnkGlMrCHu8qewZltVtyaYrh/4e6HuQdmPkx9/edpV7bMt28wr8h+0NeBCB+Yf2Huh7kHaj5MfYbjLcE5NavsAco/o1k="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            7
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            7,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MjE2Mzg0cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4OTIxNjM4NHEBYS4yAAAAAAAAAIpJRP0Mccc/Ljar29+/8L8WSPQI2zLnv9ovZ9cNENS/aeiz7Ssrub8t4hsh0pjTvzn4QOmeENE/3NI7UTDQ4D+UJWW12wzSP/w/QD7A7Ne/2/vTXvb34D9F09yBRivkv7QkD4eFRqi/3+0PvFPv1b/k3IQ6Kfidvyx98J6tMsg/6HVc/VSZ2z+dN0DqpLbgvyy7ZoSF1uE/dDo1izAT8b84ZbugY2nTv9a1C9vjd9c/SFf6iYVi0T9TMRhOQonDPzoan6BIl+M/5IgbGgTd0b9zNpGE1P7Wv3YLEAsfzLC/Cx6X8zdF4795GATErTbUv0qsPhBVUOu/gxA2syhysT8Z9KT/15inv2M1ioPSNMw/FHBjNzNzx78UtNcEclfRP/ref9bIzdE/iUSANgwFyb982vb6DZXSPwpD8hBLIrc/eMcjb14jxL+XZ/10tTajP+hqDK5QmtG/0S1BFmK8zb/Iu5EJRGaIvyDMRZj/8bW/QsYItbYRxr/KKKJe6mPJv1nOqgqryNG/Wwz+DZfB1T8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkyMjU4MDQ4cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM5MjI1ODA0OHEBYS5kAAAAAAAAANjCR+/jx8m/tpJ2gePfx7/FxMtT6tOkP12w4aAGhlM/T3Gm7ejOxb91USqdP6V+v0NQhtlKBbe/Uj9YTNUHqL/xbrxMg2ygP4Dus7KT+bE/VzKZn1DjsL9dVSzXWm7DP53BkIrzrmS/Jux39Y90rj837iubZNTDv9vnnymm+MA/muzbFPwcV7/8PW7BC7nCP13nnVqyUK2/jnM5YCyvyz+7BosJRsPOP87EAMZL3Gu/SXP6BRw/0D/GVuf6UWmvv+JHhIDyItE/IMm280ioxr+vUTuu05SFP+1F0bawRtC/EbM1KAOEpT85QapAqXvBP4XGtbgOwac/58q2C2vKsj/CIshK8eSJvw58BTKX0ok/m2ArIEMLjr8qpwoyKv6yv5dA+SmzCtS/AvvWEhhjsD/rO5MNcy+5vzB+NKvNwmG/p8Hmwtvttj8YQLYi+7qfP8BHUYTs8qg/4+j8aR+w0b97c4QxshWhP+bHmPOqeby/QowTPTnMlb8f80X+SdC0P043dQKqX5K/auodz/eXzr/j8b8XFrO9Pya6Dtkfs3Q/lamDWq25bL+ItUy1g4WUP+W6JFjew6k/SDqt9O+Ioj9iXVW0DXGzv/StmW6Tn6E/IQ2elrUCrL9hgWqYrDt8P3KJaOiH/Z4/ybkTxhAwsL8EmVan3FaaPzP5Hcir6KQ/VCyMoYqtxD+Z0WOIXlq6PxTagGSmPpu/fNOo5hjQ0T+2NJrzFVqyPyhmNjhAfWY/nu1b4rAbqj98h1zvMcl2P2lGHWiIzTs/dPVyKKJGkb+OnIXW2HWsP1wwTAtxypC/93C+TNGDjz8u9zo9TAuoP0JTBWZmu5E/3HUjo5iGaT8MtCp4oWWhPygBC/qTGro/F9CqATcfY7+SFDquAux5v7ykVkKNKYs/9WtHnLPpl79S0vnAuLXDv65sBykwQKS/jIs56BFxo7/09I0iV0uXvzgdysPC47W/jlfOFQq/w7/MhuvejRCrP8wUdZ+uRaG/nN67dms7kL8lNhBAIxfCP/M9J+mylYi/q/t+rvEruL9b9JpddZPDPzAcaWMDj6Y/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkyMjU5NTIwcQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM5MjI1OTUyMHEBYS4CAAAAAAAAAOiTGaC/6tA/4YHdujMgwD8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    7,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -0.9127291446168596,
                        3.441834762444738,
                        3.0615157584231425,
                        3.235336098039061,
                        1.8004426613851852,
                        2.2178475878378436,
                        -0.6525723141380241
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7
                ],
                "values": [
                    -0.9127291446168596,
                    3.441834762444738,
                    3.0615157584231425,
                    3.235336098039061,
                    1.8004426613851852,
                    2.2178475878378436,
                    -0.6525723141380241
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 80
    }
}