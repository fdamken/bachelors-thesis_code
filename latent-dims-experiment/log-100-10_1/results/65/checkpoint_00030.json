{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        7,
                        7
                    ],
                    "values": "eJwBiAF3/vxnutvLiO4/Wz7k2JGjdr9E6ZikUuxVvyrAbeVQlYg/i/ddHUAriT+DcYnYMKGlP4Bf5YXmfKG/o+kQI/txvD/EAd5ICAPwP40OhNdKi7e/R4g4JDU6dL/OFr6jpbW6PyGi/2ElS6U/LXQtluZqsL+j2NbPEFGvv3fYBL/HLWQ/Ui8OT0/07j/3FmBXKwx9v58mi8CfiJk/AB+GCj3esL+06jGzi4OyP68L3OYcX52/l5AwlI6ogT8jp56TSsWgPwTSWDTgDO4/5IM+gIv/oz9s4osrP1KAP0oidpprN5o/Lj3rbHQfnz/AfX2ZUa+VP9yQSrCmPY2/dfFsoOBeDb+HnFJeEn3tP8v7oHrKi1i/I1+c9ZbEkr9oYg9xS+5xv7errVzmkYu/BxTqGYh6ij+1qN2qnBmYP232HJ8yeHu/wq6M9TG67T9v/a7i3HOsP/1GyGqeCI6/Tu3edb7ZiT+g1EDbGq5Uv5JM1BvRXpK/LPdOfcgcUr9Nisd4Copyv7E8ncLBx+0/FjLKSA=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "strides": [
                    8,
                    56
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.4911285742657387,
                    0.0753386988521478,
                    0.25749189167846,
                    0.23207930486501072,
                    0.6321929207875138,
                    0.3570174906269672,
                    0.749800349344869
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.032444312389610784,
                    0.03662932155658973
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "values": "eJwriL7+ev2LE/YNeYsesb6fsr+ho9T7yt219gzFKWk6Ff32DC+smI9bT7Q/4y9YnaNyeL+Gk0i9yo1jcPUMXkK1y75vt2dwMI5VXTnZvmHyUS4ZuS32DBM2SUyX2L2fQXYBf/36EnuGHTub552MQZgPVX9gj2Kg0+vD9gyLlizLj5q2n2GaV+LteRPtGbhEvs2dsmh/w9O0y/vMl8HdAzcfqr7hSsP1X0mH7BlyMo0k9jbsdzikwKriB9S3M9Nm06oZcPfD3QMzH6q+4Edrb33DQ/sHM+62HHXeZd+gHrZy39pVcP/C3Q91D8x8mPqErvt8i1TO2D9QzKiKUdwIDx+4f6Huh7kHZj5MfUzazBUxTy7YAwBdD7aI"
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            7
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            7,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MjU2MDY0cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4OTI1NjA2NHEBYS4yAAAAAAAAANPaYvhXm9g/QQfDK/eG5r/FDp/YnFXjv9bdDSta08G/ktJ0nq9EzD8XbtoCRly0P7l6ZlTRR6E/j2BSFuvU1j/PxgU4iXfQP7koCfJWS9G/bvof7xqP3j9fzsvPczPXvzBqMBP4V7m/7n5qRF6trb8bcG9n7pypv/KbXQWxYqg/KD9qHY+z0j9kEHvq6hXOv2L5UDtLh9o/xyQP2DfC4r9uXFpZSjKLv5j0EhmZ7sQ/K8fuPJVBxL8LrOP9LGW2v0lcb1Qa56c/qUGFOttswr+PDpfiqHrRv1xZkGFkLNM/1tMbmIqu4r9GFgskAZnUvyaibB0SOuW/hFPYqsYCuT+0EhrW5urHv4UFLwZLhbG/rpswkij9x79eNJ9WUlW7P3t996nhk98/kjAf2l/Os7989iRpaTS/P9TfCjr/h7A/yh56sxVPYz8orNtgG+q1v3TNnk9It7M/X/Qt0RBzUr/wQ6LaQ37CPx2cy8Tp6sS/uvqEnByVz7+NtTm0jfN6vzwNRASOd7W/OSOKXPlNNr8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5NTAxMzc2cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM4OTUwMTM3NnEBYS5kAAAAAAAAAN8w03LzXs2/wLUp8rkWwb87Zc5gxGjJP//eU4qL57U/jtMBTeAdwb+GMOI4Z/Wgv3cK9oHSnqu/qui+U7xtsr+LVFv7krinv/pmf7UbD7A/HcGt/vLMf7/KJdRV7hqzPzlXgxbH47M/RSUFpbuEqT+P7pDsIy3HvwHFpoeANbc/NHh77QIrr79mVnmi/CGkv8rHO7Tu1oC/7Lk+zDuCxj8j7n/yClmQP7MAgdU0PLa/GL3qfEO+yT8x3UeA2KRwP4ausXDShss/xecaYmIVwb8cX10JVsWyP8p6UPssB82//h0muH+DkD9sOSMdf9DEP/UKBDE48b0/Zgndxh9avD/6jAUn4bKPv+I7/WZ7T7+/au0pBaD1rj9mWDUjkvG1v73KMAVmr9G/zW3Wy+FRnL+JGF/XLRuCv1maeHdGjrS/B5d2DQ80wT+q/2bwr3TBvwGL7tlsprw/GdXxMGAA0L9pnzYJpJaiP1y5RJ69abS/OZLo4kOrqr8Vy7i4eZ63P82vkIjnfpK/+chSTUbiyr/Jq+u7C1+7P+9L/OJOm5o/TQV9L7a2ir/9ZxnlE8ujP5y1dG8icLI/3gka4juPuD8HLOkQMqawv+7qMlkJJ6Y/fyJAaXMnkL8ecYvIotSOv138XckOL6M/6OQa03YDhr/kqDlv+1C5P5FkKdlVyqg/nuO5cMLuvT8ERf2CiiywP4+n1MlSP7O/SH8DJ3hAxz/xGmX+HCWlP5tBnACQT6Q/eyXAaH1IwD9a/ieG8bebv3HQW1VMp5S/uR4v2pOsoL+3WCyoDsChP4kx8uZALWY/kEfa64g5rb+Scjw+PBicv34Y/Vv8aZo/kV3z09CCpL+/wAk3g1q6v3eO4NfV0q0/DkzwhTgdjr8p2cW0ZCaEvwvC9tNuIKM/kXg/HRwRsT9R09bRMXG9v6GwkNsecZ+/3lidC3aRgr++px9br06yv+O5IjFb5rq/HxMfI9sokL8nCp3M+yOcv2IhYKMQgGK/CDrbzHecqD+Oiwd7zpaRP8D3fkHaKba/JFqXwwNNtr9RFcyQdcunPxFDbYk4sKw/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAgAAAA4OTQxOTg0MHECWAMAAABjcHVxA0sCTnRxBFEugAJdcQBYCAAAADg5NDE5ODQwcQFhLgIAAAAAAAAAtMwn4voByz+Wm2gxt+C6Pw=="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    7,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        1.0839723943541884,
                        2.905186123626062,
                        3.604119820372374,
                        3.353618930658886,
                        2.8402523340259433,
                        0.6478123829089377,
                        1.0679909324232912
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7
                ],
                "values": [
                    1.0839723943541884,
                    2.905186123626062,
                    3.604119820372374,
                    3.353618930658886,
                    2.8402523340259433,
                    0.6478123829089377,
                    1.0679909324232912
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 30
    }
}