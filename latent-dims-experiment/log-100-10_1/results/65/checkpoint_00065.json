{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        7,
                        7
                    ],
                    "values": "eJwBiAF3/hy/vYHBD+0/qA1zEifugD9hfUy1UZyavzp1VmA8Koq/eJUvrDfAhz/oUHVMJaeIP04xFW5NaIS/CcT4fQY0xD/V3206pFvuP61Oz3H7y7S/Sz2EizZBo7+nUsv09B+aP5/kCD9lkqG/rq8FJY7ttL+z82PVDjybv9Nq2eqPCos/h+5OX2Qh8D+xzc6vzX+aP7/IfAlocrI/RhGxxdHmrL8ibfm/Klu9P5sT6S04Y6I/1C3gPepnmj8DiiNzE9egP0sac7HbRe4/wxCeH+m6wD/5kME4zgGgP/WDi8FRJ7o/w/goSxwAoj/UINWEFTiDPy/RhHFmWWk/SPKRsi1udD/iZ5bW3sDsP6SMwU95fIK/8jNc6N4Elz/V6tsVXM2aP+Ft3yNfBmy/5zc1rOg3XL+apuySawubPxXtD7KyLYw/9E0MlZGn7T8NZ+26QouFPwFd1F+164E/1PK/QxNhQj8wtLiQp0WAvwdjYA2Pg5C/UO1Sb4cgj7/6B1vDo/lzv8CL5eKsce4/dGLFaQ=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "strides": [
                    8,
                    56
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.1995609446243223,
                    0.012248137912057994,
                    0.036880111871954606,
                    0.02393459129906776,
                    0.26069416546539387,
                    0.09547907635966615,
                    0.14848752614354913
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.010309019120943048,
                    0.00718795074696402
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "values": "eJyTOmJTEjdtg/2B3QWmz2269jNMmCr5+LPt/gZ9ztZfrkX2DLsqjKU/xu1/sIzn+IFlS/dPqW0L3Rq+GqF+0ddvHusn2jP86BbluN9ozxCReP3d9l57BqmKdwW/evYzpHzbmuoLFL94aFHf0ya4+XD1e47KX26bbM+wQ8nko36BPcOCOpPAa9X2DBPWz9A1AMq79sZoz85GuAdmPkx9YC2X0/UF9gwNIXw+W5OB7gk3PHUKaO/M6Rq8GTlw98PdAzMfqv7Akp4NnuuO2DcsO3nhisgi+4aWqy+svjbZw/wLdz/MPVDzYeodWqw131/cYL8gkenrg+qJ8PCB+xfqfph7YObD1Cu1/r2epbnVHgDXGbpS"
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            7
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            7,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkwMTIyMTc2cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM5MDEyMjE3NnEBYS4yAAAAAAAAAM2hKFs/Ic4/6nG5islx8L8wRyC36xjlv9kl3dZLPNC/4ggDE9W+cD+tWHCgVzTJv0MRAjVEHMk/CYOEIbFf3z9XOXnigGnVP6I5xeSYhta/OmZ+beNj4D/HrG+zQQfdvwyAuAPrh6C/qgoraBgP0b/TZu3agCKwv2ZtZS5mWMY/eZlFU7tY2D85jP4Rg9vbv0cAirVwz98/Gv8MCSEV77/winTtIGzPv0CBGa8G6NI/7yMw8Clz1j+rLUf0kDqxP4ZGNkwtX+Q/PMqFQjrR0r8cHR/zscfYv8A1roqs3K0/rsm1Ef+A4L+dqeqxiIPNv3I/d02ErOi/m2uQxCM1wT93xt2c/PHAv/7epZNImsE/IY2o5N/DyL8W0Hxuc9HAP7vC2Wqd9tI/hx9ojBH/wb9tokxNvgLKPxD6x8y3Z5M/5VnhQtiGhj8J4X0gw3CmP0Ad5iDKBsa/+CQZ2ezuyL+9zMSdDhp7vyIEyn5ymMC/KwaOXxwUyb9y58QqX3+7v8OH+5do38y/dzucJWWzzD8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkzMTgwMDk2cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM5MzE4MDA5NnEBYS5kAAAAAAAAAMZS2/wrCMm/POOUpg4lxr8H9RpYz62zP01NmOxad7A/IlhlsCM3xL+n9SEUoLWQv/Blo2t588C/sKcG+dTxc7/fxUA9mzezP2gmjt4rlLI/sKRaYikwm79d4fi/e+WbP9vI5I88WoQ/vCr3on1IsT8kXF3m6H7CvwRq37zTH8A/1cL/yBG5k7/YjnAc7ea0P/E7M2Nc67+/DxkSkyZuyz+4GLXvhnDKPwygfdQ3n6G/Lh++afnNzj+WU7tBczW9v7FzJtd4RdA/CBeZTvUcxr9UYFDpl8qRv8ejIl/dv8+/hnpiYl3dhb/dNFxmvE7GP0N6wXWrhco/AI25r0UJuj8VtjBj4cKZvwEqDQb+JaG/46EICSLrlD9I8JIO/y2kv7C1lcdc+9O/FIdRL557pz9PuNgk4tiQvyW4bCIGL5Q/A01wJjRIuD9aaATYbmuiP0C6SnniEqI/78JhTi7a0L+aXAdsgHqjP7DqLfNzy7m/NyaHk8Tggj8uenjV9tnDP/l8DbeTt4s/oqQuErOHzL+vDRMXGAm5P6NSIqy0L4q/Cdc0Liqhlr8pYe68YBetPzh+mocRzqA/JqRmBdcNsD9FMmu2d2DBv5wCnHXfLZw/yAYrrQL8tL/wrHMagMSXv0VTcjSZD6w/075XBxCFez/3xWyFKdWbPywceWwnBbQ/5QH8XTQ3xD82r6SwAS26P6ZIVmr0kZS/Y7/HkDgr0D9Q7YuVlTGwPz939TjMUJc/pkqf5lIzuT+7S2+8a0KGPwGT9uZUDJM/ZDFoZK+rnT/kl1iUas6yPyNZh+bs26G/EwSGQZ4oYz8AiXFxj4SeP67z2FIBkIy/OIegnS9saL8awqCu0M2ov/mbUpAj5bc/obrdTN0mib+kUAXa4QeovylFcSTbP6s/H1s+9JaPmL/eVHL+ukXGv7ph0b5i1Ka/ttCXY35cpb9pEQDsnzqwvwUqC2U9Xbq/k7lC1zVkvL+L1awheyWIP5D075Lgm6q/jHXwUoYckb+bU01E5qDAP8SlUqcjJZu/9EWGkb/muL+SyKOAWvbAP4efKBeHwqw/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkwNzg5Mzc2cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM5MDc4OTM3NnEBYS4CAAAAAAAAAGKmpO3CCtA/Mz1ljPtmwj8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    7,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -0.22759909274603946,
                        2.9737857744181238,
                        2.965748518036087,
                        2.7153852127355416,
                        2.205193993343308,
                        2.129307495032432,
                        0.3003038585761888
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7
                ],
                "values": [
                    -0.22759909274603946,
                    2.9737857744181238,
                    2.965748518036087,
                    2.7153852127355416,
                    2.205193993343308,
                    2.129307495032432,
                    0.3003038585761888
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 65
    }
}