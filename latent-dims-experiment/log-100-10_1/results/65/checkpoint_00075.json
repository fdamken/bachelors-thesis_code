{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        7,
                        7
                    ],
                    "values": "eJwBiAF3/rcPbhzIdO0/ISw0Fp7wez/drmJdvYahv74OCxKeupC/ekoyZHBXiT80e46gr/KYPyNkKujp5ZO/WxHLjWvIxT8hRUQ4elvuP6AhvyZzia2/MfutZmp5kr+4DczcAjGtP9sUVDytkWC/1hxr5w3lur/U6hEMnLGRvxO8gP/Sz5M/YJ+9eLgh8D9ofKid9OifP4bptzYZgbY/paj9r00wrL9lPqAr+D7BP9a9lmjsVrI/q+HMTXvcpT/dKkPGbV+UPw26MDLcF+8/TGZYKj5axD8uYAoyCbyqP2bIuy6268I/QEIsOI6sqT8vbtARckiGP9J6PyVYhHc/ClolsiZjgj8sT5T180zsP46M4sjYjlU/LTvKn36xoT/HNyBpLY+dP6b16cNzy3G/seTp82HBnL90cdqSutKBP+Drs4c4B4C/LrKgtZQP7T84QomOqIqNv9tEWAlPEmm/M/Tb7SuTdr/9WENNSYiRv7UXh9TKGpO/Alsk0/eUlr+ohmBnmzx7v8KVKR0Wt+0/ia/E0w=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "strides": [
                    8,
                    56
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.13533476686127746,
                    0.009893636718668709,
                    0.029991345229800227,
                    0.012393457032929378,
                    0.15788645729493353,
                    0.07796517297944314,
                    0.10538988242564837
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.03353028384435311,
                    0.008530735789812468
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "values": "eJwzKKzONe9cYc/wWvzL30nN+xkESpL2qfnsZ+gS3b7zeak9w2JVWe6vZfYOSut7GVXn7eeQmbHlSvBihHoHPlaHb+32DA1utSIrSuwZpuyw4hBptmdoOvt64svO/QwekhNvGVXYM8zxcnHNrEKYD1MfYeSX8avTnmHBFYmte1LsGf6cfKlS2GDPsEr21mk3ID0joUbnVDzCPTDzYeofTOKd/3iKPcMdoZOWPeX7GYI8dA78bN3P8HdVr71xMdz9cPfAzIeqf2A3vbJj0W57hqi08vumbfYN08/kLSsvgPsX7n6Ye2DmQ9Uz/H76KmA1MDwexn30Oj4BET4w/8LcD3UPzHyY+gCjxefXyayzBwAPPavo"
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            7
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            7,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkwNzU2NjcycQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM5MDc1NjY3MnEBYS4yAAAAAAAAACc3TQg8fMw/dY0KpIif8L+jXMLjvJfmv3MnuTLDhtK/1PGxPU8ep7+0DdLzc2jTvwzn4YeMYdA/MGpEg8Fl4D/SIurDLjPTP3iHNUfY39a/kpoidajT4D8biWEAg5/ivyR+jaTEgWi/M2inYENi17/tA9QQMieYv99T37Sj4cE/2t2x3Shn2T95FF75Ygzev75DNsTscOE/mTdKfO588b81d/AMt5DTv/9iLYjTQ9k/XIqm3k740D+Av4Yyi9DAP1wE0LBE0OM/Uwx2Rwbq0b+vzRZsIJLYvwsw7gl+qJs/Jl4NRPAd4r8AyGBtPT/Tv2oAjvIdXOq/BelEGPd9qj8sB4V+8D+xv/3Fu+dqWs8/xkpLtf51zb8CSOSASErQP1aXA+u3p9Q/fzdSfrzHxr+KzAGFlzvTPwTmUzJ0t5U/hG0L81aUub9yEfI6lcyHPwLLsnYA686/g2gPh8D8y7+P11kM/mqsv2maaufVYbe/OxXkphoiwr9oK07DYyDHvyBQacjmJ9G/MyaXUcle1T8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkwMTI2NDAwcQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM5MDEyNjQwMHEBYS5kAAAAAAAAAC1iPWkpbMe/XtjXOZWLxb9/rAyyGWKhPyO6G6BDVKg/Ld2Vmb2Aw79NuCaI+E+Tv+gav7Qf0bu/qjfA1xYpob+Vj20LjI66P2/kTW7xKbw/85pIAnmppz9X0MrWZlvAP5mHvvfEd6G/ajL5NaPZrz+UWg7Hl+XBvyqVtEFyZr4/p+bWSXc7iT9A0FSQDBu/P8DsK6vm/Ku/PuPmXcrCyj+MXOol6s/SP89ax4AAf3G/i/Op8uIzzj+YjqJHmvG2v2jfN4/t8c8/y2YwhDgLxb/2YpsFSFe1v9jwBhxeF8+/scAq2vq+eb9ITe8qeljDP/PcAIC30rQ/c0BsEBIatT8yQaeNHaysvw6W7zG/jaM/SKG/f4SjrL/PKcDsNt2WP2zwu3zce9O/jGbMsiH2oT8o9+JZKsiyv9AHRvIeoJA/TwDChQ6KsT+/Jt9L5GqkP4w3/9oilpY/o/a1GrKI0L9+BWL1z/+Tv+zVVP1Jgri/RbTRH4jbpj9t5FPWQuG2PyElCD224Iy/0OZzNLctzL+awxvcz7a6P6gSAY5JnIO/sd1fixMPob8nJzSJZLR6v0O7HbjAXaI/DxfJDUJPoz9k6KHf1rK2vzYJ8D2g55o//zj8r358s78cpM27wBmVv8Fa6YJhCI8/aHFf8o7dq7+6+Y9CHDujP1KENZ1zUaQ/41cxxgScxD/mE5XEdka5PxvbyJTgYqy/zyTf816y0T/oGPPS91ChP3p2L16gYUc/4ZV38rV3tD8mrrfD0D0LP+fb3yMEiI8/pn0RjYCClz/M0xw2WvuxP5zQo7ywop+/gQxFk2rMiD8umvPl8rqgP3lFceC58pq/nwJrPgDfjD8M53SlUhSJP3Qo+m+qkrU/OI+mBOVOlD8U2EDkwIFwv5qjs+FUfYE/fnNxi2eKjb/GibmOPL/Fv60SXiIurLW/4V2OjS8gp78vFyeUM4OpvyvWSgbYU7q/lKG0XlZPw79d83eP32KtPzAKi08ixai/hMUXo+fpiL9QozlQ93LCPyK8+Wzy44i/We4ySmL7p79AB/tCI97DP1YS5edJya8/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkzNjUyNjcycQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM5MzY1MjY3MnEBYS4CAAAAAAAAAGm/FmcOfc8/wUnJXIT9wT8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    7,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -0.7270505651281105,
                        3.3289098952238376,
                        3.0325498066078147,
                        3.1021900884890434,
                        1.9016349652945312,
                        2.235372443142334,
                        -0.33054425830352446
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7
                ],
                "values": [
                    -0.7270505651281105,
                    3.3289098952238376,
                    3.0325498066078147,
                    3.1021900884890434,
                    1.9016349652945312,
                    2.235372443142334,
                    -0.33054425830352446
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 75
    }
}