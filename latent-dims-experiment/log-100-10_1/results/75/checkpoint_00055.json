{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        8,
                        8
                    ],
                    "values": "eJwBAAL//aXj3p3nGu4/SUU+b6mMe7+Y0FBe+L6jP6NM6270oXI/VBuZCPazb7/cymbgK6unPw6sRrWejZA/Z3/h1gIUoz9tzS0tZMd9vw9qYPLMou4/HMemjTTOtb/rZfN/Ni2tP18N5gyJNJU/Jd6axNWzmz8pYyFIjfmovxjFMUVo0bI/VbvXe6Qtkz9UktyMxy2iv5aa1UkSNe4/Pk/PjhXkqD/UesO64EBkv3VXgL0I0Yi//MfZIaygg79SDfmUXp65P1CesXFqzKa/OD2Xd+pilT+9zwxYgMdiP8wuo3eu9uw/ojhL7YkVjb8WNvEkMNmhvyEzLCgkOZI/uYjA/xONoT8zxRAbHI+JP7BPtgmY1no/br3Z9BbCmz/nCDRkW0SCvycmTx1IK+4/mA06fu+hcz+WLErNiKt7v+bKaLhFylo/wIWdlWfBpj+6S27NdxNdP/tzFH7xXKI/iNEQwG7VjT9s1ZBorBF3vyoaYfBuuu0/eF0BWqPNeT9SFogenh6bPyX0gfDBhpQ/xXMyOBD2lb9uZTotoneXv/oS74fDO5g/O7vsGNTBkb8qGxNT3GJ/v0enU37/1Os/+Yz0olPJnD8fsHYyyB2Zv8vh+BxSAXk/rSzi55ugez9/39+rIJagP4en3sRatoy/QuyodJ4+pb9TNz3kYTGQPx3ZIN6HCO0/3AkC3g=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "strides": [
                    8,
                    64
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    2.035122282174337,
                    0.4899230795496709,
                    1.2782414599522651,
                    1.7375287647919395,
                    1.2511775438095043,
                    2.2387261212565344,
                    0.9722719211077239,
                    3.062637519852471
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.325822261666568,
                    0.29663123733413305
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "values": "eJxbUvSxPlTugv0CljliWyM37V9wo+7Lr4mb9je0rYlcnLZlP8OFF16ny7ftZ3hUNmEda4/9CW4f7dvyG+0Zpge/f3RkGVxfwbbmzkN7j9ofmGAfd3DnYXuGltJAc7WJ9gwHJgroCK3e3yC4wOJZ/IL9DjcvXzuzfOJ+hgXvUy48zLOH2QfTpyBZEHUj+4I9Q4HZbs+7a/czaPJayqms2c9QtnmpLcNM+wV6yY8vOW7ezyD5+zfbhk32cHfC7IPqa5gseJQz7gbQHaf8A6UX2TNsWS2ydOIWewYHX7nuSy72DFMKar7+2mwP9x/UnXD7YPpEOjPPGF23Z5C4edV42Yb9DBFzdtqkdNgzPNn6SfLTGni4wPwHcyfcPqi+BRrvOHf+vGz/YJ/TnRvu54HhN6FMSHcDPDxh4QL3H8ydUPtg+v5+PFXV/e+h/QG97Y6vL+7YD4sHWHjCwgXuP5g7ofbB9d3YfPGh6El7AN/n/Bw="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            8
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            8,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg4OTU4MTEycQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4ODk1ODExMnEBYS4yAAAAAAAAAE01KR7Shce/addM9oBhrj8ExmdDStnAP6k7yavHKrw/tCDxlh9jlz8VQTBMkNbVvxrzv8U7Qte/aqEGbXvCoT+akFQGWAzRvx0R+tgfhNY/PjFKtF+P4z+Yk/lb0EHDP0tSTFXEBdQ/7jo7Jwp2xD8ME3wSg7XZv1+R/TsKIqm/ISIRd+6Xw7/GdQSKx8vTvw8CmjXk48a/+L0lxvR31z88R6ZrZZXRvyEDN3nETdK/Lpnz7TmJyz9cxqetp7ujv3n0t8C3IdM/7OaIiWtssD9Z998UAoHHv/+GOWSmude/mQvELb+vsj83b1gJuxTDP+Uytm1trLW/RwLUnOkO0j+Cqqtt3WfPvwoqtarCnda/AzkszEHXx7+wQZddwSW8P7NZ7uzhJNW/jr9/BHGu3b/5IK6x9/LCP0oe9r/mE7U/OeLEItOSwj9bO+dsDmW2P9eUKaTd85m/209wTa6W0r/YgPcdO/2xP9gmUxxlPuE/aSEflxvO3L9WDV0/IQXRPw8oWAnmtKc/oAeQobDW1r8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMjM2MzIzNDg4cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTIzNjMyMzQ4OHEBYS5kAAAAAAAAAJN0BybCJqM/1fgbeIQkvz/Eol3hcaWzP+AJ9zPK4cW/YTZP1HqKrD8uI3+Pjr7EP18UoGI0nrm/MRQPu2jgwT8IrnBmf4C1v1WFze9pc7i/R0GQVwfzvz8XWDUkcA2xv1DIHx/G4MQ/Td6Hy2AuxD9tI1e+n52jP4jjEiW4BsQ/xzevOIQNxr8c7jr1nK3QP+Ze6jwBUsg/PcOOCb3QuT+T9gBPirnJP8gY30HRTbW/SLGsbpDGub/L42frg9nIv4YYGZ0ReLg/YAVehZ2xvT8oZhuQSSnGvyBMyLcKLoG/9d9WHYiCob8pjEvgEJrCvxOB5u4so8W/Jlx4KWAUwj+G3nQG93HHP/QOmkSb+MS/TvXG7DNntD+v87Y6GazAP4F58Bu2Rby/RnUukIk/uL9ASLwUueSyP28wZSLctpY/CkaAfLNdub+eUNfxBP+vv60YcWH2ucW/PZJw1Z81wb+pgeZweP55vydBFbt/Ea0/yhnfDNXBwb8k8UKcfwGsv/P7kNrl88c/A47T79X3kL9WkCT8LvGmP/GFSK5OPbw/6GZpr9xPuz80MoCENimrP4lBWK+USJY/ypiUStnYrr8mBNMOKDaJP+JaZkTKO3g/xIEOQcLes78SxnWGMDK9v/wSnzPB5rK/EmaONgEfnD9ZRQHxbZmbv2kAtnsJrac/FFbv7RL6rj8WyP2uac7APyuR7sfUTbw/ecGMBwJqqL9XH/qZsWi9P5/nl4/pjca/SIX4j1SxsT9smezVfpvDv9hn0yUSzZE/VJV8Gf85rD+gCU7I3FG/P/XMrOZPGLQ/3v6MaujRmD89wyNSsyG9P4QFY+rfJrq/cTIBt9tKoz81kFMDetK5P7Y9yRkAJIA/zLZav6z/xr/WcrJ33TqRP5LIR+psQpW/SfE0H0b4uD838Ryu9uK2v4T4ivNIM54/3SabxmTtqT9FKIqLhotzv9873mj0McI/WSlsjfP6mb/rmxeCcpGtvxCkA4s6LZ8/pA3LIcKGzT89FAYn6LiZv8Xv+Rt5V50/E14iqKw4pr/SaTvD2XK4Py56YwQdoLE/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MzQxNjAwcQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM4OTM0MTYwMHEBYS4CAAAAAAAAALE8J/VNX6A/tvxZxUBhs78="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    8,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        1.2676558874287074,
                        1.995601789163396,
                        2.712180608382325,
                        7.161869258614381,
                        -5.719915915778267,
                        3.7302688403088817,
                        -0.7209449731410477,
                        7.3264401467465134
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8
                ],
                "values": [
                    1.2676558874287074,
                    1.995601789163396,
                    2.712180608382325,
                    7.161869258614381,
                    -5.719915915778267,
                    3.7302688403088817,
                    -0.7209449731410477,
                    7.3264401467465134
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 55
    }
}