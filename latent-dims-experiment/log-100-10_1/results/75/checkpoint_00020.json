{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        8,
                        8
                    ],
                    "values": "eJwBAAL//X2MzjO+se4/ALU9qz3bjL+3RKJ/ziKWPy9esVwIzYM/LB4wimkph78JQ33Kd4KJv6CZ6PlzW3Y/Yr+Vq7ClnT9xyPf3YQNsP6QsoeKIGu8/wtuDR4TEnL+p+bl7Xi5uvw+EXPu1YWc/r0VA+X1Mfj8/30lG7SWIv1d3g0kas14/Y1XcVbcTZT8/IgeEXaqav5kX/zIkVu8/6JQ1Omg/kz/uOq6sSnZ7v+g6PPZWnJ2/6Wu7EC5xRb8mLrti+gaTPzEnYafPjnG/F8jOaIXHZr99dhA9ydOBP/yT7sBd+O4/wVR5JAOtdb/Gk/wPIhmTv4oLyIlMdoc/odTocQd6lz/no36LB9B9P2gPFCtDFYe/3zfWyMjilj+JqPh4X6N/P6in1GdMou8/DCcdv4yxeD9FHI0+WqWCv6f3/5Gt4mo/CbG5AvQMiD9INPVSlzqHv6txIZlAZ5A/sNMtBjgbhj9QzOq8Jnx8v15XZy8Pyu4/RE3s3Jkbgr9VDQpMLOaRPwfTtX+w9Hu/GVlcF9LDZL8MH5ashmGXvyebq/+ECXi/9g7Ro0BNRb9DeSoJC9hmvyJw89RLG+4/c4WXJpofiL/kJaC3zsGcv0JD7jQXMJc/1ZAi6430pL8Z9GG2JRh7vx4WOtc9sZC/F6hgaLAkoL+chA4tKY6NP1lQiFPoUO8/BKT5IA=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "strides": [
                    8,
                    64
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    1.1121137371810839,
                    0.8974358425277865,
                    1.1211634587196673,
                    1.0469733853592562,
                    1.0384920635345065,
                    1.4522874242717145,
                    1.0455226765720627,
                    1.2515039507288055
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.16359395143737765,
                    0.15982499229058691
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "values": "eJzrSJ/aUxF/x75hZl7L1S+z7EV+PTuZHnZwf8LbfJO2tYf2v2hW81Y4dHD/hBd3OnSX7di/ouhv3bdp++wZgvzy1/7cCtd3xdnP9qnaXXuxt1peKZNO2j+YwjKtcwFQfvv58F2B2/avOLU0Wt/lyP4Ff8NSbn/YZs8g2rH/38FeuH0wfZuDzVrvhd23P+Hxj7uq5+B+p+Nbvxlrbt3vskFQaFP7Cfu0znTXOKtt+xdIMgex/9psD3MnzD6YvgIT4wdcC57ZM1jtPLGqbqN9Q4mWvKXyKnuGmom7DU7W2jPIs0+WazpkD/MfzJ0w+2D6uE0faE979NB+wnc5J5/YJfsVZDP9eQ5Msm9oMJ2WarkdES5Q/8HcCbMPpm9+4PFFTh8e2T8493Yfl90p+wMzbnSdDdhtDwtPWLjA/AdzJ8w+mD6Z9iw19RPP7DewJn99kHVgPyweYOEJCxeY/2DuhNkH0+dgcyD4GN9lewBQLQN5"
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            8
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            8,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5NDU5MTA0cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4OTQ1OTEwNHEBYS4yAAAAAAAAABqYMjKAzci/y0dLN50fgz/HjqqpsD/HP78LC7Ejur4/I1ofu11Lij93UdQqC+vTv0bygLxknta/cbt7UXBmuL99HG38gGjQv30aKuP2J9c/c9/bp8n12j/E151OIvrBPzSEmiTGFc8/uyrfvArfnr8rxVbz/cnXv16n/ZgZP7S/WaYOB9ENpr/O3CGoTLfVvxW8FUqSK8i/ZwAMfxP90j8HnOd1PDnSv4XTw27tqdG/gokW14tByj/gUzNQ6Iuxv/DOhrbgfdI/5KurdhR5p7+gC+ZWYjvQvyCK+0QhztW/s4lzVhs/tT/h0On0DM3BP9Hsq/MQC8A/zmR+L6DqwD/EnCHqIefSv/QcIaIKJ8+/nciO4O8eyb/4zBU1ZZa5P0bs3uIKgdS/pkc3e9cU1L8cvr1SjA5gvz8CmDH7wbw/vAZLypF3vT9YXXPOafS4PxPo2ccXVqy/UkRV+TKC1L+RxY7uvduuPxIfuW6WSd8/06W3CPC6zr+FUtVZpvDSP9xOK4CHiLM/88Ior4d6178="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MzcxMzYwcQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM4OTM3MTM2MHEBYS5kAAAAAAAAACPDjnl6Rag/JlAqTyiVvD/KoQVXHznAP6JBeh8cmsS/C6nevKNcmj/kbkpThOfAP0+U0IuQLby/WPCRprqYwD/5J1GP2w+4v1Yb08YN5LW/bK+gLqtjvT9g3Xv2J/ysvxSvogoYmcM/csMLt7Lmwj8rNn5zajmgv9cNmRAKv8I/QfAyJNbFxL9UmlLgYrfAPx9QbihTCsc/E42ceuAHqj9zIIg63HHIP8C36hh1vrK/ElS2RTQ3t7+OAevW1ZHHv7DYK3S16LU/KgVrXEEiuz+Wyp17m+HEv30OpX+0Zlo/HrJf2xCOtb9XfKdFDYa9v236a9p+W8S/gpX7FLLMwD/+jhDySCrGP7cJHjDtsMO/J1Nrg5xpnj8986GoZYu0P2hV9/JZtrm/HcE0Zy2wtb8VmsPrXFWwP9hXHP3W8og/vdT8Ys0hqb/rJsLzlq23v3SDHqRniLm/NAbogePbv7+4O7g/lO5tPxhMIGnH8qc/kLFi+CZ6wL/ks6dKx+Kmv0E0laNqgWe/gvPNL5Xper9TIPn4qyazP0ieWIXyrbk/IORuhoDAuD/xaTZr9yOwP79dFoOe6py/7JxRIIEat78Vt0+rhNiWP2abD0v4uXC/iO4jGGZPsb96V35d1KK6vxtxj1wddrW/2lUx7Tguoz/ETW5Kb+uiv3B+yylRjqI/b6vun2UMsj+BMA01dw2/P6Yk5PAw3b4/Av7XfhXjs78QewNxVdm6PyXFHFLftsK/mCEMzvBDrj+5dXHB0FPCv+UfosmCCpw/SpC0tVussD/6fmSfgMK8P3/gub3ziLE/RJo0h6yHoT8up4YpV5K6P+azacGDl7e/4ruApdVXwD9Y8Ugs1mG8P+SToreEW2G/uTPdDRz1tr8ITogbTnibPy42xNsS97s/6Jw99ulotj9MmiaFmlO0v66RsctcOKQ/HdqudKzOpD9QAkmNpECOvy1WVlJG6sA/8MuZGDIcor+ivh8wunKov6ezbZdVtaQ/z4BgL9bFuT9ZgW9lLPuhvx8K6d90yqM/P9IM+mRXq7/9s9nsGUynP7n7WC15L7Q/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkxOTUyMjI0cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM5MTk1MjIyNHEBYS4CAAAAAAAAANg+aUYrgZY/OABQ7pzwtb8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    8,
                    500
                ],
                "values": "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"
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        1.245445750643344,
                        1.016926998095652,
                        0.32124894289513534,
                        3.732543509537471,
                        -0.732443419025803,
                        0.8068241055320655,
                        -0.694023249463785,
                        3.8926633820079157
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8
                ],
                "values": [
                    1.245445750643344,
                    1.016926998095652,
                    0.32124894289513534,
                    3.732543509537471,
                    -0.732443419025803,
                    0.8068241055320655,
                    -0.694023249463785,
                    3.8926633820079157
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 20
    }
}