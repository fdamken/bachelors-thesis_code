{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        8,
                        8
                    ],
                    "values": "eJwBAAL//XyCA0tU9e0/vdwtqU3+db+otl3ujVOmP76CkkZX42w/NN7/aySpQ79jcK+orMqkPwqXbDHA/pM/2bMRz9ckqj/Cx5LHNaWXvzlvUkPugO4/t2/Iig+Xur+9tbz6NtWvP+lqu4t4EZ4/oJGNV/gioD8IaInlk6+nv/xO+TKuE6U/ZujSipFpQz9iBzuPFkOkvzh+MNWTue0/hOjyqLRrrD8utXvovVd1v6wJVixPvo+/sImNbeiHgb/XrtOk6YO1PyeDvBihH6G/ppBtqjrgjT+jXuFvymiHP1dB3fXO4ew/xmF1xanQlr8ei0kCCmegvyqisO5JiJE/ZNFdmT1mrT8JgXpHzD2YP9gIBcZciX4/Ki54chWFmT8jryGywU2Av3CvepKmwu0/K1uksuCPez+WN4CSczODvzApFgvJmYU/Iz0DMUltqT/S7Vei8wJhP6cd69YZO54/ObxXq62ShD+wC0LJDE52v9uzHSkdmO0/vtZQ4TzJFj+MbMsc2xaVP0N8yMxQkZo/+iSilgWbmr+3ME2kavuhv1OVUZOCgKE/XAUQwj92hr/Rk5hGPZF5v5kcINma0es/qdc1je9OpD8Mbl0/LyaQv/9dH9wOIYY/V9DnH6i7hz91Ur5IT2KaP8EL8vZUeoS/qcoE/W83oL9nTG4ZINuCP8T4Xbwryuw/MmgCEQ=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "strides": [
                    8,
                    64
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    2.3190314501415576,
                    0.47772675038473184,
                    1.4278411337261145,
                    1.981482013697287,
                    1.294206147708648,
                    2.6550247972183407,
                    0.991813332272783,
                    3.7112194779553405
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.348299418174136,
                    0.19494401747106394
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "values": "eJx70ZfJVm573l5hcvD2lSIb9jfsmG+g27RxP0OsssdRm037GfKW7+IT3LafIeFao+/1FnuDb9NXJh/ZYM8w9/baJ97L4PoUHHfO06k7bO9wKSqsuOKQPUPJwezUra32DMpneFSfr9zP4HHwbVTVrP0Mu1fqtetO3s8wYfJX17Bye5h9MH0HpuXEfTx03p4hwtnxtsD6/QxT9rR9D1izn8HvdZyg0yx7B/m8Cl6XzfsZgp+veFa6yR7uTph9MH3XLix4bXfdnoHF4qvJ34VAd8iyqbdssWfYcN+Vc1ahPUOIpFSB8mZ7uP9g7oTZB9O3Pf3xBM5r9gyv9hTJlgPDZcu+6z5F1fYMHbJrRTxXw8MF7j+oO+H2QfUlXHaMdey6bB8QLLT6369z9gx+wRYOj9YhwhMaLnD/wdwJtQ+mL1A6dNffhQ/tHcxavh6+tH0/LB5g4QkPF5j/YO6E2gfXdy5R27HuhD0AygTnPA=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            8
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            8,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg4OTgzMzI4cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4ODk4MzMyOHEBYS4yAAAAAAAAABF6qTKAzci/w6ERrJ0fgz8AcspdOCO/PzlX+dQjur4/l7w45l1Lij8oDI1WZ3rWv5lphrtknta/PaJP3pMycz+sxPL7gGjQv5WWNeP2J9c/4ZM7Jp2Z4j91XsRHIvrBPx9W/0rtYdM/SazSEVwuwz/UWdUcWlnav68um4zCQK6/df9QZkBQwr8+MkKUnm/Uv2nWEkqSK8i/D9dY0Msb2D+fyd11PDnSv41C+oGb8dK/UDJX/+fQzD+Me8Kx3jmdv6TMibbgfdI/v1dDwx66qz8l9cQosMjIv+7kh259Xdi/vZe1Vhs/tT/KhLNGxevGP2GCIZXJO7i/67TVhRJr0T/vFw3BxVfQvyUY9pA9stS/5c6c4O8eyb8ripc0ZZa5P6aJtuIKgdS/qXV9EUhS3r8qB987Ixm5P8sGGLFCo7c/94/VXt1pxj+pksT3822tP6J6ogDabI+/I7+iQdfy0b8ZfwrqvduuP0SdsKFQkOE/89pAKeqa2b/fyQJH+KjRP+syQbctlqI/7PWa8jDr1L8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MjMxNzEycQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM4OTIzMTcxMnEBYS5kAAAAAAAAANkI9qcTEJw/axknTyiVvD+NsGq4FRaxP0XjfB8cmsS/TE2egsJrpz/Hqwh74HbDP88OqznYDre/FgeVprqYwD8CLnw9I/GyvwY22sYN5LW/TUCbLqtjvT9kmYH2J/ysvxuopQoYmcM/WrQNt7Lmwj+fhNcQWLyoP2tpmBAKv8I/Guw0JNbFxL9WS/7qxQnQP+xmcChTCsc/G72Z4GBBtz/c6oY63HHIPyUU6Rh1vrK/SRK4RTQ3t78DwO3W1ZHHv98lJHS16LU/jAlpXEEiuz9fk6F7m+HEv8Z8tv911JK/rejXlp/HmL9+MdLLYlLBv3Opa9p+W8S/Iin+FLLMwD+qmAvySCrGP33THzDtsMO/i47Zw9fXsT9N4XpM1si+P0dv+/JZtrm/xT46Zy2wtb/q38frXFWwP1fQJ/3W8og/9L5xpQ/tu78p39+h3o6yvwHz/ExIcsS/VxftgePbv7/J/hnADr2QvxKLLWnH8qc/heVk+CZ6wL8FLhb3G5CwvwVtIcY3rMY/LmsGMJXper+pvfFN5w+sP9WvU4Xyrbk/uel1hoDAuD/9wzRr9yOwP8YMbqkCQ6A/rPi0+CC6qb8giiqrhNiWP7Hh30r4uXC/BPAZGGZPsb+2cYFd1KK6v0Lwk1wddrW/BrIw7Tguoz8FAGpKb+uiv2KazClRjqI/uBLqn2UMsj/WegY1dw2/P5hd4/Aw3b4/s1K3I7Ibkr94nAVxVdm6P9TAEaSX1ce/HycIzvBDrj/qF3LB0FPCv6TSpsmCCpw/gvmytVussD9gjlmfgMK8P8KAt73ziLE/K70vh6yHoT9cjy4pV5K6P6qLccGDl7e/bBbnCJRpqD8kqEgs1mG8P1zycbeEW2G/YWMFq/63xb+A8oUbTnibP1RO6o3df5+/pS5A9ulotj+Q9CiFmlO0v5t+rstcOKQ/1A+ydKzOpD/iCnCNpECOv9G5fVRG6sA/vQ+gGDIcor8k4i8wunKov72Qa5dVtaQ/7O+6NnDOzj+avWtlLPuhvxB25t90yqM/LlUK+mRXq79a/S/sNQK7P+pUWC15L7Q/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkyMDM5MjY0cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM5MjAzOTI2NHEBYS4CAAAAAAAAAEHVfEYrgZY/ALpO7pzwtb8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    8,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        1.3136415159165094,
                        1.998449934966116,
                        2.925398461508743,
                        7.291150231241411,
                        -5.872227024165821,
                        3.9571884352213886,
                        -0.8660749698805367,
                        7.6284021091178245
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8
                ],
                "values": [
                    1.3136415159165094,
                    1.998449934966116,
                    2.925398461508743,
                    7.291150231241411,
                    -5.872227024165821,
                    3.9571884352213886,
                    -0.8660749698805367,
                    7.6284021091178245
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 60
    }
}