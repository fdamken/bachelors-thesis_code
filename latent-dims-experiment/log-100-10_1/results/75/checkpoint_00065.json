{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        8,
                        8
                    ],
                    "values": "eJwBAAL//Q6wLK5vAe4/6o6ZR3GBe7+XrvsGfISjPw8uP5e5M3U/tyxlcGV/gj8q1Ap8HN+sP3lhsDypWZM/lTt9zjrsqT/ryS8Em+1VP069xwURyO4/m7KA4/91u79+R09UDrCxP3nYcDROg5s/yk3N1l1opT/wgUkvA0Kvv7dQ2xnkN7E/+FCecW2QkT+OusjnIoigv/ceOX/KpO0/uJhP39jlrD+xBZr6d5V3v36Xk4OvVI6/mRVRn0VplL+oYc4V6QW8P6xlwKdy06u/jlkH7QHjkj9GoneHHt+MP21OguLEnew/ftkX1Ffhjr9xv4hT95Kiv6ivIbf2x40/Bc2sx2OIpT8PDaRXVQWaP/YMRSnD/HQ/FElheScRmD8hW9EGYSaPv7qmg3OHVe0/2zmhOFS2Qz9kiMr4BN10v87y6u8DsGq/lS7tW+keqD8qVbD7lv5YP2KqkdP2EqQ//pA/f/OYjz/dPGGs676Bvz1DdbaP+uw/w3G4cK+yaj9WSLvg3umSP4JJfXR9N6k/K0D6jSSvmr8V14rdHhGcv0TZp8Vv/5Y/z89HeKonj7+4+zymKYWMv47suVv9oes/yIcy15plnD9N7hdFAUeUv0Tmoj+oFW8/KBAWThSojz+rVAYDnreiP6n+vC0pW5G/E4mUs7Z5pr+zMbjcGxmMPylJTl51s+w/D1EERg=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "strides": [
                    8,
                    64
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    2.7104385668440982,
                    0.4915443023020273,
                    1.696511375522724,
                    2.242541374874059,
                    1.338992622409098,
                    3.0442065231267943,
                    1.0012293162502452,
                    4.420464220876101
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.42068523345086034,
                    0.2762926935711057
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "values": "eJwT0Eo8s1ntnH3D8arkyTar9zuw3v/BZ7Bhf0NPQc7ExRv2H9hlybLv4rb9DHOmbX08q9K+waCv+Ln4BnuG6uZm7hNL4foWvJOOlYw8aP/A8XZgqdhBe4aCyh0tx0vsGSa7Sif3LtvPwMKkNHXzlP0ND0paOZZN2M/wYE0pp0qVPcw+uL5TvSmX55+zZ9h78K2I2Ib9DDIlCncCVu1nWPO26snBOfYJbpvryjZt2s+QwseiZ7rJHuZOuH0wfSvndmnVX7NnOLFRJeb3QnuG3f/rfm/fYs+wZv25p2JV9gx6f7pOb9lkD/cfzJ0w+2D6IgWPcX+5Ys9wK9zKKRBor0Ih49VL4UD/fbuROGUVPFxg/oO5E24fVJ/DrEdz9LUu2ytcW7cwIw7oP5aJwhqy6+DhCQsXuP9g7oTaB9P3J9jw4z+fh/YN9t9Zmj2374fFAyw8YeEC8x/cnTD7YPpkQv6JK5ywBwBSwe50"
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            8
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            8,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MDU5MDQwcQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4OTA1OTA0MHEBYS4yAAAAAAAAAK5FeR7Shce/h8xzTj/Nkz8gHURDStnAP7XYPKrHKrw/Fp9Xkx9jlz/Bh21MkNbVv49vusU7Qte/+WSc6yoUjj9WWMIFWAzRv0yu+9gfhNY/xEAmjQMA4T+5NGVU0EHDP2Q/ZVXEBdQ/Wa68JAp2xD9lrM0Sg7XZv3RTkCwzyZ2/3RbKV2zyvL9vJAeKx8vTvzo9oTXk48a/qhQexvR31z8JvZtrZZXRv6CtArXOJNa/lcAXHflT0D+1vs89GPmtv6a89sG3IdM/A3fy2iOLtT/j0IGLFi/Pv7DZmmSmude/3UPTLb+vsj8rlEAyF6TFP6Vqa3JtrLW/WHd9eukO0j+NAZ1t3WfPv3W0Lo1mDtS/0T0/zEHXx78E73RdwSW8P4z1DO3hJNW/rI/0neYe4L8t2Waka6i7P3V4nyta6q8/zvU8xEPQzD80RXgQVkaxP8ar0aPd85m/spMGS66W0r/wHPkdO/2xPxUTIjAThuI/MfWtEmWv17/TWqZU5nrPP+tFxwjmtKc/BH6u5llH1L8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAgAAAA4ODk5NTI5NnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYCAAAADg4OTk1Mjk2cQFhLmQAAAAAAAAANPUXEPJBZb/MGh14hCS/P0UxYuFxpbM/mwH4M8rhxb+MHqowCk2iP9z0n2YyL8I/iryeYjSeub+OMhC7aODBP/2AcmZ/gLW/0ovQ72lzuL/bH5FXB/O/P38CNyRwDbG/p8cgH8bgxD8704jLYC7EP6Ug5L6fnaM/EDQTJbgGxD/O/q84hA3Gv/5/ecHdy84/sanrPAFSyD+Oq48JvdC5PwAhAk+Kuck/JbDdQdFNtb9UIK5ukMa5v3HiaOuD2ci/peUZnRF4uD+Q216FnbG9Px7mHJBJKca/IG26twougb9SLVYdiIKhv+KBTuAQmsK/nCXm7iyjxb/VRXkpYBTCPxM9gS9TAco/odmaRJv4xL+Lnq/sM2e0P8LnuDoZrMA/V/7wG7ZFvL+2nTCQiT+4v0UYvhS55LI/649uIty2lj8i8IR8s125v01Q0vEE/6+/RAd7Yfa5xb9vsHHVnzXBvwPJ6XJ4/nm/Y08bu38RrT9aAuAM1cHBv5Q+QJx/Aay/1YqlsYlkxT/1n9rv1feQvxhKXbB8Z5k/A5lJrk49vD/yumyv3E+7P2oufYQ2Kas/nFWOdTbbXD8YeqJK2diuv32pkQ4oNok/vDmHRMo7eD+M1A9Bwt6zv7Pod4YwMr2/GweeM8Hmsr/deIk2AR+cPy0l+/BtmZu/kOS4ewmtpz/sQ9ntEvquP67q/a5pzsA/k2btx9RNvD9VJ3mGwIugPwfS+5mxaL0/+PSVj+mNxr9SC/qPVLGxPzsj7NV+m8O/TkbRJRLNkT8sR3kZ/zmsP1q3TsjcUb8/Rs2s5k8YtD+134Rq6NGYPxI3IVKzIb0/UyJq6t8mur89Xv2220qjP/aaUwN60rk/ZILUGQAkgD9LPny/rP/Gv4cKrnfdOpE/fgYo62xClb885jUfRvi4PywKH6724ra/iYeD80gznj8Em57GZO2pP6eMqYuGi3O//QXgkVDBxD+xlWqN8/qZvyFUHYJyka2/9YP/ijotnz9e1TkiwobNP/Cs/SbouJm/IIX0G3lXnT/gch6orDimv6kWOsPZcrg/bHpiBB2gsT8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MzczOTIwcQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM4OTM3MzkyMHEBYS4CAAAAAAAAAGfdKvVNX6A/yptYxUBhs78="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    8,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        1.3186178610839272,
                        2.032997738628008,
                        3.107595089563237,
                        7.4891194410811,
                        -6.048496050086783,
                        4.127720749201792,
                        -1.0348580527207576,
                        7.908674886777917
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8
                ],
                "values": [
                    1.3186178610839272,
                    2.032997738628008,
                    3.107595089563237,
                    7.4891194410811,
                    -6.048496050086783,
                    4.127720749201792,
                    -1.0348580527207576,
                    7.908674886777917
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 65
    }
}