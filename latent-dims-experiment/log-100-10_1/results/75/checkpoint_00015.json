{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        8,
                        8
                    ],
                    "values": "eJwBAAL//WQvJ2nyAu8/SuLkdoPVjr9GFbJQJlObP9mAmoxixI0/ZcAaJjiFgr+MsQlbCWqUv2sGcbZ1d3Y/HntSU2ibnj9I/dfEmThOvw433xC+O+8/uq+Utjnxlb/oNGX3/Ad1v5viwzlmyIE/6WNcPKx6kD97vft5WaOMv7v2zqmPFXu/bBWTiTtuNr+P/aGad9mZvybFV7i1me8/xXh+jeRegj+UIRjL2cgbv2Zi9Y3WBpu/obGIqsh8eT/Uv6eX4+iPP3Tjle8lD4K/vccizOqhYj98RCN402Q5v+2D6WCK/O4/MFwNQ72pZz8A6jp69WWEv4ObQcajUoI/xBX5RkTDhD9mFyb/94JuP2x43A1Nxna/TGtZzEDxmT/vaDhHRPSEP9G6OSy2We8/YOf8UFXNdL9fH/CvdMJ2vyJnJCYfJoA/BSMM0D24hD83dvPm7WaRv+0eDG0vtJU/0VzhJtZvhT/cl+EUrv5av7Y1cZXd+O4/SO+42ZqCX7/OC+JuY7KSP3pGHjL3KVu/buQplkZMaD+knCds7R6Uv/ZJUbJdL1W/N1nGGMVGVD9j0x38bshfP4k9D90riu4/k8ZuKA4vl79qT1N2DySav/4oZz17SZM/VqKEY8nLpL/lBWENK2tmv0BRcSjPC4u/ci+kzMwTpL+gzTvBF9aSPxvxT1jf3+8/gboC3w=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "strides": [
                    8,
                    64
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    1.0820300551436914,
                    1.0412307525369038,
                    1.1950420051869584,
                    1.0380297658005608,
                    1.0175038733875204,
                    1.4194799567637688,
                    1.0479164995441481,
                    1.1848064658569235
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.2504888329601581,
                    0.17964833781849812
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "values": "eJxbIrRgyaW8B/YGEmv/q6Vssi97PM+xqPbQ/gu3i6bEJx7bv0OIYda8iAP7X5heuHlk0fb9a+JutZ833Wd/QDXC2bjgCFyfz/LnAs0dD+1vyLbtkL541r5BtqdEsWmTvUKuw4mt/JP277h9ZNNzhaP7TbpMTv6asc2+Yb/7wiPnlsDtg+nLS05Nvazx0H7JG5OKpjMH9vduWlXyMn3J/m/OWflWQqfsub5+CZu2esf+a29+nzppuMEe5k6YfTB9CrfO3Ivif2E/4dr3jf5Jq+0dHmjdqpu/2p7hzawZDonpQPerCoRNOWAP8x/MnTD7YPridnzZcon/qf0fodBXL1wX77+iOXtX4e5J9gX55sa/puyChwvMfzB3wuyD6ftxTIfp1InH9sd8u9R4E07aX9j18qp++wF7WHjCwgXmP5g7YfbB9LGUTF/JovLcXuFJLP/71Qf3w+IBFp6wcIH5D+ZOmH0wfQ9Wx2Zrn7ppDwDlMxMj"
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkyMDI3MTY4cQJYAwAAAGNwdXEDTZABTnRxBFEugAJdcQBYCgAAADEzOTIwMjcxNjhxAWEukAEAAAAAAAB7RgWouaLUvwRgz+qWlNC/2pt9dAs81L9vyGos/CrWv0g2e2yhibE/TgvUhPcxoT+hHSBP0GbRP8sUo3G4UtU/FJMF7Ly7zL/CyiGd2WjNv1hvoTytR9W/P4RpgTSuwb+Kp9IrqrjNP24ZBRWlsc0/v8qSxFHZvb/nxPVLVLLFP9gWAbFdj9S/5hhkROGbyD+olYeMQcezP4t1R4vEY42/pDgtBkdT0b+IIQtj2OHBPyyy4NQ8MLW/Gmn88eCPwr+kL3tNspHUv4tRO8/BmdG/qy3FZZFY0D+VDnhlAhbJvwtzT2Wzi8a/jip8P/ybzb/c46zaB9zMv8FLWMRoi9C/2hiy6RFuwr95JoanuHa+v2dnj8BtJrI/2ivHxrBdlb+32/gHzbbRPztLYoQHo9m/cZ0Zj5eLwr+4IRHeIEySv8L6pWSdA9M/nK/tBCZYzr8VtMjvvsS0vwD8dUEz5MG/ke/zDvKV0j9dl15YvgDOPxYIrL0Ggre/qMUVsqUN1L87OXG+LsO1P35mIqnKtIi/7jQPwG5YyT8eh5kHeO6EP6O4lWjFvdG/oyfiSBHamT+I4SjVhUCDP31Rusmn6tU/vSDLgJF6yb/H095qZcmuPzp7O2SeXq+/aIVcVs+gyr+g8Ww1Lw3Jv9na+4Dmr88/4kEJb/kvz79+MOcIEVzHPxK53P+7WXs/eceSQO9dw79X17JSZErIP4wDrZECMcs/FYEd0yD8oj+t4nZqxtnVvyY/NDCetMA/jHzDPebG0D/jbl7+1Na6vyMYFYEDm9W/t0pg9OqYvD9/qmLkJiDTv2n163KVcas/mYdFJdVIsj+rgejvLvHMv+DL5jLZZcO/RYI4ETSRpz9ikZvLFt+uP8jyrmldobM/4sSNcpP30L+GjW004l7SP9lwkqD6J9Y/XWzoJ+Bnyb9zYfI/RIvHP7YI3YeKLdS/0B40GWnq0r+gCUS68Q3UP7Xa7gYgy8o/eZ2Fcv7a1b/JpOlCpLGKv+9Dp1es784/1vRuaxP7w78DCeXhorGpPy2n/8ZPY7U/vHZHl0Z32L/TmQLPVpXGP7q5X1aAZrC/24Hx06I9tb+U9nIDtknCP5IaAxxl94m/bEH7herQgT+GkR70pDXFP3atk+YkcMa/TTn2xV9Sur+waFW8mwi7P6h/euibasQ/UO/+SnXLt79AZbwpIG64v4wrZWBmctu/7lH4DPua1L/dGn5ydEjQv8zSN42ydsU/6sWA+ACnzz+STGPNzhfJv/gO/6opocs/oU+XUv5+WT9zosfwVCmoP/BfCqYwxMe/Fg1aZPody7+uX7n5T0G8v+dBwazfpcA/o89GGZZ1xz8ecxA4IufDv0kJZXF5itM/cMnD2Xbgw7/XA/5cjDHdv3HvD2A91NA/3ka/RU5Dzj84QW81lgG/vzSf2LUpVqy/ekh/EDUjzb+J/CipenXKP55v/QSIhKM/YsPRYoZRyD91jGLZk/S+PyuCY2F+/si/jxyypX+K0L97Ryg7uISiPwEUs1Hp47W/4un4Hooc0r8K2PY0sL55P2dUWOx6slc/2RLuYivhtr87uoUEvgqVP6J25LGoDpW/eI1oSdzXuz9xjgjXNcjNv3caDFJPocY/QJNbna1fuj9VocvfYh2lvy6ZnhXf/p0//d7FVK7nwD8HoYv4ZIarP1fUcLoCuM4/OXiXMwU2uT9g0BkE+v+2v1ELsZwAjba/Nxd+TxG50T+D6Yw+TWagv1MWcQ3taMa/R5lrVbsw1z++QuVGWG+8PzR+IaL+WNU/x5fsp8iH1T+dLtDXo0azP+TrSBHQ0NG/+iiJPzEkxD8B1drQOW/TPxNjCu1JaMk/ZQFRtp18yj/hCLQnzeO0vxTIfceveNa/siwYur9Q0L8EdO/AACHcv80F8mVXBpm/AMF+6rhsvD9j7cnYcuebv7xJqUCSA8C/tzLvMazTxD8W0xQdjX/GP1C4HXJRmbO/Lb3o9111p78pofbzug/QPyRGKqrmiMq/aNFn3rVbnT+ygSIYk9fJvzzHrhDV3s0/FplcFLOLvL9nbm+SZQHWv8nlGp0vLbM/mv+YoTz0wr8IJrFzXHTGv2cJ5A78cMM/W+0H3XvRv78wjjJAIg/DPxo1pF9WOMu/sFTqZpzf0T/LyJiy0dGtv4PZuL21uNK/o6VnHDd3y7+EqLgCKXvUP9ppTaj6h8o/6q/LsP6NyD9T16qKrhzTPwsuKSIrrLW/0u/E+NpXxb8UPygtx5vPP0U+qG6bNNe/DqE+NqFdyL8dIG0z8p7Fv9tg1s83tKQ/SoYUsDHexD/j6uozCUyxvyYIwuYlLcs/Kngw3utHm78j53VwaFTBv+qL8pK2E8k/8VeYl2jX0z/hM+J2bkvQP3gDbDmH/9C/XPovyG6vyr/77iPVdLy1P4ldksDA0co/KVnkyVp9zr84ZfWoAonUP7hsHGHs1Us/TQxUCZEozz/DG9Qqk5Ckv+y8LqpfHJ4/Mdw6FQA5uD8VwCrSJ9PQP/bodTByZLE/0QlTMT0A1b+a+9tuoavEPxdBd2qIQdU/MW1QEI/fwj+lVwEbur/QvwlS73wJuoo/VyG9vT+EzT8/eV3scArKv+BQcyZzLJQ/SgTlipR/07/ckH+xePrUP1jLSLeRnK0/eisKwRikob/fvBLwDnPZPyj//X0MIde/Aoqxrb/Psz9lGFvAqgnBv+9FlwmUM8+/QoEg89rI0b9CWaXy6Seyv/hDW+2MrsC/VYxAIieUgD/9Odg4gdc6v4T8nRcZeta/pfr8s1jsjT/TMAhl1EO/P/jNubQspc8/E8R8ml2HrT+aqyZ0DzDKP3lDZ9c2N8m/+ljwCrIMtL8WzTpOlgrPP3X8rkYfU8G/zJgz96i6u7+hVxwrIimVP+Q/a92cv9S/kEW7xKDjvT+b2m/U96C+v7XsSUHZOce/PFmc5/830b/XvzTLY5HQP4o0yc+KR9C/wF1zJwvDuT87LvBIZn3NP2sPAdsgn8M/P9mCdD16w7+SWk3W5pzTv0numoT3Pok/9K5t78sxtL96P5o7eo27P8aKBdwdzJK/WPx6Yix1p7/o8T21w37FP+mmzThBEda/FrfG1jTnjr8BQkUMFSKSvydGIg2Aq8Q/vZ/uXMG0wD+axUPnNTDNv3ykvSPBm7Y/UTw7MRwF0T8+fCWT9cLZv5mr6Z5AOck/FQh2/Hw7zj91W4OHxTDGP4TcDqrAI8u/SZTvQobgwr/2hX4N0s25v37mOc224ca/LYRAPy8Tuj8kMh7yvqjIvyVPOH0JFIQ/Ng9oALpmuT+8DIdgzTW7Pz8V72pjqNa/AoAAoySxyz8C2NQV1gLRP9QcNPHECKs/v+onKYjg1b+KfJfiSpigv84zAArHfb0/x0EV3/9T1D864o5cvxrGvwPrRRpsyoA//y04OLDmzT84xBz49lSsv0Bo/HUM/sS/d1KuDD+Rtr/p4wtLGlOsPxbUlDycCNS/FqR6z51OtL/ED8Piz67HP9e3RJ29O7q/wNI2nKEjwb84fzqjGvrRv6ifVOyil9G/azYkyRtfp78ARodvZ+bEPwQRajZvx82/3WX3d3Juw79f3zeonILWPx9UdfhqQdi/+W1CpueEyr/xAg0nXIiav8AkQiIXScI/TeuM4fbFqT+RXbKnd/XEP9VPUBHqVIQ/9mLE9HzzzL/lA2KyWQjMv/KDUOdlY8M/j4QSYjdrzT9nLUKVrybEv6DifOGJO8E/SOWaZjcJcr+zewfet2vUvyhja/VuV9i/RLsLWsCouj8+0acQ7DCcPwEHyXTHNcY/rYVBg5ZCwb8cKfXjis22P1md/QzmP7g/AQFy4I+gpD8iBU+MijPPP04QeZcUAbk/nwFgCaN3wL8AluVe8pW1v3lVRjLFwsG/IeEgY73R0T9vuMY9Qvm9v+BrtRWNm7y/QtXcNjzQ0z8n8/EaC1Hbv7/PGhFlGLM/1esJ6+2zo79c2f2uNk+2v4YNk5vNo7Q/b6sTp6wU0z/xZBQbkF/JvxJyT/gXw8+/5z12HlmSuj/ow8AkZbnQv4wr0ygE8ci/4PrTTRZ62L//H6TWiEPSPymJJY+OmNK/mPllFHf91r+L0dHCe0PCv/HwAIFv1qk/e3aSliEjmj/4+k1rTlq1v6WVJtxTNsy/TYURH1T4r7+1HrbJcdyoPyJb/vynStC/0LqRshGM1z8hcLayzb7RvyRzeg4B1to/57b8l0mntr/EZ6n6LPbJvzr5hOFNCZs/KcQtQhqKzT9YnLZ+XdW7vw=="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            8
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            8,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MjQzMjMycQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4OTI0MzIzMnEBYS4yAAAAAAAAAGA7wx3Shce/a5VZqEG0Rb9WOyS+XofIP2AqwkEPDLc/NJHkbaOSkb8j7igeNEfTv5kGu8Y7Qte/7nVyesz1ur8386IGWAzRv40Z8NgfhNY/oZfpdJbC1z9mvraP0EHDPxwOiBy6LtA/If+4HJqhlL+idCzYeN7Vv7n0k7R1zra/6ZrisBjvoL8XZnqJx8vTv/75ywyIVMS/QRvPdDxZ0j//6a5rZZXRv2OE8XjETdK/UA13wt35yD//6uJQGPmtv9DAwsC3IdM/lxO4M1xaor9kHwiZFi/Pv1dEvjpKKtW/uN7wLL+vsj879IngXoXAP0Lwu1l3ccY/g5/vQ04ywj8TC+TfSkPSv3gdOI1c382/FT8SzEHXx7+B6i9ewSW8PwJ9HO3hJNW/BO3dbwBx0783LzVYgLacP6H5W5FXUb8/6xyq+XYDwD/aZZulDWW2PyV05AxourC/jXIo71ve07+s5jcgO/2xP6qyc1ARXt0/F7Vty+Xjyr9zj6JPz0zSP427KKnjF7Y/IZb+fFRH1L8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MTg2NDY0cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM4OTE4NjQ2NHEBYS5kAAAAAAAAAEm1gcsyZK0/1cIeeIQkvz8BE4BrzYDBP5Ja9DPK4cW/c/QMGTMfkD9mIMRnMi/CP3ZtwrTsvL6/hi4Mu2jgwT94e0W4N5+6v/IhyO9pc7i/7LeVVwfzvz9XfzIkcA2xv4OYHB/G4MQ/u/uFy2AuxD9kCGbFIlilvwEaEyW4BsQ/9y6tOIQNxr/ZWb5FscC5P2Bw6DwBUsg/Ih21KCjppD+m3gJPirnJP5xR30HRTbW/I3qqbpDGub/+KWXrg9nIvyy5Be/Jlr0//eFfhZ2xvT+p5ReQSSnGv/j8kte3x4c/9dZTBG0duL8Ls8/K+Ne1v6VS5u4so8W/rbJ1KWAUwj+lEJjdmuLEP19RmESb+MS/ayuik4ZTpD/3bZXRwRq3P3YY+xu2Rby/NjwpkIk/uL8CErgUueSyP9IaYCLctpY/4p0EERUDpL9lNM7KOh61v4PFEHsL+ba/fANu1Z81wb9wrn7dgnirP7pXCbt/Ea0/lAbdDNXBwb8M+7/4DsShv0UqhPA7W4q/iJTF79X3kL/i9O4hCLa1PwhRTq5OPbw/Mr1kr9xPuz9BAIKENimrPwtodZMHlKO/Hl4rm5XIvr/aw64OKDaJP4vzRkTKO3g/J8IZQcLes79C5nOGMDK9v0pBmTPB5rK/KpSMNgEfnD8mOQjxbZmbv7S8tnsJrac/hAj07RL6rj+EdQGvac7APxbB7sfUTbw/7NfSp3Fytr/h5viZsWi9P41FKSmqv72/EsD7j1SxsT+ENuzVfpvDvz6GySUSzZE/yiV+Gf85rD96r2bI3FG/P3NQr+ZPGLQ/tw6TaujRmD9I9YBSsyG9P99JdZgnCLW/mR8QIk8gvj+6V1MDetK5P6MpwxkAJIA/+HPo5L9ltL/287F33TqRPwOrugRvhr4/Bx4zH0b4uD8vzR6u9uK2v+79jPNIM54//r6ZxmTtqT+b6DiLhotzvxVEzmb0McI/hr1djfP6mb9koaSCcpGtvzlDBos6LZ8/6RpNWDJVvD9N0Qgn6LiZv9wE/Bt5V50/WwwiqKw4pr/FZbQ+0mqsP1KCYwQdoLE/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MTM3MTg0cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM4OTEzNzE4NHEBYS4CAAAAAAAAAHFuHfVNX6A/XnNaxUBhs78="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    8,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        1.2472345382026433,
                        1.3965950829564497,
                        0.015201773905188842,
                        3.1357276825818956,
                        0.259421009619867,
                        0.40692390523738525,
                        -0.3245452566849779,
                        3.476551793408389
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8
                ],
                "values": [
                    1.2472345382026433,
                    1.3965950829564497,
                    0.015201773905188842,
                    3.1357276825818956,
                    0.259421009619867,
                    0.40692390523738525,
                    -0.3245452566849779,
                    3.476551793408389
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 15
    }
}