{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        8,
                        8
                    ],
                    "values": "eJwBAAL//VnEoikWL+w/IRkMk9YNeb9EtydPr0ahP36J2JOz7Ha/EdBL2caEmD9Fd3g2dTK3PweVvKeggKA/Hs+z8EhFvD/iT30KuZWwv4c5EMECCu4/y/beH0mswL9J86jidbfDP6qM0R1bvbI/hCzW0Wt1V7/IIUqtsiynvxK/q8U+WNI/ocQNO8/ybD9cSRCOE7KgvzwCB6EUJOs/mKCA0wybsD9UpIJ/kUGHv0fkFZyHhVw/GS2HDC3Qo7+O33N0Zu3JP1B9/6nja6G/54a8cXgAgT/ZcJz5qJ+aP07yNNejoOs/DeeCpFMgnb+m9VRuw+mlv6OEpF0A2Yg/ZphVA9S4tT9GhNElRjDAPykWBH3FR5I/htg5tVrvjT+9dUb+6qGbvxoEHo7RLes/OovkTSs1jz/o1IIFmMOVv/4GuE83gaM/LExLWqL8uz/M2n1hbHJgv9yAoHUhXqI/nsIm76nOiD9PMdrw111bv9NbnQoBA+w/4G8tySlDcb9Hpqkk/wFbv+oxfTJUysA/Mpn1pujlmL9U6fzPQW21v8AsjeRAWq0/cnY03Srrob/u5+96tpehv/JiYqynkOo/qpPV3Mxowz801qkB076GP1ClOAeTdmg/APXBvfCFpT+fEybK0g2nP1woE+82aIG/MZykpobup7/1emfeMCeMPy0pHFJHnuo/I+sEOg=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "strides": [
                    8,
                    64
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    4.954262754831978,
                    0.367810400736844,
                    1.9878159261581627,
                    4.1995620409228165,
                    1.303188610314344,
                    4.76406785492664,
                    0.9350875489809535,
                    10.087947312331986
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.4317863772628971,
                    0.19019985303092518
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "values": "eJwzsO388r3ohD3DOs/XYT9b9jccErjx5OWC/QwzXRetCl60v8HuFCvz9p37GbrkJvw51rbfgXN/vs3fxfYMJ+oTbvctQehr9LYPU1tnf6DsS5XVok32DD4+BmHZ0/YzsLW7mYoA6QBWmV63ZnsG5smp+1L77RkOFJu4NVTaw+yD6WvIscp/1nzcnoH7dvlr4y37GRas2CXEPG8/Q1tB++yUpfYNf5Os7aes2s9wLYPl0poN9jB3wu2D6VOXtj92+rI9g4amq8mnZfYMevnb2kO32jOI2WofaZtsz/BES1P7wgZ7uP9g7oTZB9O3w/vAIZ1L9gxfgsqEYjfsZ2iosMtzT9/PsGGzYuO1ZfBwgfsP6k64fVB9DaylZw8znbdn4Ok3WnXjmD3DmjL3x4Ir7eHhCQ0XuP9g7oTZB9W3YKvDHZ2Pd4DmGug9cNi2Hx4P0PCEhwvUf3B3Qu2D6/uyYG1P2zF7ALay47o="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkyMTI1ODQwcQJYAwAAAGNwdXEDTZABTnRxBFEugAJdcQBYCgAAADEzOTIxMjU4NDBxAWEukAEAAAAAAABDpr+JNLfSv8h8aQkcgNK/a6lLajSY078v99Cs53zev0u7KtwZt6M/23j/jshltT+303JZpwrSP14GFzuFH9I/wIYmTILO27/NDxdFCpqkP/ftLMCYmd2/OJyIITyPyD8CeghRNlfTPwUhIM6zU9M/+y4wjcdxyr8i7FOnFSvTPxz9qH9ACsu/GYHkLzNUxz+4n6pVY9nCP+8QVhgZfqw/fjB5srXmvr8EWBXrmtfKPyAQvhPgxqC/tadaFvVSuL8IwghcQZCxP3QlswUVAOS/jp8NwCAb1j/aDYCkPpXTv3SE88HBk6s/y7jSrqTVlb/fNno5Go+9vxCP+WE8x7u/ggcHpZ7wsr+in69nCoPAvyASGow6874/nOlI5Dgksr9lrjhjXHnXP5v8Myd44NO/ltogjOlDwb+pzu7G+bCqPzdNwYPUoM8/5emlXqLu1L+LSS5q03K8vzrVQ2H/74Q/tViJ6rD4wT/RTCxDdzqiv4tOzcbFtsS/BFnWSHR3x783obKhYP+/v+7Kdo7sXZI/pcd9D6Cmuz/WB2dSOqDQv3PyxRhs9se/br4JMxnfwz/mTMkE5cC5v1LcFb/QRtU/gmMKY3kdqb8HKR+/2iDVPwDOvaR+e8i/ZaOfn/D5s79Om15I32fXv1/7wEKu2rM/U64+1YGD0b+9Jy7EBoXDP2hYWWYBDsQ/BkmQFkEWwr/TDzQtWnPEP6zXWl9U6ck/UI5YEoRf0j8hENZznX3Wv/xGADxM/ME/pI5Rh/oYgL9yumSDwCizv7mEZ4vaPta/xXuTHUcovz/N++fZT3zSvw9HoJTpypC//9NJTjHYtD8BwS3bgKnLv+k0vZpNNLk/f1nBc652sz+rcp/skCPVP7xi8sNl3c2/atEbunRy1b9RB2UeC7vRPzpZ+EZrZdA/BOlHfsqmtr8n0a8BOrTDP8E9Fjz21cy/dIAah6b02b+X1I2zGmrTP57iqjfDmNA/OANfUyc31b/Zy1UPz7nRP46nWBX8p80/bc8LoR3Sx7+zx9m1WtCuP09OYRXb5M0/1DtcBFq7zb8uN3DCOg3RP1tPA1qrHsA/0Dw0vADNt7+XKabrpS99v5IOlDsqSbq/wXuxNtQNrj/6Yd/qD6XRPyaQZK8amcK/mbWumC9wuz8VLQNdoAVyv1ToZS/IKre/pnzVBwJ2kT9eMAoaKz52vzdyMiKFA8y/csZvfTil279NZ1N+girKv8GYiSTF56+/d1yjkZpAyT8GNxzwaLx4v0uo2TAkk9M/KbcEp6HNqL84zzYUYxTPv+7L9dojfri/YXB8ZTDC0L+n7lskStyUv8PUC5kVRRA/+Oz7U6w10D8CbTzzNGTXv0z+aCvUj8s/+wGROEMDrD/XK8rm5B3ivzL2iQlcI8Y/c0tUqItNxT9mVQd9t3jWv2S/0Brzk9E/XkQZCATgs7+1lhwHFSqmvwGYoblAZsA/OXa0TdgJxz9SaCMqVFHDP1Ftv4+7IbM/eiEKk+CPxb/lHvukmeayv4xIzrapa6y/jQe5FLN40b+MkCaSw2GmvzhyxKUwcYc/Xan2i4dwub9SpqylLkifPwl0KVUZTJ+/UUJ2ZHs2kz+hVsbr4w/Pvw/FPR/h9ac/OORlMCnQwr/xlNcUVf2fv06WdxpUNJW/L9v9fgBAvz9SbViUe4SzvwfULXyGR9E/UXh7Dqmmtj+He2MnaI+kP3HXdMpcHLm/jYu3Zhibzz/bqeDZKY+Wvw03tnNTz8y/0QeQ+Stu0T8rqcrDfjS0v4fCTqzV/NU/de+ooUkuwD8umiT+/9W1P43koxundNK/K0l8ppeKyj+1TFbpVFnLP9Njx+mbIMg/hRQLJ9uGwT8uxzFbcWuqv/KUKjPQLse/cisT1UQ80r90bfnG18Tcv+UCRkVoEsA/85Axb6S+tD9FCpiJIbDGv1lRrGH0+6Y/iSR8mYvavD9h4wiH8+XMP6W+KfAUzbI/28iUMhJV2b/KAy5B7kLTP+R2cp6wTtS/5MM4/8DJVb/mIE+YeFqIvwCWRXgOYNw/+xi22lb8ub/Vwyp2gyHBv1qgD3TTnbA/XKJW1GQ6vr+e8ciEHfGrPyDcCoxpCtI/dyjGAmwwwb8yIJsrdMfBP1nxpdCTQsK/iRJlxCui1z/paujlQ6rNPxTMmV1PUty/AX4mVUFOz79d2WpzZoXbP+koCMmHp9S/1zl2FmX0zj90lph/cpGxPyi3O6A/Wr2/hqw02Hxu0L9ugZwVGVTOP/pj74MaZ+C/IiEE6Sjnrr/qzs8S+F2Tv+1NNfCkRZ6/XAFg7Du1yD/10H+oSfevPwoYIKkbVsc/eHCQXkfrlz/fwYPQzUPSv1W1Wn0IzMc/xU8E3md5tL9wTnyroX7TP7lh1lkM69K/2Uy4VO7wrb+IRN9PiWq9P0Le+9RuGcw/BdKEETz4wr+nw/CZ5ozNPwa5BQpAOIY/aSYTjx840D/Cu+Qn7oyePzRd4imWwLm/pu736/owyj++a0xByKiyP8fyXrL0AbW/olWYdh572b8Omh5a82PDP7JRjM0538k/v7mxvFAsoz+mYxKhsYnIv4UWSA6nNcm/D4UIO6+E1D9hdx3YwsLIv5muGk6RPLy/WHq0gQods7/l9Zxrl3/QP2caU4YdmLe/n3lBmluUvT+KHlxc40jnP8cZcw5Cns2/4DOT4G6qzz/G20vGtODEv8frOtkszci/8LVU1K8a2r/Lm4Hdhz+uP0oBSg5NkLS/1kVDVT5ulr+nr0nX80yeP3gHg+TlRtO/f6it6O7icj861WyYUAjGP998J1DGPsk/XGrU8wpTsT96pXkjRSLUP3j1MRjjfNe/t+EsX8a6u7/6ZWbBL6TIPzor2kVxC8C/UQ33nHNiyb9ObChX7uHTP09LzrNi28i/l296XI1lmz+WrJUnhifDvyGM8wPPYsO/N3EWlkcZ3L88q83VOjXRPwyu5zivKMq/uC0hUGdSvD8GKCrQ1tG+P47ZBOGXKqY/taEIievBxL97Nw3MD/nSvxFaHGbs3JY/MZvNi/yTnb/cIzUCcW9jv+i6/Pg1V7I/T2RzsGkjcT9ABHCrsmujP8eAgVfG/Ne/w4k5M6fYdL/6KRSz/8WqPy2jaLfCTLI//WuaNvv7rj9EGMvSh+jLvzWIRPlkDLQ/HrA3c5lwsz/hBsV+mWbgv/4BUGtLEM0//4HSo122wj/H7O38bO/eP/5p8RX+LcK/6LkSD9iYwb+jQm9Q873AvzjR58rAuMq/AgL1N2Ue0D8xrNQeJQ/Pv9IL8ea9jLk/it4PZcy61783PZxoFz7UPz4cCMXT5dC/pPsmdb5KxT8J3vCZwVTZP2/3NDi8AL6/vcPEXfBLoL/RKAdIW8vQv34oUprDF9Y/GfRMZ8x0xT+d+U3hWjyXv9tsD2pERce/sxpbqu3wxD87v7FCKWfPv5M/H2FetsO/NFdR4+IBtL/GkX1K5ZnCP137fJcry9m/ReBOx8k7yL9CgdUCqjSzP3hFrr/g3aq/L1lztS6Zur9mtEmt8Z3Sv+VpmODL89C/OJlpXO7TcT/N7bfXzUzLP5RvYXCGxJE/OmNKjCC2xL/hRa1Kk1ylP+aIge6Tnde/pNZRBqd10L9Y9SYK16qYP0N2kG4ZT7a/URoxM6/krj97pPC8JT3GP/uJlXpjcaQ/YdfytnIcyb9hQYwMYDfRv1MjDk/Myck/K4c2d+Wyzj9sTsVLzqvPvzyF+q+6xtQ/tsmE4vHKsD83yMqFPKTFv0wIDoUxTdG/b1oG36v6sj/3gRdjmJrBP7XFCIQg4ZC/E7gzLN/1pr/ficpen3u+P4x7nJW1FcU/oycuNybkg79zS3mD9uGyP2fM0tSMIdE/xUtlqIEHrr9UeQYgsUR3P8GBHB9OM9G/EAcyG46EsT/iUN+7LUu2v7T7GviDsJI/NfyUMGQs0z+woOTPAL3jv6xcQdZqftM/AyszkszVqL8dxkMzSv29vz/xENZMwoU/28NGWDzX2D/G9bev4hfIvymNgqXTwtq/CvcERrUhvT81pGiA9HvWv8J1p5/uO6w/gHnt4wBm4L/htXWpBIm9PxNYETVjvrm/QzbUzZWC0r8wwDsKvzmoP+KAtS63t6Q/fMrOwLltrD8C7Ripqum3v0GXwXXtz8W/gd7I548Sxr/G06iyBTu5P7um97xFvsy/uup+V4LJ0T9iC+4DrznWv6YcHr4KQuk/HsGFNFusxD8+lh1yagDBv3iZw/fpR7C/JvQaxKZe2D+WEZFNAUa5vw=="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            8
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            8,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg4OTg0NjcycQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4ODk4NDY3MnEBYS4yAAAAAAAAABo61YQ47M2/XJNGyyKOwD8L9XxdOCO/P9rLIoIPebS/1grOVXolqL+TO9FWZ3rWv5+0vePALdm/f+JEthmFwj9L51gCL7DRvym17uL2J9c/F3mPSSKF5D8h0ds4jNW+P6Xlq5X3ONc/s9xfObi9xT/HYrRZtujcv2boePVoCcI/EiCZop8lsL87jlOUnm/Uv1YIKSE2nMW/8B/qOZ4s4T/EGCyK6oDTv2lZPdNTENi/WnymEn7puj8Vr+0oZAPDv9aApcuOxdM/PJSbUfgrwT/DoS19vsrSv8MlxJfZ7Nq/hAbx94t8vz+XndlGxevGP046GXVVW8a/t8mZeRxC1T9pPu7AxVfQv28bops9stS/GSOdCUyuy79PvqUzZZa5PyrFADHDn9m/oAQ0fYqP5b/obHdnWLetPxX6dfiIhLI/xNa4IiE6sz85188rnQ+Xv68TLianGKK/lLhWMtfy0b9XYpW3A7YxP54ovwa39uc/ODUhe2Af5b9TmjEd3KPLPzfS07UtlqI/FdDsAd8y1r8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5NDUwNTkycQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM4OTQ1MDU5MnEBYS5kAAAAAAAAAOyfwagTEJw/vcGJUPDZwD/N1my4FRaxPwn8c0h4Kce/qqUs2gmHdz9l1SNShOfAP9nfeIuQLby/axuMzxYowz+KXmGP2w+4v91AxxjGAru/bLO5LqtjvT+YNy5NzJyzv7jDnDN0KMY/094E4A52xT8Odykk2wWBP9QGjTlmTsU/ocorTTJVx79ylB6E0/TKP/F+cihTCsc/xQiO4GBBtz9t8H1jOAHLP0/j2Rh1vrK/u8Shl+xVvL826+T/MSHKv3/pDcZtB7s/Deoo13wgwD9Y75mk93DHvzEtY3+0Zlo/px8JtLFnsz8nnsT0vuHDv9FvaNp+W8S/zFH1PQ5cwz+zVwrySCrGPy6hFllJQMa/IAy2Z0gVvD8nBzRPx/PBP+UR5UQS1b6/5LonueXOur/lebE9FXS1P29DM/3W8og///axU1fOtr+rt+WfTOCqv6Cy754Akcm/zV7t6U19wr+OyJYD+Juiv5DhgwYcGLE/lARcIYMJw7+wp4lKx+Kmv2f2Sp3bHMQ/kAq2k0Y1m7+IPRmqdtKhP57jVIXyrbk/53pzNMihsz8xHzBr9yOwP+Qaend634C/JNgpwv78hL+fw6kbG+1iP3EP3En4uXC/ADVnjFthqL+MI2yvjMG/vxktjFwddrW//Ksw7Tguoz9Xuk1Kb+uiv4Zp1SlRjqI/Y6/en2UMsj+hbP80dw2/P7kQ4fAw3b4/GFivsx1Qvz/2hQhxVdm6Pxf/5fVP9My/Oz5BzvBDrj8WycbTDxymvzOzpcmCCpw/aNuttVussD+Vvo54nPDAP9uIf9d21Kg/gRE4je8ojT8H+0mF5lSwP/3XqDJ66sC/43/UCJRpqD8LaVMs1mG8P3wn67aEW2G/tQ121FZvqb/H0IUbTnibPxpFdkfG8J0/eELtTC1TwD8e2xDXUnK5v1CeNFDY9ZM/FFm9dKzOpD/BvooAPGp1P3g3QwUcl7c/0ZAmGDIcor+z+WcwunKovwoKcJdVtaQ/9JiCDRQ/zD+h91plLPuhvwKS3t90yqM/NjovVvQZob95bi3sNQK7P6MTVi15L7Q/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MDEyNzA0cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM4OTAxMjcwNHEBYS4CAAAAAAAAAAELG0cGfqU/U7dK7pzwtb8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    8,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        1.1504352158706976,
                        2.0718567981915545,
                        3.589945702722599,
                        8.700524433784684,
                        -6.536908550195788,
                        5.095322380214396,
                        -1.1876161882110066,
                        8.96612283275856
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8
                ],
                "values": [
                    1.1504352158706976,
                    2.0718567981915545,
                    3.589945702722599,
                    8.700524433784684,
                    -6.536908550195788,
                    5.095322380214396,
                    -1.1876161882110066,
                    8.96612283275856
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 100
    }
}