{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        8,
                        8
                    ],
                    "values": "eJwBAAL//QW4WG5tMe0/QXAgpD6ee79ofqeHN/2iP9oH270123A/IoFWYPUGeT8MSGba9gqrP7f8LDfi1Jg/ub8b3aZatT/dSFf/g+6wv6tCqAjIZu4/NF7Of9Rxwr8qQURDR/+0Pw+q3OKdVao/AnzkmRKOsD8x0FP4oBmmv6KmGYpG1qw/cykjYtS1h78/GT/HRDaiv8DUa68zaOw/NHqMzHjbqj+lueUDRI2Fv96mGw62J2U/uBlqIiIqk7+K3zYLmTC9P9A8wWyk96G/KCZOcV22jD/EwJAfjISNP2+OL42JgOw/AOCr/TiKmL8pbm7j12ejvwgADuGC430/NSb3s6gusz+n7RVajYWwP5u95pkyKYg/CvHQEKj0iz/koF3g1PWGv6e1ThbSOew/ZxgJSGL0V7/T6BZ07KGIv4VmUGl3Lnw/hcIRdJO1tD8QUIfLUJN0P1fcVnCyr5s/SOXCbkXxeT9nsOefzY1jvx4VCxtRR+w/MF5uAeXgfL+iarJY6EF5v0td0yBtkLE/PZxmxC1Enb8ynqOmTwGvv/eRRnvPQKg/dGJT6fcOk7/sia5HYZaZv+GOMIQfX+s/b9HRx92tsj8f8csiUThyP1h+7NRjU30/NmiXcg8qmj98StPvgqWjPyAhhYik/3G/7DgcozJ1o79Sj3JQW5B0P4AkV4jrCOw/zdT+Gg=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "strides": [
                    8,
                    64
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    3.9930373378871566,
                    0.4547375066660118,
                    2.073956491038433,
                    3.186574761750231,
                    1.409793992181994,
                    4.007453984785375,
                    0.9978402664764525,
                    6.7703812832633865
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.342088151349285,
                    0.1972686570959221
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "values": "eJxj4IhdIR1/2p6h/N2fu/Zz9zP8+ODh83f5foZPuxX/HFy5v4Fjx6Z/Qjv3MwSExy6Sr9qvUPlkp8X75fYMFnz/dRYvhetrcJv66IzsDnuG14Fyb6/vtGe4w3Wps6NhP8MVDyXVJ0BzN3CJ8T7L288gcuef/uw8e4YArhU/C4vt4fbB9O1OYP7/8JQ9g0lZz45LG/czXHrAEb9kMdA9t0JPCi62b7ArnpansW4/w15j4ZOWG+1h7oTbB9OnvPdzkfRVe4aK5a9W+y6xZ9jwZk348q32DH/EAsOW99szfNkveHHdRnu4/2DuhNkH08ccFy/QctmeQcozd4fL5v0MGnOjN19r3c9QsvBie8gKeLjA/Qd1J9w+qD6H0L0TM/9etF9wRuW1wW9geAu4/lB5ttoeHp7QcIH7D+ZOqH0wfQ+Sj+y0THhg3yD6it2SY/t+eDzAwhMWLlD/wd0JtQ+uT6A8MbDsuD0AKtHzEA=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            8
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            8,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MjY3MzYwcQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4OTI2NzM2MHEBYS4yAAAAAAAAABm1VTOAzci/xU1QovNln78xYnddOCO/Pz0svPOEfqQ/31/x1l1Lij/9/c1WZ3rWv0kW6bpknta/dzWTpjPhpj+GQHyxpUHOv9SYLuP2J9c/04UMEu9R4T+Lc5hDIvrBPx9dVkrtYdM/Zh2PEFwuwz//6nkwWlnav3mlXDbhL68/BywvPhBjur8AJVOUnm/Uvx1SD0qSK8i/NJWi5Hlj2T/CAMN1PDnSv2/R4ar3gNW/vrLq/OfQzD/tm1HaX9qov2AzxbfgfdI/ctZCVzg5vT+OdGVXDFjLv0OI7G59Xdi/SsTCVhs/tT+iQSVHxevGP741a04RHbO/OybAiW760z9VrwDBxVfQv5sZA5I9stS/Gaaq4O8eyb9uPlI0ZZa5P5iN8uIKgdS/wOC2LNJw4L+5OeUdmA9gvxgkkfaIhLI/b/RWAKdT0D+gAPwu36Vkv5I6lgDabI+/3aR9Mtfy0b8Xkh3qvduuPxs7i9xaZ+U/NY41PH+k4L8gEP80SmHQP7j097UtlqI/aMpc7zDr1L8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMjM2MzIzMjk2cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTIzNjMyMzI5NnEBYS5kAAAAAAAAAPkg1IXJVH4/ZCMpTyiVvD+UL3C4FRaxP/hmfh8cmsS/Y6eNgsJrpz/DMhV74HbDP8zQpznYDre/RLmWprqYwD/+lH49I/Gyv8TC3cYN5LW/3gGdLqtjvT/VaIf2J/ysv2BfpwoYmcM/10oPt7Lmwj961xERWLyoP0XwmBAKv8I/1082JNbFxL9Auf6sL4TNP57NcShTCsc/R/Wa4GBBtz+knog63HHIPwa13Rh1vrK/w8G5RTQ3t7+EU+/W1ZHHv3TCJHS16LU/ckZqXEEiuz8Vu6R7m+HEv1AfsP911JK/5wUWlp/HmL/AcdbLYlLBv7aDadp+W8S/pLT/FLLMwD8oSgBEAUnLP1E5ITDtsMO/wRLGFZD2tj9O3n9M1si+P1+z+/JZtrm/W4E9Zy2wtb/2UsrrXFWwPySMQf3W8og/ykWcpQ/tu78bZtyh3o6yv8b5Dk1IcsS/J7fwgePbv7//6VSnaNmsvzblNmnH8qc/jG5m+CZ6wL8xShT3G5Cwv0IrD0FMWs4/yIo0MJXper9YChCqdtKhP7v5VYXyrbk/x656hoDAuD/pOTJr9yOwP0kHJhZIFog/wYb4+CC6qb9vHharhNiWP3tgo0r4uXC/zT8cGGZPsb9KE4Rd1KK6v6FCklwddrW/uo8s7Tguoz8N0mRKb+uiv4eV0SlRjqI/kmvdn2UMsj/e+gc1dw2/P30y4fAw3b4/Yf4PEHn5Yj9iWghxVdm6P1BBD6SX1ce/tQsUzvBDrj9wB+ww6Yi/vwocosmCCpw/egGwtVussD/qNFyfgMK8P1pSt73ziLE/yLwoh6yHoT9BJjDXnnO1P4DbcMGDl7e/k2HeCJRpqD9ohUks1mG8P1rJI7eEW2G/VWnMgaIow796430bTnibPxoCNJD4CYa/fmo/9ulotj9EzCyFmlO0v9XupstcOKQ/r4m5dKzOpD9VE2uNpECOvz4qiVRG6sA/iLidGDIcor/4cDswunKov19yZ5dVtaQ/kAGgNnDOzj8nlmVlLPuhv/+v4d90yqM/dJL/+WRXq78NaCnsNQK7P0QVVi15L7Q/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMjY0NTc0MzA0cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTI2NDU3NDMwNHEBYS4CAAAAAAAAAHU9iUYrgZY/BE5M7pzwtb8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    8,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        1.3732457063774501,
                        1.95771908162446,
                        3.292646233049773,
                        7.952946158751227,
                        -6.244624683478097,
                        4.493149447985102,
                        -1.3051238979472872,
                        8.435212351064761
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8
                ],
                "values": [
                    1.3732457063774501,
                    1.95771908162446,
                    3.292646233049773,
                    7.952946158751227,
                    -6.244624683478097,
                    4.493149447985102,
                    -1.3051238979472872,
                    8.435212351064761
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": "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"
            }
        },
        "iterations": 80
    }
}