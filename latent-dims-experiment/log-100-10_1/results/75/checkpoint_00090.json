{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        8,
                        8
                    ],
                    "values": "eJwBAAL//R5p6W87xOw/i7iLRp2ke78YWvK9/segP27TflbbpW0/Wx3UifQYhz/2tpRmxvmwP9q4aJYiRp0/1ryOPLzPuT/XF+1dBCOzv9Zrrg1oOu4/Od7EuGaIw7/QfHoUzlS6P7JRcU2vELI/dTJRuUfSoD+JRF/IS4mkv61yIbWokb8/QmVwyzeIcL/twHHw6+6hv+fCUf6P+Os/NigHr2AWrj/ZYm7W7xOHv+ROcjDEWns/jpSbvveEl78fhU9dqoTDP2Q+UgwIE6C/rq/pM2mjhj/EFbYY5iuUP42argn1Kuw/lqairPqQm7951WHfjzKmv6FEcVBsUII/QvasG1y/tz8f6ZpH9GezPz89a+vFOZA/y7tIvoMKiz/J+ybdvAaRv+gGBsN2ees/HFvQbv/3gL/XmlfNGEiSv+P5wIe4Z5s/cdhM3L6jvD/Ej/IZ/ZwlPxTKTUvlZ58/z/jXxAX/YT8mdaildylHv4XTutxx4us/z90Jluoheb/0WkHQdOeUv5OJv7HcirU//rN0WTxanL9gL6mL5sSzv3LVkrO96qs/nmsimnPknb8LTxOhxqqsvxyhKrqx9eo/9BkDQZGruT/SmoD69y97P7OFienBsHs/iKHmpUBHmz9SXBGmJkKiP6nPHlRPlmO/zP1sQe2xqL9mNVOOt0h+P7a4tYL7Y+s/A+wTiA=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "strides": [
                    8,
                    64
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    4.826489525341203,
                    0.4094897246630167,
                    2.1451528294628206,
                    3.8393281640552135,
                    1.3792236582713688,
                    4.380731117080487,
                    0.9616058671057133,
                    8.975749686012922
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.2642340714026295,
                    0.14601741187793027
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "values": "eJz7cfGF5N1lJ+0bBPzZmAIn7mcQi9n+MWTxfgahW47PdZbuZ1iyTs5o6c79DCqT1watbdmvsN2T+03XEnsGhXNP/LqWIvSZmPz+H7rZnsFlqvWb2VvtGRbMZ5ht07ef4RE/74TGWfsZGmZve/K2wJ6hd52ihFK/PQPD8jim+9n2cPug+hp6tuyVOXvCnqFvxU9rwc37GdL+N3OrL9zPsKe2VgVoH8OtnZUG5iv3M3zythPt3mAPdyfMPpi+fR4yAalX7BlWtF796AHUl+btxeQNdNc7092lWyfaM+TEiLRIbLSH+w/mTph9MH3FG5NduC7bM5xILruza9N+hjPW/Zcce4D+yYnd+XIZPFzg/oO5E2YfVJ/DS4F+b5aL9gy1s5i3vDtpzyAh6tU4cZU9PDxh4QLzH8ydMPug+ipevtoloX/fvsEh1LHk3Lb9sHiAhycsXGD+g7kTah9c36aDz2L5j9sDAIO24Xk="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            8
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            8,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkxOTkwODE2cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM5MTk5MDgxNnEBYS4yAAAAAAAAAIxxvlzcXMu/Xz1BAbAKnj/z1GddOCO/P6KESBeac5S/zBAI1V1Lij/O7dlWZ3rWv3Wf97pknta/5xadGnvrvz+0gI2zpUHOvzlUMuP2J9c/JenWNHQ94z+gxFpFIvrBP6sdDXNJ8dU/w5SOEFwuwz8IRKxZtujcvzSiyEhh1bk/3PQs6ldEtb/x+1eUnm/UvwQtD0qSK8i/hVaVDdby2z+068N1PDnSvwpU46r3gNW/zoUWMxsEwD97Afw06Iuxv15Hn7fgfdI/ttuOVzg5vT9srR9UYjvQv4eA1oQrpdm/iT82qdNduj9UajJHxevGP2Pia/GBWr2/u3GKeG760z/Fff3AxVfQv9gCsa/r+dW/Ta7L4O8eyb9w7sozZZa5P1vX7uIKgdS/cqWQXgWk47/yEY5A7niSP9qAEviIhLI/T9/qNIHawz8Q2X0336Vkvyz5QwHabI+/h3piMtfy0b9ibD1ZucGUPxyTQfIIr+Y/wolLYNsz47/Zlho1SmHQP2sfqbUtlqI/CVRg7zDr1L8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MDI0ODY0cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM4OTAyNDg2NHEBYS5kAAAAAAAAAP0/ncxdy4m/+S4pTyiVvD+DqG64FRaxPxOSfh8cmsS/AVIe2gmHdz8ziCVShOfAPz/FpjnYDre/U8iWprqYwD/Dbn49I/Gyv4pp3sYN5LW/l9CcLqtjvT8QxYf2J/ysvw+MpwoYmcM/tHoPt7Lmwj/N9lzZzv2cP9TJmBAKv8I/3nM2JNbFxL/n5fqsL4TNP8GScChTCsc/KUqa4GBBtz+4mIg63HHIP2np2Bh1vrK/vrW5RTQ3t78lgu/W1ZHHv1B1JHS16LU/5d9pXEEiuz+o76R7m+HEvzmzsf911JK/AXKfIIJUoj+CXdbLYlLBv3bvaNp+W8S/+OL/FLLMwD9xfQzySCrGPxRWITDtsMO/i4DKFZD2tj++AIBM1si+P8t6+/JZtrm/Q5E9Zy2wtb+b+8nrXFWwP8dyP/3W8og/dSG1U1fOtr/Bd9yh3o6yv/8REk1IcsS/xNLwgePbv7+GXmSnaNmsvyJtN2nH8qc/HJlm+CZ6wL84chT3G5Cwv4hsH++TO8k/IgQ2MJXper/KIQ+qdtKhP9W2VIXyrbk/s9p0NMihsz/AQTNr9yOwP3tXFxZIFog/HRax9yC6qb+D/hyrhNiWP4uhsEr4uXC/UlsYGGZPsb9+D4Jd1KK6v2rGlVwddrW/7jsw7Tguoz8LaGZKb+uiv/ZazylRjqI/tEDdn2UMsj8k8gU1dw2/P1Bt4vAw3b4/Y+rbD60StT/WPARxVdm6Px7SEKSX1ce/VQsUzvBDrj/ABKs7wCywv1Q8r8mCCpw/gACxtVussD+Vv1ifgMK8P49sqb3ziLE/6uEph6yHoT9qtj+F5lSwP6ELVRM8try/XeneCJRpqD9Sz04s1mG8P0CPRbeEW2G/9M/1DRz1tr+ikIMbTnibP+Rby4/4CYa/K/I19ulotj/9tiqFmlO0v6F7qMtcOKQ/tme6dKzOpD8X2GmNpECOv5/hhlRG6sA/D8mpGDIcor+1LDwwunKov9UebJdVtaQ/uFibNnDOzj92E2hlLPuhv1bX4990yqM/UaL0+WRXq79SVyzsNQK7P65hVy15L7Q/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkxOTgwOTYwcQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM5MTk4MDk2MHEBYS4CAAAAAAAAAKWnikYrgZY/GV1N7pzwtb8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    8,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        1.3571737023412072,
                        1.96971561223956,
                        3.393436257649531,
                        8.34035716671168,
                        -6.353378614545008,
                        4.766547222134061,
                        -1.2994507117733594,
                        8.736770000651763
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8
                ],
                "values": [
                    1.3571737023412072,
                    1.96971561223956,
                    3.393436257649531,
                    8.34035716671168,
                    -6.353378614545008,
                    4.766547222134061,
                    -1.2994507117733594,
                    8.736770000651763
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 90
    }
}