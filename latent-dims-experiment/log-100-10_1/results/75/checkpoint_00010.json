{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        8,
                        8
                    ],
                    "values": "eJwBAAL//SOH9dRJee8/geFfJKd7nL/HqviKJR+dPwNvcNh0WW4/anPu/gIkab9BzCZ+mAygvzPKNfuTPIA/bzO9G+GooT+zUdosJthlv2t9kehj4u8/wy0PHva5l7/5cg0aIRyAv0iZkuC9FYI/63GCaAXXmz+KM71mkQmGvx1IyUim84y/gENBTl1FFT8AkOU1+iCQv36r7rYiv+8/oDAZh2vDgD8njo07/q9OPwQlRNFIppy/vlyN6HXlhj/MCUvx++eJP12hKE1Uc1a/XHDyloWAer/KwG0rPI1mPxYkVEN+Pu8/xVOqCvdQWj9MTXeolNyNvwEp9dMRG4I/YofTWtQBij9PsDFqMxhfvxdbYgqjNEM/y3tbVBPTiz9OQ1CG8jSFPyryA6O7Ue8/TJAwOMwTd79kULguaxxLP26jcqZy0oI/GJzcfxmkhj9vt5KA7juSv4hX/PTooZE/c0ZRWhRYdz+cJQGGRIlxP4MMuo+hQ+8/Ma/Q+MgWcL9C2lO9pTCQPzb2EtpPRnC/sgaVQOuLgD9SL27W6eSLv6ru0zkUuUu/Pm08PhfkbL9T/OlbwbeRP52CwE1RFu8/9BmynkQ9kb8T94n9HF6kv9miJ2lBM6M/TdcVd1Bvob/uw8/BXAqLv5ez0Ke723i/bQQL/DXPk7/P+0BzjgGRPzbeJKH/XO8/JUD4cA=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "strides": [
                    8,
                    64
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    1.106383589702663,
                    1.214193372149761,
                    1.3032448986467604,
                    1.0290719619602888,
                    1.031181519572036,
                    1.425296418449829,
                    1.0689898441962071,
                    1.1323383560099132
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.1299114185302169,
                    0.3068183564894747
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "values": "eJwzW/vH0dTykb2C2dxwP9cD9k/PftTyaD+yn6HI5n621fH9Cxo2FpqVbdifoHV2e4Ldhv3/7sb6Xs/dY9+g2HjgdPRpuL4K3b/uh5ue2lc8uljrrnjBvkGl9Ee9zjr7B64K5Wvnbrf3KHf1jxA+tD9vSo/htTub7Rn0im4UOq+H2wfT13lDt/n0ycf2T16ls7pEHNhv4X9dY8GDZftznfxjDqeftBd428U38f/O/QwZRr9y/ljbw9wJsw+mL0PEs7j59At7htQDt7yXzrVXuLHGQ958mT3DpmOTjH+W2zfUX569duEBe5j/YO6E2QfT55I+qSht3Uv7hrmil/sU++wdfs805NlYYM/gXBlTbbUGHi4w/8HcCbMPpu+jm3OCi/9Te7OJzgqXfh+3L/i81q1z41F7WHjCwgXuP6g7YfbB9G0oKrqrzfLC/oarun3zwcP7YfEAC09YuMD8B3MnzD6Yvg08XJX5Cx7YAwDlaPwe"
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            8
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            8,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MDc0OTc2cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4OTA3NDk3NnEBYS4yAAAAAAAAAN8aTDKAzci/9OMWaSXWhb/qPKupsD/HPylyikprm7k/tNPRZBTQm788G1AoC+vTvy2Wfbxknta/vm3AevBRwb9JQbvPpUHOv/iGuc5I4NU/gSXHQWOP1D/TXeXL2hjHP0ujxSaR0tA/s1FaUzP1sb84xJi58/LTv+ny1XPCQK6/2c3vvcCgl78rjM9qQuDRv0Mxh/jZDMO/hGGbamW10T8BaoBhjvHQv6F5tG7tqdG/Zv1J14tByj+I2Gzh+n2Bv4xwhrbgfdI/ouKCVhR5p7+fO91bDFjLv2mx9EQhztW/qADCA2MgsD+UJyCYYXu+P7rcC8Dd18w/DZZvL6DqwD+2J7DVc5/Rv2HVbqEKJ8+/KtyC4O8eyb8FaWI1ZZa5P4l34uIKgdS/+N/ePM090L8Layekiw5gv7lsJ8yKhLI/TyKnypF3vT/8p8zOafS4P3kS2McXVqy/x/pg+TKC1L8u2qzuvduuP/kbXB3eKto/rGJQtDecyb9S199ZpvDSP96FzoCHiLM/t8aBcH2j078="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MzM4OTEycQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM4OTMzODkxMnEBYS5kAAAAAAAAAOR4lnl6Rag/WCIpTyiVvD+3Tvt/e8jCP/pWeR8cmsS/bfOe4QmHdz9noz984HbDP82R224kpsC/MJ2GzxYowz+6xDnhky69v9a90cYN5LW/GINCwDFBwT/z7Hj2J/ysv5unoQoYmcM/od8Lt7Lmwj8AI1EX23aqv9TXlxAKv8I/Ho8yJNbFxL8Fq7luDVC8PzgNbihTCsc/yXDhrd+Unz/gNIg63HHIP1Gi6Bh1vrK/Lf6dl+xVvL8cXurW1ZHHv29V/wsTE8A/RelpXEEiuz9oCIKk93DHvwRqnI9MIZY/cxda2xCOtb83L8TzVGe4v3i9YAPb6sa/hq3tPQ5cwz/cPx/J7JrDP4tNHTDtsMO/+cljg5xpnj9H/Z+oZYu0P+CdHEvl+cG/EqgzZy2wtb+WRsLrXFWwPzu7Ev3W8og/YmSVVFfOtr9JHtuh3o6yvwB/1CPs4sG/VMvlgePbv7/q153pVWq1P9u0eQYcGLE/4xNj+CZ6wL8uz61NrUqZv8S+VKNqgWe/+hO3L5Xper/cXc9KZEW4Pwd8WYXyrbk/S3NzhoDAuD9OCDZr9yOwP5nfE4Oe6py/YqLuM7HKxb9e4ByrhNiWP0+MEEv4uXC/UdgmGGZPsb8B2Yld1KK6v4PNjFwddrW/ilsw7Tguoz9ViG9Kb+uivwUkzilRjqI/oc3rn2UMsj/zBA41dw2/P3Ot4/Aw3b4/7Sr30M0Bub/YmgNxVdm6P5PUCimDJ8C/kRoNzvBDrj/TyXLB0FPCv7e3SwiGPn4/aw60tVussD+27Kp4nPDAP2pEur3ziLE/w6Uvh6yHoT9hvxIqV5K6P/RKXZe1dqC/+XGCpdVXwD/c9Ecs1mG8P0oUireEW2G/OMzcDRz1tr+IUIUbTnibP+ly8pblisA/kH899ulotj8PfhnXUnK5v4t0sMtcOKQ/wcGvdKzOpD9ynUONpECOvxWNy1LUtbw/RYmYGDIcor+5s0S8zXa2v+91bZdVtaQ/ZFN23R2ntD8jxG1lLPuhvyU06N90yqM/9MoL+mRXq78Drk9IxcSwPzmEWC15L7Q/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5NDU5NzQ0cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM4OTQ1OTc0NHEBYS4CAAAAAAAAAH7DYkYrgZY/cWtP7pzwtb8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    8,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        0.9534616639902146,
                        2.3248200775391754,
                        -0.23141020401467277,
                        2.5809482820097096,
                        1.6032472126536035,
                        0.5070812375088984,
                        0.10297706559610084,
                        2.9534695341518638
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8
                ],
                "values": [
                    0.9534616639902146,
                    2.3248200775391754,
                    -0.23141020401467277,
                    2.5809482820097096,
                    1.6032472126536035,
                    0.5070812375088984,
                    0.10297706559610084,
                    2.9534695341518638
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 10
    }
}