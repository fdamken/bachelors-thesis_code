{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        8,
                        8
                    ],
                    "values": "eJwBAAL//a7IXWKCHO4/6g5Lb3tQaL+xusOFu6SUP4ybOLaHLIA/2uthARcshb+BxMyhdZofvz5Y3K6TGYY/vDIyO/JGkD8k2whEATZlP3NaFfIfzu4/XTVfXyLio7+eSgYssfKQPx2ts3/g11M/DluiJfdAf79hYxN1Pz2Qvz4gMz9RlZ0/nv1yjlbCgz947kK8Ztyhv2VqqfrW6+4/Vrikir5ynz+GteGEe9F7vx4L1s5bjZu/jXrlqzvfbz+mKENym/WgP8f+hYM88YO/sd5DiyqCfj/sR7ELXvVmP2L22Q7Sgu4/1IJsCfP9eT8JNDVQXXyVv/x2DOOCW4o/wdjA2yTSnj/QCoHZXSJ2P+2xGuahYU4/nNkyO4OFjT8Mtaym8RByv1iPmVt+re8/9dlsgBJSkT91C76Guv2Gv/pr4sj214G/X0Rbg/UNoT9z3x1ZQHqIv5XZwddvQKY/fP9+K61iiz/B5+f/IDqMvxj8TiAWn+4/VngoeBuYXD/a91FarYaTP8LaeIteioS/bjOufe1xfr8aVqU2Ypmgv3vdHcheQVc/mmTbMfStYL9Iq489uSydvy8Wa6lzd+0/oiu8vQe/fz9W7IpwgaqOv8aQcThbTpU/qI1NQfi0kb8zBTOPAkNxP52T0pS2s22/ldwNF4gRmb98CL2xFF2NP9LAGIm9r+4/+9QDBw=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "strides": [
                    8,
                    64
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    1.2542590685634112,
                    0.6935340899092813,
                    0.9346326176435646,
                    1.1227247598965848,
                    1.112597001969571,
                    1.2321308108615983,
                    0.944747085182915,
                    1.4810058688354932
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.17088797361534216,
                    0.14549555191282781
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "values": "eJyzUC++XNN7zf6CUZfJDbal+wPCz4fE5Wzf32BZpHNE5+j+Dac/LTZPObz/QPDmwJcdy/ZfqBGYwuqxy57hQZiHeOAiuD4mXYvL+7Ov2T9o3FEUuuyEfcPtDWf4XJbZJ+y1UZGo37Nf4eQb7Q/++/d71N9+n1qzyZ6huzb+af8UuH0wfR63HLmPt1+3ZzCuK/y3eft+ho3HI5/v3bD/AQ/za8s9u+wPnGfS4F69Yf+BOWFy2iLb7WHuhNkH06fwgHNX6PlH9gzT4xInum2wb/CcFLGEa6s9w4lLrmw8ffsZdJXZytfssYf5D+ZOmH1wfQfmP1dddt+eYYWHlpl+5f4GT/6Q2rBJ9gyqDcacHpvh4QLzH8ydcPug+gz2xK6d//2+vYR3mxHn4TP2DDEzneOV9tjDwhMWLjD/wdwJsw+mr6N5a3ytzDP7Bw9PLP0y/8B+WDzAwhMWLjD/wdwJsw+u7/erg6ap5+wBny7zbA=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            8
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            8,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MDI0ODY0cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4OTAyNDg2NHEBYS4yAAAAAAAAACd+LjKAzci/5OVJnBzAsT+MRJ6psD/HP+QzZLojur4/Acgp8V1Lij83ORYYXaPSvxfUfrxknta/7BiVuI4Uor+eMGz8gGjQvxYiF+P2J9c/dYD7Bhiu4D8fd5pAjNW+P2P3KTs/GtI/6wHHo28thD/mx5rz/cnXvy7uEo7CQK6/c0JEdEBQwr937qB/8CfTv7N4BUqSK8i/2ZMsvB3U1j+JM+N1PDnSv6iqEG/tqdG/5bsXri+yxz+koTBW6IuxvyWihrbgfdI/fD1Tux66qz9dS+CTbBLUv8zPEUUhztW/6oN4Vhs/tT/FFpv08D20P2ljFe74ubA/2cSXL6DqwD9sVpnVc5/Rv3ve6aI9stS/2ouY4O8eyb8vchQ1ZZa5P0RB3uIKgdS/WNPGtuHr179kbgLjbPqzP/DY5jNunsg/9yeNyZF3vT9wr6A47ZjBP4yjpiSnGKK/GlTjSeug2b9HdhPtvduuP9nuDUx57OA/GONRad7D1b/v/SmCAoDVP7IPxn+HiLM/kwGlxDXC2L8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5NDUxMjk2cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM4OTQ1MTI5NnEBYS5kAAAAAAAAAKngFY/JVH4/fmMrTyiVvD/vsGW4FRaxP96vex8cmsS/B2Yd1QmHdz9YQCGlPAbGP9y13IuQLby/mtOTprqYwD+7V4E9I/GyvyTU1cYN5LW/8aahLqtjvT+9YID2J/ysv2F3pAoYmcM/3kkNt7Lmwj+c/JJzajmgv1eUmRAKv8I/cXQ0JNbFxL/VtTcyG9bFP/NRbyhTCsc/voSb4GBBtz/wKYg63HHIP+U47Bh1vrK/E4S5RTQ3t7/YhOzW1ZHHv+4pL3S16LU/7NxrXEEiuz+qi597m+HEvwdmen+0Zlo/5mxFb0Chpr/fmcf0vuHDvzCBbdp+W8S/7UL9FLLMwD932iGgkAvBPwjmHjDtsMO/R215g5xpnj/+PHRM1si+P9qG/PJZtrm/m/43Zy2wtb+u+cXrXFWwP/K2Mv3W8og/1VD2Ys0hqb+q7tqh3o6yv0Jl7kxIcsS/UbbqgePbv7/S+7K/Dr2QvxHBKGnH8qc/W+9j+CZ6wL/7hg73G5Cwv+uu2Z9qgWe/Gif3L5Xper9l2D2qdtKhP6abV4Xyrbk/eDJthoDAuD+UbDZr9yOwP+Ot4hdIFog/FGU++SC6qb9viUqrhNiWPwMyEkv4uXC/Vr0dGGZPsb/Gu35d1KK6v3SgkFwddrW/vMkx7Tguoz9HFm1Kb+uivz/zyilRjqI/bs3un2UMsj+Qigs1dw2/P/s75PAw3b4/3DUVIoYgvr9XNwNxVdm6P+LrEKSX1ce/Z1kLzvBDrj+gLHHB0FPCv7HNpMmCCpw/aHu0tVussD+77mCfgMK8P9/Pub3ziLE/+mkzh6yHoT/nYlQpV5K6Px7la8GDl7e/D2rmCJRpqD8O+kgs1mG8P6QEnbeEW2G/J2PWWEaZwL84jokbTnibPykSu9sS97s/Q1M+9ulotj8ypSWFmlO0vyDYsctcOKQ/FNeudKzOpD98iEuNpECOv/AJgnuiecM/NtCZGDIcor+iSSUwunKovyVpbZdVtaQ/vtKNkv+QxD+Yo29lLPuhv0Mi6d90yqM/u6sN+mRXq78L+tvsGUynP1MFWS15L7Q/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MTI2NjI0cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM4OTEyNjYyNHEBYS4CAAAAAAAAAM0bdUYrgZY/NxVQ7pzwtb8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    8,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        0.8564422962780821,
                        0.8966267072862887,
                        1.387993811108364,
                        4.97911194352213,
                        -2.861612437026649,
                        2.393630498455339,
                        -0.8626960184217295,
                        5.101632219932884
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8
                ],
                "values": [
                    0.8564422962780821,
                    0.8966267072862887,
                    1.387993811108364,
                    4.97911194352213,
                    -2.861612437026649,
                    2.393630498455339,
                    -0.8626960184217295,
                    5.101632219932884
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 30
    }
}