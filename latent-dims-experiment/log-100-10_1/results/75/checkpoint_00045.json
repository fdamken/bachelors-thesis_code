{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        8,
                        8
                    ],
                    "values": "eJwBAAL//fOZTyaJE+4/VL0megTHcb9LNUlKT76jPxxJ4l72No4/Nd9Q8rxukr/Vnbh7+f6eP5hs9whX65U/dQpZQvH+oD9MbONkwKJqPxQaHzjTp+4/edNlZU7jrr8olTFoFzioP2hupTyLA4k/7whK8yvPlT9I8Oau/KWfv1vDFG10kbA/3wkiYOOLmT9RcI/zunCiv3Fg6hyshu4/N8CNZN8koj9bbz+93BpZP445+qm+TnC/oqdcrSE1Vr/loZvxI/iyPxlRYA0WyaO/hqdG3gailj/NYJMxCPaFv8fbNW+Ne+0/cgZ6uyxphr+duwstyVCnv+IjeMx8FJU/kdvLszlxoT9xKX9KbbV3P+nIxbnPHXM/VWGZf+HpmD8kxU021SV0v6thQwXDyO4/J3k16nWgiD/20eEkJUuAv2DxZ4ZJb4G/q5+uIlR0pD8w1KxcKglJP3t4V8+LeaE/MLDo3U/miD8ylvQ0TmKCv8hFhQFTA+4/bal30o29gT9uar0KNrqaPxaPJprSFIE/3CjsvKVBlL9oy68t0oeQvys/Zwiv0ps/UnHaU/z4jb9feAfrEoiLvyPsuAL6auw/2Widc2xbmT+RQlgNRf+bv0vzanDNm4M/xxJJmbYCID/hjqYPKDygPxIkFGLhJYC/Pe9k2Asaor+iBUvx75GIP4IuHrH4fe0/4zz8tw=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "strides": [
                    8,
                    64
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    1.5622572006234883,
                    0.528436234769111,
                    1.0141346038931052,
                    1.3498970952502654,
                    1.1992882442754926,
                    1.5504755351482413,
                    0.9219808917101848,
                    2.1469980921572347
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.33550750554161457,
                    0.26805033128009687
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "values": "eJwLOd84XWHNRfuCtz9SVh3asv/A+92yhgVb9je41zLeaduzv+Eka+PO3N37GWKWemeb59nzGE1y1eXcaN+QvUDDQX0ZXJ+C8afDV6ecsX+wLVFYYckxe4Yf27L1vs62ZwgvmLCQY91+Bqsv3PdEl+9neGO0bKLFJHuGigpPLa06uH1wff+v5a7detGeof/dJH7j1fsZPFc8jXoG1Oe7Y3sEy0L7Ag6h95Nq1uxv4DR0utmwyR7mTrh9MH1qR93N3O/YM/QUW/gYLrNnuK07Q/HvdnuG9tuOQWxt+xmOfb2vG7zdHu4/mDth9sH0RVw7pV1yy57hWbHKkbOL9zNkyScrrJ9nz8Aj/mJO5QZ4uMD9B3Un3D6YvtdCYQx+1+xdambPcna8YM+wKHqlXeQmeHjCwgXmP7g7ofbB9GmGmAm+/vHYPsH7/YzpU/fuh8UDLDxh4QLzH9ydUPtg+hhYTE5efHHKHgB5mOms"
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            8
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            8,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5NDkzMjE2cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4OTQ5MzIxNnEBYS4yAAAAAAAAAIAFEx7Shce//DMZxXhPtD/s2XZDStnAP8P8AKfHKrw/VyHmlh9jlz+cqr1LkNbVv0RUysU7Qte//yTQ5qzrmb+UWGkGWAzRv7HM99gfhNY/hP9dtF+P4z9mW6Zc0EHDPxw/PVbEBdQ/Um9TYeuPuT9QC0USg7XZv38CLzwKIqm/nlasn0onxr9Ilv+Jx8vTvzI9lzXk48a/Ja8txvR31z/L3qxrZZXRv9VDLnnETdK/KruUooFqxj+Sp9Sdp7ujv4UQucC3IdM//pGpiGtssD//iG5mup/Mv3QS+WOmude/rCK2Lb+vsj9zu2gfTc22P7qpFY353aa/cJOJlzvH0D8Y0E/LnPvQv4u59KrCnda/XlUyzEHXx79qFrNdwSW8PxRz9OzhJNW/LJtDymbX2b+VIwqW+PLCPywaQs7mE7U/om2v+XYDwD8c8q9Nm+DCP/KZSKTd85m/AQTUErht1r8FQRQeO/2xP+JaKxRlPuE/XGquWmOv17+OwP12K9zUPwEZ2wnmtKc/c/e3qLDW1r8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MzI3MTM2cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM4OTMyNzEzNnEBYS5kAAAAAAAAAKOEfCfCJqM/dtobeIQkvz9erlrhcaWzPy9a9jPK4cW/E6Lju/Vjsz9RIcNnMi/CP4WuoGI0nrm/84MOu2jgwT/52m9mf4C1v0Xryu9pc7i//e2QVwfzvz85qTQkcA2xv4AVHx/G4MQ/HlaHy2AuxD+si0I0XsCSPymzEiW4BsQ/pNmuOIQNxr/l0ovB3cvOP1i36TwBUsg/ue+OCb3QuT9xtABPirnJP3SQ4EHRTbW/l2+sbpDGub8jM2frg9nIv+YYGZ0ReLg/hsNehZ2xvT9GbxqQSSnGv7JLz7cKLoG/tO1YHYiCob//A0rgEJrCv8yt5u4so8W/IMh3KWAUwj/oklUG93HHPwyFmUSb+MS/sI3tNfeQrj/7bbU6GazAPwiN8Bu2Rby/STotkIk/uL9vIrsUueSyP9rTYyLctpY/raDme7Ndub+Bj9nxBP+vv1IXaWH2ucW/E+tv1Z81wb9rtOVveP55v176Ert/Ea0/cojeDNXBwb+Bf0ScfwGsv2O+iYgt1cI/dIHQ79X3kL9vdC/8LvGmP3hcSK5OPbw/9oNnr9xPuz8peoGENimrPx6Zja+USJY/puJfp2ibpL+F7QQPKDaJP9MnUUTKO3g/O94OQcLes7/rvnSGMDK9v9DMnjPB5rK/L9ePNgEfnD8ypwPxbZmbv9PhtHsJrac//1bx7RL6rj+uq/2uac7AP88I78fUTbw/UsezBwJqqL8TJ/mZsWi9P7VomI/pjca/rKL3j1SxsT/1CezVfpvDv2PU0CUSzZE/esd9Gf85rD/A203I3FG/Px60reZPGLQ/gwqQaujRmD/IQzJSsyG9P6BjX+rfJrq/zc/9tttKoz+5ylMDetK5P/+xxBkAJIA/hWFHllBwxL/QO7R33TqRPwE1uuFsQpW/cP80H0b4uD/0ohuu9uK2v9NwjfNIM54/kumZxmTtqT8xlGGLhotzv/J+qWj0McI/saZpjfP6mb+WLhSCcpGtv/Z6BYs6LZ8/B0PAIcKGzT//tggn6LiZv+Mf/Bt5V50/QuAkqKw4pr/zQTjD2XK4P3TXYwQdoLE/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkyMDQ5MzEycQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM5MjA0OTMxMnEBYS4CAAAAAAAAANjxJPVNX6A/VIpaxUBhs78="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    8,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        1.0161522867669284,
                        2.0312429420918328,
                        2.248400535809828,
                        6.774246877372841,
                        -5.134775426087051,
                        3.1259227755814876,
                        -0.4101015488314121,
                        6.495160876228855
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8
                ],
                "values": [
                    1.0161522867669284,
                    2.0312429420918328,
                    2.248400535809828,
                    6.774246877372841,
                    -5.134775426087051,
                    3.1259227755814876,
                    -0.4101015488314121,
                    6.495160876228855
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 45
    }
}