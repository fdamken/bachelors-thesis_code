{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        8,
                        8
                    ],
                    "values": "eJwBAAL//VZLJDhmk+8/A2MQ4w29e78QKYX8N+eGP4mQzR3tOmA/XUYR1XZPgL+K+7l2wcOVv7QoCPDSOoQ/XV6i6QkYkT/2UcIGFsxvP8cwNO3GEfA/YN4nEL9kkL/PYFXMp1Fzv/UMw4rVEXE/y4ueiFM7kz9hUxs0y9eGv/54hEwgUY2/VRjyn/cOXb/KP7+5XsJzv81P/4UuBPA/SBwXEVJ+Wz+XJB9G3Kp6v3INVdSXJZC/jH1eq8lFgD+fAYkiPxt7P8NOUYTvvXK/BpNqjgO2cb9337dKwpJoP9jcIaSJwu8/s2RzuMRTVr9pMYElHr+Hv8f6FLfTNVI/W4HQdavrdT9CBJrS7MdmvxXJmqdZWWS/jmtRbZjndT+JfRsUi9dyP/vAa11Q/O8/gtypbN7WjT/yOPWFfVpgvx0as4HnTYk/Z4oiB/RoWT93fjxR1q6Hv+tkl+3D4Io/ifGe2IBGcT9gTnTPEfljv2E8M8SFiO8/d1oTeWz0Y7/qQcc3cD6FP7UyUY5IYmc/uackRsGcUz9bEtITKBR1v/VM1NC0O0u/MyXObV/Cfj+V02JB2F2EP0jUGWGEb+8//TZ+7/vwi7/AlU+lxMOVvy3CtJ9kCpo/bLlgtqr9jb/CTc9C/i52vy6i0AOU8W+/O4FNhJoRhr9MGBX9E5h+P99JMcRHnu8/fYn+8w=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "strides": [
                    8,
                    64
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    1.135620896886875,
                    1.327455104725764,
                    1.4161290992690598,
                    1.043109851568485,
                    1.0600701823560212,
                    1.4750213246066535,
                    1.0962207137928055,
                    1.1057269964322824
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.6160156674778063,
                    0.1514794290636269
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "values": "eJwrmGCtePvpM/spbNyzz3lssT9Q5Cds/+Tgfp9l2ZcX/Dq8n+F164snxQv2T1h4Q0jlbfv+hQIyrXdbt9h/vm28oer3Kbg+C1Zhvcj4F/YZSa//SJWcsGe4usnZR6nHvsH/fP/1y3vsG6btrtfcvH9/Qv+ZK5ulVtkrRNXFaTBvhNsH03fRo+K/vcQL+w+TuZdeCF63/4NgeEpl5I79L3bLyqlU7rR/oFOmseDylP0NypNcbJY02sPdCbUPpm/OAQuR9LDX9gwd0u3TVlTuZ7hgz3w/bdL+Fwlnd3ScXG0v4fU0TjnkiD3MfzB3wuyD6duQejvC8+ob+wP10fZP5LbYJ8iGnrdjWbL/wAVv/hNPVsPDBeY/mDth9sH0pdyIMnmZ9Nr+QdTfgwxPN9nvcNeY5FN/wB4WnrBwgfkP5k6YfTB9vG6FKWZXX9vLM1zczfP90H5YPMDCExYuMP/B3AmzD6YvK3hn6jurJ/YAPGEDZA=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            8
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            8,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MDE3OTUycQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4OTAxNzk1MnEBYS4yAAAAAAAAAAbVKPV19sS/z7WVTbLRpL9mmVqVAvjFP7KYyNxW7bE/90yG2MIGo78ztoYy4o7Uv5fuM7KN+tW/i+7VuPooxb+EfzOOm2rKvzVVF7DD9NM/SGBLO4zr0z+Pm+iF0EHDP1P5bEUWvtI/50Xaekejub/Eyq7DypbUv4Vy+GS9r7G/oU5kCaDGir8n//R0GYTSv9GMnuQrxcG/7pTKdDxZ0j9myGRXt03Qv20L1nfETdK/QdGAxN35yD9VhKzdGjqlPzHRucC3IdM/kHo6Blxaor8nXb4eAoHHv0PZ4DpKKtW/nFxvLL+vsj+/A6kIuxTDPy9ZEftzV9A/NSQOk3MItT/2UiVu3WfPvzaXRVtcN9C/ySw0o+VHxb8wWFhewSW8P2B6hQGQbNa/Jc6/O5CkzL/9aautEl2gvy8NNoXnE7U/vKD7+XYDwD81+tL4xYO7P0ZBk3VfN6e/WdDUAgom1b9mbtJ1O/2xPyzXnv5YP9g/yNgRT9E1w7+fG0VefZTTP97pEanjF7Y//+Uid1RH1L8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MDIxOTg0cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM4OTAyMTk4NHEBYS5kAAAAAAAAAIIsessyZK0/i7lM1BPntD/ZO4JrzYDBP5/GCeIRw8C/PtEwHDMfkD/EC7yQjr7EP6I+sbTsvL6/VysPu2jgwT+7hUW4N5+6v3q+7Z2xVLO/Ix2pBU/Uuj+GtXMB/j+bv83dOh/G4MQ/UHk781Afvj/FIrjFIlilv03uTqb/z70/EpiKDyh+w7+h38v0EP/BP9MI8hOlwsU/cw+0zJgmrz+QfRn90ZrEPzbr9u8YL7C/2SLCHNintL/yBXDCJ0rGv4kdKp0ReLg/rnI24ix0sz9TbhZn7ZnDvzEngbcKLoG/xQE4BG0duL8Kzs/K+Ne1v0jM3BeJMsi/F2VlUryjxD+QYJzdmuLEP0rIW+XFs7+/ROcD/VmtM7+SWa5/CfyxP6xPm1+TQcO/am0+PtEgs78YpsrhkE6hP11Y7mzmPpK/+xI2zWt8vr9NtNfKOh61v0AhQ2H2ucW/iAsvtRYPs7+g8J4Ssvm3P1I3VYEwxrg/bFDudTlGub93+734DsShv3oKRj8NNX0/OAmMn+z9lz+qdMFzwNS6P1yjTq5OPbw/5rJvr9xPuz93Q4KENimrP27dcpMHlKO/4hFsSF8Sx7+MK3Gn+oqgPyvXO0TKO3g/WTgcQcLes7+AJsg0eBO4vx6alzPB5rK/wCqNNgEfnD84HFicJwqov/JzuHsJrac/GWrs7RL6rj8jfAGvac7APyv564xGtsA/vf7cJfFXwL/qWviZsWi9Pw9HhD0xb8G/UF36j1SxsT9KCu7VfpvDv55KFA55bmW/Glx+Gf85rD9qTSmNSjjCP813r+ZPGLQ/IASMaujRmD8RFghTsyG9PzdA9hrKqGG/5OH8uYOfwT+PnlIDetK5P9CMb3XC0Yi/itnq5L9ltL+2p7F33TqRP6Kh7wRvhr4/dCoyH0b4uD978vuoM5DAv1w2jfNIM54/+5iZxmTtqT+IrjiLhotzvxHKUSt4Jro/SkFdjfP6mb9iETvlKQa5v79eCos6LZ8/Z0dFWDJVvD8OGgon6LiZv43yAhx5V50/a7EhqKw4pr+c1rY+0mqsPyGjYwQdoLE/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MDUyMDAwcQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM4OTA1MjAwMHEBYS4CAAAAAAAAALaTMUpNboC//YRaxUBhs78="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    8,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        0.14891943984570666,
                        2.6212686544989507,
                        -0.7556340733930041,
                        1.3136818510048056,
                        2.3222564228775466,
                        1.2062290508441,
                        0.208102390574978,
                        1.3492633814242634
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8
                ],
                "values": [
                    0.14891943984570666,
                    2.6212686544989507,
                    -0.7556340733930041,
                    1.3136818510048056,
                    2.3222564228775466,
                    1.2062290508441,
                    0.208102390574978,
                    1.3492633814242634
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 5
    }
}