{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        8,
                        8
                    ],
                    "values": "eJwBAAL//du50t2IQOw/JRNHMvFAgr8nPwm5KdCgP0Q6qG32040/eFdeUTDekj8l3CRkfFyyP/YZp4sJPZ0/S+ED/Z/Guj/YVeX7XbCmv+CGQwBA8+0/0sZwGkOmwb8W/ViGys2+P9CFl9HVCbI//mAwCVtIYD+/lH0tgN+qvwDlKm7eL8c/oB54zKp5gD/+eavgrhahv07pTivIXOs/fvT76BdFpj9VscjP0HCIv/gpyVvVI28/HhntBZ3eor8zq25dNF3DP3ymjFL1h6a/OloNh7imfz93x09f2ACYP4jIfIjDqus/hW3hpZeNkr88C001xfKjv8mbayxTvos/6/02tP3dsz8tZ/Um61m5P7+xcdZZypU/fcNABYTbkz/EARIMOlinv8E/i9qda+s/+PszTkLFXz/THxbb03iQv8uXMUPVZaw/tS6iEf7kuj9/QSVC3HhKP/7MI9r5J6A/jXRrMFdOfb/H0+C/LG1Yv8uhS+inLOw/v0Rzzr5ddr+XzdMauX6jv+hWq4K8Zrw/EM3Wu5wUlb8cJXnGqTKzv889SUvgx6E/bol3pWB7pL+NoJCUOuKwv8MaWoyCleo/EtEPRegeuz/9J6YPv4qSPx9Vli1WlXg/DOf4HDi0oD/aHm5cqnejPx93/8zyyHO/cS9FwhM/qL8mYV2jSh2MP8o0gEepPus/KigHXA=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "strides": [
                    8,
                    64
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    4.623541008340197,
                    0.3792117972934429,
                    1.9727439411760272,
                    3.9782766162398566,
                    1.3228662412033563,
                    4.574994519519721,
                    0.9381065308757507,
                    9.7474031979762
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.2541935485379809,
                    0.12354028145692399
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "values": "eJz78YNx8vxHJ+wZojdr3lrYub8htdLWYMvC/QyTrZ5x6yze39BmWqF7f+d+hoT5Ysf/NO9XeL73+bebS+wZvqya6vl2CUJf5LSN505ssD9w75to8fbN9gwtN68URU/ez2Cz+pp+xvT9DBz+RgKRdfYM4g9zz92fYM/AcOLkK5Vie5h9MH0NJ7dUdf86bs+wa3mQ4rnN+xmOLP949v28/QxGkicE+5faM1Rq9HVvX7mfYVHQ6c2zNtjD3Am3D6avLCD8PNsVe4aG9f0cssvsGWborH/jtNWeYZP41k3hk+0ZLqTvrrm1wR7uP5g7YfZB9TV060X/33DJnqH0l1HU0437GQK4tFsPtu5n2NPz8cWqZfBwgfsP5k6YfVB9ByL38xw0uGD/gLWdTcwJGN4FMy9+OLHSHh6esHCB+Q/mTqh9MH0yNvYN2//etWcoUqtQrN+2Hx4P0PCEhwvUf3B3Qu2D65tQ+DbvyDF7AFbJ+Ts="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            8
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            8,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5NDUzOTIwcQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4OTQ1MzkyMHEBYS4yAAAAAAAAADUtGpnmM8+/pUzWy3hPtD+2Iac03JO8P2MDO02z6bG/Tn9m6KKSkb/SUp5MkNbVv0HviNnpidi/O1KUysfMwz8xXSn4VwzRv3k+Je3Ny9c/pPZixDYz5D9c87IwdLLAPwtTGKZ8JNk/01QDJQp2xD9rBdtjjYzdv89Z/OC6wcA/Psqn74Ysq7/71o+edRPVvypmoDXk48a/yLyzQAkm3z8m8Pd/E93Sv/XcUcl8bNe/ACO9O9p4vT9trmH9tFi+v+0DNNZladQ/Cl09epTIvz/hJg2HlW7Tv/3pSKGwkNu/nguqLr+vsj8jPUtbczPIP6fM4V6nE8W/67W7e0We1D+xnoFt3WfPv1zQzKUUVtW/FR5R9Z1myr+TDdgKCQe3P6UzNv+PbNa/DhkU+J495b/FdMMVoJioP9WjtyDlE7U/hzQ4nTXouj+DQ8wSWaSJv1hDrajd85m/DI2dPK6W0r9RZOkjMe2DvyjfnYHLpOc/TTcU9nTN5L/8vDtV5nrPP/yb/sfq7po/iYdn+AeP1b8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5NDI5MDI0cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM4OTQyOTAyNHEBYS5kAAAAAAAAACKn7QSj0pE/Hp0eeIQkvz8Ug/Mecw2tPxR/+TPK4cW/nHchtbhucb+0FJ5mMi/CP5TahWI0nrm/YZMRu2jgwT84B3Jmf4C1v2JP0u9pc7i/GxOSVwfzvz+/UDkkcA2xv1ZMIh/G4MQ/omWKy2AuxD8f/OYbMahbv3DGEiW4BsQ/5FWxOIQNxr+EQH+YgTzMPxxE+BOlwsU/vPyLCb3QuT8VdQNPirnJP/QP5e8YL7C/szevbpDGub99bmrrg9nIv1geGZ0ReLg/WPpehZ2xvT/5aB+QSSnGvxsluLcKLoG/k5373A33tT9SGlHgEJrCvwoc4+4so8W/wdR6KWAUwj89/IMG93HHP6cynESb+MS/Gz7APuyFuT/DO7o6GazAP6sr8Bu2Rby/ZLcykIk/uL8NGb0UueSyP3OnaiLctpY/2dymfLNdub+t0s7xBP+vv0oRdYpSSci/Zf5y1Z81wb9ZwX9VsLqnvyfmIrt/Ea0/HIjhDNXBwb+6h3OcfwGsv0Fnw7GJZMU/CMji79X3kL9yP1awfGeZP/+AX1yWHrc/17d9C2wSsT+l3yWUU7OyP/3AtnM221w/ez+SSdnYrr+sp5wOKDaJP9SKqGzd14y/Qs57OqNCo7835nWGMDK9vxWKgoV5Bbi/niwbP/FMqD8RODmcJwqov0P2068x35o/8IXR7RL6rj+PMgoMG368PypC64xGtsA/dq7s5lCDsj+/iBJI+Um4P/fbi7hFHcm/QeJUfDglqT9QatmBV/2gv7f9vrb5I6M/gpuj3rc7sz/vACjI3FG/P7NlmIW+taM/rPR1aujRmD9seqe4FIurP0m1TjyYRb+/AQ7AWkyIrT8ow0RVMvG+P027aHXC0Yi/8btaJg+Orr+pRaxf39qiPxRcfaNVs5M/Di7kcP4Wvj86SRuu9uK2vwewDfRIM54/Jz2lRehfnz89gsOOhotzvy4CGYAwRb8/t2sTauo6p785y3veAVSjv/d6WekN1Kk/mnMhIsKGzT+eUkW35Bmnv9MIyjEt6ag/SggcqKw4pr/Z1DjD2XK4P5qbS1bVvrY/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MzU3ODU2cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM4OTM1Nzg1NnEBYS4CAAAAAAAAAFcXMfVNX6A/VXRAF/l/uL8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    8,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        1.24099773588116,
                        2.0257545956504974,
                        3.49138380139163,
                        8.547375397641302,
                        -6.367761780539201,
                        4.953266618608071,
                        -1.1800554101923655,
                        8.84800332328395
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8
                ],
                "values": [
                    1.24099773588116,
                    2.0257545956504974,
                    3.49138380139163,
                    8.547375397641302,
                    -6.367761780539201,
                    4.953266618608071,
                    -1.1800554101923655,
                    8.84800332328395
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": "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"
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 95
    }
}