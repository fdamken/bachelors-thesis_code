{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        6,
                        6
                    ],
                    "values": "eJwBIAHf/rj3/XgmzO4/bbrLxeQueb9PtXYRE2ySP8zY1tEFJJ+/WeoNd+WRkL9CwYH6UVijP31DDxpZg42/U29zhHLL6z89cDOyoT2jv4i0O4Ged8A/4mBwEMJepz+nuYn3EmCZP5h+pupfhYq/p/u+sT+2cr+C3Cy7D3LtP5gF8QKskXu/rlQy0VaFoz/WjhcnyAGpP1Aa7TUa1Zi/U7pupUnBpT+CeqiVQkSIv5r+0eXw7Ow/uL6r1lNugb+rEsnjwtSJv+fqmveerrE/DGdmGbaNgT9+jvXgTRSwP2LrovsbJsG/WxklOprD7j+iEFW1ZUfKv6F5FZz8nKi/W+JT1CpTpD8cfpWI7RmlPy8NVCpjxJ0/xf9Wmb1smL8hWAJAKRXtPzJBlhs="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "strides": [
                    8,
                    48
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    1.6564166070290334,
                    0.6960475204679882,
                    1.2889563605452774,
                    2.5917984328071966,
                    0.4950417669705947,
                    2.253336502886333
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.35845144127711503,
                    0.09244128054651202
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "values": "eJxLODgzvD/hiD3Dcdet6obT9zOkJ7/XmFmzn+HPs0r+6tb9FUGRuxkj9+xneCRVlHywGaGutE6T6e9We4Z5p9rEt8/bzyDw7ty9I337G3ZryMs3AuWfvTn7+vRKhHlQdWcKMpLysg/ZKzzwuLh10w57hT/x9uIfpu8/IJl/MHD+Nri9MPNg6g4wmnOv7zlt36CzxUrw9Ex7BtFXf6J37oS7D2YvzDyYugOvlUJr3Q7ZO1zOyV11caE93B9Q98HthZoHU9fAeJxFzPGoPQAd+I+y"
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            6
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            6,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MTE2ODY0cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4OTExNjg2NHEBYS4yAAAAAAAAAGKIGNYM/uA/T2hVIcWV5L+OjRv9OqLVv0J1J2enxMM/OBTzd93Q078QAQNRy8nCP/abqctGDsC/Br7aShA5zD9js6tdMeHQP2ITXcLM0L8/JtIT2tmlz7/Yr9vlG4y4P2ORKuOR8NM/aoatLSEEoT/vh3TV8AXtv8zkqQAqebG/ozrZjO21tL/XtCq4V+XVP9gCnZw4Mrg/hwi+r7gGxr9ePzuUvRbIP1eV6w0LcqY/auNBBlTt2L//DvuoHWHNv48N9A4W6q8/C1Sq7oWbx7/4OMntj+DRvx3AdYuQVN0/D7qDR9JZlL8xCavTUjLDvzzs96qAX9q/DUomqWXEr7/kWifJ5r2cvxm5AvIPYMU/alYUBIxuwr//ugLGEvzLP4IUbQp3A98/YHaD7bxPbr80of2yI3Hlv2Hgofplk8S/2rtIKCFWxD+JIVC+CL/KP0F/xg19rtM/ubOQ4SGhfL8SZq1Q96nCv02asB+oNdu/MOMAR0Dxg79zIm9L6XzdP3FoY+IyQsi/myCg8y8Cyj8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkwNzc2NTQ0cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM5MDc3NjU0NHEBYS5kAAAAAAAAADTfD/AWeLE/fenSeqMUwL9haj5rV/Sxv/+jjO8hibo/oK+po0Hzoj+rqnFfbJG+P2CRmdRfZLG/H87jL9idwT9nalXFlZWmv5N1z9n3NsM/dpSGgRB9xz/gQTJlPRywv5gHOaPg5ra/5q/Zqw18qr/B32oir5nBv3h9gUwpLJe/gFXICKrMc78caYz6Flebv7jqqndnycc/LwnfGGcuyb9VoKcgmoW0v4Yro4PhN8e/QVcmcaBtuz85cDa8GC/BP59uBAHancM/JhxqCeNAlz/pOwxSF/K6v7uJnZsGyI8/KnkLcb17zL/S2NrBRoSYv3w3hlob59O/J+o3SeaFxT/RnDwvPPqxvxR3OW053bK/RfR3COQxsr9mrkx0bT/EPxD3ilLQnK6/0BqLl68hlT//OI0r8T++v0Nx8UnPN7S/6Ylb0EPetT+ojBKrsqy+v3r1i3Ltv8k/y8ZYwlqMwr9kOS/GetHJPxmISRNE0JG/dgvi+RVSwr+bTbdC2qugPy67Bcrj/7E/FszU9u/DsL9PBxKmP3O4v9KXki7JBYW/isa7nW5Huj+NZPcc17GMP2NNne0t7KS/MCb/EQ89wr8rvTzYZ3y7v1HvdT6NbMG/Cwjsa5E8nb9AQjDh5yGlv0m7qALN860/BlISHlr9sj/xvoL6y8qbPwlP0nLrua2/Q7ERciu6wL9wswB+DBJ6P+A0/m4bPLK/msTAI26ar7/jq27sRd+0v8EhxS3Jubc/Xy3oZQGGqL+8ISGXb6e3v53j23BQpqo/P8zSJ9eshT8yXAJ0jvq4P2/GKT1fiMg/o925+Kbqk7+kVsTwUzW7v8uyjYMHns4/JxFDIpOsWj8mDohg2EfWP5MxtjbO1Z2/K88cx/aiub9tFA1ph1a1v1yYXqKl/pS/aAib8MahjD8vitCvsiXAv4f78GJGnr+/dtrh/bFUl795mYFJmCyuPyX5nG9sgKQ/0Ms5USrItj9duA1ChKqAv3X9pl4p556/ANPQA4Kjlj8CnGROCIOvP+xE8dX3dpK/0umVcMKftj9Po3oYgKJ+vxlTn92i9Ki/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5ODc4NjU2cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM4OTg3ODY1NnEBYS4CAAAAAAAAAD4ymFtCDr4/nEgxeqsrlj8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    6,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        1.269571855739776,
                        -3.7122766206744378,
                        0.7058903701525346,
                        -3.983433850799688,
                        -0.734190720460834,
                        4.811990129819427
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6
                ],
                "values": [
                    1.269571855739776,
                    -3.7122766206744378,
                    0.7058903701525346,
                    -3.983433850799688,
                    -0.734190720460834,
                    4.811990129819427
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 95
    }
}