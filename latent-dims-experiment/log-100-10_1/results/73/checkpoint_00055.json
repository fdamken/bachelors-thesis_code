{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        6,
                        6
                    ],
                    "values": "eJwBIAHf/r66bIxixO8/L4HLzgDUeT+5BC1jmpeqP0ezxWVlTZS/1D+o+tXXmj8SjIQrRnWJvxFW4Ac24Ks/9mhrWOg47T9oqH3L/xqYv4wyvd45SaE/SaMTpUS+pj8NTUTjbFiBv9MDymmaxZe/oSaU2CPncb/EGOIEuFvuPy+34obnTps/9ahhknCwg7/07GMfKmyxP7tZnl++BpA/vx1RpTq/oT9S+AbIDqeXvzNrFR2zO+4/A9CG6ir1ZL/FjJmBTLiQv1BGeOwHoaI/iZlUwmxnoz+Iinzhl/iFP8nQn4BfwqS/TgjZKmqf7T+KA/8EukN/v0lNhs9Uf6G/tGlt5pc9kj8mrucc8OuGP2sTi+Os358/OqyyJXtKgb9W3JdKfsHtPx1alAw="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "strides": [
                    8,
                    48
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.9276126217892179,
                    0.7861849670612329,
                    1.12749772040331,
                    1.5182512273294158,
                    0.6505789447912689,
                    1.5166453550905399
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.24640592117616142,
                    0.37340685574498833
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "values": "eJxbIL2mXOPOVXuGJblntl1dt//Bo9eZv7N27D/QLbrBt371/qhmn0vtlsf3NzD/Xy39fyVcHUPeK3avW/vsGRKWpn//VmbPEMm3zn3z5P0fkjgMTtuv3N/QatUidncj3DyYuoaz33RY512wZ4iRNT3uscV+xoPS4Lv5W/c7aLWct3PeBbcXZh5MHcOmK41zD1+zLwu72n/B64B9w/cfbyo2H4O7D2YvzDyYug9zhF8xOFyzZ9i3v0hUvR7uD5j7YPbCzIOr85v87XfoWXsAr5eZCQ=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            6
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            6,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MDA2MTQ0cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4OTAwNjE0NHEBYS4yAAAAAAAAACv9HwS9bN8/KQgo2OMa4L+HBdr9OqLVv85V4Ggkko0/AaGUT4FB0b+hL0L6JVa7P2ih68pGDsC/M7dbIvyKxD+3urddMeHQP2nCDIrCd8I/UsxKubmf3L9UbctdlNdwv8k6DuOR8NM/WzwJlTnetz/ZhlZtip/mv7gY33zjtKi/vWjfdGour79qPxu4V+XVPxGFr5g4Mrg/UtJXF5CSt7+I4cXkdTXNP/dHIVuccm8/naMLBlTt2L+NqFgqCbPFvzUNJA4W6q8//wVZQD66zL/T/DTs9mTEv3FORHPiDNw/+PgF3WiLpD92u5T7rsHFv9LjDIIk0Ne/MDcqgJ7cyb9tX8XA5r2cvwXQwkPIfso//8+0tl++v7+swQWSfnFWv65Nc4+SJeA/GqORDd1fpr9mKrB1GZrhv4f7OPplk8S/0Dzvedl0yT8OMvnmZE7NP0A/bHeJH80/+7BV4CGhfL/lEDruZ+fMv+m/U12yDN+/eBEv4Ck6vD+pSCXZ3NDOP8hviDDrYM2/kwrrX35n0z8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkwMzI2ODgwcQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM5MDMyNjg4MHEBYS5kAAAAAAAAAOrECvAWeLE/NdDQeqMUwL8zcD5ZnDfDv16Xhe8hibo/GkqJx8nVuD9p92xfbJG+PzrqNiYYg7a/GljhL9idwT9cnF9MeEWQPwQZlg5/MLw/vyOFgRB9xz8gui1lPRywv+LcGezhDrI/E8oC/RDxgD+jlGcir5nBv1158kspLJe/VLPGim0Pjz9LJBDVC8fCv0NhnHdnycc/yFfdGGcuyb+2LYxyUqS5vw6N7jEpGcK/DaWDYSxGwD9rEDS8GC/BP50V/wDancM/Gckt12DJs79+IghSF/K6v7spxJsGyI8/w+Dq9ig/ur8e/5XNe3GQP6hCTZax4sW/K281SeaFxT+scSuB9Bi3vyQkGb/x+7e/TMZmWpxQt7/PREl0bT/EP47wilLQnK6/ocmcb0jOpD/8doYr8T++v9hxwx/8ycG/czv8OdoNwD/ePByrsqy+v1XqiHLtv8k/NQrBMv35v7+x7ivGetHJP5ODq6DpVGU/UJjc+RVSwr80ka1C2qugPytlBMrj/7E//qi7SKjitb+5qxqlP3O4vxf+fC7JBYW/K0XXS7YotT+5H9Ec17GMP+1Ao5N6XZW/eiYBEg89wr/KD6jZZ3y7v+CzeD6NbMG/nwG0/pSMsb+sV0rmHO25v0btN9OeGLQ/Di0THlr9sj8qkWr02062P86X6M56fKO/CToPciu6wL9/ttRPvOyLvwDCNm8bPLK/w5SStacKur+FojY1G4Gvv26Qxy3Jubc/36zQBLlhsb+kCT7n/dOqvyykty1Rr7w/g0LGJ9eshT/DUSFzjvq4PyuFRwaWqtI/99UnIMQypL9fU8fwUzW7v27OzlqrDsw/jANLhLaNrz9PijBMKgDVP8rXwDbO1Z2/YbAhx/aiub+AtwBph1a1v5oozBg0+q6/owwE8MahjD/9TvWvsiXAvzSo9GJGnr+/dbvO/bFUl78PnsClJ++jPw0umdumfbQ/c0oebgWwnT/lsDlChKqAvzibsV0p556/qE7BA4Kjlj9cDAHL9P65P2ZT49X3dpK/RPJzwnq+uz9WfqAYgKJ+vzzftcAJmbG/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzM3MjY4OTYwcQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTMzNzI2ODk2MHEBYS4CAAAAAAAAAFjokFtCDr4//kgdeqsrlj8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    6,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -1.5820345621355565,
                        -2.9444684237907475,
                        1.7464131097349838,
                        -2.509158004048721,
                        0.14075123658222158,
                        3.9838783980882937
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6
                ],
                "values": [
                    -1.5820345621355565,
                    -2.9444684237907475,
                    1.7464131097349838,
                    -2.509158004048721,
                    0.14075123658222158,
                    3.9838783980882937
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 55
    }
}