{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        6,
                        6
                    ],
                    "values": "eJwBIAHf/jdiE7gvte8/F3nNJSUofT/AztlwqoKrP0Sir0M2zKG/5tLbEj37nz+GeEpLyDuNv80GrowZlqM/+KXtxgEr7T9Y0iTD5iScvxOkCzh6T6E/OfaHD9hioT/DP2HT4ruCP/wO3gjsKoi/IYBuliBLdr/Op/JOInfuP6O61Vtg5qA/owSsH40Ph7/f5AZP6WuyP+/Zkr1K3Y4/VbV5z7JWnz9/agpO0PKfv38ABXWN3+0/1R1IHQpycb+gVvZt8dObv4wYYc+KgqQ/hMiXUIQYlz8Ejt6yCWKfPwU47p6Tfp+/0Ij5kaGy7T8h2tlngVmMP2cacuHxvqC/Z7Vi8XVHmD/dcpn0RgyaP1Zg0Dz06Zk/dVuvt3okc7+rS65BAHPtPxJmku8="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "strides": [
                    8,
                    48
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.9092100232373631,
                    0.8423405516170609,
                    1.1323528140927663,
                    1.5243578937602096,
                    0.6831228671853569,
                    1.3711717362939617
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.2515491098903849,
                    0.2676654323880366
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "values": "eJwL+DM50VH0hn2D89I+frb1+xlKdms+Ord/f4Pzmg2notfuT9jpsCas/Nh+hpy9i1ssV8LVNcx5+CGiYr89w4dbtk/as+wZBJ7x/yjr2V8we5blJ5kV+xteifJVxW6GmwdTp7Dnk3ph7iX7hk88C1ZZb7F/lBBw7kn29v0NV1VEzt3YAbcXZh5MXYK40IW1J2/Yb8x1mh2lc9C+4fXvy7q/T8LdB7MXZh5MXYGmRWR23zV7hkkv9hl97kP4A+o+uL1Q8+Dq9vHpmFhfsAcAIdOWhQ=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            6
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            6,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAkAAAA0MTkyODQ2MDhxAlgDAAAAY3B1cQNLMk50cQRRLoACXXEAWAkAAAA0MTkyODQ2MDhxAWEuMgAAAAAAAAC13cnTiTncP9l2bo9CSt6/0xSY82P+1L+kLhw1hi5yP4ivOFpY5dG/L4bv0MnGuD9MHhltMY29v001QngrSbw/To/xVfxbyz/js5Z1FDDBP0vSjsOQQ92/YJQHCqd+pz+mmMnYukzTP/8rOmzdTrU/LMqo5J5N5r9Wlv4qK5ajv8r8CyWyD6q/TJxZwi6J1j+cAZVv3KK1Pwshm9KGi6W/6VM7+SN9zj81E05eiFeMP2j/RBArkdm/XuoKP7f6xr+mdDi8XcuqPyZr2CuQcsu/Iugh10gdw79TZSxBr9nYP3bo/i4hqqk/cUN5DF0Jx7/Xv0tjn+TVv/i8w5RMJMu/j2fCHHaAkr+F9zNYdsbLP2aIso0DL72/BGgmGhFJh78o4pAUfnfgPxkYRwQD3rK/QPr93H8A4L/7Y7blt0vDvzABeGUrLcg/CFN5+xKWzj/4ZOli29fLPwqaJ15BqWg/lQ3rAhYvzr8nYZMqf9nbvwSaMwmGyb4/0keAdkUM0D/b7whFmajOv4n3JmpVC9Q/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5ODM5MjMycQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM4OTgzOTIzMnEBYS5kAAAAAAAAAAkAKY510a0/w2WrzOqZvb/rVsNE7u/Bvx5aj8bF+bc/cnCTnm1Gtj/9r3Y2EAK8P8tRPP2787O/o0lmGypWwD9dPB+iHiB4P3dCn+Uiobk/Hy4KbWI1xj/0PG94whmrv7wGR4YL/64/zvlqVYJOXL9UcewNAVLAv7aQNVBx3Ym/ZAsyhhgpdT+g75TAXX/Bvwd5IWO5gcY/qltiBLnmx783KpZJ9hS3v8Atcx170cC/qG0Qmvz8vT+a43FP1c6/P+zwg+wrVsI/blQ2rgQ6sb/v+REpu2K4vz9nufFzIZo/ub0GIIXOvL9uQPKmLNB4P79z0YEDm8S/Y3K6NDg+xD/PpiGqUKi5vyUJI5aVbLW/+HRwMUDBtL8aL85fv/fCPyLjngAYfqm/pUtjOyBfnz+DNZAClbC7vwTESAtOgsC/rHYBS1iMvT/1qyaCVh28v8DEDV4/eMg/E1TKCaFqvb9Iz7CxzInIP0cGC79NS36/Ohxh5WcKwb8zaYLhQxqXP9iUHUIP4a4/dEXGH0xTs7+U6A/OmwK7v2MEYdr8XDG/oenMdBK4tz9BWkuq621wPz63fDfrmp+/LM57Jr2Ew7+4tK2wC+24v+Sd81I7tMK/zpepJ/EbtL+80ZZrCD+yv/xxQqpCibE/IZgIR7aMtT9/aXXLf7+zP2zU0yAzm6i/V0kpu/rkvr8lWlIgbMdtv428K5h3y7S/LhSdjEt7t78OdpDD6U+yvyHiu1YlSbo/0SeFt7mkrb9/ml2VRbWlvwwmO/0OvsQ/NMKlAV4fQz//iStKMmu2P7MbkOcQv9A/jyJ6nBconr8EgdTH96W4v+cjYh2hN8g/hlNgMv5uqj8GEXktpRTTP45iS22fCaS/sn0X8FIyvL8F1gJAK8eyv/9h4cZ726m/qTOmUMtNcD8nWPU2Cby9v8L480XRFsG/V730s4Iuir9/Mbf33w2pP0UAo7JK7rE/bGf6CLv2oz8dXPLEspKSv4ZU0rm4qZS/P3rYvyLMiD/kNguimG+3P0KlG2QOc4C/7Ex+mR4vuT+Zur/shKZkPy3kiS9bE66/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MDU5OTA0cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM4OTA1OTkwNHEBYS4CAAAAAAAAAMubmjLmfrs/hmGSrHXchz8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    6,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -2.343119463369353,
                        -2.913425275558779,
                        2.332839260924667,
                        -2.283486634234245,
                        0.10977812578557915,
                        4.057071590273275
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6
                ],
                "values": [
                    -2.343119463369353,
                    -2.913425275558779,
                    2.332839260924667,
                    -2.283486634234245,
                    0.10977812578557915,
                    4.057071590273275
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 50
    }
}