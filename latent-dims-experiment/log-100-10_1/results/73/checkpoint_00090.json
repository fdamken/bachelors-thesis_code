{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        6,
                        6
                    ],
                    "values": "eJwBIAHf/ghsi3WlTO8/JZdKeDvGkr8P/MA7kPSTP3x2Sj0C0ai/+Ltp67voi79sjg6BeMyOP4POJ1+P7ZQ/JkkPVSdN7D+2X6o74qGev5ZgGy92psA/64XioQjypT8K1Y/YcPSaP9OgoRWoO4a/SXRuQ5jtVT/yQSVi9oftP2eoCrqZ+Fm/yTx/WTQzoj9qr3X8N8qoP6dUKaoWd3q/+2kE5uxtoT9ENkH2l4SUv9HDO1gA4ew/9J1ufBfpd7982RyfsU+fv81kqjqOsaQ/mtjqCDOroD/MzlUmGtOxP9u7sZ3aD7S/NH7i8AE17j8ABLlIWWjGv6AkWsAYI6e/0cz3x4K8nT/YvQz08Z2mPwnTt+Hg/ZQ/W6S/EuJymr+4VE1TqU3tP7EylyM="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "strides": [
                    8,
                    48
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    1.6250031382583248,
                    0.6796123933672314,
                    1.4252734720871822,
                    2.542041287011605,
                    0.5159410186887778,
                    2.504338678460934
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.14128656330759803,
                    0.23084814898659994
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "values": "eJz7ISrrx5B/3J5BTbxfRWbKfoe0Px78mm37GdL5z8Sen7F/T/fxi66qh/YzuP99MrdxIlwdw69VG1c932bPwG33+kPz3P0M6355veWftP/AiqjQq8IL9jOsaIxcqroKYR5U3SsVPanvLoftH1yV9w3g3mnfoBtv0nd+6v4Evwit/gPb4fbCzIOpc2D7zld8+ow9w6Ml/JfWLbNnSJm1UnHfLrj7YPbCzIOrK7zXyxB5wp7BfUvIz/ez7eH+gLoPbi/UPLg6w30T624dtQcAQWiKUA=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            6
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            6,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkwMjEyOTI4cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM5MDIxMjkyOHEBYS4yAAAAAAAAAH/nBFv4T+E/jczZhyv84r96L2vetbbTv1hTsHdVDMU/8ejEbQYt078Ng3cnguW9P/qnW24xjb2/DF0ANmLxyj+jF2NTWj3QP0g+pnUUMME/zgmAC3K+0b9P0bovGB3AP+cL79i6TNM/uIq5etkipj/zpfA7V2zrvxkuKimGCLS/fwgiZpEmsr+a3E/CLonWPyPtfsWUwbo/dbEucq4vwr8LApeoa17JP3vC/7tSU6E/tJwG/HxJ2L/OWIq9y6jOv0ULBzBnhLI/88YBAzTjyL97BIaeFerPv2Ggc5Vn+N0/r10c6UKXnr+diADoAHrEvwV6Qoz7c9i/jaKUQ0eQt79+f3O2q32jv7ssXga+p8Y/PPTB790mwb+2gxZgrJXFP/UOqRROp98/WoJpd+TNeT8FgIsZitfjvwqZPua3S8O/vJKwPM+dxT8pdvHStgbMP8uCyO73wtE/xGcQHLllkb9JGeC2XRDJv+83KT4tId2/8cqPwxA2lL+vwusYtknaP9I5ih89Gcy/aov9LzrZzT8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MDI4NDQ4cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM4OTAyODQ0OHEBYS5kAAAAAAAAAN68AxlzB7Q/UwlNj1Fcwb/CQvCE9smuvwqtfhh+GL0/KVGY9fkRqD+i5zJEZJDAP/50dU90Erm/EthdRIblwj/iLXo+s+WMvw10U8VJ78E/sCYAlr7EyD+LrSSOmauyvwcw5awnNKS/RWG//cWar782IuQ2XeHCv3lll1Fx3Ym/P89UhhgpdT/g9RxXphmRv1fRGIwVEck/bcJYLRV2yr/wt5pJ9hS3v2xwHJiPf8i/rm8Zmvz8vT9kH7DQxnbCPxxlfBWI5cQ/AvMwy+QGij+R6v96c4G9v8nwG6hKmnY/YFebM7OkyL9pskFx7K6aP/7xzjuW+9G/QnGxXZTNxj9nSDZYmIm0vwXbK5aVbLW/1+VpMUDBtL9A+sWIG4fFP7jLOVLE3bG/OHSCwQDtqT/K3j+qpmfAv8zC0nIrx7a/xZw0S1iMvT93xOppB57Av6tBBYebB8s/j17graxEwb9UwqjaKBnLP2IfFL5NS36/WI9XDsSZw7++Hp6UksqlP2Qv+vI/j7Q/fnfHH0xTs78dNgvOmwK7vwQXnt78XDG/OW2txsrWvD+8b6Oq621wP/YFZDfrmp+/IFZ5Jr2Ew79EN+iwC+24v4y88FI7tMK/GVLV+Ae8Vz+IdXdrCD+yv+59RqpCibE/nvoER7aMtT80dGfLf7+zP7yw8iAzm6i/pk8uu/rkvr85bUQibMdtv1o585d3y7S/7gfWOpNcsr9cy4zD6U+yv6fzuVYlSbo/7SHQt7mkrb9o2CxuExi1v/f/+B6Yh6U/vwe6A14fQz8nhA1LMmu2P1nTl3ppX8w/JvmJnBconr+Cu8/H96W4vyVVfOCIOtE/2nJyMv5uqj/oL8Vqr+vWP2YXQm2fCaS/ZMET8FIyvL8pjQGS4+W3v1/T58Z726m/MwfkUctNcD8wBvk2Cby9vx1l80XRFsG/a7gbtIIuir++Upr33w2pP5MrhsEkn6k/P1hCKM44tD+O5NrEspKSv8N8zLq4qZS/WF/8vyLMiD/JPydQ4FCyP1IQSGQOc4C/R0uDmR4vuT/VEO+pEOaRv5/Qgi9bE66/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkwMDAwMTI4cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM5MDAwMDEyOHEBYS4CAAAAAAAAANUjRULPTsA/E2m5rHXchz8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    6,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        1.1320688758098725,
                        -3.6236601401355006,
                        0.6929684931688787,
                        -3.8961990053259647,
                        -0.7572534564497642,
                        4.806698815195856
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6
                ],
                "values": [
                    1.1320688758098725,
                    -3.6236601401355006,
                    0.6929684931688787,
                    -3.8961990053259647,
                    -0.7572534564497642,
                    4.806698815195856
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 90
    }
}