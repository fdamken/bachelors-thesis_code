{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        6,
                        6
                    ],
                    "values": "eJwBIAHf/vNuWsKFDvA/4h5CmGinbr+WQZo+EcWiPz233LgKspi/7cG4tU2AfL9MoDeA9CCWPyaUsoEpmqs/qN2GcBC67D+v4jQWBfecv0Y1RSsY0Lg/NhBEaULxpz9I5VSw44aSv/SB6QslLoy/VDcyecF9cz8KTCfOM+XtP15Fu4ZRgYU/7yUaXle9mj+GuWdCwOKqP+DF2w5/bIO/bNttEtA2pT+U+kFzH7SVvz6KnPaGpO0/j5R8VCv8f7/A5U2z7DWZv5tUzMTQdbA/FVjI0Szlnj8g3izDAvauPzgAJryRbrm/Ycxr7dFv7j8q7fz5WX+6v/iLvgpLKKu/xZcvVyOnmT+xILKWVdycP1TqzkPG15s/NCz21ifbmL89nL1+CY7tPyFDlGs="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "strides": [
                    8,
                    48
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    1.4522855413712763,
                    0.5887479569558114,
                    1.2060622756280992,
                    1.7944102164650746,
                    0.5028872934597818,
                    1.8537533897943286
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.2135798919484241,
                    0.2671449309406532
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "values": "eJyLMaw7FDXxtP2BlzaKq/1n7T8g+63y6LXO/Qy++1KezF+5P91C0sjzzbH9DE8j9pv8XAhX17AmSzMoc6d9Q0XyaxvdKfsZXvzJTSydtH8Gj6ea9tUl+xmOB/d8lV4HNw+mTmIyf0707mP2DnvCdAqSd9oHtSf+UZm1cn/C3GmBN212we2FmQdTl9CUbZ8kddHe5u+MNg+uLfYM/14mZPXvh7sPZi/MPJi6sgcb026/u2ivwFJ2Zd6rCfYwf8DcB7cXah5cXdxpvdQvx+0BqsOSOg=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            6
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            6,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MjI5ODg4cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4OTIyOTg4OHEBYS4yAAAAAAAAAGB5aIm9bN8/Ktt947q+4L/j5db9OqLVv4RPBsT5oaE/1CWGT4FB0b9jyjz6JVa7PwHssspGDsC/v4rpSRA5zD9LBWqSBjPPP/Del4nCd8I/9X7TpAtY27+PMvsQaG2zP5zrP+OR8NM/muA6zJFBqz+XyTB6YUPnv9YPagMqebG/DF0Gdmour79usBi4V+XVP814SJw4Mrg/W4a4GZCSt7+1XeDkdTXNP7qYRA0LcqY/mtMpBlTt2L8fkjrRefDPv1RMMg4W6q8/NtscQD66zL/DFjPs9mTEvwl3LYiQVN0/hg9AxFlqpL/dMEn8rsHFv8qVGYIk0Ne/Ka0agJ7cyb8Pe7LH5r2cv2pG0UPIfso/j0jltF++v7/oXLNYVcejP8/Tc4+SJeA/oedgB91fpr8L5Bh/8D3ivx11Hvplk8S/0RbLedl0yT+gX0znZE7NPweiuXeJH80/D7Qs4SGhfL/jfZT0Z+fMv0g62lyyDN+/qZ9M3yk6vD8Mu8OAHLDQP9I7AjTrYM2/OKzlX35n0z8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkwMjk1NjgwcQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM5MDI5NTY4MHEBYS5kAAAAAAAAAELiDPAWeLE/edrReqMUwL9aAe+8DxO3v1uth+8hibo/R+6hdRG3sz/v9G5fbJG+P8DrkdRfZLG//5jiL9idwT+Fg1ZMeEWQP+s12rCbp8A/SEOFgRB9xz9Bni9lPRywv8/Od9z6X4O/wko4rA18qr/GoWgir5nBv30j+kspLJe/WLPLim0Pjz/F84ViNhOxv+5QnXdnycc/IRXeGGcuyb87kY5yUqS5vySZ8DEpGcK/YLKFYSxGwD/zFjW8GC/BP1gjAAHancM/GDIq12DJs782GApSF/K6vyAMuZsGyI8/TxAiHwVdx7+Uc5fNe3GQPx7rAUZtn9K/Mzk2SeaFxT8G3SmB9Bi3vxfGGr/x+7e/0ah8COQxsr+llUp0bT/EP0YVkVLQnK6/LNadb0jOpD/7mogr8T++v6qavZuHVrm/7+USOtoNwD+0XgoHQm+0v3vCiXLtv8k/V53EMv35v78HMS3GetHJPytuIKHpVGU/cFPc+RVSwr89hLFC2qugP95zBsrj/7E/08m7SKjitb+pOBilP3O4v+6xjy7JBYW/PlfTS7YotT87g+Yc17GMP95Fk5N6XZW/Bev/EQ89wr+el88+7NzCv+5jdz6NbMG/nPOy/pSMsb9XNwZ77siVv/5POtOeGLQ/LccQHlr9sj9FlWv02062PybD4s56fKO/enYQciu6wL9SDQpQvOyLv47S/m4bPLK/QbyUtacKur9tFTM1G4Gvv/MUxi3Jubc/qcPcBLlhsb/k30lFt4iyv2V16XBQpqo/P/bZJ9eshT8T8CVzjvq4P7cGbGa7F8s/j8QsIMQypL8ul8PwUzW7v2NRwepf3tE/W0lPhLaNrz+daf90ho/XP/eBuDbO1Z2/Zdsex/aiub/qR/a6P3W6v+AQ0Bg0+q6/uLiE8MahjD/ZXfavsiXAv9Yx9GJGnr+/14nY/bFUl7/MaLelJ++jP+5+oNumfbQ/0ZMHbgWwnT8//CFChKqAv8oy3F0p556/Sc/IA4Kjlj8eeQTL9P65P04A7dX3dpK/YLV2wnq+uz+epJIYgKJ+v+vPtcAJmbG/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MDIyNDAwcQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM4OTAyMjQwMHEBYS4CAAAAAAAAAOAHk1tCDr4/RB0neqsrlj8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    6,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        0.329750564485269,
                        -3.427505968674163,
                        0.7534557065698008,
                        -3.359397569181077,
                        -0.1443829252392887,
                        4.546954559312484
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6
                ],
                "values": [
                    0.329750564485269,
                    -3.427505968674163,
                    0.7534557065698008,
                    -3.359397569181077,
                    -0.1443829252392887,
                    4.546954559312484
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 75
    }
}