{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        6,
                        6
                    ],
                    "values": "eJwBIAHf/qvkDTo2CfA/uqgyvRbKa788U54C9u+sP2xOopERG5q/YD0X1kVNjD+EofByySeKv4cmck7CfqI/LYi5yC0T7T/zztWLepGYv/p77OhSjac/SXxhhYh+qj/7UQm9QAp/v/PLNzvSepq/PXNUsK8JYD8smj84fTnuP870a0/aPaI/lPX6T9vQdr8YyTAAZ4CyP8W+fvL24Jc/Ccftgxk3oD8kGZkgar2Wvw/RT8moIu4/MiueOf9EhL/xlbePZ5mVv82DaNJ27qY/TiqXBScJpD+FBcyByhSgP+G6lm+42qy/eRkCXXvp7T/7rn2WQddEPwlvToltJKG/1wi0ODCZjT/SV9zXIc+TP9CBhSlydpk/s7yPO4Vogr/8jc4r9XztP0L4kYs="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "strides": [
                    8,
                    48
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.9693104011252899,
                    0.7374383256981925,
                    1.116764057240861,
                    1.5349191680606509,
                    0.5943555098797688,
                    1.6285722233455917
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.22930683183292785,
                    0.16121121664037658
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "values": "eJyL3vqOJ6T3kj2DvO2+4tcr9yf80habP3HN/gP93pdnB6zZb7VL5Imh0on9DXL90zc0rYSra1B+PyeCYZ89A0OD4KyCz/sY2NintXyZul/i/5Sp1e4r9zNke0zd57wRbh5M3Yt3uhd59p2xb9ivej0mfat9mIJEUiXr5v0OWgWTPy7bBbcXZh5MHcOK9R/ZLl6x77C4vdGibZ/9gTUbf+x6ehjuPpi9MPNg6mLTqsWXXrpq38Cv3XX9bgrCH1D3we2FmgdXlzE5tcbutD0AqbKR4w=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            6
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            6,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MDE1NTIwcQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4OTAxNTUyMHEBYS4yAAAAAAAAAI6b92Q4gd0/si1AXc9s4L8pYKLzY/7Uv0Zg0zt/3o+/b36sWVjl0b8rrJPRyca4P52rumwxjb2/b3zGhmLxyj9kCa1TWj3QP9wmk3UUMME/6Hl/w5BD3b8nyIa0Lh54Pxoo5di6TNM/To/QHiUwsD8kf8Tgx6nlv/OsbLib062/3lTGI7IPqr/ROlbCLonWP15NuG/corU/Xu+O7TMDtb/qRUL5I33OPwBmVF2IV4w/CvxJECuR2b9knaFmE4rJv53rSrxdy6o/GrbHVOwBzr+0uM/XSB3Dv2yfg5Fn+N0/bAHKEmHZnj9t7RsQXQnHv2NWmWOf5NW/M5GelEwky78TtacddoCSv5RjQFh2xss/kyXRjQMvvb+MewgVEUmHvxRckBR+d+A/Sw8ruCRBob+BK1P6BOzhv78dzeW3S8O/o8FzZSstyD8P7G37EpbOPwPz/mLb18s/rN1NXUGpaD90ceQFFi/OvzaSj70bfOC/AjQFCYbJvj/caPjELonNP+Z+7ESZqM6/MBYmalUL1D8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MDY2MDgwcQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM4OTA2NjA4MHEBYS5kAAAAAAAAAGDuK4510a0/48+szOqZvb9SIsRE7u/Bv1PKkMbF+bc/w4CUnm1Gtj8vL3g2EAK8P6EjvlYHqq2/9+1mGypWwD+PTTCiHiB4P8Rj0uYiobk/epcKbWI1xj+ivHF4whmrvyq7SoYL/64/xIcbVYJOXL+sLe0NAVLAv2G3O1Bx3Ym/qglChhgpdT/1BJbAXX/BvzP8IWO5gcY/kdpiBLnmx79uspdJ9hS3v/PDdB170cC/p1gUmvz8vT/hWHNP1c6/P8e9hOwrVsI/VAE9rgQ6sb/kVBMpu2K4v3FvtfFzIZo/IwTUuJ72wL+RkA+nLNB4P0q514EDm8S/1xC7NDg+xD8rFSCqUKi5v9eAJZaVbLW/jjJyMUDBtL9nMc9fv/fCP6egoQAYfqm/x8FlOyBfnz9AqJEClbC7v0INSQtOgsC/dmcDS1iMvT8qUOSBVh28v+KHDl4/eMg/2ELNCaFqvb8xi7GxzInIP0T19r5NS36/c35i5WcKwb9S8ofhQxqXP1QnIEIP4a4/K9PGH0xTs7/21g7OmwK7v1xgYdv8XDG/DN/KdBK4tz+gZWKq621wP+JicDfrmp+/KDt7Jr2Ew78QGLiwC+24v7S48lI7tMK//lKoJ/EbtL+m44lrCD+yv63MQ6pCibE/JlUHR7aMtT8//3XLf7+zP8hW0SAzm6i/80squ/rkvr/bHvQgbMdtv6Nj+Jd3y7S/BryejEt7t7+j3Y/D6U+yv3V+vFYlSbo/PxG8t7mkrb+JELiURbWlvwj1MMIIxa8/XgpSAl4fQz+RGy5KMmu2P5nRC/y+BtI/pHx/nBconr+upM7H96W4v1dAk+CIOtE/1J5iMv5uqj+aLMZqr+vWP/7fSG2fCaS/bF0V8FIyvL+yv/yR4+W3vx2j48Z726m/X2t7UctNcD/x3/U2Cby9v0oE9UXRFsG/Siv8s4Iuir8wfab33w2pP+zmprJK7rE/tgvzCLv2oz803+zEspKSv1Nd9Lm4qZS/wsndvyLMiD8Pgw2imG+3P9MTJGQOc4C/kSOAmR4vuT8QUgSqEOaRv5Z5fS9bE66/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkwMjM4NTI4cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM5MDIzODUyOHEBYS4CAAAAAAAAAJwanDLmfrs/EzmZrHXchz8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    6,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -0.6840032208759121,
                        -3.1455536513374343,
                        1.1713904541906868,
                        -2.7258448862742197,
                        0.08640772379675508,
                        4.134659793392506
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6
                ],
                "values": [
                    -0.6840032208759121,
                    -3.1455536513374343,
                    1.1713904541906868,
                    -2.7258448862742197,
                    0.08640772379675508,
                    4.134659793392506
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 60
    }
}