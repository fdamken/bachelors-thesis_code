{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        6,
                        6
                    ],
                    "values": "eJwBIAHf/pzTS4tjcu8/9N/XL7pzhD+MqIF5lueeP36PNv5YE3U/MgbCrxSMkj+1O5P96tB+Pzs6q/3ihWq/dVNA2YO+7j9hRxnjTWqcv3KRjznXSJi/A/w4P7eLWz+ShUFdjHaivzhvbMmFSYg/NBfJhBojhj9HTyd2PaPuP7xyKT9vzJM/l8P3oeHfZ7+YYneun3SdPxgeuDvLhZG/GIor/G3giz+rpbVPGpiYv9u9RyM5zu4/X6snrjP5gb/pwi0LcP6APzx0KVY0mKA/Jl0PeJ/Okz8/0jpYghSUPyrGHxGW0JE/pW2659Z27z92cYuuIVSUP44v0WAQZ6G/bk7gut4xnT9HtYMzQPOhv4pttZiS75s/5sHifhxImr+zfko2IYPvPzBkjx4="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "strides": [
                    8,
                    48
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    1.2767522136916645,
                    1.1091307910838533,
                    1.1468652416719678,
                    1.3366562228864474,
                    1.0596638792589865,
                    0.9830688308118365
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.2553794162986451,
                    0.20912316994849442
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "values": "eJx7IFHpEuL/2J4hW0NC5duC/Q1Tzz42VL+wn6Grq8zGcfp+lXXbf5vdPbmfIZ/J2fHY/P0wdQ/ELm6b8umCPUNSTXKcQPv+BRe+Zpw/tWf/gkmzZBYZrtp/4GB41c89ZxDmQdX9yLIT3ijwyJ5B7py5068J9jc6s46dmndqP0NZ0SzOxzvg9sLMg6mbo/i9ctLPx/YNKR7vnbYdsg/Y1zXzTNNRuPtg9sLMg6nr2N26JvD8XXsGnoY5KvGd9jB/wNwHsxdmHlzdhjOT2x0f2gMAtdiVww=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            6
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            6,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkwMjE4NTYwcQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM5MDIxODU2MHEBYS4yAAAAAAAAAJvsL01ML9U/3+jAJ6mw1L/1NtfV3hLTv7Vbew+xLJq//LLtVIFB0b/V1QkrbzrAP5jw+MpGDsC/qFH4NOMaQD9Ojrm+OWbCP4eQZI3Cd8I/gGtEubmf3L86uQTCgIPGP9EQ1Qjuf9Y/tQqQY8Iaiz+oGrMuP5vcv6NERfcpebG/nPfRTMgEpD/XB4iiqZ3UP5o1HTijSae/CBUEIz+qqr8+LJnkdTXNP7NE3SQoway/hwRd3fdd1r89TlQxCbPFv2fncg4W6q8/9F+cSHvs0L/o83TE9mTEv2SFAeUfF9M/CKTt5A2wvr90mGDxrsHFv4eWeaiAX9q/cGSk4lb7zr+dDfW/5r2cv2z/8Rls78c/ieK1vvyrzL+OychfyROTP/Gp/Y9iVdc/k8m/lyQo0r/b2qFocD7av/xIzftlk8S/faegozUEzD+X/muWrC/IP/XLgN98rtM/wb914yGhfL8AMOEhxHbPv+VIB1/+sse/Xvx/Prn8sT9OD7GBHLDQPwd89i/rYM2/9iJu9i8Cyj8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MjUwNjg4cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM4OTI1MDY4OHEBYS5kAAAAAAAAAFWlBvAWeLE/+eXOeqMUwL+vKTxZnDfDv5kKg+8hibo/0ECFx8nVuD+kc2ZfbJG+P1Qxc/S2QYC/fHHcL9idwT/ZNlRMeEWQP6SKtOaWPoS/C/2DgRB9xz/2WStlPRywv7HlFezhDrI/x43h/BDxgD8mnmUir5nBvyI74kspLJe/862qim0Pjz+3Gg3VC8fCv7sTm3dnycc/tfXcGGcuyb87rnadw82uvzob6DEpGcK/cJSF2ItVir/B8jG8GC/BP3LW+QDancM/OZLcKRnouL+eqwRSF/K6v7K80ZsGyI8/yXrIzUw+wr8wj4PNe3GQP2TpjW1VU8O/ZD80SeaFxT/GRTOB9Bi3v9V3x5CRP6G/BntiWpxQt7+E29TysSK5Pz2ig1LQnK6/DRSCl68hlT9xhIIr8T++v+Q1gu0/db6/vo8sbGsImj/7qBmrsqy+v1yxhnLtv8k/KsXV4ETbur8ZSSrGetHJPzhsR6DpVGU/u0Da+RVSwr+37aRC2qugP60V+cnj/7E/qsuySKjitb9qtxqlP3O4vyiwfy7JBYW//z7XS7YotT81Gukc17GMP/VaqpN6XZW/fhYBEg89wr/VsDHaZ3y7vyeIej6NbMG/grm0/pSMsb9LLo6ezmS+P3dPOtOeGLQ/HxkTHlr9sj/fMGv02062P3pa6c56fKO/A3QPciu6wL98y6ZPvOyLv7e3AsMu9oE/R7CRtacKur+mtig1G4Gvv6SOtS3Jubc/hT6lqCmfu79jxTDn/dOqvx4t078E58A/XNXKJ9eshT8Vmh9zjvq4P3SId+D3NaA/gT81IMQypL+NoGghBirAv6jlBXhMRrQ/CBhLhLaNrz+/zer+umbAPx/xuTbO1Z2/biojx/aiub+SZ05YtOjEvwW5yxg0+q6/+tvx78ahjD8wCvWvsiXAv9lc/lh/XsK/sJHQ/bFUl7/AwdulJ++jP2nHptumfbQ/K87mbQWwnT8bEzlChKqAvyxKTPixqcC/J46/A4Kjlj+PfwDL9P65P3KX4tX3dpK/3rBzwnq+uz+rNFKDgqSJP2DPJ1uZesC/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkwMjI3MzEycQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM5MDIyNzMxMnEBYS4CAAAAAAAAAPTOjFtCDr4/FMwfeqsrlj8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    6,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -1.9418729063371762,
                        -2.4602007687607568,
                        1.7278591465100472,
                        1.201576016444415,
                        -0.6051385029634199,
                        3.4482341747100724
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6
                ],
                "values": [
                    -1.9418729063371762,
                    -2.4602007687607568,
                    1.7278591465100472,
                    1.201576016444415,
                    -0.6051385029634199,
                    3.4482341747100724
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 15
    }
}