{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        6,
                        6
                    ],
                    "values": "eJwBIAHf/ghSxwEQDPA/h22iL8xRcj8aQ4nT8/tkP3QMRD7qwlY/kq9UNZyoXj89F6fY6qFqP7t73p767Fq/UBZbKAvl7z+JqvbGwcxFv+E7lpy6/Fq/+ylgND3hQr9I2LfhNOFgv7GD/Xd+nVM/lEe6Ye89XT9tcnxXR/fvP++6jiehuWI/WpuWmjFpGb/7q/unO3xXP2o/iONMmXG/uG6oJuzBdL92qRMRf99Bv/qeY3eG3O8/ETiEVEn0Vb9+c4VI1NNtvwUwrtoZgG8/A9Sz0Deccz/O1qHonS9cP4xnUl00tWY/4ydW/WQF8D//fRbBAKhqP4oE3rE5tFC/vxMONdw5Tb+whRMhDpFVv/BuhxadjDs/Yn8Lw4zuT7+QDExO4fTvP1WekGo="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "strides": [
                    8,
                    48
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    1.1036870651645119,
                    1.102798064761909,
                    1.041174258917798,
                    1.0179999561869317,
                    1.0331420266290638,
                    1.0492672984393123
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    1.389782530058369,
                    0.3694980335202654
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "values": "eJw7WP/5T5DoW/sFwSrr/otG7z/nnvfym8fG/R/mS+14en+i/Z4CIc0PAqv37zg3M7M4om0/TF3oHZ52ge539gY24Q5hPHP3S0jHm3zVmrV/w+5jQidsZtpvETzQfJJvKdw8mDqDY1Z/nJPe2jNsq0urmZRpb7CN4UCyy8z9D+487N/7dRHcXph5MHVtLSJeNzXf2wuscvhuf3iOfUNJ8Ib5DZP3w9wHsxdmHkxd1OwzDxWZ3tkv0DDddOr/JHuYP2Dug9kLMw+mbotzIOv+ynf2ADzzlIY="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            6
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            6,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MjkyMzIwcQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4OTI5MjMyMHEBYS4yAAAAAAAAADob+wVCWNE/TKD+r+Ejz7+L6GYxqXfOv0pMrgyxLJq/bhYStOen179k9U4v+vOnPzmiUknV/bq//T/TXOZ3rr9jHc5ThlCYP4XU55TCd8I/aNVofq/I2L+viNuaJPTDPxmJfQfuf9Y/lSaYjP+1e78oboLI2DTWv0fwl5uatru/30blWMgEpD/m08ujqZ3UP7/Lmy9C4rW/X3uzC0s4gD/VUyAM0sTPP00SnrqNjJC/yvg03fdd1r8aLHcTrSPDv4jkUEYV6q8/aO0haJpJz7+f1eHE9mTEv2bTyFArgM4/L1t0G2Pnwb+gclmk9qLAvykVK5XSF9m/Y+401xHk1b8kM03T5r2cvwkWUu8PYMU/NuZw3Fg7z79QWhCP3Wuvv3quaKMQndg/aUoz0y7/1b8zM8oQuB/Vv22CxmRb6b6/wg8B3CTZ0T/OTPYbmIHAP/vnmNjQAMg/jcKbmjGlij81l3c5vkrSv3ax2a9aQsq/xtuHDHGswD8Qhi3X3NDOP66TOjDrYM2//QdB9i8Cyj8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MTQ2MzM2cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM4OTE0NjMzNnEBYS5kAAAAAAAAAKru/bxSFoi/rIvNeqMUwL9vZjxZnDfDv0QNtEuxS7A/tdt7/6FrkT+uUTXThmquP0U9KARPi6i/MB0mMJ6BrT8Mr05MeEWQPwx2Jakrt4Q/vSedL1hewj88zE8FM3uXvygz4bLHlYU/3iJIkrEEiL+iAd7ypRS+v/ojXOmtX60/bfqkiW0Pjz+dvEMGp1C7vyVbtiWvqsI/VIv8nVKAwb+IF4urxKWUv4rfcjjibq+/F7v/mdPSoL/4SoLUwCC4P8e1RguL37c/JjDq12DJs7+1ISmuprSwv4gb20pyL6I/0Ra/zUw+wr8KGTtUgl6wv7WchW1VU8O/KnBN9y1nwD8cCyDTrDe8v2jD8Q+qGr2/AU6Mks3Rn7+gwqysQp+SP3U0l3nksZQ/eoK99xLUk7/AX1aHgAK0v4ur7Eu99KO/DaDjamsImj/tf35+teXBv0QKZp35BL8/z+HO4ETbur9fWz9LZiPCPw0xdPo50LO/aafa+RVSwr/vOnxC2qugPzaT6cnj/7E/tELG9u/DsL/49BelP3O4v49EtC7JBYW/Cs/PS7YotT8adQMd17GMP3UunJN6XZW/O7v/EQ89wr91/QEWkE3Av227NNmpm7i/6tyx/pSMsb8/yTh4w8HBPwujHHcPVr4/rHwPHlr9sj/jmm702062Pyq34856fKO/Xq8Sciu6wL8EmsBPvOyLv+BLHs6T/4a/EHKUtacKur98Zx81G4Gvv0cMiH+B2Lw/p82lqCmfu79ZJ2eXb6e3vz2bntuYkLc/cZDiJ9eshT+rtyJzjvq4PzSvup6lE4G/Z9gvxDRwrr8NtGshBirAv9m1OUwoT64/kFVPhLaNrz9Dxu+rva67P9taTLHoP4Y/HfIIGa/Bvr9vKsAM+JO/v5Rb0Rg0+q6/2EZc88ahjD8y4PavsiXAv+F1bQ6Of7q/mxHf/bFUl7/WAdGlJ++jP8NWkhTdva4/bgC6WnMVqT9URx9ChKqAv2lKTvixqcC/+kHmA4Kjlj8/s9ocrR2/P+J5s47seKO/GgZ3wnq+uz/96LFEkaagP01ySFuZesC/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MjYxMDQwcQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM4OTI2MTA0MHEBYS4CAAAAAAAAAIPMyifCJqM/svoseqsrlj8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    6,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        0.13141590159715322,
                        0.2916565509285427,
                        0.7484574120584802,
                        0.7412368607311772,
                        0.4800686397197481,
                        0.6596055953420219
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6
                ],
                "values": [
                    0.13141590159715322,
                    0.2916565509285427,
                    0.7484574120584802,
                    0.7412368607311772,
                    0.4800686397197481,
                    0.6596055953420219
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 1
    }
}