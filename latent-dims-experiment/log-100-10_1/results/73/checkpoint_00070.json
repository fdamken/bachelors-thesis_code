{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        6,
                        6
                    ],
                    "values": "eJwBIAHf/grmqLGsJ/A//r1BSe68fr9jAwv3YfekP5rz9nFkQJm/8Xe28osLZL+HIjaR1nWKP6z5Nzdr+aM/7cM4X4LG7D/zA45fGhqXv7rfDTJYerM/o3G8kPg6qz/DL1nf5yqQv8FpFniUIpG/xUfn52OhgD++51XxoinuPwcF+dDJdpY/2+y06Wa7kD8fTjlOJ7yvPxkDe4GQuIQ/h6tdoTbfoz+4llLNhHKQv3E3IgPasu0/oSvdXYBJhb949AYHbh2av+F13LhIwrE/hMbtE+ISmT8CIf+siW6vP0xot70ho7e/IUxE50417j/rV2So1qiwv4EFNJ6TrqW/hVLdUEDckT9e2hUhLoOXP4WJ1N5lG5o/VIbFR3Qrl7+wJ/ZNFU7tP3Dhk7w="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "strides": [
                    8,
                    48
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    1.2839095859365741,
                    0.6228333241339636,
                    1.1616675585469503,
                    1.6848316032062316,
                    0.5159318472169926,
                    1.7949893786060125
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.19631913650020033,
                    0.22416370463783072
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "values": "eJyzvG975tX3M/YbWERuTr03b79Hxk8mjen9+w2ExMws89fuv7txY/Dnl8f3H+hPvvw1fClcHYO5yveZHLvtGVqZ8s7s797P8GdevPv+KftjwtYfeeK0Yj9D4qwyqSnr4ebB1N0pTF5UE3PCnmGSmFmY9A77f9HLWxnnbti/YF5846WOXXB7YebB1C1YsV4r0+KSfaNKLUfo9R32DjP6r7DvOgB3H8xemHkwdalfzp3YZ3fFvmDf9Iz4s832MH/A3AezF2YeTB2D07/MA/tO2AMAxIiUIQ=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            6
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            6,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5OTI3ODU2cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4OTkyNzg1NnEBYS4yAAAAAAAAAALgnF2KOdw/4ElbXs9s4L/mo6DzY/7UvxLVWUJ/3o+/XX2+WVjl0b/KLS/Ryca4P7Vkcmwxjb2/UTd9NWLxyj8XtHhTWj3QP+9iHXUUMME/5/V2w5BD3b/P3hU7bYKaP+JZ8di6TNM/wQXvDiUwsD/Okz7hx6nlv8aX0LWb062/pY7RJLIPqr9e+FbCLonWPw7xuG/corU/L6+eP+whur+y7lb5I33OP6zuorpSU6E/iGhbECuR2b/00/S8y6jOv8W2QLxdy6o/6oiiVOwBzr8BcITXSB3Dv5Cw1ZFn+N0/ipSIUP+8hD/FTfQQXQnHv55beGOf5NW/AejTlEwky7+Vb6YedoCSvx7VTFh2xss/t7T9iQMvvb8kxsd5sayBP1QskhR+d+A/KPxPtyRBob83h+z5BOzhvz9j1eW3S8O/cmxgZSstyD9+Q4/7EpbOP5y3FWPb18s/bPxpXUGpaD9ZFgkJFi/OvzpVOGeJsN+/m38TCYbJvj+KOsfFLonNP+wsXUiZqM6/noIpalUL1D8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkwODA4ODMycQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM5MDgwODgzMnEBYS5kAAAAAAAAAKMoLY510a0/OmCtzOqZvb/KAAOUs4O0v5RokcbF+bc/bPmTnm1Gtj+9uHg2EAK8Pza4f7OWbKO/NExnGypWwD+ShyyiHiB4P5Qevjjbv74/j2kKbWI1xj+fyHJ4whmrv7+ZduKawaQ/ZONLWlVdpb+Ve+0NAVLAv9hkMlBx3Ym/9Ek8hhgpdT8ASEgvA+C9v1k7ImO5gcY/3QNjBLnmx7/ZRJhJ9hS3v6UkdR170cC/tx8Vmvz8vT9b9XNP1c6/P/kFhewrVsI/zCM2rgQ6sb9n5BMpu2K4v42YtPFzIZo/iSioClcVxr/bXhWnLNB4P3bRoiV02M6/P1a7NDg+xD9bdh+qUKi5v7m7JJaVbLW/vHdyMUDBtL+4jc9fv/fCPxe5owAYfqm/YuxkOyBfnz+rSJIClbC7vxMrssTj5bu/ktQ4+Z9tuD8DAvovnv62v1OhDl4/eMg/R0nOCaFqvb+78rGxzInIP59I475NS36/d6Vi5WcKwb9zNorhQxqXP9DpIEIP4a4/iCbGH0xTs78SAg7OmwK7v2/rNdz8XDG/KjbJdBK4tz/IUHCq621wP3e1ajfrmp+/Ocp6Jr2Ew7+6a0sqPpXBv9JK8lI7tMK/asenJ/EbtL+dDi8zoECqv9e/RKpCibE/JYkGR7aMtT9EpHbLf7+zP9NIziAzm6i/FiMru/rkvr/WrlMhbMdtv9mq9Jd3y7S/3LOfjEt7t7+vRY/D6U+yv1nYu1YlSbo/GPjMt7mkrb+uYMKURbWlvx389B6Yh6U/G+W7Al4fQz+41y9KMmu2P43e46PF7s4/84yCnBconr8w2c3H96W4v55kAPU2gtI/dz9kMv5uqj8WOzt/XTPYP8BoR22fCaS/o38U8FIyvL8cnwCS4+W3v6o05cZ726m/YwupUctNcD+ZCfc2Cby9v03u9EXRFsG//8sCtIIuir/6caL33w2pP+ltqrJK7rE/TYDtCLv2oz/zN+jEspKSv1p+Arq4qZS/oWLjvyLMiD8Vmw6imG+3P32SLGQOc4C/T/iAmR4vuT+HUv2pEOaRv80VgC9bE66/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5NzY3MzYwcQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM4OTc2NzM2MHEBYS4CAAAAAAAAAAy4nDLmfrs/MeSfrHXchz8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    6,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        0.11186680838173017,
                        -3.367835494279827,
                        0.7461755475647929,
                        -3.1571212256552452,
                        0.04106854106354399,
                        4.4402714745968845
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6
                ],
                "values": [
                    0.11186680838173017,
                    -3.367835494279827,
                    0.7461755475647929,
                    -3.1571212256552452,
                    0.04106854106354399,
                    4.4402714745968845
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 70
    }
}