{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        6,
                        6
                    ],
                    "values": "eJwBIAHf/rDhKw5Z0u8/+DUtir1ioT+rbQXQj1p5PyHQZqsldYs/sKHnZQJcR79oNXQ7yRx+P4uKNyzpuHy/XJyDlt3L7j9wxKIRdXuSv7o+hCv8rZi/P2D10IobSr+6kglEhyiFv4oPsx5552m/hGAaXr6qkj9ruvc2JJzvP0+J9MkK5WU/YmukUyKUgL9aJxYHJiVvP6hbZEr2hZW/z3TCgO8knz9Cp152kAuTv1CbNGZJze8/QebAVmzMmr8JPag6j344P+8WLMv5kZQ/6d0ssfzEjz/6BvrIO/ScP5Q8hjcOPpk/Fz8ukoE38D+ALX93f2KCP3UM63j4+Jm/124KjsLGiT/+vd7l/KaHv62+fkOqvFA/8OrjWirHmL8O/yyQGMDvP74vkQo="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "strides": [
                    8,
                    48
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    1.38492282443088,
                    1.4422421841375914,
                    1.2079447764135585,
                    1.1462374340002341,
                    1.34429918162227,
                    1.1120902674432407
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.3987203619507236,
                    0.16435510361252614
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "values": "eJxriOXaJ8r/zH7Cwe2Js7Q37E/IXJC+2fXM/gMb2d++tCrbb6Oi3ht59eR+BrvCM4dn7NgPU/fDdtdPlUeP7Tc4hWm1pa3b33NS9a+UwJH9UwQzT/E3b7PvSWN9dkDhPNw8mDqjvc+tFj57Zn8gVPihvly9/Rt1G6vahYf3a3yd/m2+xB64vTDzYOpqm1X3CUx7bT8xe9Fxmdsb7J/M4TpW+24v3H0we2HmwdQZnV594bHsc3uHMok43uPT7WH+gLkPZi/MPJg6F+GaM8pPntsDAA35lHQ="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            6
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            6,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MDU1NzEycQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4OTA1NTcxMnEBYS4yAAAAAAAAAJLg+yqe59M/CMdOAE0h0r/hke6sgoPQv1jRTSU/x3a/mYKGkIsY1b91Ktm3bTe2P+Ma+EnV/bq/eaJ6uXU6pL+eq//Ms2WmP/MHOd56lsc/gJvae6/I2L/Dqz3CgIPGP+TmI/Q/ONU/VR7igP+1e7+3zbzI2DTWv4gK0z4qebG/UeEg8zhCrj8tnY3LBS3XP6iiNPCJw7C/eeh4cHe9iL/f4hjkdTXNP7wgkyMoway/7A+68aWl178oB5MJrSPDv10NHo9p3pY/z/rwXCk00r8UsysWr4PJv9NAerzDh9A/bKI/RL92xL+vwsPwrsHFvxz1C74up9u/hy57rrVU079R0wEEZJyov3ByPZ9XQcA/z45gk6Acyr92iF37+OGVvwm0w3u0DdY/YLsawIC31L/rQxArZmfWv2cp6vtlk8S/2Cus+naR0D+QkswbmIHAP7hyaCaJH80/UpeywCmjm7+9PwoixHbPv9DqJKtaQsq/Xnnyj3Ebtz/XjvTZ3NDOP1/ju94yQsi/g3qOpHfjxD8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MDkwMzA0cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM4OTA5MDMwNHEBYS5kAAAAAAAAAO5x2TCZ6pw/EIC4zFszxb/4VSerVFbIv3Mjiu8hibo/9yBqR7IwrT/aw3ANtHK5P92SKQRPi6i/bFLouz/+uD8yDVFMeEWQPxOOxbosmp6/VwWIgRB9xz98/SllPRywv12FZDRT4Kk/hz80xmnznD/7DVpLCynEv1TcX0OZyZE/4o2jiW0Pjz8j7AzVC8fCv89DoXdnycc/tpLn7wqfxr/nKpT5UpCkvypYD8Dh9Lm/+GvSPUQQq794Lyy8GC/BP99ojtd9DsE/bvi/e9EGvr/KDv9RF/K6vzKFh+Z3W3K//oO69qjNxL+V9JPBRoSYvz/pb78Ncsi/Gis4SeaFxT+I40kvPPqxv0wBHGw53bK/8S55COQxsr/ciwKegsqtP/oTwRXeQ5S/P+Pg/cnZRD++eSwr8T++v2JwzEnPN7S/VPWOfou/sD/Lh2nQbQTHv08SniA1ocQ/jgDP4ETbur+AXiqdHkLHP4BDPK2SJaO/WyfFS85wx79uNhTFXZOyP4Bg1BucHrc/AH2wSKjitb/K/xilP3O4v3zrqC7JBYW/Va3US7YotT/R3vcc17GMP2oqn5N6XZW/hTsAEg89wr+mVAMWkE3Av8glHytiur2/p9Ow/pSMsb+CKjp4w8HBP3HwK3cPVr4/jkERHlr9sj89eW302062P0zB5c56fKO/p40Rciu6wL8AGLhPvOyLvyhsPaj4dZ0/SH2TtacKur9VzSA1G4Gvv+hNtS3Jubc/Pv5H/fBewL9G8H9Ft4iyv1q+iC1Rr7w/YMnWJ9eshT/+ryFzjvq4P4jDW/Ic4oc/C1xaIMQypL9OPWshBirAv28YOkwoT64/colNhLaNrz+m/BxaBZC2P1simzbO1Z2/KnoJGa/Bvr9WT1QvWFnCvwRqzxg0+q6/NfP178ahjD+nN/avsiXAv5ZhIFl/XsK/vdja/bFUl7/vzdKlJ++jPxq5kBTdva4/mhe+WnMVqT9h8ydChKqAvy85OEpqyMW/tinHA4Kjlj/RQdgcrR2/P+G0s47seKO///V1wnq+uz90mHiDgqSJP5/QJoT1CcO/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MDA2NzIwcQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM4OTAwNjcyMHEBYS4CAAAAAAAAAESBu7fR0LM/Gowoeqsrlj8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    6,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -1.2370471273964112,
                        -0.6022582766658553,
                        0.47883854491290057,
                        0.20753887121974357,
                        -0.7821200698930092,
                        1.3448168110291538
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6
                ],
                "values": [
                    -1.2370471273964112,
                    -0.6022582766658553,
                    0.47883854491290057,
                    0.20753887121974357,
                    -0.7821200698930092,
                    1.3448168110291538
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 5
    }
}