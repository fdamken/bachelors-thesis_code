{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        6,
                        6
                    ],
                    "values": "eJwBIAHf/pHEFrVhf+8/CqwZOdPHfz/rauAXTgCjP6fKFEdOSG8/lyzBd2TqkT/uKZMFtEVfP/Hfzz4Q3no/4t6q9rzJ7j+OtI47e++bv0/uvHrvg5S/WsLpwRfQdT+Ae+01OE6bv3Q52WdGI5U/dddZcNJOiT9PB2AQ7KXuP0lV9zFNaJw/QO6PXKnKcT9bcUG2b3OkP2hNyxaBj5G/DGIOcDAfhD+9/IzCzGucvyxbfwBDhe4/pore815/k790l7boAeNMP7pY9tIfXpc/BPgH5T8Wiz9sycAzdCqhPxNYlwDnd4g/fOqe5Ef57j/947X9uHSVP25QKrlOu6O/Y4rMH5z8nD+yxlszRfqZv4XjjxQqmqI/5ULuUB74mr+UFKV/VBXvP5PZkc0="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "strides": [
                    8,
                    48
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    1.236914938368037,
                    1.0292816291103792,
                    1.1276223923733835,
                    1.3958912536061083,
                    0.9248346787619544,
                    0.9812436630052686
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.22621241489942803,
                    0.17609288993339772
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "values": "eJzbwKvG8rX9kT3Dfwb5O0Yr9zdMOVbMveTCfgYnxcuMss37T3ydP3Ft44n9DC8OhC+YXgpXx2D/7JfixjP2DA7zEjU+pu93kNRW5p6xZb/DAwWmtzNX7WfQ4Cy7ePk4wjyouorwSccqLB/YMzwV/mCwa4q9Ru7j2ZWCx/Y3zGmecSxvA9xemHkwdT6a5xYe6n1kf8Iiumr940P2G3TjNh8yOwF3H8xemHkwdUbF3YwvT9+2byh4n/ti11SEP2Dug9oLMw+mbsG9ir4a3zv2AFTmkp8="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            6
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            6,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5MjcwMTI4cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4OTI3MDEyOHEBYS4yAAAAAAAAADVo5k91i9Q/ZkfvMYBU1b+UUGwIEkbWvxdQsdkQNaK/SgyCcPirzr/w+XcqguW9PzBHL20xjb2/m/kQBSk5nz9oLZz8Qz3GP03H4XgUMME/YySEw5BD3b84F+aMdqzCP0bZtv4W3NU/NCtx0dHKlz/qLSBSxIbev314Y7UslqO/G68f0x/MnT/4iAjBLonWP6z+JQrptY+/+1EIfvfIr78o6gr5I33OP0Rf1NJvoqe/bs03ECuR2b/rS0RsE4rJvx+hkbxdy6o/EGhjPqRI0L+DsQWwSB3Dv5tzkgOlAtU/QMykbPkBt7/HXtcGXQnHv95izon7c9i/L3Z3e4Ih0L92bMYcdoCSvynThFd2xss/+0Jfg/LUyL9lHzYWEUmHv69u9cKViNo/BvV5jU2E0b9OH32J9Sncv98DpL5bvMC/TYEgj4e8yj/Ur9qqWnfJP5Fsw+T3wtE/vJjFVkGpaD8aWGUNFi/Ov+JZSXOs+si/ljRmZxWMtD/2t1l3RQzQP5/7bESZqM6/8qP3MzrZzT8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5ODcwMzM2cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM4OTg3MDMzNnEBYS5kAAAAAAAAAJJHJY510a0/966pzOqZvb//IsJE7u/BvzvTjsbF+bc/1SqRnm1Gtj8jmnI2EAK8P63I+nB2l5Y/zaliGypWwD8gKAqiHiB4P55c4t/ziaQ/ZT4LbWI1xj9bFG54whmrv3inQ4YL/64/7m7mVYJOXL/YjesNAVLAvyARJFBx3Ym/5JMahhgpdT/QQpPAXX/Bv+noIGO5gcY/d8diBLnmx79Y0o9LC6+pv+KrbR170cC/eVnCPapqZ78Y8W9P1c6/P7IbgewrVsI/ao3oAL1Ytr/K2hApu2K4vySXuvFzIZo/TkJPuZ72wL/IIdKmLNB4P2TTIlmnC8K/0wu6NDg+xD800CSqUKi5v7gXF+NJXqa/GHpuMUDBtL8wmtQ2Y2jAP5QwmwAYfqm/6bZtOyBfnz+RZ44ClbC7v99dkMTj5bu/FNDKp+dOsz8TiSuCVh28v++mDF4/eMg/klS+CaFqvb/wJ7CxzInIPweVIb9NS36/DDBg5WcKwb/7nXrhQxqXP8OiIUIP4a4/4Ji+H0xTs78rGxDOmwK7vwMLidr8XDG/48XMdBK4tz9p73uq621wP6ilfzfrmp+/o817Jr2Ew7/7PD6xC+24v4IG9VI7tMK/J8mpJ/EbtL+3NLgjura2P6CYRKpCibE/Eo8IR7aMtT8nqnXLf7+zPxcF1CAzm6i/BoApu/rkvr+xhe4fbMdtv/Ea5SSUJVS/kl6cjEt7t797rYnD6U+yvztmqlYlSbo/Y2BLf80Pub9xlEaVRbWlvzKYMSZrTcc/+IX7AV4fQz+VNSpKMmu2PwoZfzKwVKU/qKyPnBconr/Z/9oZsMS9v/di/aCo1bY/9UdgMv5uqj++Glo8xT3EP34iSW2fCaS/pzUY8FIyvL8P++EaqhHBvwzy4MZ726m/XpuTUMtNcD+s8PQ2Cby9vwf3aW0tpsO/GKX1s4Iuir8yz8X33w2pP5G5pLJK7rE/JezqCLv2oz/zK/LEspKSvyiqgscHxL6/MYnWvyLMiD+26AqimG+3P+ovGGQOc4C/ijx+mR4vuT9wb6HuhKZkP9PPWo3WZb6/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg5OTIyMzA0cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM4OTkyMjMwNHEBYS4CAAAAAAAAAHO5mDLmfrs/2EyUrHXchz8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    6,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -2.1379612674611814,
                        -2.856061199418653,
                        2.32633274496002,
                        0.9069839718855157,
                        -0.6325069876048413,
                        3.918056407719863
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6
                ],
                "values": [
                    -2.1379612674611814,
                    -2.856061199418653,
                    2.32633274496002,
                    0.9069839718855157,
                    -0.6325069876048413,
                    3.918056407719863
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 20
    }
}