{
  "artifacts": [
    "checkpoint_00001.json",
    "checkpoint_00005.json",
    "checkpoint_00010.json",
    "checkpoint_00015.json",
    "checkpoint_00020.json",
    "checkpoint_00025.json",
    "checkpoint_00030.json",
    "checkpoint_00035.json",
    "checkpoint_00040.json",
    "checkpoint_00045.json",
    "checkpoint_00050.json",
    "checkpoint_00055.json",
    "checkpoint_00060.json",
    "checkpoint_00065.json",
    "checkpoint_00070.json",
    "checkpoint_00075.json",
    "checkpoint_00080.json",
    "checkpoint_00085.json",
    "checkpoint_00090.json",
    "checkpoint_00095.json",
    "checkpoint_00100.json"
  ],
  "command": "main",
  "experiment": {
    "base_dir": "/home/fabian/bachelor-thesis/code/src",
    "dependencies": [
      "jsonpickle==1.4.1",
      "neptune-contrib==0+unknown",
      "numpy==1.19.1",
      "sacred==0.8.1",
      "scipy==1.5.2",
      "torch==1.6.0"
    ],
    "mainfile": "experiment_pendulum_damped.py",
    "name": "pendulum_damped",
    "repositories": [
      {
        "commit": "6d1357af2f69e9009f4339964087d83d93f3f4e9",
        "dirty": false,
        "url": "ssh://github-fdamken/fdamken/bachelors-thesis_code.git"
      },
      {
        "commit": "6d1357af2f69e9009f4339964087d83d93f3f4e9",
        "dirty": false,
        "url": "ssh://github-fdamken/fdamken/bachelors-thesis_code.git"
      },
      {
        "commit": "6d1357af2f69e9009f4339964087d83d93f3f4e9",
        "dirty": false,
        "url": "ssh://github-fdamken/fdamken/bachelors-thesis_code.git"
      },
      {
        "commit": "6d1357af2f69e9009f4339964087d83d93f3f4e9",
        "dirty": false,
        "url": "ssh://github-fdamken/fdamken/bachelors-thesis_code.git"
      }
    ],
    "sources": [
      [
        "__init__.py",
        "_sources/__init___d41d8cd98f00b204e9800998ecf8427e.py"
      ],
      [
        "em.py",
        "_sources/em_42219c3660e0d4213b9d85f7c4f7b37e.py"
      ],
      [
        "experiment_pendulum_damped.py",
        "_sources/experiment_pendulum_damped_70e127f1d9ac784a69ad73a74e3306ea.py"
      ],
      [
        "util.py",
        "_sources/util_584d431d1c7c3cb4f42650f6fda305c5.py"
      ]
    ]
  },
  "heartbeat": "2020-08-12T07:22:47.313742",
  "host": {
    "ENV": {},
    "cpu": "Intel(R) Core(TM) i5-4690 CPU @ 3.50GHz",
    "gpus": {
      "driver_version": "450.51.06",
      "gpus": [
        {
          "model": "GeForce GTX 970",
          "persistence_mode": true,
          "total_memory": 4041
        }
      ]
    },
    "hostname": "H97-D3H",
    "os": [
      "Linux",
      "Linux-4.15.0-112-generic-x86_64-with-Ubuntu-18.04-bionic"
    ],
    "python_version": "3.7.8"
  },
  "meta": {
    "command": "main",
    "options": {
      "--beat-interval": null,
      "--capture": null,
      "--comment": null,
      "--debug": false,
      "--enforce_clean": false,
      "--file_storage": null,
      "--force": false,
      "--help": false,
      "--loglevel": null,
      "--mongo_db": null,
      "--name": null,
      "--pdb": false,
      "--print-config": false,
      "--priority": null,
      "--queue": false,
      "--s3": null,
      "--sql": null,
      "--tiny_db": null,
      "--unobserved": false,
      "COMMAND": null,
      "UPDATE": [
        "max_iterations=100",
        "g_optimization_max_iterations=1",
        "latent_dim=5"
      ],
      "help": false,
      "with": true
    }
  },
  "resources": [],
  "result": {
    "estimations": {
      "A": {
        "base": {
          "byteorder": "<",
          "dtype": "float64",
          "py/object": "numpy.ndarray",
          "shape": [
            5,
            5
          ],
          "values": "eJwByAA3/0Xl9A9PMew/YE6ya0p6tb94UnqB4QDBP78SfMhs0nk/1lu4u8XpdL/MuSvdfbOxv1LNQuRqUO4/zKr2upzPbz8q6s3p+epkP/GIExDC7X4/92ofLkX1nD/QdIL/GBLFPwRWKz5FFe0/p0BdeqWzlL9soY2Y5Z+Cv0jCunoyX7c/EeuRaim0xT8HDVi47jd1vz4k1Vpnlu4/yiNzTxHaeT9rlM9lv/6Fv8ymlhIVF76/ZblwMJ6atr9UFfCRnPCQP/oem718V/A/jcpooQ=="
        },
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "shape": [
          5,
          5
        ],
        "strides": [
          8,
          40
        ]
      },
      "Q": {
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "values": [
          7.15423406680807,
          19.39965688936946,
          8.624201808001134,
          1.1209889034815748,
          1.0389003549186413
        ]
      },
      "R": {
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "values": [
          0.5652126656148648,
          0.2641362324477826
        ]
      },
      "V0": {
        "byteorder": "<",
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "shape": [
          5,
          5
        ],
        "values": "eJxb4KNvtijugj1DxS67O1677Rk0X83kO7/SnkHlXM1T3hn7GSqWNta4ztoPlw8QK/W8dtCegStx7/3MVfYMBS1x59ctsmfYIO/3985GhH6Y/FW+Xn3WtUDze6tU/rYA9a94brGpF2E+TD9M3uCt5MXLp+wZHFKFQ8y32MPth5kP0w+TD1lj84hljz0AzMZVBQ=="
      },
      "g_params": {
        "py/reduce": [
          {
            "py/type": "collections.OrderedDict"
          },
          {
            "py/tuple": []
          },
          {
            "_metadata": {
              "py/reduce": [
                {
                  "py/type": "collections.OrderedDict"
                },
                {
                  "py/tuple": []
                },
                null,
                null,
                {
                  "py/tuple": [
                    {
                      "py/tuple": [
                        "",
                        {
                          "version": 1
                        }
                      ]
                    },
                    {
                      "py/tuple": [
                        "_pipe",
                        {
                          "version": 1
                        }
                      ]
                    },
                    {
                      "py/tuple": [
                        "_pipe._pipe",
                        {
                          "version": 1
                        }
                      ]
                    },
                    {
                      "py/tuple": [
                        "_pipe._pipe.0",
                        {
                          "version": 1
                        }
                      ]
                    },
                    {
                      "py/tuple": [
                        "_pipe._pipe.1",
                        {
                          "version": 1
                        }
                      ]
                    },
                    {
                      "py/tuple": [
                        "_pipe._pipe.2",
                        {
                          "version": 1
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          },
          null,
          {
            "py/tuple": [
              {
                "py/tuple": [
                  "_pipe._pipe.0.weight",
                  {
                    "py/reduce": [
                      {
                        "py/function": "torch._utils._rebuild_tensor_v2"
                      },
                      {
                        "py/tuple": [
                          {
                            "py/reduce": [
                              {
                                "py/function": "torch.storage._load_from_bytes"
                              },
                              {
                                "py/tuple": [
                                  {
                                    "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzYwNjE1MjAwcQJYAwAAAGNwdXEDS/pOdHEEUS6AAl1xAFgKAAAAMTM2MDYxNTIwMHEBYS76AAAAAAAAAD65TBTvStm/V1DQTIfm07+ojstxFIzVv2TFSessSeG/DixZ6enYvb+o7Snm+Ky0vzOi/fZlGdE/Ry/n4Aa01D/Ovj5VJ8y8v/NwsfnURN+/8rLx0DKVz7+YadYWoom8vxzBMp1im9M/f6AiacDt0z8akRqcO82xv9gMqb9VD5U/OrUo7cLLz78G27vaEyfMP0/MMyqhRci/TrP42yVK1z9Vdhame5Ljv/yMoivRAKm/GyGTvFHfy79UNYI/sJawv2pcekaO/PO/refYG7311L9CcjF3u3q1v8aO/qWQYJG/f+KQGyUTyb+j4/M1nJbnv8SzfzzoeJa/sgubmkyvo7/eSsqGSbrHv43QA2UULLC/bHaR9ap90L9zydEpN4N+Pz5PpGJXt80/RsEWwvyZ3r/ORNZcE7jAv2ng9dviwqS/oD7pdJo15D9fQWu/HBK/P+mALXa1is4/L56zaJwXxL8c6qOyk/nxPzIAq52cOdE/Z+bUee3srD9iZcuhhGDUvzTLkkMQTco/KW5nynzhtz//gLoA13K7P1ozCOKmULg/JFqRL2ZXwr9rDYdHlHPVP7/WkW67k8S/NIsC4y6x2D9ghhCHtymvP+s8Zcqxq8O/lryknaB3tr+QkcaAliXMv/Lx91RGB76/1jEAtr+s3j/tIEPDLODBvwZtXEW5ILC/jDZ4b0880T+2ecxZs4Kgv1S5YOFZjpO/QKWPGzEG0z9fAx6FXkHMP8Aa3AXN6da/RuWfOhBc0T+uW+NyfrzOP25VlQiYRcO/oh6ZNzsF3r9aJ74tmDHRP9Q+KMnlwcm/j0k4gN/2v7/Ssd2LF8OoP6ZRXJNc+cS/YGNSVxim3r87HEORKdu0P5i4Q5DTXdK/fS8ppNEwzD/7DuBk72LOvwzcKdByltI/Apnr6pzE6T8Io29j2YnQv9scWf1JTdA/Uyah1WW+y7/wZ8fHHz+TP2edqm29jtg/1BUZdqLb1T8ICZrw9JjXv4Cz8hP0aJi/utWSk4o72T8fyV1zq7W1vzymbFJaX7w/bYZDDHGvij9qW3tQs7uOv/v7nj1DVeI/fwQgV+1Wub8bLWXM/gWSv4H9Y4w42rY/x4jaG1lIwD9qceUgn429Pz8IbtdPH3U/aLd0mVCsnD/5t7sTLyejv2dAsDydDp8/dYnT4MO6wT+PdkwsoBzMv8ZrhlXnBMC/XAHMfCnlqL/vDKCa5pfZv9f+ZHuJY9S/BnJtU2850j8OO1HNmqrRP+r+7PBRtsS/76gMIKsoyz++BgTHAgfAP5gV9v3pSuM/+9708TE+sT/365CPE9PFP2Drzi7zu4e/ass9MSBZ8T8x5JKQ/iLBPwnzawDuobq/kyBGmfHxxz/3iBZYCa7Wv6cubevj2eG/LUZ58Z0y0z9e4fyC3LazP/OSImju0dK/dF0qOVsJsD8FoeAkmfnSv7VEfaYcBdg/kRduwQia0b/wWDFcgELLP25hnexWn9e/nJtyv0SlyT8OOXHWK5uwv81oSxhhQr0/uL/11B2x0L/MD79rspDAv+iOJ8mSwde/zcIHtvmKuT+vCPV9yeOUv6UTWT7m48C/t3MFGk9+tb9aycWq9rapP+NxogE/K8u/mU8B2ER+qT9myiIaIZHQP/dJaemw1Z6/LqyZ0F2jyT+3SnQfPFzXP720ASQO77E/Hq2MmESP0z+0ymFujG6tv5of5G/L2rm/3oGPCTYknj8LdZOqccXIP4Eq+YRkYNo/itVZvgjD5L9g7AK5m9/iP2pj5uJR18Y/lch6xWiD0j9riHWhHjTYP4akvAgvV5s/UoQrXFXy17+onJodaoDGPxTHCgreVNM/sTNEXNyEzj85KWXoEAmnP+nfqkZ5Ira/vVyxJ4cj4b8MPsOBl5HNv8CdEdfegsG/yTBPsqUGyz/4HTNbgGHav6ojJqnMQqY/udzN+eFHwb8BCWlKD5C6Py0lRekOMsw/NwWSwD5oyL8YzSqgEiGIP3ktXr82MdA/rhBhGx+60L9TanJkuj7TP4gImGvBE9G/D/bzLNtpwT+2CUWJd26WvxR8PYVE07i/xs40qZqmwb9tfzacMB7DvxkALyu2Y8+/Q5aXR9Osnr9TE6x1JGq4v2L2IljSD7Y/UPaD9VtB479RLa5PUoTlP1nJ4qW45bo/ptEBiZyyuD9R0YEHh+XTv5XHpCd7h/M/BWdZGR0r3D+BLRX/4R3HP2jN+cbxNsE/7sIzjjGIub8PBzfl52p/v+Bgm/QeU8Y/cGDZrTvtzL9MH89OTuu3v7jPcZrCud+/Bfy8DrfI2j+jgt1q8mfPP3gqI8nRwre/Ij8AbVT/0T9Oeey29rqnvxM6BEg26NG/t+LCEXJYPj8mTrzEqxHdP7aasYlAS6k/RDBjpr0ovb9LSLLay9zgv0gU1r4IRam/HvP1zMZExz+LyG+WceGxv4kihkE+fsU/9mjpG658xr+/fUCeaoTCP4dAwJcs/58/6JjpqkGyyb8axAAfCUzJP8GReLT4dsQ/Wtj+K3Z+e7+S3WOoTvnUv0hWzsjKj8o/afjkiclSyb9YDqQZeNPaP/Y5f3xgbcu/g9DDkVnztr959zpu41W2P8gExwoOMtW/jIuPMUk2kz/DyiRtHI28v1rBmS+PfsE/naw3ezNgxT8QnLselVHGPzlVXodVduA/"
                                  }
                                ]
                              }
                            ]
                          },
                          0,
                          {
                            "py/tuple": [
                              50,
                              5
                            ]
                          },
                          {
                            "py/tuple": [
                              5,
                              1
                            ]
                          },
                          false,
                          {
                            "py/reduce": [
                              {
                                "py/type": "collections.OrderedDict"
                              },
                              {
                                "py/tuple": []
                              },
                              null,
                              null,
                              {
                                "py/tuple": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "py/tuple": [
                  "_pipe._pipe.0.bias",
                  {
                    "py/reduce": [
                      {
                        "py/function": "torch._utils._rebuild_tensor_v2"
                      },
                      {
                        "py/tuple": [
                          {
                            "py/reduce": [
                              {
                                "py/function": "torch.storage._load_from_bytes"
                              },
                              {
                                "py/tuple": [
                                  {
                                    "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzYwNzUyNDE2cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM2MDc1MjQxNnEBYS4yAAAAAAAAAERo0tfkkum/WgJ6BzxRk796uxEaXL3SvytzYwxhM8m/A0TGJpMn87+7BiGUP2ngv79zVPsEiuG/jSnuXJBf27/dIXOoGhzpP9MCpbV/V9q/BXT2uCc10b99qNdnSweYv2BC6AnNveY/1X48d1F2dL8wWeh4rRDgP+oJuUOWs+C/nycZlcINsr9pyUsivM3iPx3oKMIDEsA/AfuDwZ/t4b/xbRV4RmOiv845Rc/4N+C/E9tfQ/o8zj+ENGr5kYfGP3LFeYNneeQ/3QfE6ZEw0L998rujboHcP+2E/NrmnKG/58g6ewjatb+qI4fFhCa2v24dWKCD2eA/sIZ0j9Q01L9GyFsRStaaP/ARca+hUr+/rmMMQS2MzL9L248KUaWvv1mkhges6sG/atHJtwsxwL/2YPvlWqnZP1JDfa9hBuu/WCHSX3Ox6z9tmYjpd+nKP3cen1LGCuQ/4kD4yzqDwz/EENkhMbbXv3xT0P7nbre/+V+V5HffwT9mTFrtGWvXv3r2zZx1574/uLGaYdulk78="
                                  }
                                ]
                              }
                            ]
                          },
                          0,
                          {
                            "py/tuple": [
                              50
                            ]
                          },
                          {
                            "py/tuple": [
                              1
                            ]
                          },
                          false,
                          {
                            "py/reduce": [
                              {
                                "py/type": "collections.OrderedDict"
                              },
                              {
                                "py/tuple": []
                              },
                              null,
                              null,
                              {
                                "py/tuple": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "py/tuple": [
                  "_pipe._pipe.2.weight",
                  {
                    "py/reduce": [
                      {
                        "py/function": "torch._utils._rebuild_tensor_v2"
                      },
                      {
                        "py/tuple": [
                          {
                            "py/reduce": [
                              {
                                "py/function": "torch.storage._load_from_bytes"
                              },
                              {
                                "py/tuple": [
                                  {
                                    "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzYxMDM4NDMycQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM2MTAzODQzMnEBYS5kAAAAAAAAAIxQiCvuHqM/ZRA2i3/tvr+jA/QiLna+vzwYnUqPU7E/QZMSCJsSy78QPlZN0Dexv4gyIOfF0re/cbTjFXJnsL8qtyaI9ni3P+BQPqjnJbY/yoYQSJksxL9g6g7icLXAP9TIyRcF3K0/J0srHiVVk79SsEQlyQ/Ev7hRAYTT2Lm/V14Kun4Ptz/FCqdLP1W4P47A3VDUkZs/fYUVWd9Zrj++ysCd9s7KP4Ii/LNNxMY/8eYZXOqcwb81ToViNFbQv/ImG+D0Hrk/ZU2IRDHKtL8NmVIf4mvDv5Ns+5EPIcA/PfrzBVL/v7/CBmnwaa6jPzoJlIcfn8i/zk2YIi64r79W1ZPSERW2vz+d5yfrJqU/kUyx4TwOwr8wBU72a7C1v8zWjg3gobM/ultQXvd5xr+2XzRdJd/Fv10IZb4fTb6/6xiBLoYpxj9y0i52CpC2Pyovw3+r+7k/Ww39IB5TgD9Q/I3/hzzCvxHHeZlCVcC/0pikSnLMuz9/ISS7WenBP9O4lDtG3MS/0SsrMQ4iwT8KUsvpBJSjP9VsuXoye7i/w/M6lqYOx79sJgNGqnirP2trwNdfmYq/w5ENu7scnj+brhRWB6qtv42285LjbrY/AVjVG+V+pz+kUO5GMCUeP6W7LhuqFsE/iSd45lFBy78PwijTZq5BP/8nLl/JP5a/JAZqDUGYiT9CA3yX9UCoP73eeYQYKXU/TD5W3UrBuL8A58AR0ViiP/orhImkOMC/GP0+TzXjnr9qYjVFzUayv+MZspA2aJe/SSNB/Rywuj/SbjI05266PyJUqyxQ8pu/w8Tt1gJEs7+I86fzcyGaP6h+NOL6hcO/4yQ1fd7tsr++Zl+8Jbu0v99DnsX/Pr4/X7B0a0+YpL/CFGND3U2wv0D8QDFAwbS/FUoUTMqrqD8X4vD2NBu8vzWXRqxELYO/pAdqXiRzsb+laMOddROpvyUbXAfuIqI/r3ntu7+8xb96EDXjKsrAP/OEqtYI1MO/9Iiuyf95tz9hbXjR3UCxv3jZaTcgKca/W/telJLKpT/K/7dE+K25Pyl3o5snaay/"
                                  }
                                ]
                              }
                            ]
                          },
                          0,
                          {
                            "py/tuple": [
                              2,
                              50
                            ]
                          },
                          {
                            "py/tuple": [
                              50,
                              1
                            ]
                          },
                          false,
                          {
                            "py/reduce": [
                              {
                                "py/type": "collections.OrderedDict"
                              },
                              {
                                "py/tuple": []
                              },
                              null,
                              null,
                              {
                                "py/tuple": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "py/tuple": [
                  "_pipe._pipe.2.bias",
                  {
                    "py/reduce": [
                      {
                        "py/function": "torch._utils._rebuild_tensor_v2"
                      },
                      {
                        "py/tuple": [
                          {
                            "py/reduce": [
                              {
                                "py/function": "torch.storage._load_from_bytes"
                              },
                              {
                                "py/tuple": [
                                  {
                                    "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzYxNjQ4MjI0cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM2MTY0ODIyNHEBYS4CAAAAAAAAACLt40MjkHa/d42e6vxcMb8="
                                  }
                                ]
                              }
                            ]
                          },
                          0,
                          {
                            "py/tuple": [
                              2
                            ]
                          },
                          {
                            "py/tuple": [
                              1
                            ]
                          },
                          false,
                          {
                            "py/reduce": [
                              {
                                "py/type": "collections.OrderedDict"
                              },
                              {
                                "py/tuple": []
                              },
                              null,
                              null,
                              {
                                "py/tuple": []
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "latents": {
        "byteorder": "<",
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "shape": [
          1,
          5,
          500
        ],
        "values": ""
      },
      "m0": {
        "base": {
          "dtype": "float64",
          "py/object": "numpy.ndarray",
          "values": [
            2.8832953650151465,
            11.27614591499017,
            2.190911923383618,
            7.867945268571994,
            10.019335390993437
          ]
        },
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "shape": [
          5
        ],
        "values": [
          2.8832953650151465,
          11.27614591499017,
          2.190911923383618,
          7.867945268571994,
          10.019335390993437
        ]
      }
    },
    "input": {
      "observations": {
        "byteorder": "<",
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "shape": [
          1,
          500,
          2
        ],
        "values": ""
      },
      "observations_noisy": {
        "byteorder": "<",
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "shape": [
          1,
          500,
          2
        ],
        "values": ""
      }
    },
    "iterations": 100,
    "log_likelihood": {
      "dtype": "float64",
      "py/object": "numpy.float64",
      "value": -5129.004729401675
    }
  },
  "start_time": "2020-08-12T07:20:26.688951",
  "status": "COMPLETED",
  "stop_time": "2020-08-12T07:22:47.312134"
}