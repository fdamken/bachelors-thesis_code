{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        7,
                        7
                    ],
                    "values": "eJwBiAF3/lDpoFwLyu0/X2jc3HNDhj/KyKRPh7Wbv+1CmtBIl5E/KUaFZMtypz9MBdW9mvSRPyub39oPfJG/Z5ha7WoZrD8tLHPPF5fsP1cl91m9U6g/Tuqd9lKkaj8nH7GMKuecPzIpD+iFY4q/cTU7Ka0hiL+/gwHa/XOpPwcuEHDhrqA/bc0wazaG7z/5obgBwR6Ev30yVH9M0ps/9SPm+nXQY7+rBKRRfH1/v5lLUhusaKm/6wyj+jkpc78C2lFWvkV9v1hElz0u8u4/l8QTJhqmob8Q2XIDtH5xP9lnXBFOTG2/fHyd83Qjpz/gpm7tLHl+v+PfzUxPop+/22YrnJqDmD+DdDd/7G3tPwClXhgJTZc/mxPYZU7KZj9+LG4PMJaHv62Ehxi/9pK/4Zm7oYgxnL+DJd1M4+uaP4NP6RQOexw/GPniZDHR7T83Bn2QGAVsPwxNDh42rH+/5AuaO/Pujb/Gk6x2YpGfv6iWcEVs320/apj+XxClmz+Ne59qtv2YP6DdSA2/9u4/phbBuA=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "strides": [
                    8,
                    56
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    1.7660075520096268,
                    0.7768440163702859,
                    1.1627085713458027,
                    0.9910482750262941,
                    1.4209173435888744,
                    0.9387562567632461,
                    0.7328607782567165
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.3238371753975016,
                    0.14849647274639813
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "values": "eJw78HxG+U+GK/YP5N9pJMVt3a/R0fbh25019g03bm90/b5if4OgeneM/O79DHPtvqgyLt1/wPv6YflXh+DqnfMPmPq0XLRPUJ88U50pdT/D/2mb43QO2ztUv+b/JLJzf871td1MjNvsf05YJrco64A9zHyYer2MCtUVdw7bByjf4F1rstWegY+ll7e7df+P1a5rWFPX7c9f/+aR98rdcPfAzIepdwgvL03+dNKeIdKx5sy79fsdFiqa7k9Zur/l8oL+Xxr77WHuh7kHZj5M/Yb1Xy7L1ly3L5j2N8jvwJb9Bwxe2Wl7HYb7F+Z+mHtg5sPUL1OyubBr63F7gYkvX/JwtNnDwgfmX5j7Ye6BmQ9T3+QjtP3b23P2AODixpI="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            7
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            7,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc4OTIyNjI0cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM3ODkyMjYyNHEBYS4yAAAAAAAAAHmiegEMFdO/p/p87Jst2r8wg32oi7DWvxzjL6haeLo/t4rjF4Azx78UJEHLCEuAvwoAjWBB16G//ZPsFB38qr/fdo9N8y+pP5qZFv3APcY/smtYMuTV1j/7KRS/+vzQP7IVRH2poFc/4ESf796Akr/L5zv3sPLUv0CER0/UUtg/Ae5G3bwQtr8CVqQi9tHRv3K6rmOLrNQ/R33VLZoT3L+e9NZdPixEv8L4N/s7btm/j0TEr4HjUb9MSHznfvjQP2nQufeKFOA/A6kDN7re2r8rQmDKO5XKv173iDfukK8/60EBBsDy17+tov4x9NrLv42gLl87RtS/2gol2EQr3T9PmtfmR/bhv4oP1gnJRtq/Ct3znc2Yor+GL3lGWq6vP36vUilvSrS/av6thdY1ub+1G+zSvzLCv2lzl5Qxaa2/ebpQ9XYTwj99OQMe9xXRvwC+JWVfyss/DMcw5DQ64L+SANDK16XbP4kCBtbxydK/PinLrifJ4b+bkjKCsjLMP4dZCE2sCM4/acG9uZT7wr8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc4Mjc3NjY0cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM3ODI3NzY2NHEBYS5kAAAAAAAAAPs3+jgGoMK/KvueRD6MtL/fu7UkWpmyP1YbJ1R4oLo/faKsP+YKqr8wFIYmvYTDv6InDKapyJG/phICUzu0wr8oiTd5qTq5v5XFuYxxCcM/3Eo1TrPGuz+LOfWYbqu6P4/f3B043rg/UDH2lJnzwr+mxH3YkSDHv9CYwIVqnqI/Eh5l6Q0cpb/xAZneA5q8v8WIs8PpT7K/BVi9BG0qtT/KobRjV8XGvzk9HDIeOsK/MIA91LIuwj+MyybQYy6kv+Lq+3ZRVMA/VA5/XRKho78fekNyfFGpv5ds+8f3pbi/aVb+oKjVtj+1rCa973S3P8O3Bb7hw60/0effNIKztD8ZuSSemhO3vzbS00MGocO/H4UU/WmChb8bAAn9vX+1P9Z8ae28/MO/w5ARlok1xr8nG8r0gQarvwnFvL/6S4I/0Fl3cA6Uqb8er8sIu/ajP9v8W8oPY5Y/NZS4XhgQx7/28gPCIsyIPyo97/NQjrw/L8UnFEOJtr8Pm0IdwJ5avxWpz5VJxaU/XdCQ6ltwyb+iHHCOdUGxP4wbUqm3V7I/SRmUF8yeez/367bpI1u5P9USmpOZ1LA/glBiGt5qoD/WmFGnogW3Pxghx6kE9LY/7CUHpFcjuz/0lG9GOk2nv2sVoNzyRLg/8jbbnoS7uL+o67AfB9a3P9Ouq6iXZ6g/dc9QTtsFgT8N7NQO9cinP2MBJF0l5K+/QT/MHFUxtz9n8jq3DHu0P7y0sMz8M4Y/Kh9WLddovD92BzQaYRKLv2ekuUSH86m/r+YOuILHv7/XPczEQt12PxYcb3KEsIy/5/FVqA9FkT87s3697CG/P3QPaolYb7C/rGjToJxIs7/0ToQ2yDquv9EA8ckFPao/a3Uc72j4vD8sKAqNgZCrv3535FIHB5+/BbYyCeqbpD8pKY7yWba5v1eeSpRhS48/UZj0ILFfmD9f7ZwL95m7v7taECRAFcO/tJS1RU/MvL9LztmjZ4i5vxD0ar4nCZm/4rA2pWjZrL/9IOdox/KnPynRE1LZ8qi/MW0Zm4zNur+2fnbx9/Klv9uV9qGuHaE/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc3NjQ0MDk2cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM3NzY0NDA5NnEBYS4CAAAAAAAAAKlaTaDG0MM/CGedwwPhrj8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    7,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -2.821326109124536,
                        0.6752519698097992,
                        -0.1726398122074632,
                        1.6512215468863942,
                        -2.181588388449144,
                        0.6773479001273354,
                        -0.304751726680875
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7
                ],
                "values": [
                    -2.821326109124536,
                    0.6752519698097992,
                    -0.1726398122074632,
                    1.6512215468863942,
                    -2.181588388449144,
                    0.6773479001273354,
                    -0.304751726680875
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 50
    }
}