{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        7,
                        7
                    ],
                    "values": "eJwBiAF3/mU1ID3HpO0/YQSb1LaShj8mssp9GHGhv80LqBQw0JE/yeqxsKS8qD9j3rBG7lqTPx4Qf2Xs7Ye/eUEJgYlWrD+JHtOF+jfsP1BHvqrz2aQ/X3GVy35hXT+JjV/4/O6BP4bfzaCqlY+/bHSSFgH7f7/7HqqCFFanP8RCtTEUtZw/sFOclnLH7z8ZCEewb5Vzv6ibzL8I9aY/hcFfAKnnc7+uq6cnl4Fzvzx1EVpZn6O/CplGLa61dj9YeAl3YOKIP5upZxaZJe8/rwizsM8qk7+Hk+u8UD17P39jDVvwOWe/CAfdbrN1rz/XEitOYvpYv9m5DJJwdqG/sBNo8X5Mmj+OpluoXZ7tP1IRatpLnps/usDREasHaz8izMp68jiBv6MvOigCO5S/Jjti63cBob9QgcTQaqicP3rdf04m7VO//xasRv+J7T+lcVcKmDyAP0vJuq/SRWY/EPaaSdLVkL9ce7aRCn2bv4IlZYkkXIQ/VLaHn9Y1qj+eeToMCp2fP4nvlNuBZu8/YuTDKw=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "strides": [
                    8,
                    56
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    1.948999907559599,
                    0.7507202545946889,
                    1.2379447066898523,
                    1.099931673886774,
                    1.5912751677808816,
                    0.9558848402579505,
                    0.7160898688569957
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.30503228183544523,
                    0.21784059651739357
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "values": "eJxzWC++9qf6ZfsFHwWmbczbsl/hxj0JQ//V9g0nfwicmLx8/wEhvhVXcnbuP/Bzb928vYv3f3hZlrn5y0G4+kaXIynlNhftGS71HNz3K2n/gxVmy9veHbL/cPaI4MxPu/bvML3y8onyVvu6c4v8wuIP2MPMh6n/8eHAI13dQ/YdBg3TXydvtm/g+6z3yqRi/4yFJzukI1btZ9mU8DDdaxfcPTDzYeoZJkmHpmmdtG+QaLf8f3/d/gd3W4vnuSzerzDj6sHZh/bZw9wPcw/MfJj6Gx37NtraXLVv2HWgadvp7fsTbBN6xRkOw/0Lcz/MPTDzYepjIrwNzacds294/7v3IneXPSx8YP6FuR/mHpj5MPUMXZfW/WE/Zw8AbfzarQ=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            7
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            7,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc3ODE0MjcycQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM3NzgxNDI3MnEBYS4yAAAAAAAAAH1F8QvjuNO/REtp93LR2r/R/zuetAzWv1WWP9G2B70/RfS51HVcw7/yNUUJ9WKSv0fsWFxgCY8/n67nsmoNsL/LLqj8OhGkP6qsazC1rr8/WQ2XPLt51z8VHN4/6yLOP+yPnHb2boc/XLvskk++nL+mH34BiJbVv5Sql1mr9tg/rgwzBRmguL9wjskszXXSv/N0cVm0CNQ/0WGcI8Nv278ZXzwtpb2Fv8E1hgUTEtq/1QeRl7Uoqr8wVonxVZzRP3pI93x2ZuA/wNR4QpGC279XTT/e6dzLvze9mOY1cqo/NDPID5eW2L93N4gdRpPKv7fTnWkS6tS/2oiR6RvP3T+PHcthXKThv1EvKhSg6tq/mYwc8IW3p79OXRVMiWayP/IcSU/L2ba/goUxrTLFu79wiy3nbXrDvy2LhPT0Q7G/n+TT4MjLwD8ju+kozrnRv7hg3HMNEs0/DydSaSCM4L8Iw6HAAALbPxt0yMsaJtK/StPaMxMb4r/ZrLdtBOvKP7tXvl1aUM8/bahNzkJDxL8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc4MTA4OTI4cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM3ODEwODkyOHEBYS5kAAAAAAAAABZ2dU2058O/RImVbZobt7+5RK1Ntii1P6hRKn3UL70/AwyZkZ4pr7+TaRgSDz3CvwwRCwnkLH6/hlJ9Z+n7w78ImyeiBcq7v0b1NKEfUcQ/YVErdw9Wvj+TZOvByjq9P+5y3EaUbbs/o/5yqUc7xL+MLvnsP2jIv5SLrdcivac/3nxRO8Y6qr+6eY8HYCm/v2BnquxF37S/WXy2Lcm5tz9eKyt4BQ3Iv411l0bMgcO/V7m46GB2wz8P2Tb9Vh+ev9kmd4v/m8E/VvZrr8q/qL8igDDENHCuv+cI8vBTNbu/PKL0yQRluT+yGh7mSwS6P+Gfwo5xz5w//SnWXd5Ctz+5yxrH9qK5v9QDT1i06MS/voMBVot4QL9J0/8lGg+4P8m15AFrRMW/ViKJqjd9x78xolsjnRKwv44Gqz80d1G/D5d0wsayrr+3JMBtBbCdP7lGBE0+S4g/TMQzc8ZXyL868tcEgqOWPx7w5hytHb8/O2EePZ8Yub9oJthKuc6Hv/wW4EORpqA/WgYM/wm4yr+ApfPKMmStPziTtwC3kK8/oTjCqSMlkT/stu1uD62xP4eTStV6iqw/R5blkEuYlj8UQkjQ/pS5P+b00ICoZLQ/bbr5zLOyvT84UIP0gS6iv9JLkwVP1Lo/pgfmdSgstr9QTKpIY2W6P8shylbfSKM/2fwUyy+oW781Y8FgreesP1f7h9dugbK/kRPW8/ihtD8OhUSOsOuxPwkZMgpvV5U/0W0zBHvZuT/tOfMwocaXv/quzfLO1KS/n51/cG8rwb8lARiqgumPP0ROEN2ylZi/iMn1EXwefD9ya46UkJK8P4iJ6MD4v6u/QCzdd0C5sL/vPzpEwKyxv8oX3Bu+W68/IeYmxgxpuj9g8XrvnFewvwIPHK+WyZS/HwkeW6K6qT9TUYQbtkW8v/6cKv84trA/Jsw4+oBEjD/ZV5I0Uym+v5xOizjuXMS/4fSrbqtbv784GdDMwxe8v4vRIjFMo6G/kJBgU7C6p7/y7tG6fxGtP6+4AKSREa6/io0PxOhcvb+BGGVDsBGrv3ynFKDs/Zc/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc3NjQ0NjcycQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM3NzY0NDY3MnEBYS4CAAAAAAAAAIiXyLR0GMU/+OfECt7/sT8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    7,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -3.0947791722750218,
                        0.6431403564956075,
                        -0.5221160896671564,
                        1.440786872508431,
                        -1.6395696972960037,
                        0.9020473165735835,
                        -0.6580495100726302
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7
                ],
                "values": [
                    -3.0947791722750218,
                    0.6431403564956075,
                    -0.5221160896671564,
                    1.440786872508431,
                    -1.6395696972960037,
                    0.9020473165735835,
                    -0.6580495100726302
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 55
    }
}