{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        7,
                        7
                    ],
                    "values": "eJwBiAF3/kQcmrB4/es/rStvKcqflz9XPcE+wQ+Jv5T+MZdSzYC/W7pZLL7utD9Kt8rFFlaWP/ZE/cntr3O/FUdCpxHDwD+hOz1kiT/rP0TY789olrM/Gv6U/VoqlD9XW+GQvoaUP/ypZczn/o6/tYsc3iILkL9rFG/JGJmdP/2RQkwpu48/6zfU1ygE7z+K/xVQfHakv7TABbq7w50/kKwJHVqEp7+kDetG4g+Ev+pt7V9/v66/NYmFkta+jT/HQTQmTGVsP5rDSxh+/O0/j4jqdxpfrb+MZa6fT9Vqv24Do9CEuYu/x2eiwR/3sj8QQX2IZvAyv5DPdR/MyKK//1SHRSfCoD9dXRmBQgfsP1ToGtnCZqk/TxKdQ2ICZj8M4xZoLLacv+M2Y7JKg5C/zSiHcCq+rr/Zk0B5j2CyP3mlVRLrhaE/lcFALdDm6z/c4fl4z3uBvxEhU817pZa/E4U1yrKwmb9V6fnHN22yv9cX5BqOYZm/5v8RuC3bsT/vxw040mSQP0IauyJzAe8/Hm7K2g=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "strides": [
                    8,
                    56
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    3.6031933710021518,
                    0.6176511208338665,
                    2.3221046593166093,
                    2.3944128250530228,
                    2.847456304795288,
                    1.3689552907677873,
                    0.6006003683158813
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.37918567203089515,
                    0.14771677913410552
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "values": "eJxr2HHm9dGas/ZbHjeo3Pu8en/DlseSO+4vsV8wU+vdP96F+394Hzon57plP8Piyw0PjszYz/D9se5Opl1w9Qw2fDHya0/bP/jifPv8por9VofKUpSVD9hbT2p8arp+//63607a7/m50j5OokLEffkee5j5MPUL5rfZL67dY+8Q+V30Svta+wORNz4seVRlfyA9yESOZfF+BrUJ7DOubYG7B2Y+TP2XbVtTJp89an/uLXf+DI61+wvuhUbfmrhgv0bi6vUJlbvtYe6HuQdmPkz9ChsLv/9Bl+w9vAt61Rv27C/L+3034sRBuH9h7oe5B2Y+TP2EMy+mqSQdtGfYt0wtoK3NHhY+MP/C3A9zD9x8qPoFasotbkIn7AG+fM/9"
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            7
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            7,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc4Mjk2NjQwcQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM3ODI5NjY0MHEBYS4yAAAAAAAAAKxt6vY0cdK/uNlqCSEZ3L80hj+etAzWv5zubtG2B70/wOgfbgsPh7+r5x389GKSv50uYmo5Paw/vZkFXdq1kT8um44wDka0P5mLEHRTcMG/sGemPLt51z/XEt8AFFCzP/Cj5Xb2boc/q/3AHSpZoD9vdzQXNt7Wv3TbuG5ZPto/fTNPARmguL8PXFAozXXSvzqm5r4ab9o/eKHfI8Nv278H4iBlHTiDP1TpkAgTEtq/ubhOCZ7HwL99Eg4vYHPVP0/EMMwFKeY/ThL22ADg4r9lnG/d6dzLv/7wUUpaacM/K40IfU+13b/8+exEoiLNv3yUhbrKCNq/+ZtEvb8/2z/KE6mIuDPkv80UJBWg6tq/ZILJ0Sr0mr/nffpKiWayP+LTzQITu7G/N1pKWXqmtr/c5wHEspi3v6zvxeusfH6/7/bF4MjLwD/puBcL5FTOv6f49kyxgso/ACDiaCCM4L8BBDzBAALbP5tiyMsaJtK/iKG8MxMb4r+SCu5tBOvKP/aC06uNg8I/n2EBz0JDxL8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc4MTM4MzA0cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM3ODEzODMwNHEBYS5kAAAAAAAAABSPd02058O/uLuabZobt7+QGpWfbke6P0NzkmdGJ8E/OEqckZ4pr7+SC3zSZVu/v9R74ksaBpy/IYV/Z+n7w7/XrTZQTau2v8rUNqEfUcQ/t0Utdw9Wvj/Q3e3Byjq9P9fjZEwmRsA/zQ90qUc7xL8PofvsP2jIv9n3s9civac/BolRO8Y6qr+KOpQHYCm/v6H2r+xF37S/V26+Lcm5tz/4QdJPqX3Fv76OmUbMgcO/MkC76GB2wz8vQxT9Vh+ev/U7eYv/m8E/YiR0r8q/qL8MsDnENHCuv6Zc+vBTNbu/Jdj3yQRluT9X+SjmSwS6P3Lj62oppag/S97ZXd5Ctz9MnBvH9qK5v9IpUVi06MS/gWoqVIt4QL+9FQQmGg+4P0Tk5gFrRMW/Y9xiX0aev789KmEjnRKwv5n8KUA0d1G/YAupBNSWub/PUZltBbCdP5Od4Ew+S4g/Bcs1c8ZXyL+evvCKQFKSv6Dc7RytHb8/5sMiPZ8Yub+9YGVHCSeBP/G6l+cB5Ko/uO8N/wm4yr+R2enKMmStPzHHrQC3kK8/Lvv6qSMlkT9Uu6c7rhypP3vFTNV6iqw/JvYFkkuYlj8EMUXQ/pS5P7xizICoZLQ/l+zOzLOyvT9dv3n0gS6ivzZHiwVP1Lo/Fc7idSgstr/8QLBIY2W6P/oy0fJQH74/9FaHzC+oW79bXMxgreesPxWPjNdugbK/rePQ8/ihtD9vvz+OsOuxPzYlUQpvV5U/8r/KJS4qxz/8KQcxocaXv1VyxPLO1KS/Xob0NPu3q7+rjT+qgumPP5qMI92ylZi/J2GgEXwefD9Qz46UkJK8P9Yz5MD4v6u/NrbVd0C5sL9moSyWeMu2v1hF5xu+W68/k/4lxgxpuj/Lj3/vnFewv/eqL/s7oqS/qGsoW6K6qT8cX4kbtkW8v9JiLJ8AoXU/VjoZ+oBEjD8kb440Uym+v9YJijjuXMS/QWmvbqtbv78z2NXMwxe8v8hlLjFMo6G/7QjnYX/6mr8TAdm6fxGtP+MyDKSREa6/ogUXcjA+uL9nMn1DsBGrvzN5+Z/s/Zc/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzAzNjU5Nzc2cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTMwMzY1OTc3NnEBYS4CAAAAAAAAAPS1yrR0GMU/tObJCt7/sT8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    7,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -3.9524363126833,
                        0.03765940585961348,
                        -1.9330543119767878,
                        0.1548828408929977,
                        -0.09992601259575287,
                        1.5772157820099655,
                        -2.353607152427302
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7
                ],
                "values": [
                    -3.9524363126833,
                    0.03765940585961348,
                    -1.9330543119767878,
                    0.1548828408929977,
                    -0.09992601259575287,
                    1.5772157820099655,
                    -2.353607152427302
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 85
    }
}