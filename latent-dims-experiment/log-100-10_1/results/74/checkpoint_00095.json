{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        7,
                        7
                    ],
                    "values": "eJwBiAF3/hl7nRADIus/WESts6RTlj/LxneQgvOKv0gMXA9wRXi/K5hcWorQsz+ly5yd9CmaPyv5n5tvBGC/eiZ4ZrG7vj/MYMfoyRjrP1HOg8nKCL0/6NMpSfYJtD/50BQ6szeVv7wcxPF8QpO/V2uVZ5D6l7/PNoW/BlmdP6MAPkbHM4c/7aYgZ65q7j+oCLhWLJGqv72t20r4KZk/tUCWz4rprL/BCwA+xqGHvwjfFa1p5qm/I3v8/Mupkz9Zxecedjtcv7INvDM+lu0/nGkvcTPSr7/2RSZec514v9nkpJobZ4i/RaIzclLGtj8LWTiqTgYMv+y97Qxd7p6/cG+pNmgEjD9eMIKno+XrPygMuiy5GKk/JdsmyBqzWT+U26qc4IRxv+/6tmo4gIG/+4+rBmCjsr+ADMwA45m1P/5pN2e3e6c/XrmVkXVZ6z/3w44vh2GQv6GYDs4GG2i/fQOPsLnLn79xuRePa668v3+vAScxwqG/nLR2IVMXsT+fDbtB0NR5v3hphLoV3u4/jnHH3w=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "strides": [
                    8,
                    56
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    4.074195954405373,
                    0.5457228228238812,
                    2.6267210260549896,
                    3.5292279319978253,
                    3.647022293094341,
                    1.6835620778158795,
                    0.5315816573629399
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.27444568709946177,
                    0.20624734499662925
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "values": "eJxjmHorJlrmlH1C2vflntFL9jNM97l7Zdti+wbN38vKxKft35L8SI9h3ab9DO3NMw8+nL6/4a3AH4UN2+Hq99gp9Epzn7JvOJXXX9FWvz/QpaokzX6vfccTxq70uv37N3iIbVJ9sNI+ocr0lNzlPfZw86HqHUSOib7ftMt+Q+SMOx+B6hj2Of/eLtFi38C2Yq9ZxYL9DfzS2tnum+HugZkPU5/0VUvcqeawfYLNlYX57qv2P3AoC96pNHv/jbpYF97gXfYw98PcAzMfpj4r2E/jzIyL9kEOEyOffN6zfxPzW9b3Rw7A/QtzP8w9MPNh6guOVJ+4Nf+APUPTFOn13b328PCB+hfmfph74OZD1T8wenFp/eNj9gD24sVK"
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            7
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            7,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc3NjE4NjI0cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM3NzYxODYyNHEBYS4yAAAAAAAAAOLEtjM/SNa/qJDgHc9g3b9i2EWetAzWvy+ObNG2B70/Va7dIaQ+qr+ECyP19GKSvx42f8jI/6E/E3IRU9q1kT+68lLEq06uP/sriQR+hLO/lNu3PLt51z9heZeihI29P2UlVnf2boc/hQDHw5qWqj+uCMA/km3Zv+6zI4MHhts/+eJNARmguL96qpH+4czPv0hXCud2/tw/LCvsI8Nv278NMDP17xaePw5AiD4d6d2/RxtWCZ7HwL9CbisvYHPVP3h23Po4XOk/hxYi7q4n5L9OzI/c6dzLv6RfHkz+2cA/MlO4U/Ml278I04pw/rHPv68GULrKCNq/TUuMDxPT4D+a1BudZnvlv14EQRWg6tq/25TldCbleb/VsRpLiWayP0aZZlPL2ba/GGjGB8KHsb/k9Qp/+nmyvzCd8BZst4k/ORnC4MjLwD93kR3ih8XLv1V1V6pARcA/tks/fc7T4b8Ut1XBAALbP+KgwssaJtK/ZOnfMxMb4r8frHaWYHrNP/enaLWqybo/SVHlI/thyb8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc5Mzg5OTIwcQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM3OTM4OTkyMHEBYS5kAAAAAAAAAIY0eE2058O/kZmcbZobt7/gDMDKy9HEP2TJkWdGJ8E/FsWRkZ4pr79nen/SZVu/v4O6Nmm18qo/gEOAZ+n7w7/b/S9QTau2v3NpN6EfUcQ/wEAtdw9Wvj997e3Byjq9PzcmTZ7eZMU/Yc9yqUc7xL+tHfzsP2jIv2GGttcivac/5GhRO8Y6qr8vT5YHYCm/vwfasOxF37S/IvC/Lcm5tz/twtX98F7AvxI1mkbMgcO/+Ea86GB2wz+qHOm0/uO2v0vueYv/m8E/KrN2r8q/qL8sjjzENHCuvxZg+/BTNbu/hV34yQRluT8k+CrmSwS6P9WT2Woppag/PjrbXd5Ctz8M5RvH9qK5v9PZUVi06MS/mCL8VYt4QL+P8QQmGg+4P6qQ5wFrRMW/WtCIu9Vgtb+5lGIjnRKwv4YVRkA0d1G/dSSsBNSWub+KcI1tBbCdP8Ypz0w+S4g/1Ws2c8ZXyL/AC1zpkGajv9Xo7hytHb8/qd8jPZ8Yub9cHk5HCSeBP6Wl2UORpqA/mYMO/wm4yr9HKufKMmStP9JAqgC3kK8/qcWQ6+ytar+fUxLQM4eCP0pkS9V6iqw/3o4GkkuYlj8j+Ft+Rna0P7E2y4CoZLQ/YLJMOBL4wz8Z03b0gS6iv5qkhwVP1Lo/az7idSgstr+X0POk8iewP16b9KCYALk/wZjxzC+oW7/4tM5greesP9UvjddugbK/sbjO8/ihtD/XqT6OsOuxP+hlWgpvV5U/ljiHd+ZIzD/NWQ0xocaXvxIfwfLO1KS/lr4ZNPu3q78Bh0qqgumPP43vKd2ylZi/s3SJEXwefD9Kao2UkJK8Pyxb48D4v6u/EJbTd0C5sL8nTiuWeMu2v+Mc6hu+W68/CFIkxgxpuj8AEYHvnFewvxnXLfs7oqS/TEMsW6K6qT+Ft4obtkW8v7JSH1sBL6c/psYQ+oBEjD+lX6Timgq5v/zPijjuXMS/xKWvbqtbv7/8MNjMwxe8v4pPMTFMo6G/Eg+oYX/6mr9Dydu6fxGtPynrD6SREa6/CakVcjA+uL9U1X9DsBGrv78i8p/s/Zc/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc3NTY4MTI4cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM3NzU2ODEyOHEBYS4CAAAAAAAAABlry7R0GMU/pUHLCt7/sT8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    7,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -3.962731543910838,
                        -0.24735541034822503,
                        -2.291828578559752,
                        -0.3403451342541392,
                        0.08817706944288171,
                        1.8138698928876296,
                        -2.74288310965474
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7
                ],
                "values": [
                    -3.962731543910838,
                    -0.24735541034822503,
                    -2.291828578559752,
                    -0.3403451342541392,
                    0.08817706944288171,
                    1.8138698928876296,
                    -2.74288310965474
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 95
    }
}