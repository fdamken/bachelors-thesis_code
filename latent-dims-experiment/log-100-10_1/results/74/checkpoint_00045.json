{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        7,
                        7
                    ],
                    "values": "eJwBiAF3/jrUbv7Y/u0/OIFXFHj+cT9Z3M08H4yYvyj7KKZsKZg/uYdjWNwnpz+EnTR7xeqUP8zNaVCk0o+/9mUl/Xc1qz8T3fg9v9DsP6bbBOZGcKU/o3rYDZI6ib+pXQoXqUyOP8sSWAInlI+/bk8M8bQQhL/ci0Yv94+pP7PKX0ytqKA/uaYSMzul7z/XFR3v1DeEv5uR2Gi8fqA/jKrSnr3TZ79GKkd896mMv98+REYryqW/++bKTdPrd7/x0asMOs6Qv7LXVEP+1e4/frq5BjjDmr/GPtiUIjVZP1+RUX5zXIW/MO5eNL98pT/vJJfIMgtxvzAVkuV+UaW/nXMS1roYmT/Q0zWTsIztP8O9rSKMzJk/IZPJMZFvWb/pupQgTKiLv7FV87uSlZS/af7tUZAil7+SyyPOgpKQP5KRYSVjPFG/gq3BXq8K7j8SsYISuvOCP6x95zIxtIc/kVtPYNkuhb9QDSDCW+SXv0k9ncnNLWC/nOR8w6wgpD+foRwE0yKYP/WFGUzi/e4/93LNFg=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "strides": [
                    8,
                    56
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    1.5976834480502522,
                    0.8052793760266167,
                    1.1880288969356527,
                    0.9324906025789886,
                    1.3221443642779234,
                    0.9258551909412028,
                    0.7544834829142731
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.33033105093399534,
                    0.258899857446234
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "values": "eJxraGMvCTh2xX6B8FSjrfe27hfY+VTl8s219g2a17ek7F21/4Dju7MBs/bsP1DMudyHfen+32xTzgpeOgxXz9pbXlNx4qK9w4Fp8//9zd8/44Zmr2XRYXuFyuPH7v/ctn/Fc+WIeze22S+5ZLSed9kBe5j5MPXu63hnMpkfs19zaPnUZ5Xb7Q8oNnCcq2vaX9Y5raT5yMb9godbekSv7YG7B2Y+TH2D8Y9Hm++fsm+QZOzgn71mv8OUBq8pmcv3r6sXzl08cb89zP0w98DMh6lPCLDmf590y95gbt9rjSeb9nN13zig9/EQ3L8w98PcAzMfpp7HyLU57sgJ+/bFrusYEtvsYeED8y/M/TD3wMyHqW+JbWq48eS8PQCazNGt"
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            7
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            7,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc3NTg0MDAwcQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM3NzU4NDAwMHEBYS4yAAAAAAAAAHr93Pc0cdK/I4LK9nLR2r9J6EmetAzWvwaf/9C2B70/1JqHQ4oKy79imGUJ9WKSvzM0m6/59aa/0NTstGoNsL8YvkHElKeTP2q1DWEnpMw//BCQPLt51z88ytTJ0aDRPzzIhHf2boc/ZLN/k0++nL+Qx3IBiJbVv+MCglmr9tg/kKk2BhmguL90N0IuzXXSv7q0eFm0CNQ/jMqZI8Nv27/Upe8spb2Fv2hAaQUTEtq/3PeRhX0KqT8lmULdp1TQP7Tl3Xx2ZuA/ihCOPpGC27/2V6fg6dzLv188XkPTV7I/iiGCEJeW2L9tSo0dRpPKv32pjCwIE9G/Feew4RvP3T/eubdhXKThv0bBAhSg6tq/gdyI7oW3p78AlTNMiWayPwreNlHL2ba/Ony2rjLFu7+WTY3nbXrDv87p4/L0Q7G/jfDa4MjLwD//MRMozrnRv2a+k0uxgso/F/hOaSCM4L+GpafAAALbP7YLy8saJtK/ISgINBMb4r/URsJtBOvKPzjM6GRaUM8//FEfzkJDxL8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc3NjYyMjcycQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM3NzY2MjI3MnEBYS5kAAAAAAAAACFVdE2058O/6QaTbZobt79knKdNtii1P8mgEH3UL70/WYeVkZ4pr79ku9k6a8zEv9OVzQjkLH6/tyN8Z+n7w7+7oyqiBcq7v7P3M6EfUcQ/fs4pdw9Wvj86zOnByjq9PwSbkPTbTrY/iapsqUc7xL/6hvfsP2jIv8jgqNcivac/sx5NO8Y6qr8MNI0HYCm/v8+bpuxF37S/z4WuLcm5tz/mAC54BQ3IvzRIlkbMgcO/vaG36GB2wz9/+9JiRsWxv9AHdov/m8E/doZnr8q/qL+lyivENHCuvwhd7vBTNbu/W8DyyQRluT+cKRjmSwS6P/Gc7wdNcbE/AnbUXd5Ctz9uOxnH9qK5v3L3TVi06MS/6DZlV4t4QL/IFvwlGg+4P4ul4wFrRMW/I92Mqjd9x7+LJ1kjnRKwv3ynMj80d1G/0c8+wsayrr8oZsZtBbCdP/VoFk0+S4g/A5cyc8ZXyL+VzNMEgqOWP7FS4RytHb8/Kc0bPZ8Yub9m/jVKuc6Hvw5E++cB5Ko/Du8K/wm4yr8NJvfKMmStP54VuwC3kK8/TBGzqSMlkT8ZWeLAx8u2P7I6StV6iqw/WTEGkUuYlj/xCUXQ/pS5P0eL0oCoZLQ/+47XzLOyvT+NSob0gS6ivy2alQVP1Lo/y0zmdSgstr/izZhIY2W6P89iaQsfIGO/mUyRyi+oW7+MHb5greesP7TthtdugbK/PZ7X8/ihtD+0t0aOsOuxP1SRKApvV5U/dc0LVjP4vj+f7+swocaXv4lG0PLO1KS/MMaCcG8rwb9miwqqgumPP5cbCt2ylZi/rG0NEnwefD8KLIqUkJK8PzbV6sD4v6u/T+ned0C5sL8rgzNEwKyxvzXm2hu+W68/NtEnxgxpuj8T0XnvnFewvw4vF6+WyZS/iMQbW6K6qT+fxoIbtkW8v71yF5QAoXU/O+xE+oBEjD/zz5E0Uym+v23kiTjuXMS/YpKpbqtbv7+OV87Mwxe8vzZBHjFMo6G/NUJMU7C6p7+60dC6fxGtP2TB/KOREa6/2FYMxOhcvb9lIl1DsBGrv9JUGqDs/Zc/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc3NzE1NTg0cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM3NzcxNTU4NHEBYS4CAAAAAAAAAA96x7R0GMU/aUvDCt7/sT8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    7,
                    500
                ],
                "values": "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"
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -2.532690385106072,
                        0.6477603966927948,
                        0.14165632155189456,
                        1.7195486925616756,
                        -2.720567505001344,
                        0.5052972864703897,
                        -0.03980561662100282
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7
                ],
                "values": [
                    -2.532690385106072,
                    0.6477603966927948,
                    0.14165632155189456,
                    1.7195486925616756,
                    -2.720567505001344,
                    0.5052972864703897,
                    -0.03980561662100282
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 45
    }
}