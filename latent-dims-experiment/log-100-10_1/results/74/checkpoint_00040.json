{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        7,
                        7
                    ],
                    "values": "eJwBiAF3/qlBUL9EJO4/3m2f//zSfD+soGydfLOgv8QVx3CWhJQ/yhf5pyIzoD+A2+My1faVP/6R/4Bmh5W/eISA4cggqD+x1iaVkSTtP7y+4gFNlKE/Pr0zrgUAiL8ShZj/mbShPyC3Uy83K4y/T0OGgQUiir8xPEc83S+mP+SkhP8K4JY/tiLVJrt17z/m0XB6aUaMvw6yWTTdsZs/JfHSS0EXVb/mUAtRN9GTv2j4HEbDGaa/Yhg5IF79mL9kXTiFUEOgv4diO93jfu4/K5JMpD6Job/ASqOlD15wPzzNs/O+Goi/edUPO89FpD+ovnhIjySCv5hQc/JJEJm/NKaH4jqTlj+nOSLEMYztP/jka5CF7pc/Yo+3xNVIaD9QGxUf4DGbv7lAX+axtpi/QY+hyqC7ob+ZQvdsXF2OPyI7ndg3IYm/8g3+MjKl7j/JMe89pNt3P9DyvqMlojg/xE+tdvtfjL/7aKKZkLugvz/D5O3OdXu/4CED/AKmmT8AyJkL4/CXP+WXXqhEtO4/Bf3KnA=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "strides": [
                    8,
                    56
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    1.4160403000993222,
                    0.842006538693635,
                    1.1871310143758014,
                    0.9115939706146589,
                    1.2519456105978888,
                    0.9179361731764688,
                    0.7611576365017393
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.2585386101824679,
                    0.13422310279374153
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "values": "eJxLWLvXYlnSVfuGKIa8pYbb9i+43db28dg6+wPXVbR0DNbsd/ixsH+a6N79G5g3fDBiWbr/0vQtRjfajsDVGzs+uR/Fe8n+wDdOxfRP5ftfvObvWX/qsP2BOlsfj7lb9vfU8av5X91uf031Sv+Wnwfs4eZD1We4SWgsnH7K/sAafSaWuD32DAcCtr5Rk96/wmxX0eHQbfs3C5RKL/m9D+4euPlQ9QYZAn+Kr5yxZ1BklXoRsGT/gu9+f5/6r96/RiHf43jbAXuY+2HugZkPU++wpEwthvGevYFz/pz4zo37E8yXL7DqOwj3L8z9MPfAzIepX3v3xqlt4afs95juSVzk02IPCx+Yf2Huh7kHZj5MfZas+Zaeygv2AMjcx8E="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            7
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            7,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzgwMjExNjQ4cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4MDIxMTY0OHEBYS4yAAAAAAAAADGU2osDfM6/uGdL75st2r+Er4Koi7DWv7WMBqhaeLo/a98rONzCyb/1HiPMCEuAv+qRfwKyFKy/zlOC28acsr8sm+xkBeWdP4rQzs6YPdA/jExUMuTV1j//w03B+vzQP1kFwISpoFc/ZAYs8N6Akr/Qv0P3sPLUv7TDHVHUUtg/jZNb3rwQtr9BVUxApBnTv/L9U0/dZNM/1JzSLZoT3L8o3b5jPixEv9XjS/s7btm/vwNCeAtSuT9xqn3nfvjQP46sl/iKFOA/JUnRDl5P2L+1Hr7ylyTNvx33PpN9U6U/kE9rBsDy178m3igJmEvJvw7aPSIxb9C/aFRq10Qr3T9PWZ3mR/bhv8cNywnJRtq/N8vdnM2Yor+bR7tGWq6vP7KkrSdvSrS/VBPghdY1ub/G/vrTvzLCv94j75Mxaa2/WAJV9XYTwj9z8Jkd9xXRv8zxnF9fyss/0Vpb5DQ64L9wI+TK16XbP78PB9bxydK/RT32rifJ4b/UhTGCsjLMP4i6EGVg29I/Ssa6uZT7wr8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc3Njc0MjcycQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM3NzY3NDI3MnEBYS5kAAAAAAAAAF9e+TgGoMK/wOucRD6MtL9fcLAkWpmyP+QqSgLAgbU/o/2pP+YKqr+zCnYmvYTDv0DzAKapyJG/eiABUzu0wr+x3Dh5qTq5v8YKuYxxCcM/mt8zTrPGuz/QMfSYbqu6P3z2e8t/v7M/jJsDbD1kwL/gYnzYkSDHv/HSvIVqnqI/18Vg6Q0cpb/uOJfeA5q8v/c0sMPpT7K/jnq2BG0qtT9ebLVjV8XGvz9DGzIeOsK/mqk81LIuwj81YsBz1Guuv9MM+3ZRVMA/aJ57XRKho7+h0D9yfFGpv1im+Mf3pbi/Ds78oKjVtj/6+x+973S3P8xP873hw60/K8PeNIKztD8rnSOemhO3v9H30kMGocO/9wMq/WmChb+hPwb9vX+1P4e0aO28/MO/hq8Ulok1xr8dcMb0gQarv/y9yL/6S4I/m9ZmcA6Uqb9O9swIu/ajP2EZY8oPY5Y/0JG3XhgQx7+QWf/BIsyIP+/l6fNQjrw/t9MlFEOJtr+pPw4OwJ5av+DhOJZJxaU/ne+P6ltwyb9LU3GOdUGxP9lJU6m3V7I/BClyF8yeez++Skfo9f2jP7IimpOZ1LA/Hi1yGt5qoD+iIk+nogW3Pw9SyKkE9LY/OpwjUp8Etj/XT3FGOk2nv/W7odzyRLg/pTvbnoS7uL8tGYUfB9a3P9zcrgizZX8/QoJcTtsFgT8wntIO9cinPwDHIl0l5K+/glXNHFUxtz+IlDy3DHu0P9rfo8z8M4Y/Be2Qv8fDwD/k4ikaYRKLvwywu0SH86m/pOoQuILHv7+O67jEQt12PxzXZnKEsIy/gUJaqA9FkT/lcalrNAO6P2wRa4lYb7C/WpLUoJxIs78Z7gW/1Fq5vwS08MkFPao/7EUd72j4vD+MWwiNgZCrv6Zd71IHB5+/k+YxCeqbpD/4K43yWba5v2etJcYRUJm//TD5ILFfmD8KfZwL95m7v/ppDyRAFcO/POGzRU/MvL+FotijZ4i5v7GAZb4nCZm/Q+kypWjZrL+Diuhox/KnP8BvEVLZ8qi/XMEWm4zNur96Dnbx9/Klv/py+KGuHaE/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzAzNjU5NTg0cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTMwMzY1OTU4NHEBYS4CAAAAAAAAACCATKDG0MM/bB2bwwPhrj8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    7,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -2.2050510301562163,
                        0.5761848842756245,
                        0.5445539537798394,
                        1.7438372995255302,
                        -3.146993625452705,
                        0.2643688829271272,
                        0.20642928592970727
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7
                ],
                "values": [
                    -2.2050510301562163,
                    0.5761848842756245,
                    0.5445539537798394,
                    1.7438372995255302,
                    -3.146993625452705,
                    0.2643688829271272,
                    0.20642928592970727
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 40
    }
}