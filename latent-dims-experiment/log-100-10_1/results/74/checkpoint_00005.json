{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        7,
                        7
                    ],
                    "values": "eJwBiAF3/md39/W9q+8/ApoJSmyCVL9//w30AAFWPxi2ca0vBYe/aefGqdGnYr8RbyXt2HpxvwgwC1ixEH0/edFZejUEhT88EZWmoQTwPwu10emofnS/358DJiUBdj9Qe5Fba8FkP5bUUU1vjYM/5wqxInsfi7+ONgnr0deHPwyT6xkcKW8/gtw63d/v7z/cFL8jvIl1P1I7daw9XYs/IhTpzG6FRz88N/pbDRODv5sV/JH/tXY/hLy+8kOWaj+K6P3HtiE1Pwh+jC8GF/A/DtXuz9/eZD8kKRnFJ7FkP+snuUN0GIO/iqS6oiqtcj+w3pUopV5jv8Jg8JncRFS/2RWkfcN/YD8SmqEtkNnvP1pqLHe97GM/d/t5wov2YL+DEEEBKNt2v4Oe8U9YumK/xFhLBED2Gz8uUkpodslRv/kbNl+JDlk/ChEDqeje7z/oXC2s2Hp4P4ky70ZTrnG/v89d66+YTT+xLk63G+0yvw9SaD/ME4q/gCeWjxvYcL8NSohsOIR0v71UEMjwAvA/Ene6jg=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "strides": [
                    8,
                    56
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    1.1875047225034787,
                    1.1511509368253987,
                    1.2084634388404578,
                    1.181517483715065,
                    1.0676943956909772,
                    1.1266786348604725,
                    1.2028389880079067
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.6809227961510351,
                    0.5630568684903433
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "values": "eJz75htZK37mqX1F6c5vl5LW7tdJ0y9c8WmD/YlpF29VRRzbL3Ely+oj+6r9PkeSnmwtXbV/qntihEvFBbj6X10n1i/5/8C+QPSmt0zvHvsER59rIaHH7Dm2r3lWFLNt/4/d1vpbVm3Y37B79r7YoB57mPkw9UW3zs3s83lj3zDx4AaFxx37D2yX/uq3qmi/Q73/zInzJtgLRHZF3PqxfD/MPTDzYeqnPLonveLKc/sDAecvrBRvt3fwStZ0qm+xf1AlJRwsf8Ie5n6Ye2Dmw9Q3tVwKen/lrf0Gyb3zzm+euT+imsVkU9YCe5h/Ye6HuQdmPkx9623f6v/r3tonrH7BYBc/1x4WPjD/wtwPcw/MfJj6mD0V1b+EntkDABkezXk="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            7
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            7,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc3ODkyOTI4cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM3Nzg5MjkyOHEBYS4yAAAAAAAAALK7Eaigkba/xKvvqGj61r+zT6jbvuPZvykAWuHvMcY/rAUbAzYBoL+qVKajgi7CP3NsxmGnGcW/5BndMBAHvj8HMU+0lKeTP35Cz1uMUrA/Q9hNPLt51z+ytrt20Kxyv1PBOlNHPp2/ZzNOjE++nL9lgOHr2U7Uv4O6gvdgxMU/6tEUghIwbz8soY5Ke73Tvz2Anpe+39c/mwO2qa7B078oYGY/TlG8vy7KLSHUa8W/wczHn8tRt7/RGGdpl4rLP+mCU7nPws0/9fB0xCzcyr9sUsxx1S7Evy1VAUfTV7I/Nxtg04y/1L8HhGmkMeXCvwxAWH7AMda/I2FPPquR0z//6CP363vWv7+e6upDW9i/EYwbQyr0mr8S1D5PiWayP375DnD3G7I/BsFxqzLFu7+PioF3gijLv1zqlVV5Sqi/m6WTqOD3nz+GZANRKknUv0ddLCJt79Q/HrQu8sUD07+S3ApbmpvUP105uRshnsy/Z+kPm1lp17+D829Cbzy8Pw3RYE/b79A/At+j9Z7Sxr8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc3NjQ3NzQ0cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM3NzY0Nzc0NHEBYS5kAAAAAAAAABAndyRYWMG/x42XG+L8sb/oI6bvJma/P46SG2vmaaE/Yoe07S3spL9HRz4u9R21v9X37GdIbMW/uGyFPo1swb+6bzn6XnTAv6udLqEfUcQ/rS4ddw9Wvj/7SuXByjq9P5XsIUwmRsA/Al8cVhR+kr98IPPsP2jIv7kOeWdk/5o/g3k0O8Y6qr9BG4MHYCm/v8ynZT7+/bm/C6GdLcm5tz+kUaeoKZ+7vzArlEbMgcO/9uq6vwTnwD/Vc5zbTFGfP2ljDcVGGb4/ZxNYr8q/qL+YK0sgxDKkv5AOYUpiucK/NG86TChPrj8gEBaUk+W0PxKVBFoFkLY/n1bqCyYksj99om/ej3/EvwIES1i06MS/WN9JoqX+lL8G/fQ396d4v4Sh4QFrRMW/y7yCvNVgtb+i6cSiyeelvz0b0qUn76M/PhwpLl+cuT9s37pacxWpP/58NFiCpai/pWk5SmrIxb/lwLp2CQW1P0KsBHk84LQ/9eUaPZ8Yub/vAiaz9f3CPxwKiOgB5Ko/eL0o1q0oyL+s5vnKMmStPyZaxAC3kK8/JQQx4XGlsz8ZeTwgs0i3v8xIj7z1Y7M/+k8b2jsCtT8Y/wvaFoSkv2RlVNJgg7k/9smZwlmRmL8f+4f0gS6ivxgcu7OWtbU/J5qZ5nIUe79V6p6aG4S/Pw0eJlffSKM/ioGYyZ+doz+qb+NgreesPzgUf9dugbK/qTXDRbHAuT+rZgbC7KPAP4fwHApvV5U/+1BVVjP4vj/DCMkwocaXv9Em1fLO1KS/nsGBcG8rwb8yBSzyQXWsP6MSsFZGa3C/wRWDhvm4sr92qIz1Y8aovxi5NwRtHbi/ad3od0C5sL/ZZ97uLKPFv03fyF+XzLQ/A0SOF8WHvz9yyF87yXGmv8STPuArLJQ/k3l6W6K6qT+0SYIbtkW8v72yBjXBxqG/4/+dKYNieb+w7JI0Uym+vxZ8Ns1rfL6/bEPJHPM8ur/ApLXMwxe8v7rzlTBMo6G/NeiWX4b2iz8eNFYveKezP4hiLAAh1KO/0hIExOhcvb8iD3XvO1uKv6gmiR2kW7U/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc3NjM3MTg0cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM3NzYzNzE4NHEBYS4CAAAAAAAAAP8WyosYicI/nHiDXJYetz8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    7,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        0.37331881665854777,
                        1.1885378908834747,
                        0.8445118330445406,
                        1.7449757778269124,
                        0.41873931829235955,
                        0.34205360576941746,
                        0.9995998484869352
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7
                ],
                "values": [
                    0.37331881665854777,
                    1.1885378908834747,
                    0.8445118330445406,
                    1.7449757778269124,
                    0.41873931829235955,
                    0.34205360576941746,
                    0.9995998484869352
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 5
    }
}