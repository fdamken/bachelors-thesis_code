{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        7,
                        7
                    ],
                    "values": "eJwBiAF3/oLF8x6iiuw/qXk2XrpblD8WDAWfKuqXv6/+Ob08lHI/LAYqAREBsT+PAYDwL72RP+RmdVvFDYO/0zhjKt65uD9JJ063lYzrPym5khy/y64/ZqrONeZ8jT/vWT3ZrfyIP2JmpddxuZG/0RKAIqRMi78CnUHCc5miP7ndYjIhTpc/569UjC1o7z8wnq28b76RvwpV/IZKm6o/Hin9yEodi78VgzXxwMs0P/ziBJvj46W/3FGvp2fbiT9CTGZ8R7+HP1QLjHfquu4/BJA+Uu30n7+rOgT4exx9PzSF4l0f5HW/LcCK1+xXsT+TsvW1XxNgv1NvVw7oHKO/TsGpjVfKnD8lBS65iZDsP6JaKvcw3qM/eYiwu47tej/ivr79AvZ6P2KaVcykTpG/TRdxHrIiqr8OPYNA8MCrPyL4NW6qPKM/dWfSFFHj7D9dDzJOp31cP31bO0DjLpG/dOZXc+3Fkr/Jv0wsykGhv3FXdaDlfCC/YUAq+M47sj8RnXrXAXSeP8mjfeNDke8/jy7DhA=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "strides": [
                    8,
                    56
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    3.0214269624657666,
                    0.6728894684663442,
                    2.130874089485609,
                    1.7468659919749898,
                    2.5530054513131732,
                    1.2205816739701594,
                    0.6666849478025618
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.2153933794322493,
                    0.30467773018192656
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "values": "eJxLeLf+6z7BC/Yz5vHc3jhjw36GTpkzj12X2Sv49kemKS7Z37C1+N98k637Gbh5PifNnLu/Icr7RGHoHrj6s+/fpld2nLU/8G9q6zTz8v0BB5gzZn87YH/I/3k/a8H+/Teym3IS/NfZtzhzXzglu9ceZj5MvYK4bfO6CXvtP5j9SdasXGfPwLjWtn5jrr0Dx6601BmL9zscKC0v2rUV7h6Y+TD19df8jtj3HbO/cGS7w9O7a/cb3LK3jdFdsL+iY/mNE1t328PcD3MPzHyY+mXfH6z2uXbJvkD/LMtErz37e5IW15hYHoL7F+Z+mHtg5sPUG8yLLMhoPGTPcDy/+Fdxhz0sfGD+hbkf5h64+VD1AiGT38canbQHAKlrxwM="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            7
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            7,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc3ODY4NzM2cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM3Nzg2ODczNnEBYS4yAAAAAAAAAFYYbgvjuNO/PmjkCiEZ3L93Rz+etAzWv+gxYtG2B70/ZFERgjMBoL/7of0H9WKSv98QzgBVPbM/L7NMuGTdpb+w8IKjq06uP7fG9PV9hLO/CuqdPLt51z+pUy6ihI29P3yBTXb2boc/IfoykE++nL9t+qsBiJbVv2lqZlmr9tg/ZO9DARmguL8aj3kozXXSv7jSi1m0CNQ/TYS4I8Nv279xj/kppb2Fv8Ds+QgTEtq/gyhfCJ7HwL+8qu4uYHPVP6ZagrmAPeQ/XD1Fzyk84r/3V8Td6dzLvxH3UZWLdrc/UUTiVfMl279nAqsdRpPKv3DCV7rKCNq/Cgvhj2Ow2D9WV8mIuDPkv80UDRWg6tq/skpcySr0mr8x3XFLiWayP6VanQMTu7G/rUzKWnqmtr8m7IHmbXrDvzbO7uqsfH6/G2nG4MjLwD+w2w4L5FTOv5ViF/cQYNI/m0h2aSCM4L849iXBAALbP0UtyMsaJtK/ZAreMxMb4r+n3sttBOvKP54aBNLpEsU/3/qmzkJDxL8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc3NzIxMDI0cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM3NzcyMTAyNHEBYS5kAAAAAAAAANQXd02058O/kFyZbZobt78KprNNtii1P44Rk2dGJ8E/9sKdkZ4pr78hfnPSZVu/v8OT5QjkLH6/5gN/Z+n7w7+6j0z+lIyxv3dyNqEfUcQ/cgYtdw9Wvj+Lzu3Byjq9P+8Y60aUbbs/+Vp0qUc7xL+/TvvsP2jIv6Mbs9civac//axUO8Y6qr+G/JIHYCm/vzWJruxF37S/j0m9Lcm5tz/z2B94BQ3Iv4gZmUbMgcO/xoC66GB2wz98X9pq60iDv7rKeIv/m8E/gmVyr8q/qL9QqjfENHCuvx3e+PBTNbu/f2H3yQRluT+K8SXmSwS6P9Nj82oppag/oSbZXd5Ctz+rrhvH9qK5v9y2UFi06MS/iFlYVIt4QL9pIwMmGg+4P7hL5gFrRMW/F8auWH9ewr/p+F8jnRKwv9yQNEA0d1G/R+Eqsxt4tL+3FqRtBbCdPyhZ6kw+S4g/v0s1c8ZXyL/wErsEgqOWP5UK7RytHb8/0KghPZ8Yub+CLKVHCSeBP5Lsl+cB5Ko/9bMN/wm4yr+h/u3KMmStP2vIsQC3kK8/lGjiqSMlkT9/z7LBx8u2P4r/SNV6iqw/wCLjkEuYlj89iEXQ/pS5P/w6zoCoZLQ/iSPLzLOyvT+1jH30gS6iv6dUkQVP1Lo/13jjdSgstr+iF7JIY2W6P4f1Y/pPhq0/4+YYzC+oW78xGclgreesP2mDi9dugbK/BzfT8/ihtD8ZeUGOsOuxPyFkRApvV5U/Nj/303ULwj9f//4wocaXv9uHyPLO1KS/nFZV7LX6sr8KMi+qgumPP4J5G92ylZi/QQzFEXwefD/qvpCUkJK8P4kq5sD4v6u/MpvYd0C5sL8AcSiWeMu2vxYh4xu+W68/Nt8nxgxpuj+Sf33vnFewv12YFK+WyZS/saQjW6K6qT+CUocbtkW8v5HgCpsAoXU/hIco+oBEjD/GgZE0Uym+vynyiTjuXMS/9qyubqtbv7+H5NPMwxe8v8pKKjFMo6G/dbedVLC6p79XU9W6fxGtP0LfB6SREa6/XoYBxOhcvb9VkndDsBGrvzeVBKDs/Zc/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc4MTg0Mzg0cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM3ODE4NDM4NHEBYS4CAAAAAAAAAGxDyrR0GMU/ztnHCt7/sT8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    7,
                    500
                ],
                "values": "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"
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -3.7235218053361736,
                        0.15335200092190882,
                        -1.6091881710146914,
                        0.4032480006599483,
                        -0.3687807335012906,
                        1.4268549151295888,
                        -1.9814424723723698
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7
                ],
                "values": [
                    -3.7235218053361736,
                    0.15335200092190882,
                    -1.6091881710146914,
                    0.4032480006599483,
                    -0.3687807335012906,
                    1.4268549151295888,
                    -1.9814424723723698
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 75
    }
}