{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        7,
                        7
                    ],
                    "values": "eJwBiAF3/uLNC/9Av+w/CNW+ejR6kT9rJEDphEibv+dw+Du8xXk/i9m4Ttj+rT+54n8OS7KTP5Hfki2NYYq/BEDRauS+uT+vWD/N6dLrP6Vyr4RLz7A/12NnhZDMkj/g+b2nM/idPy6NB/T+9pa/7HPIQ3EYir+Ocirn4ySiP4AxaXc/fpo/WMoFHYpC7z+BrtWrpKGJvyRH8qu1a6g/aMSbnbizgb97UHy5TChbP0fjTfunDaS/W5cnJyeTgT/cpHSrNiCOP6nlSzJg7e4/13tFbLF1mb+39J5DFo2BP43BBhNaOki/owOLVZhSsT+xcXHqFVpwv2rDjICDkZq/uAPnRqHplT//+qAwgP3sPyQEPBpOv6A/qkZAkVZiej98kqQH4Btnv9t/YZSYv5G/j4OsCJjzq79TJG/g2v2rPzifmiws7I4/CS+wntUh7T+Q0wyvseJeP0Sa48l2cpS/uQN1Nxuqkr9K6BygtIShvzljzvXGaH4/AUqWNByArT9d7gbAlPedP6+YEpCUZO8/r87Kzg=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "strides": [
                    8,
                    56
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    2.7218870071506216,
                    0.6917394722022618,
                    1.8921524172873248,
                    1.571425108549865,
                    2.3579407031913235,
                    1.1451740449581753,
                    0.6742740201969751
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.33836415814685733,
                    0.14449517354159014
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "values": "eJxjYGvefn/5BfsJBr9mrlPcuJ/BIni2wtvl9gxfTDLqHy7er2C34tzKJ1v3Mzzf8PSAw4L9DWvfTT8ivA+u/sWjJkW/XefsHbq1q9Z7lu5nunWudlb6QXuRjRM3dijs379Dvshr3boN9iGv+dXCPfbZw8yHqU9Qesq9Nnyf/YU/Vt7mOuvtGY539rJ4JNgvCD3zVpNvyX4GT6N9Smu2wd0DMx+mvkqgYpbg92P2AanpqxceXbt/wcmr1h6xC/YzHPearLlojz3M/TD3wMyHqb+2SDnnn+hl+4BVUS+PmO/Zv8FO7HB6/iG4f2Huh7kHZj5M/YWLbC7sFYftGcTfvRSe0WkPCx+4f2Huh7oHbj5MfXuoskL+KXsAPvbBBw=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            7
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            7,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzQ2MzQxODI0cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM0NjM0MTgyNHEBYS4yAAAAAAAAAAG2jwEMFdO/PeCGAEp127+Rg3Woi7DWv06LhahaeLo/aiDNb1xdr7/lXyLJCEuAv13Jxdf4rbA/A/v1Zay+oL9/MA9LatW2Pyx7a7TE3pq/IDJoMuTV1j8a+gRjcA7APz2aZnapoFc/lg/n7N6Akr9zoVD3sPLUv1X1407UUtg/T4zv2LwQtr9vlDce9tHRv3CbwmOLrNQ/XkbvLZoT3L9BEy02PixEv7iRlf47btm/hYKTHEwPwr9Tjwk5NxfWP6NN1yDno+I/rtCuOZCi4L9ug/XIO5XKvwoVEL7nBbo/ZyUgTByC2r/FByIy9NrLv8yYdZxFHdi/oL3YhowM2D/IObYDzeHjv5IVdArJRtq/wHXTKbq2kL9pZXhFWq6vP5MgWrVtV66/txAoMh4XtL9jqSbSvzLCv1mvOteg3JG/72lA9XYTwj/6xaj2NQ3Nv1vFwQDoA9M/P4Zd5DQ64L+Z1AXL16XbP5OQBNbxydK/FAHCrifJ4b8RTjSCsjLMPyC92MA7y8M/qJz8uZT7wr8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc3NTg4NDE2cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM3NzU4ODQxNnEBYS5kAAAAAAAAAPoL/DgGoMK/hSyjRD6MtL/ezbwkWpmyPwnEL6Ywv78/I2GyP+YKqr8BOYepCcy8v9ScEKapyJG/MvYDUzu0wr+f9kAn8Ru0v5psu4xxCcM/Dzo3TrPGuz/4+PeYbqu6P2yw8h043rg/JRH6lJnzwr/IQ4DYkSDHv99ex4VqnqI/RsVp6Q0cpb+dyZzeA5q8v79euMPpT7K/5kXHBG0qtT9r+aVjV8XGvy4NHjIeOsK/3GM/1LIuwj+FBYJZ5uGTv+K9/XZRVMA/ZjeGXRKho78NbEtyfFGpv8RwAsj3pbi/T2YBoajVtj8UUS+973S3P9oi67zhw60/qBnjNIKztD8jBiaemhO3v9qn1UMGocO/a7D1/GmChb+RNw39vX+1P3ZHa+28/MO/9/cJlok1xr9nVNP0gQarv5Rqp7/6S4I/ZFzPcA6Uqb+qHL8Iu/ajP0D8TMoPY5Y/Q0W6XhgQx79JJeDBIsyIP45I9/NQjrw/oKUrFEOJtr+kVOQ+wJ5avxOtwhxdAbA/AryS6ltwyb/K2WyOdUGxP7nETqm3V7I/NMcdGMyeez8K8LqYazy0P/llmZOZ1LA/a8lZGt5qoD+xFVWnogW3P3EWxKkE9LY/0FjYo1cjuz8UOWlGOk2nv8A9nNzyRLg/VObYnoS7uL/JtL8fB9a3P2fMKyaEUrE/I+0rTtsFgT97G90O9cinP8fRK10l5K+/hhjJHFUxtz+MUTe3DHu0P5082Mz8M4Y/5/Rx6CNTwz/zHk8aYRKLv2JHtESH86m/OiE8FRKKtb/0bADFQt12PzQbiHKEsIy/n2xJqA9FkT/ba4W97CG/P/yXaIlYb7C/g+nOoJxIs7+cETNtHDy0v6A498kFPao/3CUd72j4vD+GPQ+NgZCrv+Mq6VIHB5+/sDs4CeqbpD8HZZHyWba5vx7MBwlJEKI/yQbrILFfmD/hb5wL95m7v0E9ECRAFcO/d7C5RU/MvL8Htd2jZ4i5vy4efb4nCZm/dYd9pmjZrL9nWepox/KnP73vG1LZ8qi/YqkWm4zNur+AOIzx9/Klv9jN7qGuHaE/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc4OTA1MzQ0cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM3ODkwNTM0NHEBYS4CAAAAAAAAAJs0T6DG0MM/8O6jwwPhrj8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    7,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -3.559362725340744,
                        0.2853948471166949,
                        -1.3861538533443993,
                        0.6097529483127615,
                        -0.6172615257472938,
                        1.3572399155006436,
                        -1.669834569659545
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7
                ],
                "values": [
                    -3.559362725340744,
                    0.2853948471166949,
                    -1.3861538533443993,
                    0.6097529483127615,
                    -0.6172615257472938,
                    1.3572399155006436,
                    -1.669834569659545
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 70
    }
}