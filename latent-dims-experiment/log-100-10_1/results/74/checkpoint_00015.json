{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        7,
                        7
                    ],
                    "values": "eJwBiAF3/rB4D2/FG+8/HlRHKqzLl79NyDJDFEOgvybALPuh638/XMQaQWhbeL8e/w7uiGCYP23tJwO2nY+/G+JeYgaGpz8gOy1SXlPvP75BxTxZ35a/r/6lFpYYeT9MH4BT716GP9q63XPSiIE/r7ZsaoYRpL+4ZLQeUR+bPyBaY4NbraQ/kURJwof/7z8vp17RNE2Uv3bT7TqCvmA/E5opvzhMlr/NLZRusryQv3AgGIt60qK/4iptQe4Sjb+po080F7p2PzWMjRPXE+8/ViMZAf9VZr8UF9xflh59vxwN9PKKyWY/+TthOrpHYz88fBM3klGRv336WTKkn52/TdRHLiQMlD+yKBLjITfvP5MHls75+5A/VV6RIOLBfj+SZ7Ao4rOhvxDJhtDVjp2/THnxJQ4LW7/z8O1S9wd1P+X10t7n24W/ieLSo7Po7j9rQYI7ME6XPwnNhPRpWEi/S5HnLFR8fb8bwv84sxGCv/7FTO27TI6/tmYS7egBhz+w+SvVub9QP82rmCECA+8/77bBVQ=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "strides": [
                    8,
                    56
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    1.1402031463212898,
                    0.9848473897893022,
                    1.3293219569966164,
                    0.9908983632859255,
                    1.084768396262076,
                    1.0287472333705725,
                    1.0342932579007322
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.14992389259612718,
                    0.1387743522338202
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "values": "eJwL2S93c3fjHfsN56I6Qvq27U9IfF+73WGrfULO15NP127YbxCsWXDt9sb9YfJ6QTJbJtr7XPlXxLXrLFz9tvhHe+qOXLZnUF9361Z3i71BQP/s669O2C94GujUqbl1f/qdaWXPsnfacwjbWQe0HLGHmQ9Tv2P/7YjlLM/sGSR8bi7zXG3PoKts1vKhw/5I4xLbTp0j9gduTu/ikFiEcA/UfJh6hZeL61NEb9sfcF7U+1B3o/3W/20zX7Mc2V+hIXhlQstFe5j7Ye6BmQ9Tv9fyl3ZK+Et7o75nnl5/F+5nEPm+fo58gj3MvzD3w9wDMx+m/rz93K0/1j225+360T+7ZcF+WPjA/AtzP8w9MPNh6hn2FaQ82HjHHgBrQcbZ"
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            7
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            7,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc4MzE5NDg4cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM3ODMxOTQ4OHEBYS4yAAAAAAAAAKKsTbygkba/HJI+1sSJ2b/jWFSetAzWv/41WM+2B70/PI37eAs+sr+VMR9U3AC1P7ugHzlLisK/qlTwjJ/Jsz8SSHy8lKeTP27ygtC2ZsI/aKuQPLt51z+A+XLct2KsP5JOynX2boc/vbEUl0++nL8HupsUNt7Wv7i9gM/oANA/dNUv9d+Hor+LMytz10zWv69+a25iUNU/o2HQqa7B07878afslTK3v9G1vHZQHNG/m1I8nIrWn78mXU3dp1TQP38N3kLOR9U/LkEh7Yhrzb+GfB9x1S7Ev/YypUbFNKA/1l2G04y/1L/LiMl61VXAv0LcAWoS6tS//GOtjWOw2D9NCqFIpJrbv2kqAOtDW9i/kppL1+s3u799s/FMiWayP/s4sM9z/oU/+HDFrjLFu7/mwf6g3rfNv1TQj0R5Sqi/DZqe+GA5qj/+2OsnzrnRv27/EONiGNE/EmtqWCxq2b+Hdw6apHLYP1bH0hshnsy/MMVM7RGI3L802DXKk63APx+KbU/b79A/Q2nV9Z7Sxr8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc4MjQxODI0cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM3ODI0MTgyNHEBYS5kAAAAAAAAAEC9cU2058O/ieyMbZobt78I4cmgb0LCPwJ8Wtlj8rI/JWuNkZ4pr79b56K4ef6vv2G4+D7s3MK/ez16Z+n7w79s+DX6XnTAv7WtMaEfUcQ/mI6D5GO6wT8aGOjByjq9P/WUcvTbTrY/OsDiznp8o79pg/PsP2jIv9Huntcivac//mpBO8Y6qr9MuIcHYCm/v31EeuxF37S/s8ucLcm5tz9sPaioKZ+7v5yklEbMgcO/dxe16GB2wz/JBJr7Vh+ev6R4c4v/m8E/UcVcr8q/qL9cFyHENHCuv+CnaiEGKsC/MI/ryQRluT+GOgnmSwS6P0S5T2wppag/vWXRXd5Ctz+Q0W7ej3/Ev32CS1i06MS/m6f27Bz3kz8+5grzxqGMP6KV4QFrRMW/Pv9PYEaev78PXVQjnRKwv3wQ6Dw0d1G/J5emFN29rj9K9LpacxWpPzKOOFiCpai/wLkvc8ZXyL8sZL52CQW1P7uH1hytHb8/OTwZPZ8Yub87r7MeCoGxP6OJk0SRpqA/tesH/wm4yr9lO/rKMmStP3r2wgC3kK8/u6nRHnMNrT+GPcLEjm6GvwBcSNV6iqw/ctcR2jsCtT966aUidmiUPxlw1ICoZLQ/c/oOhR2Gpr9Ir4f0gS6ivzxrogVP1Lo/c5UlJHANsb+rM5uaG4S/P/I28wcfIGO/VzL/yS+oW7/LP7pgreesP5VWhddugbK/jbDY8/ihtD/6n0mOsOuxPySTIApvV5U/eJR7ssK6tD9TwuQwocaXvx6m0/LO1KS/U8+BcG8rwb+5z/ypgumPP/6WBt2ylZi/1FUnEnwefD+dO5I9z2yqPwKF7cD4v6u/Lrjid0C5sL8H6enF0BPDv4Mt5hu+W68/62YMxQxpuj82x3fvnFewvz49wzf3kK4/8oFrW6K6qT/v7YIbtkW8vzmMSZCJP7i/9nZJ+oBEjD+j4ZI0Uym+v0RqSnuzXbm/zUynbqtbv7/kyNfMwxe8v+DXGjFMo6G/30Y8XXj+eb+nFNS6fxGtP47H/KOREa6/pRICxOhcvb+mPUzvO1uKv0hMJKDs/Zc/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc4MTQ4Mjg4cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM3ODE0ODI4OHEBYS4CAAAAAAAAAH2RxLR0GMU/H4jBCt7/sT8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    7,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -1.0781258792219002,
                        0.9684336450723123,
                        2.631254631840446,
                        2.098421658677039,
                        -0.997444025001323,
                        -0.0066881711932818035,
                        1.0110496942618887
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7
                ],
                "values": [
                    -1.0781258792219002,
                    0.9684336450723123,
                    2.631254631840446,
                    2.098421658677039,
                    -0.997444025001323,
                    -0.0066881711932818035,
                    1.0110496942618887
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 15
    }
}