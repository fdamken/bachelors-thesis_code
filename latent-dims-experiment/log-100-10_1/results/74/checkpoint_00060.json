{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        7,
                        7
                    ],
                    "values": "eJwBiAF3/tzDkwC5ce0/a3Sed818jT9taRv1xyeivxjFWvd9roQ/R9aSdukdqD8CkKFKDeSTP+5q2RUXgJC/O/REqnOvsj8KvdXR2QnsPwg13F64yqY/b4EHLMJIjD8dJHqQlhCfP4Y2YpbXWI2/FZbuocefkL+ewleY1JmkP+uQtOdS8Jw/P93S5AWV7z/3I2qLjEd/vyiM66w8Kqc/2e6TyIaVe79KqtzNpV9fv2hI01IXwKW/jeNiJPDHez8PmQAD4fOEP4AN8gNZC+8/wB/74hEclr8KULTxgmF0P4XSFGWeD1G/rfI5Go1Arz+dm1JTBFNrv4zgzoK4YJq/gksqNO6Vlz8/lGIGKmftP0pKuLguq5k//g9Bo8Z8fz/Y30HPUF2Bv9rbufgsTJO/XE6voOO9pL++DIyfPNqjP+MuGrKr8GM/BcT3XTBX7T9+ZP4Fp1x9P1HqE2uSmIq/HJ9gR/jdj7+KmaWV4wyivxT2W19+tXc/lV806cbYpj+Utz4xg+icP73IWq4TK+8/sajIoQ=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "strides": [
                    8,
                    56
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    2.1818611712760085,
                    0.7256805422079387,
                    1.413137872514913,
                    1.2289681561788914,
                    1.802623245168029,
                    0.9876954469422333,
                    0.6915999778262003
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.35033935911957725,
                    0.1565387881704105
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "values": "eJxz2Ny5doHbJXuBbVYLhZI2729Q9S8W3b3K3mEbQ/zLKUv3Hwg4NU22f8d+B4lNbv/9Fu/fEJL78fWfA3D1cmma79nmXLBncDLncP6bsj9gZcQMgcpD9goO4kWz9+3Zz7Ep8VVz0Wb7A+3Sipyf9tvDzIept9knvjnl+AH7F0vibObO2GjPENG+KDQjZ79C2byr0kuX7b9xI31+iOpOuHtg5sPUR1hML79qecJ+wScXZsmQdfsZys6ZnfBduD9iHkdljsk+e5j7Ye6BmQ9T73MoUDLb7Yr9h+o8l5AnO/crxN1pvPX3ENy/MPfD3AMzH6Y+g+9grpnWUfuGk1ODd1/vsIeFD8y/MPfD3AMzH6a+5Wun0cKHZ+wBDvjBDA=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            7
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            7,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc3NjMzNDQwcQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM3NzYzMzQ0MHEBYS4yAAAAAAAAABdw1gEMFdO/L5Q2AEp127/Un2yoi7DWv/cGgKhaeLo/tgDBKdcKv7/w9xHLCEuAvyo6QwuBHqc/Es9xDx38qr8ve3RO8y+pP26udGbo4bI/pg1pMuTV1j+4rHTchLzHP7QOuXapoFc/f4u37t6Akr++NUz3sPLUv/GrME/UUtg/CTDw2rwQtr/xg34i9tHRvy4ZsWOLrNQ/mn7bLZoT3L8epZ5ePixEv2G1cvs7btm/s0iIjSfhub+r4DIQ24fTP7J6L/iKFOA/7nwbTGgm3L8+CPTJO5XKvz3N6mwv57Q/dxZrB8Dy17+UjQMy9NrLv2WCHIiX1da/IEGO3kQr3T/EFY/mR/bhv6lZrArJRtq/zdYoq82Yor/mRzZGWq6vP3DIpLRtV66/EeD6g9Y1ub/Ux1fSvzLCvxb6W7Exaa2/4aRF9XYTwj8LRKgj9xXRv/ff+uk5vNE/52Q65DQ64L/I88rK16XbP1tIA9bxydK/HHi6rifJ4b/d0imCsjLMP1uE4iBQecs/Y37ruZT7wr8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc4MjQ1NTA0cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM3ODI0NTUwNHEBYS5kAAAAAAAAAMZu+zgGoMK/9qShRD6MtL/VhLkkWpmyP5YZFKYwv78/vNOwP+YKqr8bAKD9YPXAv9e2DKapyJG/EUgDUzu0wr9FIC15qTq5v03duoxxCcM/R4U2TrPGuz+BLPeYbqu6PyQw6x043rg/aA/6lJnzwr8cZX/YkSDHvxg/xYVqnqI/Fnto6Q0cpb+zaZveA5q8v/7/tsPpT7K/dpzEBG0qtT/Ty69jV8XGvyZwHTIeOsK/mao+1LIuwj81KTRZ5uGTv9Ie/XZRVMA/sb2DXRKho7+HfUhyfFGpvy9qAcj3pbi/6FYAoajVtj+WMiy973S3P218JhlxhqM/LPHhNIKztD9tQSaemhO3v7/v1EMGocO/eB0A/WmChb9rwAv9vX+1P7muau28/MO/S5kBlok1xr+FJ9D0gQarv9iprr/6S4I/G5Mlir/osb9K0MUIu/ajP6h1UsoPY5Y/FL65XhgQx7+eoAvCIsyIPzAI9fNQjrw//oUqFEOJtr9c3g1NwJ5av611uJVJxaU/nA6S6ltwyb+KsW2OdUGxP1agT6m3V7I/WDruF8yeez/qBB+OZjuuP+M4mZOZ1LA/nG5bGt5qoD9OHVSnogW3P/DyxKkE9LY/EePso1cjuz9B2mpGOk2nv75fndzyRLg/CHzZnoS7uL/MHLofB9a3P3WssKiXZ6g/FIU3TtsFgT8gJ9oO9cinP/0NKV0l5K+/rwbKHFUxtz9laTi3DHu0P09Nx8z8M4Y/3dQgLddovD/64EcaYRKLvxj5tUSH86m/tCRrt4LHv79u6PHEQt12Px01gXKEsIy/sI5NqA9FkT+TtoS97CG/P5fNaIlYb7C/xNHQoJxIs796eJc2yDquvwjr9MkFPao/IWMb72j4vD+Yig2NgZCrv6sJ7FIHB5+/QEE1CeqbpD/6ZZDyWba5vygyzqy5Taw/RnnsILFfmD/t75wL95m7v6fjECRAFcO/lhC4RU/MvL/EatyjZ4i5vz2ueL4nCZm/kFNNpWjZrL9SdOhox/KnP0B+GVLZ8qi/kmQam4zNur+h84Px9/Klv7rq8aGuHaE/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc3Nzg0MTI4cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM3Nzc4NDEyOHEBYS4CAAAAAAAAANSOTqDG0MM/pAqiwwPhrj8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    7,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -3.2252475673108663,
                        0.5999364347928551,
                        -0.8402704652935852,
                        1.1711591611026486,
                        -1.2389782614854261,
                        1.1300082458364178,
                        -0.9414121923001649
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7
                ],
                "values": [
                    -3.2252475673108663,
                    0.5999364347928551,
                    -0.8402704652935852,
                    1.1711591611026486,
                    -1.2389782614854261,
                    1.1300082458364178,
                    -0.9414121923001649
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 60
    }
}