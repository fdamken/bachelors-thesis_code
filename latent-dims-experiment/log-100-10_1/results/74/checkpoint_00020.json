{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        7,
                        7
                    ],
                    "values": "eJwBiAF3/vN9LkSK3u4/QuMkGi3Ii7/6eCLaxSKZv60Azm732o4/vW9BVPdPfj+sFc/BfCKbP4XV0PPWm5i/NkgJNunjqT+RgAwAwhvvP3BKfIw1H46/Fqm3NS5Hcr/77iQpXzySP+uTA6Hei2a/TowSJVD5pL8SU/mH2JiTP6uF/J0225s/yL8uNYOY7z9vlJxY+GeWv3y7ACOjkHG/bTRaY+4qhr/o0oaUg4yHv5pYK3tFy62/Usp5R++Wnb9Hy4mNe/p6v9IRVEfbvu4/yBncKgw8lb93tIO6im6BvwAtmIkUvoQ/tEC6XD5AUT/+x+uWaVuYv7eVg8ebo5+/Ff1rYKKSlz+yzQgyKZLuPyWNnqExq5c/sQ6w1faNgT8aCv3d5cmZvzQbJ/JpvJ2/ZcdrZqmkeT8PHySeYy1tv8h913mxi4y/+Y5wfeXg7j86SyKej8qNP8LaTTfXZ4q/dBZoFHTRhL8MiBumUvl0v7OcdY7JQ4S/UjJxNR5DlT+ZNeZ7BjZsv5mj/OAJ+O4/VHvKLw=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "strides": [
                    8,
                    56
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    1.1372849302941483,
                    0.9145173237839537,
                    1.4568375731655916,
                    0.8816837378034686,
                    1.0762017217001774,
                    0.9820398779603732,
                    0.8875145430756018
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.1620066490239533,
                    0.1371491753695542
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "values": "eJzLKEtlved/2/7C673BSwu37k9wXb3peOB2+4bLW5KPy6/cL3Dxbbhd6Mb9L84Va1hFLrDveLrJVM/pLFx9x5JrTxZbX7ZnMGNuXh1Sun/DxehdVeeP2z/4c9mIjXHTfu0ClR0cxTvsOcr3v55y8Yg9zHyY+h838k9qNT20P/BQ16k7aat9g/olweA/u+xtns54Ni90l/2CaX7FQXP2wN0DMx+mPqDj2ZWesuv2DQp6qvEuE+35VAydIruO7GeI+P7ekfmcPcz9MPfAzIepX2GkrcEU+dT+wBWW+jv8s/cnOC+X8+ZfD/cvzP0w98DMh6mfp2Hte433oX3DYteCFMXq/bDwgfkX5n6Ye2Dmw9TH7LxxYMO+G/YAEb3Asw=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            7
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            7,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc4OTY5NDA4cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM3ODk2OTQwOHEBYS4yAAAAAAAAAETao++niaO/9nVNCfi83L+QL4eoi7DWvwVivFWiWbU/63PdoGfNtL+1PFQSH2igP41yhfWBZr2/3AcdAkvzmz/nuTRhBeWdPximag7BPcY/OLlQMuTV1j84xz66KP66P+IVa3apoFc/5YXq8N6Akr9QTob3sPLUv063be1t7NE/yM8a/k/Smr/bYVN9rvDWvz9MuU/dZNM/G6hjyDOt1b/XTYnDOaO0v89t36mDT9S/KCCQlKhckz8Y7YPnfvjQP1Qg43UBe9g/KeOiATezzr+TtHMyy1fAv5Sv3Jh9U6U/rS458hGr1r/0tByPg53Bvwi8NnTpjdW/eggchIwM2D+zd7h7183ev52W1uBst9e/bBa9AkjHvb/TpChHWq6vPy76K+kTOUg/YuHVhdY1ub/n/sM7eFHHv1yaAJ+g3JG/07/+Rn3puT8uWYASkpzPv6crEGBfyss/WGdIi1+d3L8H2TykexbZP3WeDa2VOtC/l8hUIEW737/SI28w+hPHP95KkD8ETNA/N3MDkDhswL8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc4MzA0NDQ4cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM3ODMwNDQ0OHEBYS5kAAAAAAAAAAVW9zgGoMK/UxOYRD6MtL+j4U2MwfrAPz20ZbAHY7A/aXijP+YKqr/Vf0YFmY6yvw8Cfio+lcG/PYf/Uju0wr+dt5F5qTq5v2YUt4xxCcM/cH41TrPGuz9f1vGYbqu6P0ibKfOOQa0/zDY5NAqLtr/RGnnYkSDHv2c0tYVqnqI/RfVX6Q0cpb+q1JLeA5q8v7sLg8PpT7K/iN2qBG0qtT/cxJ7RhS6+v9L4GTIeOsK/qKQ61LIuwj+3DvBy1Guuv+n5+HZRVMA/X3tzXRKho7819jdyfFGpv0hJ98f3pbi/fh/4oKjVtj+wpBS973S3PxjJFL7hw60/rCXcNIKztD8p9vPJ4TfDv0kJ0UMGocO/SQgh/WmChb+mbFgdVI6YP2QwZ+28/MO/kPx7lok1xr+7TL/0gQarvy9S67/6S4I/06qiwiSfqT8Sd9wIu/ajP8AYTgbKhqO/3k+1XhgQx7/QOAFUeXCgP11/4/NQjrw/FaIjFEOJtr8stc1H9dCSPwkuBR1dAbA/ZJ6N6ltwyb92p3KOdUGxPy8rVam3V7I/QAvizLrupz/YQjXQ1zpPvxsqmpOZ1LA/oYAZsd9ysj8yDX3G5qWeP+QiyqkE9LY/R1UJpOCbeD/0Z3NGOk2nv6r4qNzyRLg/qwLbnoS7uL+wxaNxv/S8P3/ndAnpQom/r6JqTtsFgT9jS88O9cinP+TVH10l5K+/TT/OHFUxtz/FkT63DHu0P+wUlcz8M4Y/00Ggv8fDwD9LZB4aYRKLv3mKvkSH86m/Bn8OuILHv792KKHEQt12P5juXXKEsIy/vWJgqA9FkT/2vqgZfOS0P3JebIlYb7C/IyjWoJxIs7+hMVuxIszBvz9d8ckFPao/PPoa72j4vD8KYwSNgZCrv3iv8Hh23YM/5cYnCeqbpD+xxozyWba5v7TKUWctsLW/Ulj8ILFfmD941JsL95m7vy77TKQP7bu/OR6yRU/MvL9G9+CjZ4i5vx39X74nCZm/Eyx2Afibor84xedox/KnP4fOEFLZ8qi/TpoQm4zNur970smeaoFnv8eN/KGuHaE/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAgAAAA3ODAxMTMyOHECWAMAAABjcHVxA0sCTnRxBFEugAJdcQBYCAAAADc4MDExMzI4cQFhLgIAAAAAAAAAsS9KoMbQwz/PJpjDA+GuPw=="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    7,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -1.180396725719124,
                        0.8936087973161363,
                        2.603316388570616,
                        2.0646457089561787,
                        -1.4977722348033586,
                        0.1183909877700216,
                        1.1478052533609624
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7
                ],
                "values": [
                    -1.180396725719124,
                    0.8936087973161363,
                    2.603316388570616,
                    2.0646457089561787,
                    -1.4977722348033586,
                    0.1183909877700216,
                    1.1478052533609624
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 20
    }
}