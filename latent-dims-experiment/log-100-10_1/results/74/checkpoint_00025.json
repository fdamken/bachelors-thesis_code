{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        7,
                        7
                    ],
                    "values": "eJwBiAF3/iZQE8fAge4/4BYq3tkClr8V/rTJ8fmhv6x0ioffaaA/2AaHYcdxgT99BPz4A2OhP4XuxgAv15G/I2pp4/CbqT9GwQLiW9PuP/byYqSpj4E/WkMkLMwXi79J7i6dB2mcPznGFOJL/4O/s/g4Vjhknr/3RfOfBTVyP/1kLVjwGok/pUm9qpOX7z96e5Uag5SRv3wTP5kSnnc/rv/bhroWZb8iaLrz3ml5v1+/HZ+O26G/h0KUs/u3qL/1GIEHjAucv8kDdM/vBu8/2VqcWnScmr+kCWlXLdFFP/F0lostQ5A/Hlcgw0zboz9rx9pbyx54v79fVa+pKqS/TxzYNx4CmD/q4lKgQVHuP1n8tk8g/5U/kzBx9MzH6b4HWIDReZ2iv8J9hc0SJqO/6v13osBoSD/4ZRNbjNCDv+O53jx35pe/J+9s7OLz7j83Wz3RZEWKP1u3Yr0h0Xa/XD/ordqpkb/Vv5UKCOCEv+bMangbY30/yy2Xzx2LnT+mHiJomjZlP3HqvSGL7+4/Q4TNbw=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "strides": [
                    8,
                    56
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    1.1048546097681136,
                    0.9295561905598,
                    1.541961792675839,
                    0.8568961543822221,
                    1.1164961138112743,
                    0.9324598427662854,
                    0.8130880459859167
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.1747350187083157,
                    0.1385240498435702
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "values": "eJzTcPvzt2v+TXuBpZJqAZ+27D+w83a7xsN19gyTVYT8hJbtV7jgYXqJcet+hQoOp45nPftP9DoULLp8Gq7+zqxtfqdeXbJnSPq3Z83mcnuJ0FU3TTmO2Tdw8DvHJmzcP3eeUNBfz932Kn3pP/ZWHbaHmw9Vv2Htz6IPT2/bJ9SLafyoPmzv8DXgEuOp/fY1k0/KL1JeuH/BO9cf/SqH4e6BmQ9T/+FXz2eeM0D7bwhf1btXu78lWIX5tuq2/Qcu3M1o/X3MHuZ+mHtg5sPUc7zLYVl74rG9wSJWM797bfsTpB4KeK7dBvcvzP0w98DMh6k/vObL3tDwa/aXjt/8+X3dTHtY+MD8C3M/zD0w82HqWUqNd39Iv2oPAB0qyTs="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            7
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            7,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc3NjE4NjI0cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM3NzYxODYyNHEBYS4yAAAAAAAAAKxDF8Ogkba/BFEXKH2o3r/U4kietAzWv0EkrH7+6Lc/i3gmNhrNwL+EArcN9WKSvxeAhR7e9b+/P8VQMOg/l79QYm29lKeTPzmjo3QnpMw/nemNPLt51z9CCG/DeuXDP44YTHb2boc/IfeTlE++nL92PMoBiJbVv1QfcCChH9U/LwGbtWCBs79a352HhZTXvxXFkxyqMdA/GEOH+2bg2L9VRTntlTK3v2hxDt22gte/UFKy8fajsT8kXEXdp1TQPzjP+ag0rts/t1/Cs86M0r9IxsjqgQG5vxD8NIFS3Yc/h/375zoH1r9okJSj8oy7v3U8E0G2WtK/BZAyt78/2z99+HJXhQDhvxCwDOtDW9i/krpf2+s3u78rImxMiWayP3VHNUm1OKm/ARHQrjLFu79V6Ks7JpnIv4UOWkB5Sqi/5gje4MjLwD8QR2MTIHLQv8/+Z0uxgso/d99NvpLQ37/ELU/BAALbP/WRw8saJtK/Ai63KTx34b/umqFtBOvKP+f4z0nb79A/Z/pupOazwb8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc3NzYxNTY4cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM3Nzc2MTU2OHEBYS5kAAAAAAAAAKiUck2058O/EUKObZobt7+EmdFLtii1P3BuXNlj8rI/cjGQkZ4pr7+4i6K4ef6vvwIYG9pnfLu/WoV6Z+n7w7/LvqL+lIyxvyxNMqEfUcQ/Zt8odw9Wvj8s8+fByjq9PxPXs8yqP30/Ou4Frx45vr+5dPTsP2jIv1S8odcivac/eUBFO8Y6qr8/KokHYCm/v0DNR5GqQ6W/iEGiLcm5tz8wuEAmTe7Cv+RUlEbMgcO/l+K16GB2wz98DW5iRsWxv2k8dIv/m8E/XGNgr8q/qL/huSTENHCuvzdS7PBTNbu/VevuyQRluT/z1QvmSwS6P5qiAghNcbE/21HSXd5Ctz+zZAgZr8G+v2poTFi06MS/SFpxoqX+lL/kCvryxqGMP09W4gFrRMW/0yz1qjd9x78LE1YjnRKwvwnnTD40d1G/rraM4aQsBj9GVdxtBbCdP6kpM0KEqoC/zp0wc8ZXyL+b4tMEgqOWP+wo2hytHb8/ElEZPZ8Yub+NNBZGCSeBPzrX3Jdxr7c/yQcJ/wm4yr+eO/rKMmStP45PvgC3kK8/ux+weALQoj8Fq6nKM4eCP2/0SdV6iqw/Y7oM2jsCtT+2OlN+Rna0P5NT1ICoZLQ/Wyj8zGhkkD+wTYj0gS6iv55jnQVP1Lo/TiXmdSgstr+GZN2k8iewP0bXqijl3pa/58MWyi+oW7+kzLpgreesP3OThddugbK/etvY8/ihtD+Kk0iOsOuxPxxmIQpvV5U/OURKVjP4vj/sHuUwocaXv+w70/LO1KS/qQyCcG8rwb/Cvf2pgumPP4W+BN2ylZi/Jz8nEnwefD89daZC2HO3PwCS7cD4v6u/Tjvgd0C5sL9G/uPnMOq7v3Pw2hu+W68/2i4oxgxpuj+y03fvnFewv13vJ9ZZrTO/G8weW6K6qT8M/4EbtkW8v2rsSZCJP7i/GJdN+oBEjD+dLpE0Uym+vwc8nw+SzcG/gLKnbqtbv78HKtTMwxe8v4xFGzFMo6G//7UrX3/6mr9HSdO6fxGtPzvn+qOREa6/w7oGxOhcvb9ym3juO1uKv4oVIqDs/Zc/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzgwMjEzNjgwcQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM4MDIxMzY4MHEBYS4CAAAAAAAAAGiGxbR0GMU/T7nBCt7/sT8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    7,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -1.5943766377314568,
                        0.8977366883485896,
                        2.528248557767801,
                        2.2179081197654433,
                        -1.9469641950577241,
                        -0.06436443836980313,
                        1.0409456054936377
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7
                ],
                "values": [
                    -1.5943766377314568,
                    0.8977366883485896,
                    2.528248557767801,
                    2.2179081197654433,
                    -1.9469641950577241,
                    -0.06436443836980313,
                    1.0409456054936377
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 25
    }
}