{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        7,
                        7
                    ],
                    "values": "eJwBiAF3/gvjIx0ON+0/2kNOEvgkjz8ewQ/21vqev7Jku80nCYU/s6jp3/Lgrj+zGBpQnFmVPywUKqOfW4e/i2wy+iPBtT+K5vmvQtnrP7HGk/Kchas/ZAn2UBB9hT/TfYslyFybP2QoPx79IIq/9dgqOOb1dL/9oZSPkGWkP7T7vXpBLJs/47Ylb6aA7z+o/HylyCSDv4hKPCMtHas/f/0jbLH+c78LaUblaOZdv0wUgeRTLaa/6TUReIVugT/DariaOqCGP1Ro1rGR8u4/6RnzhWpol78fUAlotAeBP4O8cabJ2FO/5fDluSTLrz8hvOODaQ1hvxOjm3Rd9qG/pxipGmGlnD9FroTdPiztP0ftclYjR6A/lKvT5JxgdD/nzvu2RTtjP8YKpXasCpS/Rxw0dTCcqL/pW0UU6WKkP3r7o8tqnog/xQqHJcRD7T/SFI06H8NjP1W8sW5gvmi/iBPbstIpjr+7zy6fyNqZvw2/VLp3X2c/Pas026Oxsj83JU5G4k6hPxG+V2ZFmO8/aAnGwQ=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "strides": [
                    8,
                    56
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    2.451132142650363,
                    0.7085030847830824,
                    1.6666203399830617,
                    1.3750863127821569,
                    2.050631704341696,
                    1.0537116342450121,
                    0.6918284314626129
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.2797844784470053,
                    0.2924214438749616
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "values": "eJxzCIhYOif7ov2G6XcX336wcf+BssLH0v0r7Q/c5f7/SXXJ/gTJz3OqVbbvZ0iRWlDRvXC/w8Qu5S3iB+DqVSJuJrnePG/PsGT/5S2KGftduP3fbXp/0P7LRE0m1bx9+x1e9PZYXNho32FYrN4Vtt8eZj5M/YKK2Ru41+23d3Ca3NSds8Ge4cZMpvUMrvsVfjGIpTYu2T/Bhu+8A/cOuHtg5sPU54jMkfNtPW7vMPt5503TdfsZKl7+N5+xYH/D3sDGG9P32sPcD3MPzHy4+nanpQpTLtsrcJnFvK7Zvf9Ci/UcwXOHEP6Fuh/mHpj5MPUZqwzdf6scsW+YeVCycn2nPSx8YP6FuR/mHpj5MPUV4spLj146bQ8AkRzCiA=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            7
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            7,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc3ODY0MDAwcQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM3Nzg2NDAwMHEBYS4yAAAAAAAAAOlAOQvjuNO/c6lwCiEZ3L+evDOetAzWvzfoctG2B70/ZsouAXt7vL+AFOMI9WKSv12ERgBVPbM/hqxCvmTdpb89isafq06uP6kUp3NuVJg/RpelPLt51z/s2yvI1nTGP+UfHHb2boc/BVfKkU++nL/GJ4oBiJbVv8hXQVmr9tg/a5rEAhmguL87k2oozXXSvxCrj1m0CNQ/51ClI8Nv27/9ChAtpb2FvzGXUQcTEtq/lWQwuYNwvL9De8ouYHPVPyI0NIhNCuE//fuDe5tZ379OxI/d6dzLv6xzWpWLdrc/yWmhGelO17/2dqIdRpPKvw5zPJJuede/Jrgvt78/2z/YDJ11Cuzivy8H1RSg6tq//EIcxSr0mr+RUu9LiWayP5+kPwMTu7G/G6OOW3qmtr9DhZLmbXrDv+L5AnsRGpy/50TK4MjLwD9+Z/oK5FTOv5eKg/UQYNI/GNtlaSCM4L8tTgDBAALbP3gvx8saJtK/8+7ZMxMb4r9lR75tBOvKP2CgcySiMco/GjJizkJDxL8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc3NTkyODMycQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM3NzU5MjgzMnEBYS5kAAAAAAAAAOaFdk2058O/afuXbZobt79/FrBNtii1P0/0hWdGJ8E/87GckZ4pr7/ZoXbSZVu/v+TX2QjkLH6/mmR+Z+n7w7/pvDNQTau2v5/rNaEfUcQ/1UYsdw9Wvj+HIe3Byjq9P87V4kaUbbs/q+1yqUc7xL80mPrsP2jIvydvsdcivac/oilUO8Y6qr97pZEHYCm/vxEurexF37S/W6G7Lcm5tz8f/x94BQ3Iv66GmEbMgcO/y8e56GB2wz9nHkhr60iDvxA2eIv/m8E/CBpwr8q/qL9/DDXENHCuv1g89/BTNbu/tWv2yQRluT8HcyPmSwS6Py3pY45xz5w/fRLYXd5Ctz/+rxvH9qK5vyEPUFi06MS/EX/yVIt4QL/l2QEmGg+4P4/C5QFrRMW/k/OdWH9ewr+eZV4jnRKwv9+hBEA0d1G/jS+owsayrr+JGrFtBbCdP4oZ80w+S4g/zMQ0c8ZXyL89l9YEgqOWP4rM6xytHb8/BpwgPZ8Yub/4zF1Puc6Hv704zUORpqA/EjAN/wm4yr8gjvDKMmStP9B0tAC3kK8/v+fQqSMlkT+cBJzBx8u2P3qUSdV6iqw/R2DhkEuYlj+Do0nQ/pS5P0eRz4CoZLQ/pcrJzLOyvT/SToD0gS6ivx/rkAVP1Lo/fXvkdSgstr9YWrFIY2W6P4esi/pPhq0/tzi4yy+oW7/ZwsVgreesP8c5itdugbK/+pvU8/ihtD/Vt0KOsOuxPwlZOwpvV5U/bcUQVjP4vj/4ufkwocaXv2Ray/LO1KS/BvHp6rX6sr92kSSqgumPP/EzFt2ylZi/f6feEXwefD86bZCUkJK8P+7d58D4v6u/OMfad0C5sL9tNCaWeMu2v+gR4Bu+W68/E3soxgxpuj9zFXzvnFewv3EnGK+WyZS/DZogW6K6qT8g7IUbtkW8v/dM7loBL6c/2pYw+oBEjD9tZZE0Uym+v0HgijjuXMS/wvitbqtbv78M7tHMwxe8v9m0JzFMo6G/ca6UVLC6p79MUdO6fxGtP0D4BKSREa6/6OwNxOhcvb9jR3RDsBGrv4SxDKDs/Zc/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc5MDE5MzkycQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM3OTAxOTM5MnEBYS4CAAAAAAAAAH6pybR0GMU/n3zGCt7/sT8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    7,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -3.4181149001160374,
                        0.45393952606574034,
                        -1.1568013077452053,
                        0.8782854096782782,
                        -0.9210860201957413,
                        1.2683576510774175,
                        -1.3339545568047972
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7
                ],
                "values": [
                    -3.4181149001160374,
                    0.45393952606574034,
                    -1.1568013077452053,
                    0.8782854096782782,
                    -0.9210860201957413,
                    1.2683576510774175,
                    -1.3339545568047972
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 65
    }
}