{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        7,
                        7
                    ],
                    "values": "eJwBiAF3/ijcL7NmMus/0MY03Z0Fkz+6A0LqSFV+v+D32Rpk7m+/L6gC9djpsj+PiFVbBL6QP7tbQE7Ek3u/NCcPuxRUxT9eMY5kGFjrP0DW2KnWS7Y/qX3XPSEKqj+0lanBGjhqPxONPyEAg6m/Jl1ankXdmL+j+vj8POamP5DDzMiWjJI/gqREFcye7j8EDURf1Iqtvxgzyu9XtaE/znqTaGALpb8lLhh1jP1/vwLTn9lYH6i/Ddza/N9xkD/nSkIMDTGLP3VWwmndiu0/M7naHOwQqb/2/5uB3dJYP1w/VXCJLoa/Gy/S3c0WtD+tRBnkeZtHv3ZF6efqUpW/2c8QO8CVgz8bDEoFsDHsP7JbbLvzjqs/cRAJwSubdT99jyWjNFJ7P5syQjAWTlK/rNCEIW1Eub8l40r8/5OyP1DI0K+nDqU/O52cZxfb6z9KTap7vIaMv6b83JDaTZi/hAGugFl9mb9bdjFAtUW8v0mu0ZIsipK/4Ked+uyQqj/t098At5CCP67jONP1ke4/SqfHBg=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "strides": [
                    8,
                    56
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    3.8262136586725277,
                    0.5837409685751802,
                    2.463578270154516,
                    2.988815790977861,
                    3.2703299707820754,
                    1.5476907714922734,
                    0.5604480695216801
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.3527004642642296,
                    0.1714430431245965
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7,
                    7
                ],
                "values": "eJxj+GVxZ9af0/YGQuLPtmxasZ/hzUpXMacl9haMjPIJv+bsN/7qI9ixc/N+BuVz09k+Tt/PUL1B58mrHXD1LNcfsq77espeoVBDz+1q9X7JH4Kl5Vz77fOVpB8m9+/fP6erZJ7uhpX2v/x3cgoe3GMPMx+m/oD11Rmn+nfbmzC/3ZGyaLW9VZNbZEp+oz1D38b48JkL9x9Ys+RaEM8WuHtg5sPUL27mKhHce8T+x7qd1a8XrN6v8Di+Ku7Y3P0NV7JWS3/dZQ9zP8w9MPNh6rP8ZWae5L1kv+7L64X7ru/Zz5vuwvkx9iDcvzD3w9wDMx+m3uGCjKjUswP2DHwR0/9Xd9nDwgfmX5j7Ye6Bmw9Vv6BH8pVH+3F7ADCFwe8="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            7
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            7,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAgAAAA3MzQ5MDM2OHECWAMAAABjcHVxA0syTnRxBFEugAJdcQBYCAAAADczNDkwMzY4cQFhLjIAAAAAAAAA02DmAAwV07+A1zf/SXXbv5D9e6iLsNa/vRyDqFp4uj/K20JY9sSVv+ctfKgIS4C/nqX0GIEepz/dpbkeFjeoP6Rdx1pq1bY/nYYSYKUowL/dG3Uy5NXWPzmiMihw37U//NlJfqmgVz+SP1sWU7WvP+09CiENgte/pm3ZeDDi2j9fAW/YvBC2vwjnRQlIitC/ryNk8U2i3T8mESkumhPcvzRT90wwKqQ/vWLEC+q12r/mldUdTA/Cv4LqVDk3F9Y/BYwXY5/C5z8VvVhnw9Xjv57Nscg7lcq/Y5J4iQixxD9NWzFzeBHdvypKbUHWfNC/iMLy2E/027/d3Ovt8nLeP/R4wQ2kheS/zeH+CslG2r9TioMxuraQvwua90Narq8/soVzs21Xrr8MAwMwHhe0v8mqX5w81a+/f0ekQCvyZD9GHj31dhPCP1wbqfY1Dc2/p34V50ocxD/2SMvjNDrgv4QHfcvXpds/MUQC1vHJ0r9akp+uJ8nhvyLKWYKyMsw/wKuqjU46uD+frcnj8IrFvw=="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc3NTkyODMycQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM3NzU5MjgzMnEBYS5kAAAAAAAAAPop/TgGoMK/XWGmRD6MtL93tT2NwfrAPwm6LqYwv78/BfqvP+YKqr9v6YmpCcy8v4Ai+Pq8kWU/STMFUzu0wr+GCit5qTq5vw5mvIxxCcM/kfg3TrPGuz9lgfiYbqu6P21b3mDUjcE/kSf5lJnzwr+0KYHYkSDHv+d7yoVqnqI/+nhm6Q0cpb9r9Z/eA5q8vyg4u8PpT7K/FAvKBG0qtT9r5zs7+zXEvwkqHzIeOsK/gStB1LIuwj+2AEB01Guuvzzb/nZRVMA/MoWKXRKho7/3VlByfFGpv8SPBcj3pbi/lK0CoajVtj/U+jS973S3P6gNxbzhw60/KhflNIKztD9iUyaemhO3vxvL1kMGocO/wKru/GmChb/5ag/9vX+1P+eLbO28/MO/Dt5x5DHwt7+eHdn0gQarv0Vto7/6S4I/JpK323cHt7+p5LIIu/ajP35nQMoPY5Y/Kmi7XhgQx79OOjU7SYWov+gy+fNQjrw/9fstFEOJtr/h4H1H9dCSP2PuxpVJxaU/AHyT6ltwyb9jQGmOdUGxP6YOS6m3V7I/gyi0GMyeez+SEIx31zpPvyWcmpOZ1LA/n87pGt5qoD/e/FCnogW3P0DPwKkE9LY/u9rco1cjuz/1ZGJGOk2nv8dwldzyRLg/mV/XnoS7uL/rKd3NTreyPzkK58n0j7s/pgcRTtsFgT/Ti+MO9cinP76kMF0l5K+/NMrEHFUxtz8ERTS3DHu0P9zuBM38M4Y/i0ZEOtxxyD8pEGwaYRKLv8nZrESH86m/zI4Bw1lrsL/8WjrFQt12P0kWpXKEsIy/VNg4qA9FkT/zB4O97CG/P8iyZolYb7C/rZ3JoJxIs79rbTltHDy0vzKw/skFPao//TEa72j4vD9VqBaNgZCrv8RmF030wKm/luZACeqbpD/JBpXyWba5v3OykAlJEKI/5YLeILFfmD+tTZgL95m7v+12ECRAFcO/izC7RU/MvL/km+GjZ4i5vwZ7i74nCZm/d23QAvibor8Ds/Box/KnP+HUI1LZ8qi/qKYiSdSutb8W05Xx9/Klv0Og5KGuHaE/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc3NjQ3NzQ0cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM3NzY0Nzc0NHEBYS4CAAAAAAAAAL5WUKDG0MM/hjarwwPhrj8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    7,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -3.9913650083720635,
                        -0.06948455483254497,
                        -2.101575763153684,
                        -0.052806298850418716,
                        -0.005660638688902864,
                        1.69200232457371,
                        -2.5378555465163197
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    7
                ],
                "values": [
                    -3.9913650083720635,
                    -0.06948455483254497,
                    -2.101575763153684,
                    -0.052806298850418716,
                    -0.005660638688902864,
                    1.69200232457371,
                    -2.5378555465163197
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 90
    }
}