{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        9,
                        9
                    ],
                    "values": "eJwBiAJ3/dEISZG+ku0/4Y/zA68/sD+BlGiF5viJv8qvh8M28ay/EVWwu7qYpz9rOkrLE+mSP3Xy7txCxaU/mJvoDyHecr9KUVoPanqRPyNht2OVSZI/xbxN6+ce6z+iIFv+dq6XP/99CJ3XO6S/7imRF+WipT/4T25S1deVvzqn82VxZ6G/tuHmg6rfkj/uCf4XKoKKPwJ7ko7u0pe/ofBPUwOyqz91rG3dDirtP8JRTec2AqG/+lloll1SsD9zsfQyGyiCPwhHZBElilw/oZC5dqezo78iUVVd3790P1qSaUAYcJK/aJLF61iktL+xNSQPBIWFv8xgSgUQ7us/anwhzzXSkb8Md1nCRsuoP9S3N8A2fHU/pO+/F2FyjD9ipToPAx6fv8PkWBKdA42/b8qT6Lv6nz8gBMhm8jWKP7B5QNVHL1Q/0lh52lPb6z/f/lJBzceYvzcefVfX46C/L/D8+k0Qoz/vpfnVidZtv/7Ax9BFbbY/mq6fWsnymD/nCN8kE8ayP+mw9CKD5Zg/pe1kuIavfz9b6H/LyKztPydDfKS+3Ku/yczxHwzgnT99b7J7Ay6hP/T9NC9+N7c/373obiT6kb9hRA1QoF6gP1cqbxD5FJe/TtK/rv6Gjb8M1TuwozKQv1uwWgRZY+4/JQ2XwHFWnL/2JC1RqeeLP4KbDW6FKVe/X87bDI/HkD+vKf5fVUqhv6l60jy4zIE/vo3Jojqnnj9qqsIRZAM3v/yg6afNfYq/tJ3Xtvgv7j8r/J228M92P4CShhm7x3c/Rf6uqRyzkD/g8SzcWOx6P7EALFf4fqO/8ModKHjTkT9QRmENyvR8P21dMWGFDHe/qa9vofdKlj/uGdhMvfrqP+buU58="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "strides": [
                    8,
                    72
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    1.9386784013914296,
                    2.660068961473331,
                    1.6246841509336645,
                    1.2602705617232541,
                    1.9707339823838637,
                    0.6548081490633223,
                    1.490662923382088,
                    2.2562945828210137,
                    1.3261100577452372
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.34685896595930354,
                    0.3322608997097721
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "values": "eJxrmJy+61LDEfuGnE1fbP7vsWd4tkhKvWfu/nnHxTL7FHrs5+i5fNb4s2U/A/Nuyd5X8fsZnP60cO2YYM8QZHzXbfYs+wYBkbwbDZv2w/X3RL9bv+6yPUNCyKOEpRv3P81ckV/xb9H+GTttua+e37SfwdOII/Z3wX6GC/XzXXd37WdYsyGoM37pfgYH7Tetlwrg9sP0N7g8cO4LvmFvxu/dvXrLTnuHBTyXpM+17W/4ETQr4vVMewa+8kmffFfZM/joZFiELAbamyDiuWsG3P0w+2H6O5tXPmO5eMo+rFjN9EfZNvsV+XsvrZq2Yb+nXegBpY2r7OVCy6ty15ftf8rF9WnmhA1w/8PcD7Mfpv/jquRPS0/ctH/B8eFo4NxJ9gprWHSeiay0d3iwaW59Sut+h92/b39tqEOEH9T/MPfD7Ifpn+Ai8YPTaqM9w5L9ByYx5O9vsLyi6Fw23Z5Bd0MD85KZiPCHhR/U/zD3w+yH699aqij/7ZA9wwYfeaXJO4DhE/YlriRtPyz+4OEPDT+Y/2Huh9sP08/GdVd4K9A8lTiO94Fb9sPiHx5/0PCHhR/c/zD3w+yH6meYxKOy+PQdewCSHDUF"
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            9
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            9,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg1MzAwMDAwcQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4NTMwMDAwMHEBYS4yAAAAAAAAAMKsfg0TGN0/0MyH8q0RxT9bglq8wz7ZP5XoBQq5JMe//gr4Z9pazz83LmjLPKrWPyEbihwinNG/itIpaZMppT9R4cyTVMezv+yVO2u65ri/JeicKohUlb+9Wvcd7cq1P0SwP/PXs9E/cKlUZRaTwD85Qze/QGPNP0dJh+g+WNI/s/sHu8R1yL/R+ePmJ+LTPxOHTyoTldY/SQrdLhgevD+ttAEhpWbDP0diHK4/td+/33S+/W7pr7/Bs4PUq+7Jv9bCBuWc5Nk/a/3DksEQhz8iz7I28dXNv6B6bF6OOX+/0knJEh8ozr+g4IueNN7BP0WAPeUDvNq/rSd3rjok0D8cpUOde4DBPzFRxMIuh3C/C1rG2Jg31j+QoPkD/iiSPxy83NGY7de/o57DIaU/oD+hs4h4GXSxv95Ct7Sua82/5IVhKbaAlD+wTpenwwbbv0q6KzvSq+G/rxhWBFg1v78a8USYWyHGP2NG3f+VOzA/H9ojU5f6yD+XmvbHrLbFv/wv0/GQP8M/wKxiKF7+yT8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg2MDI1Mzc2cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM4NjAyNTM3NnEBYS5kAAAAAAAAAGPRhHLA1Lo/RRXtcUvCqT9Fv3gRbBKxP4mXT5RTs7I/sGSkbXQHtL/pRAH3JIu0v5eHgkUcVLG/hnUImuXfsD/gG18WikvJvxH02DR4E7i/jG4d8sFUjL93N8A/8UyoPx1vCLRWz8K/XeWmEfsewb+Ka6rvEvquP7lxbwEi7cU/p7+uWRODzT+Aq+emcXK2vzZr80dtYsY/0/diuEUdyb9m4uvhDNC2P5sbzlCTScu/QtTJs8Vjv7/Jn4mvDFTQP2V8kLsM4ZY/CF4d6VBoyT+ny5R/H2Wzv1+0Z/uRr8M/Td2x9prtsz9kysyGUGzOP9D9FhGRRq6/ZiAfHUXpwL8xCxcmD46uv5CJWHEhAGq/v1tt/Uvxxj/zTynNjdmzP4MxyeI2G56/Pcy+4ELKsT/ypQ5Z21K8PxrFVgJS0rq/5K9nC2VvzD+FXCpaTVi9P3N1WZNx57O/CJ926i9GvD/46Q5V9bnAPz30wuEXSrg/5nZP8Lt3wD/ageaGSv+QP2TjWXEhVLM/Jkb7GCLWhr9wpGcbxoHFv8+S8UOgR6K/U57wcR2zmb8YnkGQL1q4P8y+bHwwA7W/Ujy66nOskb+HbKvt30SkP31z0qUipKI/M+uW0fChur8LaeuY23iUvzfORIg/ab4/BGd5dJGesb/pBI1QDHWev/GYiUZIRao/4JRp/q5IvL/XfSXmKQXDv6pkuOgmy6+/C0AZb+hkur9NCZyfiaeBv1+oBH5pMbG/ZeTurpmroD/4Nmy4/ojAP6lOxM8EApK/HQgt6Kg2v7/98b0N7z7Jvx+y2UWXAJg//vLGvU0lq7/yUZC+kQ2rP6FbmCPJ9rE/O0JeQ4MptD/+LQD4p2OmvxyADsbpWq+/GHQqlgmzrT/wkDcSfQWgv4b6yJSY7Le/rj/8aGiS4j6QmnYPaovDP0LwuENneLM/V0Jw2NWour+UTx3Vdmawv0+2y53J2rS/bHGzyvAsxj9WHlVjZli2P1iBWTTXFrI/RsjaEMDhpj+ourbh2vakvyyqma13NsC/7g3HcNw0uz9Z0ywsFtFnv3REG2bl5Jo/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg2MDAzNjE2cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM4NjAwMzYxNnEBYS4CAAAAAAAAAD5VTZj/a88/CFduCvG5jr8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    9,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -1.9869898694790264,
                        7.950962866820244,
                        7.157530449930759,
                        0.0011281802634837898,
                        0.08353868244267992,
                        -0.23814221705307936,
                        -4.1700296230685385,
                        -4.153298347623127,
                        5.6486961809614185
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9
                ],
                "values": [
                    -1.9869898694790264,
                    7.950962866820244,
                    7.157530449930759,
                    0.0011281802634837898,
                    0.08353868244267992,
                    -0.23814221705307936,
                    -4.1700296230685385,
                    -4.153298347623127,
                    5.6486961809614185
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 85
    }
}