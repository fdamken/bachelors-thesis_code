{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        9,
                        9
                    ],
                    "values": "eJwBiAJ3/czaqzW9GO8/XxmsBvAJkD9FUQ7hG0yRP1eaGfqucYy/yZefNcKupT+6RRjlmfZVv3Z4CN9QM52/k/zz1DVklD/KhPk81MGSPx1Bz8zRb5K/h0EIo/x87z9XwMmJtbSAv7is7F56m4A/+BkPwC7Ahb9smMvp9cGKP/NaOyZ/43W/weHglMuqcT8MqRZQBmp1v0JShYPwiGK/7enjPllUUb9YU81/OeHuP+KAGK8YOk6/0denfjfMiz8ePkrnvu5hvxGKX1OL8Xu/8cto4Wp0kD/YzreRoYtZPybTzoE4j5I/WAg0vwf9gL95GfF3io1aPyrccSZvL+8/Wt0+p+Vtb7+plTw+JSRtv67opJKAfpA/vdRcMspohb9HuapLptSBvzWSrEmocZ2/adkjJ6iPcT8xdNwE+ZAAvzxtoPHceYI/AoVK2aNF7z8xBE9NVGF6P4dstMyO3ZC/1Gq3QlzJlD+3f7b0+/R5P+eJIowTEJK/PHCuqUpHUb9qm+H/yUGIvxrl2RNaHYA/y5TTjvSBmb8IBFsFYuLvP5+3ZZmu9HA/rItqCLSAfL92FEMcFRZfP4EMOXN9vp0/6DzNMT+Jbb/a7MRuIvFzP/p9VxGMjpC/Z6hb3UoQhj8u0sJwifmIvyMjq9yjne8/cErlhb4Ea79nD3fEHi56Py593JBLwYW/iHpyH+j4cb+WGPZ3P9BnP0IMWrV9Woo/lDY2aA3ocL/Gh10Ux9dJPyljCAk3ZW0/FnYqHctX7z/KqAisilIrP34rUvvYdpq/pgSSW9B6dT/L0Gjv8atyvyj5n9f32zO/NYw3jDSvXD+cuPcGeFySP1CeGo3FOYG//X/kLXrJjz+/f/cCtGbvPxmDSfY="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "strides": [
                    8,
                    72
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    1.1364808504929347,
                    1.0246405149620754,
                    1.0355623476290952,
                    1.0399447219723168,
                    1.3312533591040314,
                    1.3216008109107689,
                    1.0589231722717272,
                    1.1792073889018373,
                    1.1739786145135842
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.22210785122990456,
                    0.14032739421712825
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "values": "eJxjqP01WTzukX3DgR2VZRcX2zO0NBlG3tu0n8FJ8M+SN6ftT+SdZy2NPrq/oW3VkqVW5+wZZG7cecVUtp/h4tJi1akH7Bv+Mhj9vLRoP0x/QVdv05aEN/YborqDOSYuAJrnPPMDe/V+B6EbEy12NO9nKP1nfopn+f4FufO2ZV/fZH/gH8/hg7Kr9zPsejHrrtSM/TD7Yfp7Jgnbzfzy2v7Aa70iy/Xz7Eu6baU2vl24nyH6soHXxrX2Bq/9Ci3yZuy/0HeSd2v/XPsDrB6rQqbMh7sfZj9M/ysBoXnMCi/sBR5vuqsof9BeYVXAx/vfj+w3OMdu+Ut6236GkC3exxkb9jNM2jqDRWsF3P8w98Psh+mPq3rQ2H77hb3Dy5z9G67tsT8Xy6DBUnnQvmDqy0nJZtv3T0hb0Rz7fjUi/KD+h7kfZj9Mv4LG9Lq5B57YNziqX1cqXbz/wPzQtqtdO+0Z5rwrel48Cx7+sPCD+R/mfpj9MP0Cc5iMMj49ti9J4TX/1HXJPmHal2jlObvtYfEHC39Y+MH8D3M/zH6Y/jlHlu+KXHDP3mHdbN6FD9bth8U/LP7g4Q8NP5j/Ye6H2Q/TH7D+4OJEgdf2AJE8SaI="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            9
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            9,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg1MzU5MjY0cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4NTM1OTI2NHEBYS4yAAAAAAAAAE1VxaQRgsI/Ctkiy9Y3uD873tJ/97rMP6A8CqRSvsC/pdhPLNCDyz+NG8XACXfTP4f2CKYls8e/zxW3CJh9yD8+D5oCyWjFvyeDaJvD2cK/lRs0KaKIwD/u+MSYsjmsP10Jxn5JAc0/ptSPHDUYzD9eefbmVEWkP1tkGZymDMQ/+QvCz7mexL9Nnr2z9K7QP5fY2Sg88dU/dKsz/ruOuT86U+GxZ1zMP0W6f3k837W/fvpopBOEsr+8Gn1akwHUv5GVYfGVWMY/kK2BJ1kgpT90DhHOKx7Sv3HISAge37O/cpPr/HDgzL/tbKO0g0DDvwk3+s1qItG/hkwlTscAzz+XcVZ99pTPP6X9Sc3IRsa/LHmbiOqNwT+/Y+E7DFexP8ezXnUJK9K//eABxtXUrb8yn/J+5tpdP1BM5EpIBce/Rl4GDo3gyr+wigJMNETVv8/m5oikV9O/jlGYaxIBxr/KdFCsCWnHP9YCpZDA+7E/bmWHA6IVrL82OSqRot/Bv/EoQvTI6a4/RzteE7C2yD8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg1ODg3MDcycQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM4NTg4NzA3MnEBYS5kAAAAAAAAALIw3k3nD6w/jPpjhfKtuT+PfhHnsJ3GP1lXR2v3I7A/ZZuIltCWtr/Zs0/OyPuxvxwVOeQ9HZK/ZeAwS/i5cL8h4vKGx1XAv+IOtV3Uorq/Db9irtWUur++HRWRqWutP1G23eyY8L2/QO+izcHLrD+4mfGfZQyyP/Z4e8MXFsI/WTA1HAmsyT/JeVU6n5/Bv2KkbQpji8I/OYDzejtGxb8ZiFbXbM7BP9/bZ+os48S/fT4X5/iWsr9CO5UHFMu1P++Oq6H4f8M/zGujq0aRxT/wrxUIFm6nv4/F3Dichsc/8bW59wx/qD9bm2Ug6gXIPz54W9odQ7c//SP0NgrOr7/yLc+BoijDv+/kpLGX+ac/Xinyv0Eawz/TPfae5XHFP4w5a2fEaa6/N9iWT9j1kz8IFHAYHQyvP5BxBGsKC6y/vTMDpf4Ixj/FD6p2kNmmP+EoNhqTapy/XKCObxuYtD/kTYmS/5DEP9zp1RGn/XM/99rQE6sitD9fM1KMZwd7P1CnY0jFxLA/fWLvEhHkoz8/9NUZBxi5v3K7eZzk0bC/+gOhrLc1rL9Ek39n08q1P7TUKQM4qqq/B6rM6mIyqL+ppKDf26KDPz091R/eHrY/0aqSCEiqq78yXtC+lpipvxIczF/j2bs/Is/0ne0ttL/wvyx6Plmkv0ztukIpDr8/kYfFvGH7wb/3XmT9hj25vwq1FPP9bqC/bQClmu4+tj+H6J8bjeSVP0Bx4fh937i/bNZ6AVLKpT/7vv316GO5P2MillIGbLa/c457bZSIt78CkyWroHO7v5JoY/UDH6E/JNVga5UGpr+4uTsIJRawPwEjk57dpLk/tiY4vpfXuz8gv6MaWR29vwMmxa9Bery/PSpP9OBosT9FAD5lNSSlv0CA3xmEPrC/E3vzsRnssT/s+zwTtw1mP/XouS72scI/4YRVFxK4q79BdulPixS4v02v20VqWaq/aItCu+zNlz8UizYtMxejP3glRAGk474/8/evYngArD+NOcD1+Oq7PwNsTODavri/wPXWmTjEvT8qAW1t/CyxP5612bN0p5A/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMDgwMjYzMDA4cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTA4MDI2MzAwOHEBYS4CAAAAAAAAABpZ5jGZBck/iw6TzLK2jj8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    9,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        2.9206376630314943,
                        1.9473281039433796,
                        -0.44124775606383454,
                        1.2623337912978416,
                        0.424966788849089,
                        3.8476799248808056,
                        -1.109655126540075,
                        -0.9315275509757003,
                        2.363055108042976
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9
                ],
                "values": [
                    2.9206376630314943,
                    1.9473281039433796,
                    -0.44124775606383454,
                    1.2623337912978416,
                    0.424966788849089,
                    3.8476799248808056,
                    -1.109655126540075,
                    -0.9315275509757003,
                    2.363055108042976
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 10
    }
}