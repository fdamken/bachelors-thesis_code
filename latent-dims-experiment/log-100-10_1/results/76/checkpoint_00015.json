{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        9,
                        9
                    ],
                    "values": "eJwBiAJ3/fG2ktzi9+4/qTEreVB6lT9U1fHA8/aSPxlvpEqEZJW/DgQHRiJRoz9Sjt215dR4v7DVLXlGeY6/LhxfqWYijz8TNYRCyUaQP1Lm/rU8t5K/C8ou8yJJ7z/KdwQhv8KHvzNsNlJDK4M/cPwsLg19iL/WF4Uk+w+PPyZ5QrqWkHm/lcMw5g2ggj8Oig059l9nv7gEp4g6WHO/XA5tMmwkdz9sArMsylbuP245j10/+jk/CEV/+lGmkT8HIBXs9I9xPzg3HB7m9ZW/tErowXN9mT+BRn13aDCBP6JQsjEfhYw/rV9TODd/hr9vfYQudxl3v8xhlWs3DO8/ixBd80lpiL/wqTkPr59yP+PuARFBlpU/444HVQiDiL/JVL4nMUGQv4mbLUfDJZG/ls4m7urUdz+XzDwDh8JnP+PQ9eerrJE/wacv9xg37z8jPjW/r1N0P7NYCQD7OZO/uiY7H6R1mj/aJU2gnw92P2P7ZcdprZC/j4p7EBDUfD8G/hq+zD6Gv1QKhjsW75I/O5euzc+rjL9VMrA8guLvP9Cs+2hQGXY/oLddP5cGXz+raVi4+PSAP8e10MRzHZw/gvwBeGqLY7+KgNK/bFJtP0UaJ07X6oy/iNPoFbEMfT9W92NRRmJ8v3h8NqHWSO8/zSoSp8JKdL8d5zQSnOdWP7xmzKUw+pG/s6HGhAsPcr87oFcKMRlTv7XcuIgX0pM/VDZnMeCMir+i7Zsusv5mPziDVOLcB4g/yQyofScN7z+zswwpHW16v+JGx6W86ZC/i/duwkFFez8Z/7G5v976vlPUeBuDHjQ/Rh4eeG8xfz//RrH0oC6YP+wGmj8pUY+/hs4i/ef9kD8ucZydIwfvP6lBN4o="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "strides": [
                    8,
                    72
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    1.191826978821758,
                    1.0288812841073178,
                    0.9671996940044251,
                    1.0317752852971975,
                    1.3191626333721074,
                    1.1859509239413841,
                    1.0833859648780941,
                    1.1980788172799501,
                    1.186852803741896
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.2144769514469008,
                    0.13099813222316686
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "values": "eJxjaNn04HPDQ/uGh3GaJgtX2Wuknt5nq7ZtP4PfpZCP+0/YN2y91vcz+/B+hr6svtfnztszOOyOVmvOt3ewYTlaY7vfnsH+f5T8waX7YfpLMgWqLa+8tOepqJ2VELjJnuHw8p32jrPsH5y4o8TUO2n/AYUv2Ve+7t1/oDA4wYtvg72D9qFq7nkr9jM4XzDf27xyP8x+mP5PO35/XmD/yl7gUX9dz7lZ9r1TY4sNdBfvN7C6/vGT7zb7BLvECAvupv1LQjSeZIkvtm+wbNiw+sRCuPth9sP0h+iUrZmS+8ReYUMeo5TpMfuGnP2qMot37m+YuU3pU936/QllrLPvzt+yv8Hlq8Tit0vg/oe5H2Y/TP/nRa4s/yc8t3fY4KTm27vNfoe3/XPj4P32AnKNl/66rdvfIOY9X/3kKnj4wfwPcz/Mfpj+hvA5+uvWPbRnuMf4e7X8mv0bzK7kiU0+YM9woe6vxaG6/bDwh4UfzP8w98Psh+m/1LnmdQ3PY/sM/sb75Wcu2TPcVxFRKNgHjz9Y+MPCD+Z/mPth9sP092y2rV/Ye9P+QMTtoDSnTfth8Q+LP1j4w8MP5n+Y+6H2w/Qb/Hnz4Ef8S3sACXZBmw=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            9
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            9,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg1Mzg1MDU2cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4NTM4NTA1NnEBYS4yAAAAAAAAAM/siI9jOsE/hRnvQuvlvz8smWaUpQLOP+V6Ih9J7b6/XrfYFyI8yj+3Y4C2MtPSPwz2CrrT+si/G4+wojEXwj/EhgnuGiHEv71I169xIcS/VYuMKeiBvj/+xFU/E7uZP4bFXWqbucs/O+cFMeNfzT8P6w08DWSpP6IVjbBUVMU/N2MLuwtXw78QbXupHQvQP/dRMjMTldY/XAQ3dN6DqT86wLPFFaTNPwFo8vFQjb2/CYekzW8Ttb+iS/E7DhbSv9228AVEoMc/jCKA1sAQhz8IF0bYAsLSv0C9Hd/BT7G/M1xl6MKYy7/PHWKZ1fjBv5Utjl7Lbc6/NKuwORm5zT94+o9oSE3OP7aMIrka/8S/gVy+xfRkxT/ims5kaOazP+ZI/37gztK/op53dB22qL9jc1EkAEugP1h2MDuavcW/2TCW+t6Yyb+dKcJBXaDUv88s4qIpQ9W/vVkgV2S5xL/rENzAt7DIPw41oSpYm6Q/bxSLdkPgc7/VHiJ/9JfAv2UR7KJABLI/ev/DJ17+yT8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg2MTg0OTkycQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM4NjE4NDk5MnEBYS5kAAAAAAAAAHY5xyEItrU/Pn12XJYetz+4abappsbCPw5bq4Q2Kas/cz1+vywmub/NobJK2diuv+osEYiuWpy/TzI7bd3XjL/AEm6bdZ3Bv26RqoYwMr2//NxZ1zEkvb8qi4DxMEWxP+qk6Yr6P8C/bt69ewmtpz+2TOrIwZu0P+L+LrpiX7c/GmywMLfzyj/Yv9Ml8VfAv0W46B4R08M/4FFuj+mNxr/ex9HrGhbDP2Om4v7aKsa/tdwLEFUmtb+d1tzetzuzP9zHJramx8Q/uIcewPTYxj83BDO2XU+iv0fzV01Kzsg/W7OmScWdrT9FqeA0mE3JP8IeOxui7KQ/2+1OlhmVt7/BQ0qWUHDEv2jJql/f2qI/a2Jt1O9hxD8sf3Gzk7nGP43Nl6724ra/sKByV89wgz9mjS61ahWyPzvDeF7hlLC/hGx+uaxQxz+894fISPirP6z9Bd8BVKO/tp+CmHcntz9AjASnrdjFP5yuyXtOGaw/RmfHPAeytj98xO6GSv+QP7Qj3j7Saqw/KQjaZMkCqT+YmkfzafLCv23iqMVAYbO/qpS3Wv8Wp78tYFPZfTmsP/tZFFXwyK+/9rbgmKoTo7/kcrUBrQA7v9mPwUg6rrg/+1wpfziDtb84XLsQT7euvxCY1jaHSrk/YIjudJGesb9TNxXM9nepv72o17XCzsA/HfRIqLOzwL/nxFkm48y7v13xUkKLoJa/7cbVcZKvsz9pNrrf/hCgP76G1iHabru/IS5mUwrpqj/eEAPNjNS2P+xai3ti+7i/9xVqlvAXur8o8i+CROS4v1m9U0e8PaY/EEJ3Gd3noL9biDExgaWyPz8Zhsc5NLw/xY4s5/Nmvj/Kv4NDtay/v/r58jQtzLS/1om1lgmzrT/NyT8tL0Cyv5C11OFPXqu/NDXp2nV7tD84b+EIm/abvylKPBpIasE/gFBqxVmZpr8EFt9456O6vxh98POxOqW//geQr64FoT9z6pu29fCbP2qzGxWAucA/TUFNWpiPsD+XDTgeVXq+P8C1Vrd+L7a/QkpmYcopwD9bvryCvoCRPx9b3z8QqHk/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg1ODEwNzg0cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM4NTgxMDc4NHEBYS4CAAAAAAAAAJyYYUZHTco/0QYgCsqYmT8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    9,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        3.856422225867476,
                        1.7911510768297774,
                        0.17171307401752559,
                        1.6266902122492937,
                        0.5575107106982453,
                        4.332518774641485,
                        -1.2977505086132326,
                        -0.917732966128012,
                        3.1548446914903154
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9
                ],
                "values": [
                    3.856422225867476,
                    1.7911510768297774,
                    0.17171307401752559,
                    1.6266902122492937,
                    0.5575107106982453,
                    4.332518774641485,
                    -1.2977505086132326,
                    -0.917732966128012,
                    3.1548446914903154
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 15
    }
}