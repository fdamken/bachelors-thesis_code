{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        9,
                        9
                    ],
                    "values": "eJwBiAJ3/ViBynmAOO4/l383R7Nslz8UHAHbhJCKP7uazQ3etZW/0TAzrgQgZb+KD7r5XCFiPw2/GWZAmaA/GNRp/xv2o79M22yAbqSdP4R33my9mHu/viLxx0N27T//uZGQ7HyTP1gdPzX3S5i/YaKbRhXBlj9U+roKN2qTvxZ1IZQDi5+/k2qvKdWEnT8LtcbMky6HPwfejUHrBoC/yofuwg9dsD8ZrtrZDBDuPyk+zbBB/ZK/DbeDLHOZoz+NKk+UImeQvz9r7hDDk4q/7zASwvYIjr/d9AFReQuGv0VUxQmaTIG/ww7ayxCOnr/yF38JLdmGPyQNub5ZiO0/VlcJBeB2lb+57uQWKo6cP72APxCHOH+/44a8Sop0iD+MIIeIQ/6RvwcsYm9o6JK/9fYinyiZez/hrq7OVzRcP94N7Zl+i46/ki2z3HY77T95H9HR0HWHv0afKo5v+3M/pODPmMdAij9d3kYpl7x6P1ACXhAcGLM/y1DF9F99qT9fZ/KUtIu1P6/G6P4PQ5K/ubKeX+j+oj9cRyTVlG7uP4D0ufQqEJC/Qeh/IJOxor9bxKcBAxiwPwkxSsea1KY/zs8DpLqGoL+d+sKYsxmAPxwhYhY1jGO/VMas6UDQbj+fRynguzuAP691+ik8rO4/lsCbIKimmL/khv3QhPWRP22XZr5ocp2/ShO42i5Ec79oAkZJK1qevz4mA5uHHJg/kv1KHrHNcL8M4RqqGqmAPwJhxQIehoC/uiGSZrcr7j8qq/zFQF16P34iKsmsZZQ/aVX+AFDKlT9upVgciKl7vyxzBevIHZS/HM+Pqz+Qjz8pvB1c3u6CP8ivFEvbxWQ/g87VFneVlz+eVrwBDxDsP9bJP5A="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "strides": [
                    8,
                    72
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    1.4771874873973696,
                    1.7439829699632792,
                    1.0208490776109713,
                    0.9370322643240389,
                    1.2113001863620636,
                    0.2872303088676448,
                    1.421071854306099,
                    1.6852293461318866,
                    1.2915911012101944
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.2739876581090084,
                    0.4844592895802648
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "values": "eJxb4beev+vgGfsFk/a7Slw4bM/wZM+BBMcp+3fs/JWhf7LHPiJTujXx1779B/7u1VaY1Gp/YI2B9he7VfYH7rI/PtWz2r4hu6s06vPm/XD9tpUnbLhu2DNo/LRU+r9if0OH0jTH1/P2N5h4e51M2bWf4ZxiFV9Uz34GnbQVLLum2TOwdCgckZm/n8HhU+Xk8kq4/TD9DNv/HJuz/Ja9xqZ63ce8u+wZXNLuVXn27G/oDy866TrHnoEnpkzGeps9g5cs03TVNfYMBVZuFnf74O6H2Q/T3yB5aP6JvrP2MUFGTEUdW+13n7H59HPS1v1XNl+o+v9mpf2BkHIfXd/e/QdcdK5JVWyA+x/ufqj9MP178lUDM97esV/Q+/WJwOEp9gdCLWYYn19mz+B52unkzkn7GQRWdGzOLrKHhR/M/zD3w+yH6e9Z5LmpV3CnPYPTdGlWnbr9CkYyGXbFC+0Z6pzsc1fM3g8Lf3j4Qf0Pdz/Mfqj+C5K3Vj6+cMG+Yaui5g/LI/YMRfNLpvybDo8/ePhDww/mf5j7YfbD9DfE6/OG1ZywZ3i87sff7Zv2w+IfHn/Q8IeFH8z/MPfD7IfpP5DzRupzxz17AMwRNJw="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            9
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            9,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg1OTA3NzQ0cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4NTkwNzc0NHEBYS4yAAAAAAAAAE93gqissdY/+K8eRGYwyj/mOSbaFPfXP4orEAq5JMe/iiGPadpazz8wACfLPKrWP8e7zkEsc9W/6DIiapMppT8Zn+STVMezv6+8U2u65ri/8xY1LIhUlb/R8/ywQ7LHP5eRBvTXs9E/2CL9eHQHvD9A4pO/QGPNPw6MaPea59Q/kae88e9Rt7/1GtrmJ+LTP6xPf1ZvJNk/T25nLhgevD+vYXIgpWbDP0Gt26M/td+/+gSL+27pr79/6ILUq+7Jv9EqG+Wc5Nk/DAEzesAQhz+Rado18dXNv7WO0V2OOX+/JdodEh8ozr9i56hPQGC0P88bpcKTftC/PZI2xehr0T9/6gvpKwytP9OwAMsuh3C/VWbJQ/XG2D/8UzQG/iiSPwOgxLzqpda/9EINdx22qL+9gAUWAEugP1AZyYpS3Mq/cQt1bKZT9z7tvpSnwwbbv9ZdNzvSq+G/sJIEXmS5xL8ixVqYWyHGP6bREnmNyL4/PELx/97bwz/fJfHHrLbFv856KPKQP8M/roM6ULqNzD8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg1MjExMTY4cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM4NTIxMTE2OHEBYS5kAAAAAAAAAN4dyCEItrU/6TIvgAOuwD8vVe4LbBKxP9J1TZRTs7I/fqWebXQHtL/zFTv3JIu0vyN7fkUcVLG/50YEmuXfsD+zr1QWikvJv6/czjR4E7i/M12oH6FSob+gxpXxMEWxPzjqBbRWz8K/10Zn0T0fvb8D4unIwZu0Pxx2+a5pzsA/pT+sWRODzT9Iu/5UuVOxv/oO8UdtYsY///NguEUdyb9HZevhDNC2P0Phy1CTScu/I27Fs8Vjv788M5UOYYnLP7NNwCRsFLU/xZUb6VBoyT+6xa5t6NGYP2NEZ/uRr8M/dYRhScWdrT8QJsqGUGzOP7sxDhGRRq6/y28cHUXpwL+I+QkmD46uv/skUhjdOpE/o6dr/Uvxxj8VmY9h25rBPzm54eI2G56/zem74ELKsT9KLQtZ21K8P0VgUwJS0rq/jP1mC2VvzD+5ahFaTVi9PzmdVpNx57O/xGFy6i9GvD/rcRJV9bnAP6VTv+EXSrg/AqxN8Lt3wD+/o8mGSv+QP+TvV3EhVLM/31w3VPLln78duW2d8mmxv0iLiOcQhay/0cCjbR2zmb/HbTyQL1q4P1mNY3wwA7W/3JNu6nOskb/CtLXt30SkP1qaxaUipKI/m8KJ0fChur/kocuY23iUv90irog/ab4/kJHfxkm9tr/16WZQDHWev0opIkdIRao/fYMFT+4H0L8iPSS8zXXAvzVDxegmy6+/zXMZb+hkur+cXdWfiaeBv4Ro+n1pMbG/xk3mrpmroD9h6m64/ojAP9gyrM8EApK/Awjl5P+0r7+fFrYN7z7Jv+OmwkWXAJg/2IKOghfQt7/DU4S+kQ2rP93HnCPJ9rE/Ez5WQ4MptD9G1PX3p2Omvx7TAcbpWq+/Wt5ulgmzrT89bxaMQHzIv/ECzpSY7Le/rueNnGiS4j5GPHQPaovDP3NAs0NneLM/J9502NWour/yFBjVdmawv2o3zp3J2rS/YmFbVB9Dqz+d8VpjZli2Pyh8VDTXFrI/hI3FEMDhpj8ru73h2vakv446nK13NsC/t/rMcNw0uz8CW8wsFtFnvySImlPjr6c/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg1NDQ5MjQ4cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM4NTQ0OTI0OHEBYS4CAAAAAAAAAOIaS5j/a88/36CZCvG5jr8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    9,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -0.7952398983249707,
                        7.616350459011334,
                        6.015182974000517,
                        -0.09222480050623737,
                        -1.3664276844809353,
                        -0.611003669328696,
                        -2.6234953023228673,
                        -3.1193587750544816,
                        5.485950073155201
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9
                ],
                "values": [
                    -0.7952398983249707,
                    7.616350459011334,
                    6.015182974000517,
                    -0.09222480050623737,
                    -1.3664276844809353,
                    -0.611003669328696,
                    -2.6234953023228673,
                    -3.1193587750544816,
                    5.485950073155201
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 55
    }
}