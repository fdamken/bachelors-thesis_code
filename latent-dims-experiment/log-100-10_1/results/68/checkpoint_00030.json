{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        10,
                        10
                    ],
                    "values": "eJwBIAPf/Ht2EHcC8+8/oAM6RL7ulz/LqjEd9o6lv5XOJs8+Zo2/eE4v5+p+nj84u9MNZldWv2dxPBKvSaO/4VKMVmTxiL8KVnUHYWCQv5XE3siwtoA/02ubJveEj79CnI5jJ0DuPygTfG4qwoE/Sva0ATcykj9Ii2XtUF6Sv2ivDEsqhp8/ztkaXucKlz/RUllU2vpyPxac1gb4wJs/8T4AE/XlmL8F5X1ELpqTv4DB7vzKEIS/4frnoQC+7j9nCc5HwM11P5LNBVEJ32Y/zXqWiKkFcz8H7gX8ATOXP4MGCrOlJpI/zOau3Hd0jj8MrcEzkrKXvyOp7qHDDGW/HouzVUewYj/S8LRS12Ziv7MyHjVlqew/jOYN9LHGez/09P29m6OPP/sLEC2RQn+/L0MEVxOikj9/zHWoShiPv2TTIzYiGIu/uI9H+37gcD8/R3sd0qldP5midedg8Zc/FSkb6ifSkD8XVE78YV7uP4iNR7mf15G/OFEb2oEAez9K7QYCq7GCP8Q67RHj/Yg/GHqE9ZjDmr+1iNC7EsOiP1UASE0cNYM/G/RRAbDOkr/1SCqzuUeWP+A5ivewHYC/Y+b2k7iw7T8qP7/x32dpv6sGf9ngdJW/oJluFOjBXj/DnK5pan6nP+SWIBTvAWu/PTCZ6QAIqL8DFroGB7xvv4xrJc9i85W/bQowLg8Mgr9GI67GBZ2pP071n6uCRe4/b/iU6G4Enr9HLsQ+6ZBzv0xWn6864Zo/z8rtlnS2lL9+s8a9BEudv1FlmRMZW6U/UKs29keLpD/r7IngI6p7v8PfVHOu83c/POyKgRbmnj/MVxXiq7LuP41IqrK4iYQ/qerRr6z7m7+LDSn07+eDv8UgYj6Zv5S/992BL7djhT9D5Toc72eRv07pQsQedIu/nGyy8MVhpz9iYPsv2/agP89XOhTFuG+/ZXY2uEW+7T8Chvl3KgqFv+Z+Yx0fBog/GmV4W/myeD8MssNkfW+gv6xfT+/srqK/9OSpk/PgbD8X3giY5mA8v0GiExWD16O/KdE5qUm8kb+igtKeSM6bvwDVNQHO0+0/PHGXLw=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    10,
                    10
                ],
                "strides": [
                    8,
                    80
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.4272995632496615,
                    0.3991203718902682,
                    0.7124709435231056,
                    0.957069124450408,
                    0.5471261996174914,
                    0.6212888352510689,
                    0.31907408568501827,
                    0.5629821969136053,
                    0.6114261779174146,
                    0.679197427308152
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.022106556314542104,
                    0.011702557163681604
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    10,
                    10
                ],
                "values": "eJxFkt1Lk2EYxu++hiEjYcaKvqYTmkEIyiqCul9aIc6C5tGOZPlxEIR4EGVz9T41YtMogtkiKrY2mQvdmKu2nNozX0r8QGJZJLrBojBiaWUEQ0Lbwfs8/QM/rut3XWfdq7968zMoOCpLlnURtMSOfrE2jCO8Dk5JdhuFtsudV2fvUwGDPaJIafZYckpTFkEwlY8Og59Cqym92E2QVNi0QytdlHG8wa+BwYMjCM5StfZTEwVJOuUojyAxe29PGgYoqIJnFIc8SJT1ppzfh4LufM9n/RCFhZqFJncvFSrHmle19yjPI3PII+x47J5DGLhSKy6NUGLdO0GsMYSSImV3jYiCvfrA6Q8vEDrXMubqMIXMyeL5N88oWR7rqPsdpbyXnIdz3iou7t6YQdjc/23N40eYuOUs1r/CZGtjQyAfR2j3laY9YQRVXf2+RBDBCLbwXcL9sF48j8zxCsqqlGcaIZlYDw22UIifu/NDX+DcvNFPQoXe62XiSi6KWaMU3alLIPPM/LBeLA/jZPU6c7M9i+RwIP7eW+gVOSE1qn0ImqXjl7Y8RKhwGS2Sk+/FPct+eC85D+P8jLQZigJJhK5drrzlAU2Grl9L7YhR8uS5Qr3YR9nufC/mmfmRe/E8Mqf93XRu/OlHJNv+/N3j6KPZWnF0gyuK7D9sd7YX88z8sF48j8zRfA8Z5renkaha5vZbX/7/ofwfvru8F/PM/LBeLA/jHNk0W7X1Qgr/AdJgfyQ="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            10
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            10,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc5ODAwMTkycQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM3OTgwMDE5MnEBYS4yAAAAAAAAAMiQKQC+r+A/sQUXoiiA4j9rVHL3idi+P/ww43/zHM0/3zcCCzc3z78eOcX2r9Tlv6eZEylkGsQ/Gbkt1Quvzb+AX9YQDTDWv9UCqq5S79O/ounuSH+Mzr9Jnj53PDzJv7RUwQjNTMW/E/qBYJp4vT8pBLfYpGrTPzPU2jO0euA/k+gcnuJT4z/5u5meSpPZv4GsV9MnDdc/F3kD3wVX2b8UjSqYlw+Yv5mzwdqiKdW/HJ9CKp3as78sqKeAIoV5v1TvXnJqnLM/A03nK8aS1j+vz9+ye1qVv1Rzxem/N98/G46Xer8eqb9BzeGaLjXXP1HvMXV+htI/wVmVnCOAuD8L9y2m+NjavxmeN1nh8OI/PxRNOqRg3T8sSPrDIh/fP9uWDVHFf9O/vnKdK2+Fvz83B4y97UjBP1Tvpu6KEsK/MeF0+GKg0j9ySH3xM5u1v4YFMmjd+rW/iy12mEBrub90z0i/6zPKP+7XizALjc6/iETQGPRRyL8bsD8XP2vTvxCG9L7v34y/lA0pOXrG4D8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc3NjU1MDQwcQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM3NzY1NTA0MHEBYS5kAAAAAAAAAHE1UGY0X7a/CE0RpEIPr7/t8yTF8FvHv5dMWLWtWcU/RO8qnvNSvz+tYH5gA6SyPxZxcvj3f7O/KxBc2WJplL/trFXumBa1PypV6khiK8E/DBIe0/7Ksb/38ADCDuDJvzKZdDa0cLc/YkZYSV06tr9pzXSaaqrJv/CGe9SAdpi/cE3q2XZCxr929ajYK4O2P/6NxcX5ks0/CshGoEZRsr+8ti7lJvfJP0yppZbGypM/LffbTjDysr/gZGyUUHqkvyFXgBMVF9C/Ecj+9SIOlr/Gt/j0b4FyP3HrVjXaga4/A/qZdr/lyD8sNuEolaSvP7o0TL8vypS/t7tNdx8h0r++jPRDslq5P7XLAsshkIG//ptOdAz2wL9/sYcRBpPBP/g5u8+wgZa/dx9jiZ7xwD/l+STcJs2ZP92Kwhbbv7O/aOK68sg+x78dyAAsPla+P0kooQqd9rS/yIFIi4GChT/dxcF3zjzDPywdtL6cscE/3QHPlKtbxr9BAa8d8Qq9P1Xl0ACNRZ4/Lcs5zTINgT8Yn81ewDC8PxB1rhpRz3k/+csE9+zYkb9d+fqszWi4P85oZeAmZ7u/xnhOpWFhfT8L9o5K4E6wv7iA6nAyaXS/Uv/LY2IfsD//CLuaDkWdP47CTiW4qjQ/qruPzlD2s7+pNVmJfSa0P4TZKgjpPrQ/a2gTRD/onT91anbGvaZZP9shYP/yJaq/eCiADiuts790f2PzATi9v5qW7ZqeILG/TwZMPbtMvj/ry6EX7RVcPw2lhrPCmq4/yrWE0kiEir/5N5HBxsuvvxmBWYrPbI6/TNJt1+yvuL9KrF8+jnu3P6KpTedfmYm/HXUIblELtz/Wib3ghwS0PzlAuq/jkpe/CWGcwWzUqr+2I9nXLSZlv/jZz+M/mJ4/n8QqX/M2br/JeJzBDNapP6L1vrNkS7m/EP7t1KrAs7+deOrOEL29vxUsyIviIba/JEvyKOqkoj8bV1cJLP+gP8oObjjwHGA/wo1wAkU5xL+pD8BL97R9v9ulKmfh+KI/TBzoRyL2dr+6hUFpyKTBv8Zh7mOhcpg/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc3NDc4MDgwcQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM3NzQ3ODA4MHEBYS4CAAAAAAAAAN1V3M3uJZM/kNV97ZZ8wz8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    10,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        1.4596186875451398,
                        1.5852345907747811,
                        4.672350003431095,
                        4.708185333320004,
                        2.354725660434768,
                        3.500375307067429,
                        1.665124517267862,
                        -2.8241017574767846,
                        -2.7028996551980793,
                        -1.0936432610981495
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    10
                ],
                "values": [
                    1.4596186875451398,
                    1.5852345907747811,
                    4.672350003431095,
                    4.708185333320004,
                    2.354725660434768,
                    3.500375307067429,
                    1.665124517267862,
                    -2.8241017574767846,
                    -2.7028996551980793,
                    -1.0936432610981495
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 30
    }
}