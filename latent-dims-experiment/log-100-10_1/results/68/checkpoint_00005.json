{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        10,
                        10
                    ],
                    "values": "eJwBIAPf/GPdbzki0O8/QhPIfgCYeT/ZYIuU/yN1P5Qv4kg5rGA/Nij/8XJMkz+6iCGfoj1/P1YdkqMQfYK/ruOCdXHOgT85rnO/pYksP6DNzqYqN3a/1YDksY2ekb/s7nRbB9HvP1gT0baAKWM/uC+cStn4XL8PPfbeUiaPv1ih6pfvAG0/aYMV5Xl2gz9fKY3RLkpdP+0RFmefkGw/mD0LCmHxXb9qKU3W26SIP4TQP8AKIIu/DeE3yMiD7z9dq4Ik7AEvPytBy8h5U2i/Qp8M1I3Wdj8QcY2tbp57P8fcEtHiGYC/pJXwa95YcL/pDABEX1uDP/bk0sPYIms/O8PZFeG2cL+U6mmulUppPwpxY/CM0e8/VEUMGaswgT+0nAsG+5qHP3VzcZ8kRWC/qe/lycX+cD/YjYk3pe9wv6WaA87lH3C/nIu7RnsHf79ZxiTCW4xEP5SoJZuL4HM/2InTsYlUcb8Gb9Az0sHvPwbYoIw/X2e/rf1P8skreT+D/HiBQ9Jiv4xNLlqDuTe/O+43bzApdL+bpKF1hah8PzmL8SP9UVQ/3g8IUuibbL8ljgA/p/hsP1VW5HdNk2g/vgaYf6LW7z8ihyX/ooRxv0TouBqoFH2/xn+fFz1ner8f1lYB3/hfPwoGcm6so4w/jmgqb5G7eb+SAj1Zsn9vvy6s0tqrVWg/AxK4ZCeehb+M32V59x9Hv3ecdhmsu+8/Fxd4VR+GgL/uXnydHKkzP3Xy2PaIu3U/2MYALgPThr8X0PPxENFqvylQLALoJFw/HSD7OR+YYb8Z/DypigZ6vyKKJBWcgSk/CFb/fXPqaj9XRGMeUNTvP3dWR8EARm8/krLO4lWHWr+WSrpM/JKCvwBejMsL5VM/oL15ZP8Tej/mfMDFojpYv+gsAAHEslC//CCDx51FSb/WkV8B4uFiPzGxoPAFt28/94Ud2o/D7z/Og7Aa1VRcv6npZ4c7SHw/1CrkLO6aWb/IP1Ktg57tPseaTRcBdUI/GZuc+ny5iT/3Y8ctoMV2Pxdzjbf7RHG/6yHyiJJqdj+LBycsr/cnvzcoeOQ9ou8/x2CKXA=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    10,
                    10
                ],
                "strides": [
                    8,
                    80
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    1.3485814188015628,
                    1.2070138916950197,
                    1.1047326385211302,
                    1.1348749514550374,
                    1.212098687213896,
                    1.4601451884046475,
                    1.1009684217827531,
                    1.2030310685886816,
                    1.27009399159182,
                    1.1422247497307954
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.18702362698502475,
                    0.16969621689638625
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    10,
                    10
                ],
                "values": "eJw9kt1LU3Ecxn8zwsCIKKcxIk+ttwuRTXLVzb6LhrvoohBiUdkcBGkoCEK1FXI2epk2ZEkzI4q1NtvQci+pW7P9jlsjY7miJIaULnSrtiGDkF7wIi/O9/wDD5/n8zwe9RbpyeEscOHcg3R5DEiffkOCeQ2k/7rZoxwF0nhBrXH7KFdjvh2f56itKRzdpJsEcmt3tVXUC6rLhVznYBQyrjfFfwsxIceXSn541pwFIomlV949oYRpKh2eaqEyz2SoxxWjxOrTziYjYJuxc/UXOSCxRoXY4oTNI3J74l6AZu4U2p+edlKBh89J7yuTHVjMA3tieVRj81AyNHCjvHcc2D7Tq0zYB6Vjl/RjpyKULaZnvjr6acYwtii6GqBMl9rcHIhQoRfPgzmOz1UVw/k8tHwzqlb3+IEsnfdWVgWAPC+ziKceUca5ArIdPmBHfsbtmruUc59TSz96KfoRevE8mLO9rq6tVfwDiOpm2zWnDg4plwyJ1Ftgs/LjXxaGgPXOrTYoTFB6OSFx/woBekY/2Evg4XNknwYHiskCkLNbuxSSTsrWvo9XaF2UqRkXbewOAjftWH/Q6AfcCz2jH+yFPJgT12+bT0RyYPEHmV3mIFXp4y+qTY/pH2Xq+5x0jYvfHfdCz4If7MXzYM5sx5XudR1rvLblnvqH7cAeMe5t3Wml+B9hd34v9Ix+sBfyYM59eWWDpLYIIYP26F+dn+IP8T+4O+4leOb9YC/kwZzoGcvv/dN5+A8Hb5cI"
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            10
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            10,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzcwNDY0MTI4cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM3MDQ2NDEyOHEBYS4yAAAAAAAAAL5+vXAvP9A/mSvtjmEK1j+8lHE6vSDZP2T3JHIqqZM/PYFff1Gexb/Wagj8zePgvwueYF+IbL0/67VSKbK1mj/0gvP/PIHbv8wMeXcMedK/4kLJvF0B1b9VrC4g44ezP6ddp98GPdO/NMzPLvOttD+HRCjAZuXNPx7/fNTrLNg/1G4GnQBa1j8z9s/kCkPVv9QGP0Ty/9Y/lcgmmDvpzL9uBO42b262PwuVVcPob9W/qKsQ8+qJnb9Zd0yzqIi0P+b0bX+rytI/6e23/6Mr0z9TRRyy/UKWv1TW2MI3/Ns/svUWZgdSqL+ZRHbE1QLUP5xqnmKYbc8/PbMZXZ7HsD/G9ZJhGrHTv+n6X0V377w//MzjH/HT1j+Nw8NXNVXRP8y/maJxS9W/j/OLlwNclT/3F+tdRWLFP4YzYEurpsa/G9uECeBR0D8BK3Dj/oKhv/Knv7Q6T8i/Y/2m86fEcb8wU+wQWyfRP5zzqfdFkL2/qiVl75yEmz+16xx9eZfTv9/wNCKAjIS/tK27Ygsyyj8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzcwODExNjQ4cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM3MDgxMTY0OHEBYS5kAAAAAAAAADkhDMO7rcG/cZIjsnEIwL+4YelIFqy1v+8I1yMZX7w/CssUwwpNpD/3RqsWA76WP63p1X8osaW/DQ7ehLDowz+h5cqkPn2zPwAaer/UyKU/1qOWuleUrT+VnZxeqQrBv8OuS/wYTIM/hjoTfjtTkj9CD2D0A87JvzcoPoSbkMu/pKGkdsNGj78H44h5v0HIPwbGsIwPV70/ArjGgLvvr7/omY5Lk4W8P1JGTQCMvbw/U5JKQEL/v7++ly79pcO9v4t+urm27sW/ad5qB86Jwb+doQ8foF62v4GH2QqZaYk/9qRpdHDovz+sEedqhoG8P8M0yyEeILm/+5LSFue4w78ULxFmzmG6P9gCw+IxGrS/x4cwDy+2wb8LhJBUb5ysPyw4zguZoVY/gQpRu9Elvj/BQsCowYekv+vy+EG7sMO/ca80+Lgas7+tWXgcBi1Wv5kLZcz45JO/Qc1fjHWpxD89H262TaO2P2LsdWjJor0/ApEAU/q0vb8xpiElq7rHPxQ5DaJFdcE/yxkbdMkFcD/cpfsny3C0P04ntPXNrKE/uxUpfIi9iz+hcriLUP6rP0+almkkCMO/USlBWWUfnz8EApgO7VdzP/ML20pR6ca/U5nMhfvVvT9bvWQYrsy4P5HNWfYHqpo/V+JOdYOJsL9gG8vtvU+6P6BCn/pEUpk/ngpt+7THt7+hdpI8yE27P40U9UjbQLy/FVNnbrF6vr+kdg69vby6vxoLVhTzIq+/LEO2zbWotT9g3pvGeeiwP6jFWxFd+68/4wKV9ZtZur/59R4iw7Oxv0TV38RX/bO/wt+6IYClub8HRyDq+UzAP5ByGr3MYay/2Z3FYpCPyD8IQu25J4HIPxZ7SYAnCau/IdYC0RZMqz9u5AKdxJWzP9hUYxUwvKw/SbN3Z7j0pb9X8EXSYTy5P66jR+qBMY8/5g3SvOE+m7+WAWIbghySP3pbQr9uM7O/Dc7K9wvmpj/bMLzmbZulv+RV/96Pi64/9N9taBCHsb9ME8b1P/+uP9YmNDcXVJ8/tDJsPO9UsD+G0D5HtVDAv5IjsRRLzJc/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzcwMjc2NjA4cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM3MDI3NjYwOHEBYS4CAAAAAAAAAHlcRH6UVrK/mWciyukMvj8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    10,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        2.6244649171811747,
                        1.9852200511453972,
                        2.406988828025278,
                        2.5025255170902874,
                        1.555521442022724,
                        3.3271787737190652,
                        0.7321639459967462,
                        -1.1570464653798178,
                        -0.9400741875672358,
                        0.8516358783644016
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    10
                ],
                "values": [
                    2.6244649171811747,
                    1.9852200511453972,
                    2.406988828025278,
                    2.5025255170902874,
                    1.555521442022724,
                    3.3271787737190652,
                    0.7321639459967462,
                    -1.1570464653798178,
                    -0.9400741875672358,
                    0.8516358783644016
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 5
    }
}