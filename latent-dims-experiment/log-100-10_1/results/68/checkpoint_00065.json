{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        10,
                        10
                    ],
                    "values": "eJwBIAPf/MM01Nw9X+4/TgA01HQrkb82V+H04gFHvxXw8BM90IC/qpYnZQpNkz++0sz2Tr6XP5hBIDaZ3Wi/yyDsgcSLmL86xHR0X+WZv0uFw/U4v0E/YXneRV9hpT+FHejJjhnvPyXP+BEZA58/Y7sKP4BOcL+Bx4NcibZ+v2rZzy/qt3e/MhwAjLBGk789iUUyOvWFP3jeAEIyEbA/IRI6Kd1ZvL8G1sePhYaVP29OgAmkdHe/0pbiK2Wv7T8F2i2Kg31nP+GtgT3QcJE/sYPdF7KmaD/DLsbUyuRcPzqn9eIC4yk/BrW2TOzfkr9o5NxcNOCgvxERwQM/C4y/kRMDcUVgnL9PEsp4oO2Rv5+0CEVBzeo/wcJzCuSXdz9Iwc5yXw2MP8CrOUJajHa/NpJoKkVqiL8KhytR9cd6v+wY0OWf8nS/wrFtQYpblD/TS0CDZWmXv2SUzmIPvYE/xBS4D6VKkz/VLwKGjBXsP4kDsDWuQH+/7ZVj3bQhij+1WE/k322bv2pmXSrHvYa/vyFonRNKiT+G4BJbICdWvwL0VB6fN66/KFzrfgWmqb+3AgPJ8oOjP/BrRUiXxqa/I7d78wCt7D/7C0vFzHabPwUPHAX2m4W/pOoMaGH7hL+IEGk9352xP6bXphZP7ZG/O+fUH9Rom7/wIopgcLkev/nwVmUNtZ6/TjI++/Dyjj94QDPRAfSJP0/qYLLwZOs/1Ze9UHoCmD+gks9poVuev2OLtbgaBJq/LCDRI7uQbz+YX/sl10mvP90jrF4VNrk/kNFq9vbKYb+ZH3+ZlKemv7xW+Tzd5F6/fvqrn0LRqT/+AZiXNqTvP1DqaWx12Lg/qoeBp9PZvr8kFdyTKthxv73Nq7JAkoS/gSqo0XCoor8HFY9k4u2LP8C+d6d/y32/aP//NOvukz8+9nSoj59ZPxkx+XDGgl8/Drjkftvb7T9m+aQIaUmHvwaiCY85JJm/dR3sgtp4gb+6wYOUD4CavwfKYNeK1qq/bPBMJFklbb+3SXV05qWCv4ctpuJAfJ+/iXWHbA09YT/a4XmD/Z+dv5ascHSNEe0/hrOamQ=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    10,
                    10
                ],
                "strides": [
                    8,
                    80
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.11765571446520022,
                    0.08804924333459488,
                    0.21288937662209534,
                    0.25077704458000155,
                    0.1597048181333101,
                    0.05868219441519599,
                    0.09594127241281515,
                    0.05151736378208947,
                    0.24899490089930573,
                    0.18770531271620494
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.07625609333122156,
                    0.010481728141644225
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    10,
                    10
                ],
                "values": "eJxFkt1LU3Ecxr+ZeCGOkl4nXVjdWBdboYVM4buMMKhk2buCSLYMK1pbLcWdtrDXI1nZTtkMdzbdMLM2GUnh7DearWEvZGOQBCljF11k1EWDhUEHPN/TP/DheT7PA29yjapXQYRk+Fcb/xCh4fnceX4Yb7eaSkrHRIQvy/MM004G+by1tLkD4eXY5M13boTvHMsevICwOnA01iky+Kqucz11MeI4Pu1bcbXRh2BaO2E9wWGkYEdy7kwPgu5i+89v1xnoY4HCsiYGOZ9j610CwsqZ1MeKTgaGxWXxVQMM0muWCWkLozzEAXVVdeRtFB2GxJ8rNW4Gl/O3JTM8QosT92wZQagLavau8yBEDBWZ+9cYtO5y6naOSJzeS5AdZNSL8hDHNtrLv1ZN4Kb49sTu6T4m4oZU33E7K+b2B4y33FjcX9A92DGAkcIHH8ZDXua4JwpPZgSm+KFech7iABdWCZWPEcrjDW3mc1Kukqkf6UMIdxfN19bzDHrssz7bDdR39+eaPVJu8kx+5F6Uhzipv5NLKk+NIvi7nO01HGv8rW06lvYibLZmEkEfc9R2Ze2ixKe9yLPsh3opeWQO+E8/soX8CJqt5pZyyZ+eq/JqhxhMDR04Itxhyu60l+yZ/FAvJY/MccRDniLLM4TZ2OHh6pMMlp4tMs0b//+Hdpf3Is/kh3opeYijydFpN0YljqBORqX/0g+V/yzsTnuRZ8UP9VLyLHAilnDe+/QL/AezMHNh"
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            10
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            10,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzcwNjQwNTc2cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM3MDY0MDU3NnEBYS4yAAAAAAAAADJcdwqhTuM/Mza9QEQZ6j9jcZytVuHEPyGGlgaLndM/aUrG0Mrg078wFuEJ1KTpv6u6wVJfotg/2AHfRbv41b/uGlCXWlrgv+56HInRDuS/WAeGy1iMsz/2g2mTcDyRP8Lr1y/LM9S/rH3CKhVbzD/kdjiqenzbP7k8X52cv+k/1umICioH7z/P6Rf4qdHevyMf7DzOn+A/xY5+jS6YvL9GhszG2gXIv4qO16HzD9e/VGBn040PtT+DDjsHb33SP1u+xJB7wcg/QoN4S8FT2z/YLSdsKA6tv+51kuY+uco/NSFhXInXu7/WaM7SVN/UP5NtF0r0pdA/JvBhcsOiwD+bRXuZJgDmvz+EdAA+n/A/DJDIg0Jl4z+XXjGLuKLVP73QR7Ngrru/8tIH8b610T/ACjv/A5/Ev79wr2BLnWM/BTU50nYC3D9d8Sn9JCHNv1tN9QMqb7y/3c1I7XvE27/8P8e189DXPxiSrJWqD9e/NTzJWpdFsr/Z7Gb4yWXev7s3kyfuN8i/72v8a5i43j8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc3NDU2Mzg0cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM3NzQ1NjM4NHEBYS5kAAAAAAAAANNj49aSpKG/Soe1AgjRsr95eiDKWz+XP/ReaF4OBZ6/F7uUfcoKwz9d7RvP7Eu7P1bfIzXQaay/VE6CAFGRkj/YdjIyDvS8P7MwmZVjHLs/ZJix5CWRpr++aryODhzRv/ahRlQQ/64/wzvAlgn9qb/H7QbqpPLMv0pmyA1eR5+/L1CcKeORy79OF1LbmCSZv8Ady9alkNI/qoZP2QE4or+GHGuNbgjJP4MyjmLxJ3u/8jU30PeUXb/Z1sD8dGimvyx7Z2UpLtS/PS9+3i1hoL8Z0Ogzg3uNv76y4T1DMsI/7rSay75tzj9eCBiKWad/v4scBFDXYJw/o6bY17M11L8BCW/7IBLCPxC6Rq/uZ7S/TtWQOnJ5or++9keykEavP4ERfSPv9Yc/dk0O9J3HvT+4TrfT0NenPw6ucj98qaK/tm/zS2rcz79y+SLZ0yG+v9qg29yUEbW/jK/uW0O3tz+o7NY8pePGP50jEzPWzXk/WPK6KfwUzb/0zXCC6nKPP8c+lrNiEIe/hkZ7BK35dT8GFlcrUGy7P5CidoQ8GLE/j8gMYgQHrb9FkopC86N7P9AxkOAyTbO/aKeR92vIfb/ddegn40FrvwOMkp2Uvbq/aoDIXBfGrj84Lewoe86mvxktwDCcMpA/4WU9rJU1wb8uSXPuYFW+P1StoMnqQqo/OMVxTJ1NsD9+IMjL3reSvz1aEqyPqZG/kz3wJOUKqL9g1CYvz8Slvzs0HYh1Nqe/ELnll+C9wT9QMhupvk8zv1qNkW37zZ2/HiS0Ax5roL9XcTkq/IzBv99db0G5cpm/JTnhYqASsL/t7uJC3pbAP8GwHgQF9bK/d+8vtCVaxT+ygdL7dMOhPwhgRFTCxJ2/XsxfzUtmwL83XCe+wue0PzO62PiuL5k/4eawJIx8pD9G2QCnfSeaP+PEz+lDeK6/C+XZ7Zq/ej/3xz4BVpWCvy4TkrsZT76/VmldptVrvj8Ds8X37tnFP6tAjM5Kjpk/TMzE5Ltdxb+t5LjxZnumP97ybgTyyYy/3kKu8coZeT/0J3p4uby0vzB4B69yprs/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzcwNjY1MDI0cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM3MDY2NTAyNHEBYS4CAAAAAAAAAOAe68AXA7U/Yo9y31E3zT8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    10,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        2.720445919944666,
                        2.1102679889583684,
                        6.744651140152516,
                        0.33122604983465925,
                        1.2611283081345976,
                        -0.42410214922398537,
                        2.7459304933678688,
                        -2.682496015626081,
                        -8.87409427702318,
                        -2.0537083145548185
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    10
                ],
                "values": [
                    2.720445919944666,
                    2.1102679889583684,
                    6.744651140152516,
                    0.33122604983465925,
                    1.2611283081345976,
                    -0.42410214922398537,
                    2.7459304933678688,
                    -2.682496015626081,
                    -8.87409427702318,
                    -2.0537083145548185
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 65
    }
}