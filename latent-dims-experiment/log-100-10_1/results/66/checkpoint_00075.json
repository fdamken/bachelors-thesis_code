{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        8,
                        8
                    ],
                    "values": "eJwBAAL//UgiqWJqFOw/nzbZBtnpm79UFUSK6bDAP0LCrcq524+/NWIf9NJcnz9tSk0oUgC1P0WMbZOaHrS/26gPJnA2tT+1HJW7wa2Vv+OHP8R0me0/69pHCRHAsL9UNc87ELaaP7tjdldTwos/TXkKhurvnr9S2kagaXipP+bJ/5CWGaU/8uYEeT8ZlT+iOBTy4GR5v3aQ/j4k4uo/6730MjHZfj/lN/cs3854vzKwsSa66ZQ/SiA1CVmtfL93AHsRAuuKvyZBp7hhCIC/SE3rmLZ4tj8gJG9ATZOrvzmTgvMgN+0/BwlmSrNLUT/uwVlVZ2OcP7xGuf9oo5M/WchBK1Upkj+f6AJEkiOSPzO3S3PvlbQ/6USN84EdwL8xBZEJavOMv33iqnAUbO4/CtNmbjjrqT/jahkVCItzPwUCAzn5kJ0/65X7LZBNiD9PyfrdxwqCv2BU9tk0uZI/ZaBWDKXRkj/Kbwu07+uJP6UyvfgSPOs/44tXanG+dr/SkfRhrkafP52WHVkBuai/cPSxp3zkbj8k621W4rmYP/rU1oPd5Ja/R8HvIKu0kL9mZGGaaISmv8wxJBv7ye0/98adO2Cylr+BYLCW/BQ5PyBVKj89L5w/slZ0W2mitL/B5EtuigSzvw7ZbV/wZ1k/eAUBKsSPhj/TL1rUbBSnPxmT1ftjRe4/zSP/Qw=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "strides": [
                    8,
                    64
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.028585507297682264,
                    0.11315718628223974,
                    0.34821731922002147,
                    0.09642885694891899,
                    0.02852078054364936,
                    0.1557350734227728,
                    0.06533523159990642,
                    0.08763832339557891
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.015771941518993117,
                    0.010117920000091658
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "values": "eJxzCPDs09deas/g4Xz/I0OPPcODpxOcShPtGXocNrJEl+1nmHFAJN524n6GgkjVBUuz9gsYJbz3bllkz1DzY592fR1Cn8gOTs7ENUD+oaz3aROA9MvdSvKt9gwNaY9+7U+3Z4gwitM41ru/IXjp27YpXfsZFpxSm57bhbAPpu+K7Ce+vp32DBdc+Crt+vczTLh6Ii5g0n6GhofnF5ycbM9wSy9XMxVor0VRYm5N+364O2H2wfR9OSK6YPNUewYF9t4J88rsGQpSn/f9T97PsEtluj9z534GB84Ds/Z328P9B3MnzD6YvobN1pktG4DmaO6WWthnz/B7alR9XLM9w4IrgfbmlfBwgfkP7k6YfVB9DdaRk7YybLNn2GBwoEh7vj3DmlLPjLJ59rDwhIcLzH8wd8Lsg+o7atay6IrwDnsGt6a2DUvb9sPjARaesHCB+Q/mTqh9cH1q71g8F6yzBwDWDNnc"
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc2MDE4Mzg0cQJYAwAAAGNwdXEDTZABTnRxBFEugAJdcQBYCgAAADEzNzYwMTgzODRxAWEukAEAAAAAAAB49KOiIdHpv8FtKkRllsE/bkD/Iz1l6b/yuk25KuXev0j9it3cNuK/lmU5Oozh3j/m5COKr4HTv+nN4Z9RncW/KGpQLPnO8L+VmwvzOQbSP1SrOFmgUa4/i9sTu1ARzr8y1XzChOqlP7hOOyxlhuk/Oog8ytnO1T/NXr2he73cvyAEXzgkAZi/94SaPfnhsr8VNRbdXJTfP9CQ8nAum8i/w8jr9SzU3b/xm8mVzR+kvzL/I2OgY8c/eR4K5Bkhxj/cK1ZBHImyv5xOrFl3mua/3NDLO3gwtr+LezXdHULjv5LbjIvxktI/p4gEW9DNqD9ptjTX+LrWvyydZd3TBsi/JX4SJNxM4b/TI+Roy3bAP8wkc3crvsg/jYbDU5bZjz/9acU5NmTcP9D4f8bzYM+/IKOwTuzf5L+UqxanYQKkvxCOeTcuor0/cWONqo/rzr/h4iKRrGikP7xbohibT7K/NpkkdkePtT96oEMveGyzP8RmjfH37sW/K7+GB9H73L/5i0kJR/DjP42wEGG9eLY/HlxtU3dV0L8GUBxK4F6jP/fr72vtCuG/JCq8W67xm7/psA3wxky/v43j0Ij9TMM/jWWJBOm6w79BS1aqwD/Iv5vdvrbGerC/JZJ5t7EGwL+bn4SCv67nv4ZSbrTC0GY/PpazYz0Bwb9e6MJpP3e1P5V20wVbrdi/wcDF+XnZuT9NQccegW29vy/xWPC5294/+YVZTVSp4T8mGpBN+fPPvyszeWtbccc/vbNxiKd72j9aXD7Evg7Tv77XZ/aMN7u/jtMIIlY5zj9/3K/tJBTCv7dkF7tTeae/WhNCLJVL2D8sHa7hWZTkv3hFJVRoWde/ytuZSDmTxj+WekcF8ALQP7nOTEuTLIe/Z9gigRK8i78UT/n2LJbRP0ZIX6ZTZtM/guGUY0qU078+CSKjqmOEv60gVm0pAcs/i2IWEkh967/6w9LBOxC5v4Fb+Rkw0NM/ilZJUVuNlL9Xci5Iku7LP18cSV8hld4/poxufsHr0j/qg8of6rDnPxrRMwhYdc+/Ew52k/g2z78quDxHrDPGP07JBR3mQdI/FIH7TPMq3b/bd/4hR7rZP5uup8zn/Zu/SEJbHPGywD+J5UXGwLPEP7o+W6Liw9M/AYydy8Oy4b8abGLPxyrXvz791jpM+cw/4LH1IDY1pr+TdiTfEFTavwTQzw0Sb/a/2NOqK6n/0r8Tbqfp/Ue0v6i7epAJGbS/Qgv6+j/E2D+w9+Me9D3LPx94oR9SscO/clrqF45jtT+qB+oBZZ21v3OUL0YAGra/LeiHk3jGpr+TMkMvU23fv02fEt+QTeC/sYryhk4Jyj+YBEcTRW60Pw2kWVovBc+/NzF34V6Nq79dZ+4Bt+zwvz74BydXa80/9GCxRzEV0b8B8emUoCPTPykjFt97uNy/WpAZn7dVxL8CMTtJEdzfP95joy+BytY/8PPCgG8brr9IA2LXmBjpP8yRipItGbm/M0LfB7KJvb+DLU2He4TNv4Qqkyxs2sw/CKMm3Yd4s79X5oRrt67hvzLfRrZ3j9I/V5R0Lo+Twz/oOT0sTv3RP4NOXJpvTea/al9/ZSg3zL90tC0EwMXcvzZGufuU+bC/kTugyXmNoz9k9AFD9cfGvy8vHz1/W9K/Z6a9oauF2D8NmUdGsCPCP2DEDYycmOI/LLJ667sSwT8J7xn4NhJxPzLTM4Jfy+m/mEA25ajYxj+hBr3jC3eUP6tu/nN129m/zguAxj6bcL8HIrgKCfOSP0mrHOjn9tY/YS/yOG+WwD9+PUnIL065P0NlRj3Kf92/WORnDHauVT+CFye3GzXNPyRnwg00Z9g/Sd9PB/Ohwb/iYFUqPjTAP3ig+jFatsK/XwQHm6d95r/lsCgmEdLNv5rPJQIW6dC/wtBPD7Qizz88D87CFsHgPyAUFVyABnY/JOneL55X0b/VTZUMr3DOP6mXqamNkqQ/oABwLLUczr+eiKs1D2nNPyGs2DDd0tC/xWyQocTq4z9BizHJiTupP6XtBWuGe8a/W5fprRCxur9SIKG2Yn/kvwSNnGKaf9M/yrG1YOL4vT/ItarnM3fIv87g3FQ/7O2/0s4hSY5Y4T+QT361ZNeiv/mp9PNiT+S/8UbGfuv717+xFZCGuU/mP+7blFu34HE/TOxkTaOcxj/B0QiB/57dv5GxwMhoGuM/W5p1TJa40D/5qQCO+P3Ev7OXush1FMa/rkpTD9XayL9SMzTo1HzIv0gewHlJ0tm//yKZ/Km7vb8flGLI/ibNv0RSPJ3BzbW/sxI+K9Gl1D+xasFWbWKgP3+Oix3PrsE/PI47DnFEkD8FfORDtBjVv8vEgN7iley/ZNeLfxOC0z+mt1dl9cauv6Hlt/WsD+e/KlrrBdfo1b+htWfw1xC+P12Z0hzSkcY/WqKpw2692b/qWclRduisv+cYaF5lC9A/VvtcDYB21j9IxRSr6cjOvwndLdVT/eo/9JJCUxR1xD8nSSopvGnYP82/ASjLV86/rO8k+5eby79j4Fq8pGK1v2HydQGfttI/SffSsmCUwT9Z4A1TSt7Rv4I9oGBwZ5e/gDnIPJdotz+VdddXmvnMv/ggwh1mer4/GzATODANzb9bG2sKVy/dP/7AvapvStc/QrRgqv6Pzj80QxAO8camPz9UYatrb8U/CHTsTFAOw78/KOiz2NXhv26wlv3/zeC/WKiiTlVW3L82lI0zXaDJv8jLDtTGbOa/UBI+cpI28z/AaPy8fl/Mv0qWIH2tr8c/+a3mU4Bhvb/2TjNOv7rLP+iPgwtz5tW/x2Ss24AB2b/teAGC45joP2tmJCCH/eG/hLT72Qpd0b8APDpfLgXJvze3xV9Tg9y/QpwzfnTyw7/EozUN9DPKv9EgknuAfc8/eKuGe2jN8z/GQjFS3Ua2P8+NB8I6Wsy/8tVKquUstD8pGwcY+dnBP8T+RaoJP9c/GF5DSHgm2b8Ruuy4ZY67P+nJuEn3IKs/1XwCUA2PyL923YpA4JDIv4iVm2TbGs2/EngEdgog5r897OUTuibLP3s5RT/taKI/0xykEyb0x78NNSzeWpfHP/3m0XNUhr+/waffgMGNyj/MpzUCEQzEP38qAnUVBb+/dFYr1ro00z/H9f9Q7zbZv9aFH7BoT8e/3f4he91qxr9W8jYTYWlcvx1yeZXaGLY/gQNctZWpzz+tj+kPQNHaP8wkdtcL5LO/qLCVLEtP3r8M2A9m13qiv8dr/by2yuO//+nDEk3H6T9WaBpGTkjEP4owfjSzDbk/DLJoFp0K3L932MszrQDhP2bgoFJsEZQ/uQ9IPhlMub/C9YTn4WCiv/Nr8jAtXNi/sgQIibfm7L/m+QARi4OnP8fiIk9P8s6/7xPM6tfFkb+8RXdimIW6P1Cp9OcaebC/EKSQohrfwL+qtM2RP+XNP30MKLedcdm/cjFyqr4Bzr9VpDS2bu/Rv5ak2TT0ery//P1ry6Nl6L+PFd1+z/q+vz+G6V0S4Oi/5jrEybwswj8CmwKz1OjCv5kgZ8n1l8G/7orQJx344L8qBQV17vT1P4g6+P70qrs/gvmyNTp6vL8B8I6UzwnTP/TYVnx2Taa/DXCSVbPX278asP5fom2ivyX/09+7o8G/xJHbnyrW0z/dkBCfXLPIvygS7fsi9tq/AEfhwtHe378F1SWe5WTgv9QooU7Mh7q/dyGeCllNw789td00MXW6P04bou/e4aU/zcCpFh4crz/9FHN7a0ixv/4QiaTNYeq/p9sxTBC5vT8lulbLDCTQv4WOj7zHjXg/OTC9KX4A07/jTVEhk8eDP5mvUwcgBOU//jApAeWO0D974kho4eXcP8B0DKJ05b0/Td0aWmqVej/LDdKGacCPv0Xs+XPpAdW/0hXpCL+60T+m0VbqoKbWv/4uRvw0jNe/88FEpR+W2D8fgunM85fPP4aiK7Ux5nS/Z7J0hSLJ4r8liN+cEz22v8xs4ahkosU/vjb2rMJsy79mIHCY7PbTvyxo1O2/392/hPgMZpr3z7+TmL0kEtO5v2wrVwrhqLi/rwLLFgOe6r8yDlM9yg7QP1LSAbLR/cK/tQwpNXsAxz9aO2Rmd0TNv8wcOzXrvcW/fMvU2VYxjb8uw4uZYEPUv0WkQ0GcsuG/mjlJfq68wr+TnYD/IoW9P4aHucShgaG//CZW43Xx7D+dE7BLgpzvv9sXxc1meLU/vHZh24v2ur/UohY+29aTP/wlq3Iwb9G/qmkV/jKy2T+Z/SbdoeHRPw=="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            8
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            8,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc2OTExMzI4cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM3NjkxMTMyOHEBYS4yAAAAAAAAAIyEDZpoJ88/u4RutIdK1j9Vllb0ihLUvzwJGH4v0rG/uq/R3WPE4D86SA5TcF/Xv1vZ0wCNDru/hJYgdQM15L+oUHLpBi3XP8JVh/vJKec/IYHLdi+25j/cgiTX14bNPwxukluC5NC/1zLRFtWWer9kuYkM3cnav1cDYLhrzdq/ShkvbtVg27+JHNbY2oXmv1U1wyj+ktO/sVg6sYNczT8EUq9jJz/Wvwmdz7qeReG/e1HW5wl05T94/LYoklmRv8OlxHjXVdo/DOgrGw9C1z9T7TZ22CfNvw3Stm+ky+e/wqW5r/mooD/B6GFVrtHQP6s+mAFQ3K0/zHuayA6xzL8GHzhkaWHXP7uJYoyRsb6/HZI5TB97zb+6ky4S4hLjv5VHnYwLXrG/tzA/WIOF0D+T+hCMXrHOP4/WYshoeNG/W3pPCdc64j+ezvS7wjHTPx/+vBbzXeQ/je+PjvjR7b/+peT7TP+8P+dxlVP/j+A/yJHGDU3Y4D9DxXfNNTLUv/tVbd3its2/MMZxm0k71b8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzgyMjkxNDg4cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM4MjI5MTQ4OHEBYS5kAAAAAAAAALsvYgUX2qG/HQPMS/NtyT+AOZBm0v9+P8t5G0/wIcm/SxwAd7piZD8R1yPvrFelP2rp7hpL/L6/rmN4Xx+wlj+4ZjfcprrGv0kQSJHFZFE/WRSVajzivL+iFMTWPoLCv9f/hlyGv4A/B+cs5Bkjkj+t6K7iIcd2v3pTSZXotcU/tElTeROZzb+mxKbxtj2tP+2aQzzns9A/C/qIwUw1eD9id1vvGvV3v4DYJ4rHcLs/ne0HjK/Lob//945e4ojLv1JgzeT5PMY/L6mwVl0oyT/BMfVVDPnEv8S849agrb0/66ldprKKoD/o/oR8RznEv/QHDjR8Mp4/BdK4fIuwwD8R9eb1I1LTPzDU9MHVeNW/D8ebJgVMwb9eK3qPAtCsPzZZJowgPJs/+i3lOWbai79SrC9mX8LDP3XiLn1MwYa/q+N+3Yuqk7/vpD+OJD+5v4EkshqydaE/9xTAo1XmyD/LFtBvEoRuv3SX2XqiJYg/fnobI0U5xL8h/IkFjKywP1V7dfklcrU/jRksDNrnvr8auVtkQpusP5W8arReQ7w/RtEkqc5hl79OwuLiQvGyP+8EgXBUWai/12VIhW2grr/x/j7yv66Vv+aDrad56ZK/RLNwa9pMtD827Dvo4YFBv6S1MgfCsqe/ZPCdd1Bykb+0WikgboOZP4ciLwowZJ2/jJ5ODto3YL/DisL7YDW5P5BM93VR8qA//yPHQHj1pr8PMiC1jmm1P46oSa8tQCs/fho7XXJQpD/B5hNlxOOzv/d/kE3Y7pK/vvT9bqcUrT+kBFwN2WWgP9opm4w3srg/RvDKt8v5yD/8bHsKMN+RP17p0O4Zirg/0Lfi+bBvpj9L8fc1rfp5P/+dHWOuWrC/NXTvq0TSt7+WWak8q/u0v8xuMdX4WZ4/DJ7u9riZU7+WdAIyZYC1vyPlvOe84IQ/CAUKBDgDuT9yVP1LJDuXP4PqZhgntzs/hZynD7PPpL/1aTly4tiov29cY6jt4Mw/vWrCxU1NwD8EEGDbtt3Fv5L6aQmez6C/otx5cGiJpb+6yyfVclizP40LSEX5eKE/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc2OTY4OTI4cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM3Njk2ODkyOHEBYS4CAAAAAAAAADMKcrqGmsE/7T04eemSqL8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    8,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -1.9329025812919058,
                        5.2999393623638476,
                        -7.749043379112579,
                        3.8415187373112185,
                        10.785461555759689,
                        3.942171483109444,
                        -0.34792414806263494,
                        3.7977291754731044
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8
                ],
                "values": [
                    -1.9329025812919058,
                    5.2999393623638476,
                    -7.749043379112579,
                    3.8415187373112185,
                    10.785461555759689,
                    3.942171483109444,
                    -0.34792414806263494,
                    3.7977291754731044
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 75
    }
}