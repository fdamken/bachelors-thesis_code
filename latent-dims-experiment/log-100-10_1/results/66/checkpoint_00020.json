{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        8,
                        8
                    ],
                    "values": "eJwBAAL//beIW+qob+4/tFPphDw/pr8f7diP3DqnP88Ht3c+Hkw/uLcYadbarj86BbtnK3uHv7xWuMWfv3G/F04lFhCiqj/pk1OBFoqIv6p8oJ+VP+8/iHi2PRXHoL/7aoixSGSFv4iLDD8RR5G/Jv/kHzb0kz/14EdtYT6Ev+8lr3PRqoq/jMTXNUaCiD8wxE/FAXiUv9WxB9xSN+8/pE6OoYb0YT/uZcIWttNpv5/WWonAgnC/q9+lFl6qeL9W8R9kpCp8P2cpERgw25s/+04IdajzoL/2xOv5bnaUP8miO47y5+4/QUw83HHmmD+pPoUQpEaLv/hrlokMy5C/EicRNEitez+8PEhHX6CAPzlrcT9PanA/iDLEJFwcsL+zYXd5yeuXvzSLLzAoa+4/i5Ib2GIjq7/oquGYW9urPxqJx69V+6A/sl+QvPdllD+OvioEavWDvxUsRSIKh3o/2wfl9t/wjL8JMjxJgeR5P2ye9dqY1O4/hXEW26Qom797azSQrfl/PzYWDqdcF4u/5lg6Lt88hj+MyR6wzUuHvyiBGxCwg4c/1uzFqdVukb8dOtTnLU1ZP+CmVXigze4/K0wfEp5Fc78VLsXXZfOJv69m5G8K1Zc/xa+mJ+nOir8BmUEHK3GBv+Af0tNZn5W/O7dDmR+YZ78uq7jfE+ijP2SE2BpzLu8/dpQCjQ=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "strides": [
                    8,
                    64
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.22946203417909064,
                    0.5188175256059945,
                    1.1010248729625107,
                    0.5553391252594551,
                    0.2761116284142657,
                    0.581804418243129,
                    0.6545942163727609,
                    0.5549930033739511
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.019658010982631823,
                    0.009071024097243424
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "values": "eJzLX1C4wXnhLfsEZ0WGZ16L7S/86qz7kTLd3jzrS8YZq5P7O2Ti7984t2y/8eUjZdt4N+z3O3pZr6l4g/25X9/U9n0+ANfXMMd3Uu3E2/YMp1ns/GM22jcY8B6WZDpuz7Be9xXDiT32DAb60/I/Je5vcFdeOr9hon3D8TN7BKJPwe2D6TtgUBxf+v6KfUNbwBwWqy37GaQ8nBr2bNl/4FWUh9fGTfYHasyd+w4vs2eY8X/B654J+2HuhNkH0xcwz6CouOWKPUOBuO9n9Sx7hgMO974uLLI32LOzaIvtfnsGp47ClY6N9jD/wd0JtQ+m78CqhlXBh2/aO+TGr9Nu3W1/4OL9Z9st1u5v8FY+5Txliz0sXGD+g7kTZh9MX0Wl7NnItKv2R6r/bj9ldMDeQSOv+7rnXntYeMLCBeY/mDth9sH0+fv3+mplPbRveHR/opbG1v2weICFJyxcYP6DuRNmH0yfQTbTJYdVV+wBgbT8jA=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            8
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            8,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzY3MTMyMDAwcQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM2NzEzMjAwMHEBYS4yAAAAAAAAABO/ywnrTsm/pZG15Uf9pL8shEseoFWCv4wH1WzB1aE/pdpj2VCm0z+H1j6blwTav6cMcMIrIdG/t6nW1KCQ2r87ixsKqSfGP+Xhmo8qB9k/hZI6+mQa0T+zW1eObrbaP4hmup7RlcI/e3KsHUe40b9gpvEkgZvQv8pUzcPmyMm/Mjvaof++iz+JnsPbq9vgvwIzMTBVmte/SgIvpM5ryz8n1OrJddHJv8JEj5MV1Na/g2HoKBWV3z8w4AiUYc2sP/BUPslfaMI/4MTv28zJyr+LOdf7xSOfv5IICgcxI+O/QVNGDwlBjT/sweePgsbDP8hvv7qGjNI/oeF+qUrBvL/KUUmgdCCYP1D2mbR1Iq2/pynw0iB92L/qjtFhTAvSv/iw6Dujkta/CnP7maAajL+QosJI4MDDv94QTfQRg7Y/iywDTBStyz/5/UczyfrFv4gb7wMS6cI/ZHEW12yM2b9o2MchBjLAPwC3SjoiJs0/B1CBpwAGlj81yXwnew+XP/Hjp+asxFU/i76LU1FFu78="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzgzOTUwMTc2cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM4Mzk1MDE3NnEBYS5kAAAAAAAAAAuf55y9GKa/Lx3Bh9vxwj/G9Kky10/MP5f85XVL8r2/UTb/C8B2oL/jxpKIxymYP7fhUXGyycC/ymAgH45stz817KiOPfrHv8vNw5eLiKi/gxtQRiWvq78LYtnbzbS5vzhoG6LNj8Y/ZiuB4etfs7/1dHv92eSTP7BaL4HRj8Q/bfdV6xOIxL99SQWNmajIPwVZ4Nk3A8k/N7AC+tPevD+k/f+bGV23P0Vgux3YLLQ/JZidOhijw7/80BrfX+fFv0JpCe/1D8I/f7B6hoYrwD83XYda3DHCv0wYYZ5lR7I/PTauVfW7az9ILzH4PqXFv+mMjY333be/C0bt+bjkxj/IJ4diGkPNPw5jvV6MGNC/6Wf+KMTqsb+vRJu5hhjAPwJPRfKmvIu/JmLNYVDQq79t+w/Zmk+1P9luoCrf86Y/ubFWeEGDnL/FL1xyA8ivv9u1XhFy0lw/XOZNVjMKtj9CJP+fzrmxP2IF1TSJwsE/GFHycv8itb/rgcKfPgqtPxx/H5Yg0KQ/kOWOXw6mqL9D7OP+vKOiP7gIPnI29rI/a2Nr5wd8pj/Og6+5I6ORP0jxEAE74pu/f1/LOMzAxL+kOgSdtaiLv27DgQv0r3s/FmsmS3fNqz88jXsr2z2lv8mVCnt0YKC/1b0Sk3v8YL84T41iIXt5P/P0NeNRYnc/oLdi2e0EsD+EoiDF1gu5P4IZoR4qHqo/BEEvcuZKvr+VttmwuvK5P2P1g6h1B6q//cNl6RNuuz/HxTjKWr28v6vLNEiReGK/Qm+zFlxsmj+m0eIS9Na9P+La01Dkx60/ZQLGewN+rD9+/JKASXm3P9GSAh1yWZ4/Cd1OEe3qvz/X3/Lrow7LPwkGAsxq7pC/b/sU39DVvL+vFh6pknCev3IOurqi6rU/Pnr+0TZmqT+Cg8xg77C5v0CsFbjGK7K/x/77RlV3tD/vb3CHhtmrv/4J+eudF3G/M6OnsNYZkD/UjjneGTONv2psp5j6eyW/8SNYxXL9uz/z2C1ewRy2v9F5KTLWDX6/okhoVsiBnb8ePNMJmRWlP/MY6xTO3bI/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzgzOTExNjQ4cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM4MzkxMTY0OHEBYS4CAAAAAAAAAIKW+26Zb7A/MScyYwJPsb8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    8,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -0.06298454408989504,
                        4.379677245266082,
                        -4.573054041264891,
                        2.124057093795361,
                        5.102830928655005,
                        1.0035925723297576,
                        -0.7427067767698873,
                        2.6003328181941963
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8
                ],
                "values": [
                    -0.06298454408989504,
                    4.379677245266082,
                    -4.573054041264891,
                    2.124057093795361,
                    5.102830928655005,
                    1.0035925723297576,
                    -0.7427067767698873,
                    2.6003328181941963
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 20
    }
}