{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        8,
                        8
                    ],
                    "values": "eJwBAAL//dya8cZz+Ow/yZVa61NvoL8avCubm0i2P+UkXvtrZ6i/zg+NpUEirz9nNh/2KJ4gv/R91Nhmx6y/T+I/7hbXsj/hou5hhdWVv8fLkEnPCfA/kwkiHk1jZj+ApNfLRRiQP9l1LUj+Q5O/gnH3apvzd7+hKh/oo9GeP4AhfbeBI5W/KtFnZRLojj/kP4Lym0uCvz8UGR+rUe0/fzITjx+skT82LNFpFHiHv4/x3tMTWme/eOQ9aXu0kb+pk2+rQBkQP3Mevop+5XY/6NAxpUJ2gj+A6rB7kv6SP9NRhU2SpO4/vOU0izugkD+GOjDKk7d5P679ieczz2c//pWvdIYWdT+WF9oJfcORP/s1knpuvKA/veowJdJOw78rTEFV47xnv4uG8ctYeu4/gxzgUKG4k79iDSyC34OhPyHmNlNYjaw/qqBbeZhFij+Xwz8y2DYlv8aZwipA4qa/Ym0l55KSXr+cj+HrdyGTP/1DQ/zWLu4/jiS0r381m78GGbMu+KWCP835vMEUmZa/vpL5Tckxcj9UPhYBUgN4PySneCz0M6Q/EzAljXeek78dhY/nKyp2v72zGwgRiO4/W4NzgZDkg782gwcM47txv9VIkNIIOH0/6BNDcizgcb99J2pyXk+Kv2bloEYzh3a/Haly2KaElb+JRtuCnDOsPxWNBzHuTu4/5bsBcQ=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "strides": [
                    8,
                    64
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.06944735134106804,
                    0.27109945748699593,
                    0.8675746584706873,
                    0.3829128246196448,
                    0.12321706233257658,
                    0.2689480002419662,
                    0.2598437454052472,
                    0.2448539345298382
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.10837805643054162,
                    0.005948184390832011
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "values": "eJyrSF4d1Vmyz56h28jIwGOpPUMIn/4WpzJ7hsKipVf+te1nUDP+nWO/fj9DS+f9fXn99ro3b+z+dX2bPcPVeX1KlRsQ+ow1HyxvOWTPsEND5cXeKfYMS465iOxdac8wge/AAp6J9gwdTv4169r373Cyfr527qT9DLveVoY5bkTYB9OXb8D9p+2UPUPaoesc+5fvZxD5vvKE9+L9DP9Ciivr19tvsSpWMDNebM9w68SL4h9L98PdCbMPpu/ERrPyvZvtGT583Cb3oMSe4Y3q6aKuyfsZdiS2umsH2DOEvQzkL59jD/cfzJ0w+2D6vpXb1noD3TNlazXzuYX2CjrfW6bUNe1n4Hh76u+XWfBwgfkP5k64fVB9DOdbr2+1O2H/K/Nh+P0L2+0Zlv9dfChnIzw8YeEC9x/UnTD7YPpWOU6e9lXisv0f8TvbKtwX7IfHAyw8YeEC8x/MnVD7YPocVttteS903B4AQUv2YA=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            8
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            8,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg3MzcwNDY0cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4NzM3MDQ2NHEBYS4yAAAAAAAAAOOZFoFkFsc/0/1GEEF9yD9Sk/EdhZ3Gv0FzNVgFdcg/1pZwwvTY2D8IQnHQdPLWv0Ee8zdsMMS/FCy/99ji3r9G8Q3a8LrLP9zwVlaDOOQ/+rFyA0fn3z8Wa4j7TKMwv6vXvJe9c7W/8adx6ydVur+4k+XUZqrQvwfvECIhwdC/OZ5ZFQ2j1b8wml2ghA7lvyBO75LsZdy/ozgTOA0nxD8wLbZHgszMv8cJvbTgM92/Qe/23CCr4z+ZPd7hy5WRPyqFB19ypM8/6Al7fhE2wj/7jfAb9eOJvzeWxJ/mzuO/IfoKiLlftT8zf8JiLDPOP696WezRWNA/BgKDfaQAxb8YEvoEzzjcP0EX6fBxcaG/hIKaBVUt2r+2hyyxEM7ev1sXy8T1o86/4LDzhLYptD+aFO1GUTCbv0v21e1bIbG/YZ2QKgYu3T/NLW62zq+ZP+AVvjndCNw/ZNa7wVMw4r97OdNJnym5PyqHfEIHG9c/f9qr7aBK1j/wHX2UP8uwvyHWIpR7VLe/4TG2i0RI178="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc2MDIxNDcycQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM3NjAyMTQ3MnEBYS5kAAAAAAAAADusOeJgvYM/knZNBSPAxD+Z2Lp1czqyPyXvgE4AOMK/dlK7SwGegb+DBxsNFTWvP0jin3O35sa/ICpPsSx6sj/P7AiWa3HDv/vLbpE2z4i/eS/u+gF3xr8TAEdpKHO9v5V4krD8gqc/vuQEcCPdqL/OU7nRK62zPx4eBkI+wsM/D/1eVNIoxr/qCAIKjDnOP/i8I81+Msk/43Y+cnmqpD+PtrmhXaGfPxmnKjotNsQ/yewxFveVxb8aZpylq0HFvxbiKV5gUsE/liFtN+YKwj/2uH812zHAv3SL5RivYbE/IYjKiZ0Xpr9Cp7uy8zDDvxHnXNtf+6q/4410MX35xj+R1uO7ejPPP1z3ejc81NG/B0x2giXxtb8hWLJEgam5P93i7cJD8Ys/kPRcLFeBf78ro6ou86q4P9TEsewycKo/od2E+dcTqL/VbQk4BvOzv0yg6FsW0YM/p6zA4If1kz8WYpl5YjSxP2TAH73Z/rs/DhBSvX/Rjb8n8b0PLbuzPykV+ptQb6s/QjIOCgstsL/aTO9fWpVIP5fnVDHpwbE/N4DFBeabkL88E8IOE6qzP920/Gq83nq/aVKAdN4dvb+AFSljkT2Ev8UzU3HWaYY/taQZr6DBuj8NmHXubBGyvyDzBddDUb6/2vJkWC+Fk7+4uFxoZ7aKPxTfN7RUSKw/pkDjsUBoqD994Fo6Cne1P8m58TfbKKI/uVSUffvDtr9wOE+HIGG+P7NbBxGaEI+/XViKw6netD8DhsKyNnK1v7LedSq3d5u/XZ0AK6I7lj8gWcWKvl61PxJRi5QzRrM/FpDllphVoj87axgeacu6P4G7B3yMJ6U/QRBxgLYStD8SIngDVmHNPy/XmkPuKKi/mm5esbtpuL+Q0/RxNMeuv7PcD2gMBKM/gJTmmR4clD/OUOI7Py+yvyQO5CkmDrK/7wt2toGkuD83340O8ZKLPxfzufTpA4a/iMOseFxFob+NXh9wIp6Cv4jV3yP0/m4/aNioNKm7uT9Zz7dCOXPFv0k0lH3EF2w/0h+JAgM1kj/z0Obi6jV+v8KW6MX43Kw/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzgzNzQ2OTc2cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM4Mzc0Njk3NnEBYS4CAAAAAAAAAN4m4CUZUbQ/J3EKbtDDqb8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    8,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -0.9634741697809629,
                        5.630401749342619,
                        -6.445514595340471,
                        3.5547067244216572,
                        8.479090063294619,
                        3.3046585672257427,
                        -0.036010236406403974,
                        3.9085059797112334
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8
                ],
                "values": [
                    -0.9634741697809629,
                    5.630401749342619,
                    -6.445514595340471,
                    3.5547067244216572,
                    8.479090063294619,
                    3.3046585672257427,
                    -0.036010236406403974,
                    3.9085059797112334
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 40
    }
}