{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        8,
                        8
                    ],
                    "values": "eJwBAAL//Sxs9OviR+w/E0S9xh/vm7+VkKBj2RHBPxYEO22jQZO/OtgQgKQ3nT/Pieja37KyP0mok0b2b7G/4l0w2tJ9tz9/UtFVR3iYv7VSfqyyk+0/M9a+kK5jp786O0u7O/KSP13c6yn1NI4/N9TIyMLNm7+TT0rnwvCoP5Qs+Yh0g6A/J5F+wxELkD+6NeXYbhhzvy5TnCciTes/9ELw2ZBNdz+vUp2d5m1+v+chfxAr8o4/+f3whlyQbr9k5oTbCLmIv/lj4mAFAnm/2AkGFZjbtT+3xvvL9Vutv8QicvV6h+0/goQTIWUKEb/e9p7qjqmWP2/ZwELEYJE/aJ3NcKTHmD8XisIlm6+HP2ceDgxcl7s/YwZYEz66wr+1B8ycJeCWvz/Frzcjh+4/nBt3S6i3pz+Sg9UPLUyHP6HPpN8+R6Y/fEQx17VAjT+iFJ1HxChnv42laaiwuI8/ZltO4WLnkT8uaVuHuxmOPyTIRo5x/Os/WPQ3rtCRjr8FNTn6TwWYP/A8u0paqqW/CDV8GZFahD/j6EiOPgypP3poDR/MDX2/O6RlFLrTl79QDVGR0rqlv6nebkMiB+4/HITSK1scmr/BW4wfeqsrv2QBmwvxmoo/qszwKlNCsr/dqoow+y6vv/7MMQs69GK/PWyx/D42cb/aofkoWyenP77ebjL5g+4/yLwETw=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "strides": [
                    8,
                    64
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.03513296795626082,
                    0.12394743426207451,
                    0.4292865698305263,
                    0.10851575612193295,
                    0.03107949335710787,
                    0.16348981117374647,
                    0.06751893815582921,
                    0.09653038470450026
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.008274635763573315,
                    0.02546465448611707
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "values": "eJxjOHd0TlHAcnuGE4q1rvd67RkYGBrjn0raM3h4SjDGle5naGgQr8yYvJ+hYs5Gb5Ok/Q5VoXlv+ZYA5TUje5a1I/Q5XLGzk1lvz9BwpElXZCLQHMXOe587gXRnla5jrj2DQEOGmFzv/oZpBz9vmtSzn2GFie697AkI+2D69BKsWUJ32zN8OHp2ks7E/QwPVj5T152yn+FHh+xzs6n2DG6d23I1S+0ZDsREmd3v3g93J8w+mL4rD72beGYA1cnf+1lRBRTfo171Mnd/w7uPj72qOoD++tL77kqPPdx/MHfC7IPri/Sd3rsJqM6msiYM6N4b33KjjFqB/FUvvpU1wMMF5j+4O6H2wfWlRSaFrt1uf8B8rlwjywJ7hu+rb+x5tNAeFp7wcIH6D+5OqH0wfR8er+g8sH+nPUPvxguWzW374fEAC09YuMD9B3Un1D6Yvob3VttEBTbZAwCqBuNb"
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            8
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            8,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc2ODczNzYwcQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM3Njg3Mzc2MHEBYS4yAAAAAAAAAGpT/17Hr88/uMwfkyJg0j+/4HTXE+zQv3zbP9aHEbC/XhI+k5rH3z+7UBhCw9bWv72iTgQlNbu/O+SSCfU45L8opxPSM5vVP7sYwmtbt+Y/hc0G09gr5j9oLM5HaArMP3TK4qNwDtC/IUM4aUZ0pD+ADAE9b8rbvzM8uNZVetq/SMf6zfn72r9NsM/AuIjlv/KHRYdd3Na/99VMkVUtyz/L4PVn1YDWv2qB4xpNNuG/Qpl316965j+qJ34YKymhv/HTs6pOm9k/sa+E/ro+1j9TRdj1w4bGvx8jEpUS++e/Lcat36OhqD8ZihKuYMbPP82SbUlHkrk/4cuzLE2Mz7/kLwCj5T7XP9khcJL/Hre/bLR29ALb0b+CDpZuXhrjv5IRgaM7Zbq/DAObr0UM0T/tNEcf2N7MPygNaCC0F86/4wlmlEmq4j8+anOIl4PSP+h5I6qi4+M/B6qI/6TA7L9iqgS+7qqwPyikEaersOA/J+iGX//v4D+X7KuBjQXUv8z9C2QoUcy/ekwBNcgp1r8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc1NjM2MDY0cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM3NTYzNjA2NHEBYS5kAAAAAAAAAHNZX/OytaW/AoBbEuk4yT8u4bEDiB2NPwXAVa9klsi/hacimn0Rcj9xtaWoOTW7P8S+4MmmP8C/ud3Ea5N7mj9LFv0EDMPFv9bZ2JUGEHI/OQtGFwxau78JC1Bl1orDv+tkmCdEDJI/pniK4H4Anz82gLDgmQiKv/vA5suRGMU/iGjR8ncOzb/+BVXhaMaYP5k3VKDSoc8/a8fqQy74lr/CX4af0p6Iv3I/3znqEbw/H+i1IY/qn7+I8zcgmAPLv9NhJWYm1sQ/EjBX1HCeyD+y91rVHEvEvwxb/59T/Lk/Od0A3IUifL8pqnje9m3Ev9QRE2Z60p4/xgsipwryvj9zQrKD4AvTP+AKsTR0M9W/AF1KBQYwwb8dfKVm4H+0Pz+6FdwQi6I/t5PP6AT3lb/W4FCRvjrDP9OQ1aNXN3W/6c5jMpE/kb8SfMeCVUmpvx9LXQrpWJo/88pZthUcyD9uPlXFVmCUP+0wGgJF254/Dd+BvPi9w7/kf/yAdky8P0GF3IHd7LI/dzDfVavPvb+PCoL3182ePx7fl4TilLs/u2A09Wfflb/JOu6+PAW0P4tyUaIDP6C/viA0dK0gpr9DK9v8E7OAvxqWC35hNJq/3TRpTmmiuD88GSRRLkVmv6T3i77woZy/sedXgnoZk79f1LBwu9WFv666pzLK5aa/oTWunA6Qpz8dQZQi+ia6PwIx40PcFKM/iI1iqQfjor+xeMTXX5e7P8lI/diBOJI/z2vWoGzBnj9/kx9shZ2Zv7p8dBuPr3k/CkivrH/vrj8SmJKy3tSqP7nyxJOerLc/I+BvX2wExj+04Ed1H1KpPxP9P5PfTKs/V8SEH8qOqD9RFZRdyEOpP5yPNxxI1rG/d1ZPVmXjuL89G5jZ2vCzv2KQorL7kaw/QkoUKiHbeD9cI0Wara66v/20RBXIq5K/lAVjyYkBuD9I2uiS2eV5vwSOcu8pm3c/hynwDCwTsL/8vqxHF+ifv+0cOaqafsk/mU8CwKs6wD8lTKYQIg3Iv234zCBjAKC/l0n1BofzjL/wyf2MSce2Pzla5SVipaM/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzgyMTc4NjU2cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM4MjE3ODY1NnEBYS4CAAAAAAAAAEQ2aropD8E/TlgTEt6sqr8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    8,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -1.8890753785074046,
                        5.249640303061846,
                        -7.720802062250243,
                        3.769822305460175,
                        10.689712571842321,
                        4.029351993498595,
                        -0.36740413565367575,
                        3.9270701251692746
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8
                ],
                "values": [
                    -1.8890753785074046,
                    5.249640303061846,
                    -7.720802062250243,
                    3.769822305460175,
                    10.689712571842321,
                    4.029351993498595,
                    -0.36740413565367575,
                    3.9270701251692746
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 70
    }
}