{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        8,
                        8
                    ],
                    "values": "eJwBAAL//beSDiUxWO0/j82P6YIlor9MxtbXtLq3Py2AS90ojaW/WTK8i6Eosz+Bx3MkYt9ivxFC9L4d+aa/JyKnWeNftD98Hs/MnuCWv2wTqSLfLPA/GdQ7T4jNUD9thRexOAiSP6srCtCGMZW/4yHICxZngz/sblZcTl+ZPx9rwAuH9ZG/+RkWVi69ij/YXaVtb1SBv4G5fsy1nO0/YfuqgSjOcj83os2KuUiEv36wPN8RA4W/Qv9ALVaMkb+MtxF2NeVqP5v0arP4hYw/pGpa9psZWT8VzX1/IGyHP3nIjQ9Lge4/l+6LZl07mz93ds2c+/V9v69Ej8AusWK/2Nv+Hms1eD+pmDyt41SUP88pKVS02qE/akjzDSdpwb/IlD3qe5N9v1YKCBVai+4/PpoEbaKDor/ZUck7ucCkP/VN/wy3GK8/AdRKYfbFhz/yaMqDvb+AP+0CMgPYfaK/i1WIKfwjcb8oiyT8eVFvPyj7eVfSKO4/TpnJwWKNkr9quv6PmoUov9jzooJ+IJS/pyAI0cv5hT+TWDosrnssPwBbchxam6E/W2hmD776lL9EtQW1kBRTv1Ty7zjY4O4/gL2OEDAmgr8dEgtCJHN9v4DlMUAhKJA/ZYuaV/OudL/Vs1aynCZ2vx26/KW9CoW/pQXNAT+9h79sPyBAtB+uP0i6OluWX+4/ZfD9Gg=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "strides": [
                    8,
                    64
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.08339531569032545,
                    0.3188042647886171,
                    0.901621238731275,
                    0.37692443161011796,
                    0.15909605538804034,
                    0.3132281955008374,
                    0.34552022861907333,
                    0.28372337916812695
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.055223779021571315,
                    0.027503640594322178
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "values": "eJxLKeRe4mV70L7B0nFj6ZeV9gxVq28++NNhzyDqaOPwsH9/w2uDAMe5G/czPHMSvLGr1V5n2+zMHOUd9gom9Q8Mnm9E6Lsccu3Rg2P2DB/sG5n0+uwZ/rvLXk3eaM8w48aXPUtn2DNYdGVzRs3ZbyAVdU/ibsd+hmMTrb6lbEbYB9MnuZiVQ/2MPYMAX12T5Lr9DAK+b1tYVuxnCEw0u/F+g/2RfP55T/IX2jNcKJlYWbh0P8ydcPtg+nq97Nmn77ZnaLhxt7ApBWj/s3eX/izcfySQp32RNVD/GTEmm9cT7OH+g7kTZh9M376431cSztszFEw8EHtplX2O2/TzUj7z9jMkTHL5ZtgGDxeY/2DuhNkH06fg/nr+go4z9tvcQhZ5yGy1d7AVmJEVvgUenrBwgfkP5k6YfTB9i4tfaj/1vmHfts5iA8eWdfth8QAPT1i4QP0HcyfMPpi+Awe/zsj4edIeABzw7BA="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            8
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            8,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzgyMzY0Mzg0cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4MjM2NDM4NHEBYS4yAAAAAAAAAABlstP/+ag/TjcM1hJKwz8fy3aSGvfDv418REJYx8Q/qi/sPbee1j9sBZM6FYvWv3EWoG7ZNMK/G77mt30g3r8RcOykGqjMP5YUwqnZAOI/AERnJXUp3D8LO2Mad/CcP3Yaa0aasIQ/AAE13X7xw79/RfKpqyjMv+bgAfteAc2/EmQedCUd07+1TcFacFDkvzGi0zwACN2/uannzPvBxz8C/6r/VhHNv/zNKZYwudu/r/Cczjmq4j/QA5uKLPm1P5SuTBsR2sM/EbV1A0RCxT/P35eOPuqGP/8Ku6UWpOa/ugnk5iNguT8OeXOJSefOP9B/zzWIG9I/yjJA7K7bwr/hMsjIr0ncP2jPEneYaaW/Vrv3ZFhY1b9Mxjt8RDDdv+yo4HGUQs6/va2dHviQsj9WuOnTetGuvx84Njo3mIi/QP37Hadz2D8uPCfEUvm4v2kPcwcMkNY/4OG5iGAJ4b/+DSW+WLW5P0Z1QcUcPtU/2Es4xi+P0T9noZ5nhHeov957QZhkM7G/sr06un7M1b8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzgyNDA2MTc2cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM4MjQwNjE3NnEBYS5kAAAAAAAAANwE0NdjjZw/lu+ubbUxxD/ip+/y3zC2P/O5K4k3tsG/9OiznQ97hL9yjUO7pvKlP7vKbmF9pse/qJKRpf5ptj/IerwnSunDv5CdXo/zHqO/ZNzV+gd4xr97493U+lS8v32jA7vlG6E/+OC2GFgjq78OBQaLNFWeP1fWSSDVxsI/GwREqIeYxb8oj86KEwzNP26NB2yxIcg/OxU5VjcltT8h14bVwKGZP4udaq76w8A/jhLnKuX9xL/w/NYrXYbFv2K2Z4rV5cA/Rqv6jb99wT9rv1OnYaK/v4r5jYNDO7A/HZlUd6jxeL+gfFKjC+vDv+qxf97LDK6/k1aehOz6xj+AYGlHLqPOP13xhz1fpNG/3n++gzPWtL8Sd8135VuyP8A6ygHx8pY/gsabbe0ckD+KJGS/TIO3P+1HIzrcnao/6r0O749FjL/31xn+pXVwv4qngW21mHi/FMeoNtV0sj+T/Bng6TKxP72M3x+Qhrw/ef9CQyL1or+rfnk/+suoP4/rWdjHJJw/CQ4+sh4Zrr/CIMHBHAmAvzbJyRyZ8K8/tFO7LHIvVj+2+xbDOKOwP9bVuYPvBpu/1wGBDKIkvb9OwAxqjmN1P4+I6+rkH4a/xGrnqp7WwT/BhIyb6a2Xv1HH2R7XNMW/iF58z0y+iL9a2R3X+GFrv9HWChbYHro/qhK6vTNSoz/pUkniyTmxPx4cEXsvv6U/+cs3Yb63uL8JJTU6P9a8P+YKoqMyDKO//VgvoTQCwD9j2VvJ9M+9v8d/30RG8KO/vPn/sPMdoT81iYwQoVO4P0X27o14gLE/czmxKHebpj+O2JLUVqe9Py5YASwOIow/D7lav1fMsj8mY7RWuifOP155I7VY7qO/LiVO3O00ur/38tZOjVCrv4RiT2GvnKY/o8fLoGffgD9UXuRhVJWyv6cbDMO9TbC/e/jKPUTmtj+iscStqZWHP6/stGRLHKC/4rY8a9eFi7+aVKglRLFsvwmvVyaJMJ0/RFrPxCoGuT8bN44Un9TCvw7iDDPfhoQ/K/t5EGIqrD/Ts2TqNWuJP2FUGjqnObA/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg3NDMxMDA4cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM4NzQzMTAwOHEBYS4CAAAAAAAAAB4ftb9/MLM/S6DCfTVarb8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    8,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -0.8596639332148034,
                        5.877560248573659,
                        -6.383524824842221,
                        3.8249362679173577,
                        7.498060730374082,
                        2.139235034142654,
                        -0.0053895538787671615,
                        3.4560423421949045
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8
                ],
                "values": [
                    -0.8596639332148034,
                    5.877560248573659,
                    -6.383524824842221,
                    3.8249362679173577,
                    7.498060730374082,
                    2.139235034142654,
                    -0.0053895538787671615,
                    3.4560423421949045
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 35
    }
}