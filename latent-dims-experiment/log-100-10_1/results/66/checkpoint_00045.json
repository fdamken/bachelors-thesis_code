{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        8,
                        8
                    ],
                    "values": "eJwBAAL//WiBvRK5eew/yZk3PL7plL8/MZF8Mh25P/s7vZyH7Ki/zC8NbpjDpD+Pq3ZhKJ6JP7y8RKlhcai/vsrj0miNsz/3yrsTc9KXv3V8TXS2DPA/AQDAM05uWL/rSfGWKdWNP4sfXwKzKJa/7esv6J05dL9iBqkKTkejP/V90ef0cZm/pPl6hb2jij/sJkVLOt6Lvxj6GAqhH+0/R4B5wtHrjD+wdpi1d0OMvxLSpoFBuXU/7bKF8aaVjr8zbi9c5Ct+v2SUmG84r20/WTxbftj4jT/xl/8bR6pyPykixH+YIO8/oDftdHTXiT+Z9pra8mB3v463CsLZfl4/uqp330aKjT/H9D1N9NyTP3+p4Z9gAaM/t7C9URQCyL9qn6tHn1lpP1/QokuFgO4/yJ8fjiLYg7+PCMCZDPKIP5M9Uvtd5LA/FnBTIkpRiD95HMEYsp9lP52XTMIbkZS/P2tHxN9wkb9Z0gDG5oeJP3HV5xTPAe4/2vqqWZQ/lr/b7CX/p+CDPyIvBmI3dpq/2O7s3A+Hfr8hbHAup0+TP2aI2aQDo6Y/UcI6NfBvmr/+FZk6icGTv0RUfaJSUO4/aPIjVce5lb+S6ZlV501ov9MLMu1DEoE/0XDhwCocjr8pwpAZXe+Kv6Uqku57GG+/zHQsYKwQkr8Fb3VvZZOqP5CeRADOV+4/q5AHjg=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "strides": [
                    8,
                    64
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.06643094290158737,
                    0.22241217570292124,
                    0.8272933457142982,
                    0.39951107836933153,
                    0.1110484217081763,
                    0.23079180923806547,
                    0.19182197923025646,
                    0.223775992015271
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.028674608251891186,
                    0.006578591628166691
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8,
                    8
                ],
                "values": "eJxT8L+vv9N/p33DyY6lTGcX2DM8OOL0izXJnuHZpqxr/lX7GbYuZGtZuWo/g3HsixvuHfYK052fCRpvtW/oqV+z8vUKhD4L62WP+vfbM0iweQYITbNn4DkjcH//UnuGCw4KB5d02jMUiHNpPG3bz6Czke9i2uT9DE7Tp2+IWY2wD6aP81ZIdOQJe4Y4+4/6f5fsZ3A4PmuD3oL9DBP+bjW9CVRfZJt96/xUe4ayC8ax5xbuh7sTZh9MXxGXxbw5G+wZGvY9C7kfYs+QojSr/3jvfoaCsEMtm2r2M8SIc1i8mG8P9x/MnTD7YPqU+DXSvY7bM8xZYd/RBFRvMe+83Kfi/QwZi81jl82EhwvcfzB3wuyD6nNo27ROtPmYvcL3rPf8BlvtGQ6tcJHr3gAPT3i4wPwHcyfUPpi+G3PjJqv1n7Vn+NFfMsG/cT8sHuDhCQsXmP9g7oTaB9PH8CfzpcWtQ/YAR8jlfA=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            8
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            8,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzgzMTgwODMycQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM4MzE4MDgzMnEBYS4yAAAAAAAAACImDRnpTtU/i6ikCIhizD/mAa2EjE7Kvz2mRRGAn8o/bumT15MO2z+nGNAwt+jXvyPy6ZF0drm/I8sCEJPo4L9I8aS98QrKPyoVAHwuruQ/gipcpNl24T+o3ft0/Ea0P4+1ZyWeKcO/N9BQ/9iqrr9lmUITlxfOvzPbhsmacNC/u8M9mrs90b+mfp+F3Pnlv0C8PKovndy/v34P3sx9wz+0CNijwUTMv4Aaiy+5Wd+/Fiz2Cqn94z/Yxg3KXZ+rv5dc5LJsOtM/U52YlhTAyj9Lh3qDALh1PyEuvxnhB+S/GiMfdVHrvT9ko/v/Kp3LP3w4p20LXNA/ee9jHIQ+yr+9+jcvwu/WPxKBW+wUFoi/epivVyaT17+tHyEEAjvgv5O5kHLQns6/Zmnim0PDvz/vkc30pQChP7WkGA4u8LG/JFC4DOt74T/i5VXzWNa3PztP9ZVRNd0/izRqXr6747/fjUmtcyPCP3wjLjFjz9c/JaXufBaF2j+Db4Frpg28v0fHCI3wjLm/WMc8IoHg1L8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg1MjU0MDQ4cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM4NTI1NDA0OHEBYS5kAAAAAAAAAJx8GAqm2Ys/B4bj+dwbxj+/Rk0vG36dP0FOaCO9ksW/v+NIke7Adb+/RY4e0e+vP2UUOoLqNMW/T7og6w9oxT8Z17uq8+XBv1YUOMBPWIC/7STUhAHPxr/VxWvRZwvCv1Hvof7t97Y/XtVT6tnSob8pxB4PD/2vP9v3s8BY68I/HRldefNwyb+sQetFGOzDP6JAiYIKOs4/mMUI6Hjmk79Hql82WyylPyE9Qy2THb8/4H55oETRyL92+xphdHLIv//RIU4KGcQ/kBNaB7M0xT8thkWTLN3Bv7E77XmAn7c/+y9el9hbm7+lujAhsavFvzM9Xu+aOJe/DVt4FqHQyD/Vw2W0lj3RPycOB1TjcNO/kPY2PLsWvL/+ouJWnjC+P7tXp0xCS4W/NymkGA98rr+JbJt+oVi/P9ujjTCHCKI/RmNZfSPiq79w1ih/LgO1vwJDnceCGo2/bJBUcwyDpz/qeFzp/curP8Kl8rrr+bY/ruWMD9jiWD9DsO1i9gGrP4E9OrmwV5i/Y/lOauq+tr8mMeV3oTJqP9lxUrs287Q/DJ8NVD1Bhj+yRP1vH0y1P9epVGf0imM/nqolg92IwL+R/tZWVHJVP4XeSBB3WoW/7gYUzb47tz/LD6BfoZy2v6CoF52yFK6/Eq4q0w1Bir9eW1K1hBd4P+awI014nqA/s1aPVhWEqj+kYekbSX61P+ebEzIfTqU/1vYMHybDsL/tdTBkXQLCP69SuOpn5JS/XMkR3tzuoj8C3lvDjjCzv+XKiygH36e//Y+Gt3UrnT/ILVhkZeiyP2iCZwfNo7E/0FYVx6Corz/ulgROkqC4P1acgLXv2rY/9D+QcuyeuT9qR3S5t//FP1rBsZYwhq+/GbtWOY/8ub9dy9jKZMWrv2jxfIrb66U/YYq0vnH2dL9URI+jcdqwvz+ysc6W362/3zsP8KsBtz9gVKwJaz+GP7m2bp6P/mO/LPFRUO+Aor+ShU7sD1ujv1zRbeZRw22/XGaBVojfwD8wTbc4LV/GvxYruCj0flc/tjjNt4g0iz+6o2G6I+KCP/6k+BdUALA/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzg3NDI1NTY4cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM4NzQyNTU2OHEBYS4CAAAAAAAAAG1rhKZD4Lo/gF9XyWXprL8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    8,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        -1.1333989016515043,
                        5.6831588093971,
                        -7.0147578991351285,
                        3.5116216306765846,
                        9.301527620384965,
                        3.3919157566094857,
                        -1.0727633364607507,
                        4.394846994304706
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    8
                ],
                "values": [
                    -1.1333989016515043,
                    5.6831588093971,
                    -7.0147578991351285,
                    3.5116216306765846,
                    9.301527620384965,
                    3.3919157566094857,
                    -1.0727633364607507,
                    4.394846994304706
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 45
    }
}