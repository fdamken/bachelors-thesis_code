{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        9,
                        9
                    ],
                    "values": "eJwBiAJ3/UYDKciYi+s/eET6TyvZuz9BpEM8JgOCPxq4V6vJAsE/vNsb9UbFrL/y55TKbaqrP/owvqZIRIA/pjAnsvzBpr+V2zTyq8GkP5yMxW8vSaM/Jlu9TIkX6j8h3ZBD+45lv9U0qQbXSq+/mueEfUERaD/ylNVGx0KJv1icop0GMau/IILgiR64or/1Kdyz8v2qP+DZyWWvVqI/RQBchIpAhz89BPEmpPrqP+3YPIHHGLm/ft7ej86GeT+lxJL5tAyvvzhKyRRCW7E/9m9gaXOYgr/4NEax84iBP2cvfY4laYo/oyl6DSHbm7/HzZ3xJMeUv1jqYd+Gueo/X18zD0zIej87CcxDZ8t9Px4j9xFIBps/FpDssHe4gj9Yo/dZ69ajv1lqpweUVpS/WA/ebzGguj8mDRF00rS6P8LaNf0be6I/cgtZp8XM7D/m6Ix8Qqa1v7jw59FRh6w/zjHff01bqr9HFBwgWSSXv96+QTnbhpW/fwcpFQvvp7+Ev/o/v1mvv/q/eU1Q4bA/0/CX1Pfbgj+iLdcA3IftP8/kDaV3dKe/KSVX9bm8qT8QKVHlorGgv6hs/lqyy3g/hHGoyhlWuL8wQtxVVdChPzAieuN617Y/o0sJol4HeL9tvdeVIaxwv9nBtSF//Ow/0qhLLLfKgb9m89K19HiTP7ZcsV+oB5y/wyxmQ/z+or9wTWSHz51hP42hkVmALKA/xcseJ+4tdz/HpQtzAQyWP5/Q9DfpBpK/Cm7YJJC06z+IDNl32UtoP0x7z3IR2pc/HiKhgYs7vz8qeumY+w6wv+HUTPIUC9G/Hdi46Ix2pr+QG8mMeKyePxNel4A/D48/2Jo46ubwsD+CJ2D9JnPrP9pyUF0="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "strides": [
                    8,
                    72
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.024960395991185946,
                    0.10260583288409854,
                    0.05960906926976169,
                    0.22709602017089411,
                    0.01791264048576207,
                    0.05301382701176652,
                    0.06684189258492493,
                    0.09113436010710746,
                    0.029945451954969934
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.015479528463441966,
                    0.0053493439694775585
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "values": "eJxjSGh1lfWbad/APuPxO7sQe4YL7SKZ1Rn7GRo+7W05Wm3PwLCm7n6U8H6GBQt+9dVOsmdYwHaYfWPafgYXbz39nTX2DB8a2G5fyYDrf8E5jTHOf6U9w64kC6NMmf0Nh3bZadwLtm+Q1Nhee6TOfsLc37/DtfvtRez6bHvOTLAX6JLyMN8fbM/w3dPbq40ZYT9UP8N10eN7Hi4GuuN40DytAHuGGc+1+eTK9jMcKI+bWD8DKL6VIaDRDugOyw4/6Yb9DMwFE9VNK+Duh9kP179jeeMZ9832DApsB6405dkzNPDs937eA5Q3mG3EJLifISKtbDNfoT2DXNWat1974P6HuR9uP0z/jt0xUy5MtGc4UGUefyt/P8MDF8FHKe1AdZdXz6nP2c9Q7e6Z5VlsDws/mP/h7ofZD9P/pC7LTW0TUPzW5VbHvP0MfxxD/xT07WeY8PzX9mc18PCHhR/c/zD3w+yH6U/wa/31GOi+PVb+n/aXAcXvB5WcC7OHxR88/GHhB/M/zP0w+6H6E95Yb7naBoyPikmrBXdawOMfHn+w8IeFH8z/MPfD7IfqbzDWSF/v12wPAKn3D9o="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            9
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            9,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc1MzIyNzg0cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM3NTMyMjc4NHEBYS4yAAAAAAAAAB7CtOXeHZ0/If3SAMss2b8RhdrLbc7iP8DlB+ih9di/ZBvlQl048D8tThm164XUv6e9Z9mmxOM/014G02Prw788zkabTiLYv7q1w9J3Mmu/sIaKiZ4qtj8URnW4gHHSPww9C0srUOs/KBHRqOxIwT+OIkQp1texP7N0i5GDza8/CltyRoWHsT//nKvtM3baP1LZrH7Kqcq/jfL0A3V92T8wtRRppC7Nv3OiatihWaY/9zpgoHOpzT8AtsJRygC7P3lKhOgQ9sm/D7wrViFKzT/wInP+U8vSP6wcSjbfDuC/ris7r4Jb67+12YRtq4zevysCoKozd+m/iMipdfeN5D+RE+0k6SrOP4JUWX2UwNK/SYlyOxZLwj8LGglTzRbXv7RIpbrJ/M4/QICrWonJ4r/Iru70vhPRv8PAYIGR85q/E79ZCwHszr9dFhi14FTSv74k2NsWkvC/KO5d2CzOrD8SwUpHFZfQPzBpMwvVXde/uoO981puwD/svIPX+wDuvx6+k+k4j9K/q8VamEUKzL8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzcxNTYyNDAwcQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM3MTU2MjQwMHEBYS5kAAAAAAAAAIegIbUNNss/syUrAm9Fej8hyOdEnHfXPzbL8ctd9Z0/BG+DLCqn1r9B5WebCduIP5wsH9D8FK2/KCYMpw8el7+shJ/ElS2Kvxwgm/DNo7u/7JNehLLplb+EglaKS16nP89JnVJuNq+/GVyPvmiZyT+76956+500P8m/iqqr2ag/bN/877MY1j8cZETYWye0vxEz2FsiRbE/LqjvCuGhur/MrAt5qXt0v3xBfmjuUXm/54hE/RAhkj/39XYx5Qavv2G5Le2dS3U/43WnwGoj1z+M+v9TGcyFvz8KVoT84oS/b/qEPiWVaj88xgHyG9rOPxQAZVNmPcw/+pY3gT+MiT8ypJayy1GCPw+kYOjWZr0/UPYWRUknzz8MUKIKFjSSP5QCZe7wNbE/8dFwuZ/Fvz+3u4r3G6rQPw2ORmYfBca/9Fq90LtRwj/MTIC6v0eqv/mx5w6g4rM/i8mChKWHwb8b/cRq8PzKP4bYnJsQemc/axxxIhO1WT/HwWCJPI2AP8nsODVOPMg/J8Z+sWb3bD96kEHhI7awv3yFqqst1Xw/YpZsn5qho7+eYwZLxVpzP57XyQl3kMm/ti1DlPeAfD+TY1HqDpCWP4zf613hNKE/NJzIma9OoT+HkP6szdOYvxyqlNo/M4M/PizzY6qUv7++UKrp02fCv3WVCqTUUqM/gQOeKarwYL/zXSh8xk+gv0aKE7D86Ia/RbCmLqlnoT/5sXK+jFujPwwMrywyS6q/Qr1GCPLnoL9sFhbvfz+iPwhqCHwiI5W/PuWc/scJub/Iguc5V3F+P7G+IjuB+68/pFgyjZWVoT+ldWUyHcCev87+O93V15M/yfzG+cUzgT9Lep5gqzevvwcnvDIyILK/HLOZK6VFpD/Ne183N7ylv48VUQnlV4Q/PFYHbevAmT+OOwS4fNXGv1jm1Hejk6m/GNbOaBmamj8bVahcJQbFv+2BO9ssYLW/ZtxTeCHOlL8wlio6d9mdP6rp0voauMM/KTHIn/fkub8RGoksKjumP0NZkveYxZY/sfmcPAuthr+OVbcPMKy2P17L1kXV8J4/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzY5NDg4NjcycQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM2OTQ4ODY3MnEBYS4CAAAAAAAAAGrjeHetjNg/LupO50Drgj8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    9,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        6.099210537031839,
                        -0.022410430130050937,
                        -2.1219380798274634,
                        8.51951315168771,
                        -3.560491069795435,
                        9.319867422077287,
                        -4.035033185879381,
                        1.205524187143151,
                        0.5050921589493746
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9
                ],
                "values": [
                    6.099210537031839,
                    -0.022410430130050937,
                    -2.1219380798274634,
                    8.51951315168771,
                    -3.560491069795435,
                    9.319867422077287,
                    -4.035033185879381,
                    1.205524187143151,
                    0.5050921589493746
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 95
    }
}