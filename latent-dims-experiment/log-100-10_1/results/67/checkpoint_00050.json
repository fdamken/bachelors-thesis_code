{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        9,
                        9
                    ],
                    "values": "eJwBiAJ3/RovJNd7FO0/zDja827xoj+3wRy9xQ6FP48q+vlvgY6/Swxu4SYImL8LIbb/8vOpPyCMmMyZWYu/kmbI22yFh7+rFDASsdiTP4A+O5P1dII/sSBsWI247D8Vg7pPnamNv7bOjxm15aG/cQfYJDDXgD8FgPLD1RWBv2cQSEY2p6G/nLS5+LqbiL/jYaKlT+eXP/BF2YptGKI/wCBHSoV4cr8bxkvPPZjsP+c32tPT0pG/wk3p2pxXdz+bLAtPG6WmvxSZJ4DNJ4Y/r4lBD+hagr8tG8FD+bGRP9mFRXrOGW8/IUry+g7nl78SxDhhPQphPwA/mueYme0/zBpLdSnHTT8IMiDbJVV3P6pQeEfCroo/z1u0CvjpYD9gQjM8qyaIvyC3QzcreYO/nWKD+A+qh787mTAp44KyPzI0UgbGK3s/SWFXsGBc7j8k4ZdnH5eTvyeIlnz8yac/uaVxQQhIlb9sjlWXJr2Uvx9tH6Mb6Hw/wtH2hrlHk7/DttSD1jmiv6wz7foQ8Zw/xs1Zxls4iD/RArbIZEruPyi59j0aV4q/EIBJVMSUnT+tRQdLjvuQv6dKdxbCCaE/6sAmQCcGkb9ME9llzEp/v65shuk0yJC/WeDmLpSmm7/ujjQjX2eQvz4ZOkJQde4/uC7eO8lxab8UutuUcgqdP8zGJYlkjaS/SL+m+0mfnL/sO35s50t9v3kAZAEyWpw/7r6JNLDSij9BOYZ0nE6jP0wbeKCIUHK/NB/+CuF07T/TpkP7k/KBvxZYDzFpcZE/2FoNb99buT/rlYL82GJWP9yN3Mgu3La/8c2BUp6HoL8G1XYumSt+v5eW+WocF6K/21dAR2r7mj8XG/t0OtXtP+2ZQ7Y="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "strides": [
                    8,
                    72
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.20755693824724025,
                    0.2591221312702213,
                    0.31815925857698035,
                    0.5411944440274892,
                    0.11156603302825152,
                    0.3366249570536968,
                    0.1314173907134125,
                    0.22695103061925714,
                    0.08405001852423845
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.03318983224057774,
                    0.021222495551333223
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "values": "eJxjyDCvfZq2y55hoZ3V/Tdr7RkOtHnvnJFtz7Dh1zFbmRn2DAmpPNvCW/YznJnvsWX2TnuGAHaXF6cK9zMUTS6cIDHXnmFGXf27HVn7YfoXSOR7vOo8Yn/ASKvwVcYEewaG/R9/KmbZL7i95tRirlX2DUxLb3HlbrZPaLxz82rYenuH0OMLzZc07mf4HHXU4GT1fpj9MP0KVu8vX9Y5aM8wx1C1K3jWfoYNhjP8qwL2M3SZnrf4ttGeoSFV3p2lwN5h5/kk1uKF+xnSo16EZS/ZD3c/1H64foPEabczj9szyN3M8ro4zZ6BJcvy0GmgvzdEVHOZtNgzfJjFfvTbVHuGLUc25Lavg/sf5n64/VD9B5g+RD2/DAwXga+hM1Jq9zfcvqbXX7HBnkFZX2jdHKA7bLjTbL5Mt4eFH8z/cPfD7IfpP9Fg6id2wZ6hYKlu9vUp+xkiFJyeKi7dz8DGJLYwdw48/GHhB/M/zP1w+6H6D3jt2JJ/aJM9w6atIZKv++wZ2Bu8vre02sPiDxb+8PCD+R/mfpj9UP0v+vNPqH88YM+QERhzdFkqIv5h8QcLf1j4wfwPcz/Mfqj+B5GNZ45yr7UHAClzIcg="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            9
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            9,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAgAAAA2NDQ4NDk2MHECWAMAAABjcHVxA0syTnRxBFEugAJdcQBYCAAAADY0NDg0OTYwcQFhLjIAAAAAAAAAvQM5E3fLqz8HRq68K0vAv7Z45NwgZuQ/NeTj2uyN3b+5UuqjqSrmP4wqiAzGKcG/5A36/fot0z99E1HkiLTEvxKWSI4riNq/GtL7aisIuL9YJRomywy0P8vYlJ7mwdA/VJS+k4ts5D/UKjE3semdv73tW71gEaI/FmrQ8e5g0D9L4mjdynG4P9sgtNEeqso/TRbtuOPXvL+hag2OOSTXPxJoix77GZm/af7Y0ymun79I0O+R07/QP87v4yeXBqK/3YyYzEkUkr9WCyk/KrTFP7gtgByZDmm/NRoLQu3a1r+C6rQJhXbjv0Y2TPD9D92/UoWLC7IK3b8ClJbjKDDgP1SQ7x87mcc/Lo3BmGJVwL9asXkM9BnTP7jYogJoq86/jOptjyE9wD9qO7XcCHPcv44hjy30t8e/zo0oCKAesL906LIFkv3HvzJ0yFCVDdi/zOPrcqCY5b9PUf1hnsvRvyNxk/8jqMk/xq7YSVOTxb92GoHNSSafv4P5ri5MA+a/PPluQKCe2L+++yz75aW1vw=="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzcwMDU0NjI0cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM3MDA1NDYyNHEBYS5kAAAAAAAAANZprA95L8w/agnca0/Vl7+Umq7FBcPQP0Zvv6NyUaM/oQ9aLbhmyr/DCIKjpyChP8bjU/2cEpG/g/ikkerRUr+XXUkkMALEv1qVExiIisi/6Xq+kdKpor8T5JJLcujCP8wjUXPskqO/aWzK91SHwz8fnz6jUMenP+yFZ+UR62C/1mg2CI6Tzj8XGAcmBfnBv4PYKqI7yp4/9l70HEYPuL8mLBo6MxqpP+wc1wlNcq+/3RQIPF7hrz/EHIXGYJSbv2KeR5Y3Z68/LARGZAPE0T/NNXsPcHWyvxboa8w3BbI/a40nyOAAgT+DFAhxJUjJPxgpE6l5Jsg/BzsTzTUQpD8up+HdfSmwvyD/zqkBM6U/Lma8jFpXzD/zrYPAX5ipvwi3A+dWeqQ/m+nnTpdqvz/vLsi0LSnQP+Y1rldzGbu/PnV3tKlsxj+oENDcYJ2uv50LXZFdXJM/48tPAZnxgT+WRbKkc6HOPws2PYnKr3I/Rb0Orp0+i79fXTsGp32cPyb3SvTlQro/wRyuinU3qD8rcAR2kI2ov/ELJLQMikA/mXVt8Ktfnr9Kr/FP1+qEv2iF1QDbisS/Vr+Kh73yMj9791fYjKWfvy/vtSjrt7k/Cgvvqh+Ptz9qirVXj2ZyP3mv1sREfLM/U38LsR6ftL/aDQY4LPC0v9sZ7Rlr0K0/Z44KrGdSmL8JkxUMl8CIP7eFIm1TIXe/uvgHyfvbwz/QC7U1foijP4Y8R2JuMLG/iLw9EnH6kD8g/bJbSkmsP1r2u98XBLq/If1VJA5IsL/VidWeJZ+Dv8w+W8ykILI/FjF/E7FWn7/4klgzI76bPyVp7P45KqY/0kHLM8Olqz/PKtjadvymv4M/SAn9HcC/fYI9VTaJsT/wV7/zxx53v/qpKGOTe7i/Rya8BQntpT+5MWcLfTytv8uS6FlRELA/0td7wHWmmT/kC8dDVhfBv0Qa72/oua2/f46yfMGvsj80KCiSuPeoP6sFb4yDILw/lZEuVJyUtL+48iI8kXWhvx0FhldA7YQ/FZpUSSVzrD/QlFKGClC1PySxA/o9ioA/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzY5NDAyNzIwcQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM2OTQwMjcyMHEBYS4CAAAAAAAAAKmSL3AbtNI/jeI6uCE7iT8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    9,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        4.8881249125409845,
                        0.7134304609605086,
                        -2.5947817203844634,
                        6.775850860200367,
                        -2.2224878278360194,
                        7.802397922448175,
                        -2.591212274892276,
                        1.1160835837121943,
                        1.1687751493270087
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9
                ],
                "values": [
                    4.8881249125409845,
                    0.7134304609605086,
                    -2.5947817203844634,
                    6.775850860200367,
                    -2.2224878278360194,
                    7.802397922448175,
                    -2.591212274892276,
                    1.1160835837121943,
                    1.1687751493270087
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 50
    }
}