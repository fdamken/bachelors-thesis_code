{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        9,
                        9
                    ],
                    "values": "eJwBiAJ3/YPO+mZO1+4/YjqUrjJ3kT9FWjaovxqUP7ZEfD1E94a/WcamlfHukz/tWsu7VIZ9v02ay2UHZJ+/51UWpI7BYj9l8zDyZEaJPy7+uhdDCIy/GOU2lCKM7j/KnRChik1ov+IF9BYVxGg/ltZTjVzgoT+AcMVT9fx8P4WA8oXUE5C/eD7bEnMPZj9yC2MPqZxVP35WsWvxUos/YKC/XBfrjj+1g8pJQtLvP4Esfi8AiFM/I87iSvqxcT9mHN9R0iecv8Au/Etzu5S/zWcxWWlxcz+Lw3WpMomWP7Bw/hUu+lk/XJl8XWeGdT8xYZYyrJFkP1+NTR/dwe4/mqeDpexEe796pp2nEnZpv+xBA+zJoBa/ZtZYtbcRZT9cpgnlC+5yPyewKoUZmoW/RCUo03fMlb8dtA3DM0COv5WnuLc82H4/4qC6gGG87j8L+UjP9ROPPxvN2VeGNpo/v0Y4gux5hb+igeM1uTKcvxxBTyM0+lC/t934BFNclL+CqXNB5Sejv+UjkjxCATK/KJrDC7Bllb/So1hBxFTvPwLP9YP4iZY/7wKHnYx4gL8nTWKCag2Tvx1Rva52h5Y/VX/51GcpkD+MOP/oPT6Ivyd0loQbYJW/xaSzBsW6rr+9Mh3M7LWZvxNB6wojeO8/2ra+7YPXfb/hYk9NgpqUP78pqcNwtpe/cmkL1eiWjr+DojVVxKyHv2iPj5LFO3M/7uEfWuqfkD8/rPsHiFKRP2QFbyqZDWA/MIIKYWLU7j9IM5lv6t2Fv8Ctx/NYd2I/pdndaNvSoj+zf5agXsKdP7yQ7AvfVWc/QnFjMbW4nj/Yn2A6BvySvwxaBsByY6S/9kFRgEbclj/GDs7Wc9HuP1PlR1Y="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "strides": [
                    8,
                    72
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.6905488455226467,
                    0.7200314347818838,
                    1.0275100288744796,
                    0.870323952691448,
                    0.6697113845437704,
                    0.7017999784090966,
                    0.41100801825990846,
                    0.7551464885167614,
                    0.6328365477182721
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.04897709392555771,
                    0.0069542411373395225
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "values": "eJybvvjRTNuax/YMDvy5t1hT7RkYOk8tX2q8n8F6ztzL7IvtPyzk+VYzd6/9gvJ9cXkfTtkneHD3KLgssWfgmdudw5Bjv6DiyR/3g4f3w/TPO3lL9EraY3sB0+TJoY0H9jN0x4gUua7ez3Arv4vXp2E/Q9ADBuf1u+xXnEx5fO3+dvsDPJLvdnC32jtMnnQ1XnT9fpj9MP0Ncx4YPn5y256B5enabfVr9zN8k7z+WWiqfcOjB5PMi3baM6Ru1pVXa7VvMGWanFQ9wd7BRvEXU9VmuPvh9kP1bzD6ZdO1/qF9w5E5nHFrlts3NFepxUputN8wqWvGoUm79zvwPD43LW3i/oawV31+/xbsh/kf7n6Y/VD9GftfJX5rvG7PIOO7/+Slnfttgs/0GwtesM9wZJ6sqrd9P4O//MtFSSvg4QfzP8z9MPth+iecCarePOmh/YMpc0rvbd64/0CRmHDpiqX7HWboBia1HoaHPyz8YP6HuR9mP0x/yJXTwSkmV+2/XTuy0ZfpgP0ORi2eTqkT8PiDhT88/KD+h7kfZj9Mf8TiB+uSZj+wD3j8hGND9yF4/MPiDxb+sPCD+R/mfpj9MP0zUnvnn4h7YA8Agz03hw=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzY5NjA4OTI4cQJYAwAAAGNwdXEDTcIBTnRxBFEugAJdcQBYCgAAADEzNjk2MDg5MjhxAWEuwgEAAAAAAADzzM/jvy/Yv3+Tkz2qyda/JjJwTUdqw7+lOW5yaA3Wv7J0DUmKg7U/QN4BGr+9wT8tPTYkE7DgP+zyFgX83sw/JBjW3h3v1b94yMftDnrVv418jQAyCda/nTkXoQMozL/dtNbxAEvRP5RnZz4RtLQ/4a3LtES8XT9Pr9307wHUPwgZ4+dNGNG/x4PApU2G1z8yoIGRjX2/P58QDntA59W/KB7zHgCSy7/gfByE8NLAP//eyvc859S/Vd8vlXifrT89aI/EScfcv2hdNx6Z/NS/Q33jXSiZtj+BXOaT2fybv7QILWBH4t+/SacBGx/Yy7/zXOmsij/Pv5gff4dtKMi/iygbzGV2qL8iXenER92/P7VBMauLhMi/z18mH8zrk790OWi7cCjLP/SyflyJU9C/K2kBy4pj0L+YmQY1RFS4P598FN8su8k/5bDaiB5Vx78Rq1Fr9PXFv6Siy9Vbjsi/gOitNyVB1z8FanHULrO2P4yAiCOwuNy/OnrD99uKw78ct/mnRNXJP/wuMhoTfrS/Wspq8gzeyj/+cwYACRa4P282ieFbkOC/W3Q4gPrPwD/5TmpP8SjRv+rluA5/0eQ/oIt8D3GczL+pgIf3YHaMP2+gDB8Tv5Q/n6YFXnHCq7/dYOm4p0Tcv09LarAq0cw/w8hoCrN+l7/U1NkMexq7PyWLoZtoZ8u/AhxoqMmRwL9NP02kb6/FPwa/DCxsfNM/DqkNJUOqvD/kT8veSFvTv7ckLvdSG8U/MqociYO0xb+jHKWVCffKv5M9DgfTDeO/dVZMZMakxj9EdeqwW0OSvytYCiOzDtE/A5iqjhwPr7/7Yt5rpejSvxvJZdIOXOC/JeTBnIKdxj9n+CrYBR/PP2b1pL+Fe9Q/Gr29zWYrsL+zsWXbNaDGP7Dr2SWBR8s/SvVHD0OK2L+nv1ARlGTKv5RBWuwFuOK/L23g3VVs1b/so7XAXUe0P5jBvHg/+9I/U2EydY251r9UN2No1125P1ZCPwGuhNE/ewmm1bmowb/U68RfWHG8v4w8ZQ6UI5Q/wtMd+fSC3b/iMjP7MHbIP05yt8C/7Mi/O+Wo4N9anL9TsEWTnQ6tPz45jFMjD8y/6mLAJHfgyD+f2WMibvTUP6qeXML8PsI/Y9lsSk/W1z8YLcNGsKe4P5J/TSFFucE/OQUyIZUxoT/liupdFpfBv8FnmnBRttS/3BvDp35v079Yvgg+xqDZv+wvZg1d9TY/s/kms1MRzj+HswEX9sOmv908U89U/Mo/gk56/PbjxL8wmFo9Bpm3v5PkIM+m08u/y/g1o3c2tj+hgEGqHsvUP3xzurYasMY/Bmpc+aVu0T+O/GuWmCyqv57qK6ymeL0/+KB5347Lwb/GikmONXnlv+qYEjhzCdE/8cfQarKayT8WtIImLC20P0iJsnFwYrK/DeTddmIT1r9u4D9Gz6LMP9YRyKm/Cbu/PIxdF05duz9X8xRrMKHBP30MtUbRLdS/4SeCaocQyr/diF/zrb7VP1XWvRsfktC/eo4yfhfXaL8NI1LwsMnPv9aok9lqN8K/fuZbZaFxqL+7BDu+gomXv0w4CLAWJMe/dJkz68U6vT9VNtZ4iwrMv4AGJzvEFsS/GgePuxC1sT+9ivEknPrMvwWlCrOaRbK/xbqrTJBorD8xlFKWzA+mP6MM0u7/B8k/HlFU6k7FyT8Vxouv8nPEv8RG3AZ6ec6/A1x1iyrp1D9OwC24JvOlv5kQqgn8uem/RdoxCI2QwD+Rso+RfoTLP9R+KnEd3MA/ID3t7fJf4D+tQxFhPAvNP+SQJIT0k7y/BqTFioA4pT/jAdtU57qqP4KIA4b+gMk/qKsFImn9yD9ENbUpykXHv6ZARBG10dK/MFUO6Ocf0b/FsLXgRPDVv6D0F5YyzMm/sQ18hD1S2T/jJBZZX8q9v6AyhUn15MW/+yne+/Ocwz8KDAo0XibWP/nFviXUisa/JUPJVAvYzT9qI67Xtn/JP9YPbjo1oNm/zHzQG56kzD9+IxVHunTOv7t1qc4Z9c0/3eumpbiZtL+VJePPXwbSv931zZcML7A/j7x+3fFxn7++CFB91sHXv2qDZDu3D7M/zaH2N37t17/fby5un73CPxnmLyfbkqG/euOY4BgO0D9wmiMfMTq/v+sDyl4NttG/LIm5utZC0L/svDbQixnTPyHWsielp6o/fU6zVs+Y4z9Kwi/XjsDZP18lzy0HMoK/z4sLio4Pob+QWGe5E5bBP6Hnq2pBCdW/25/gZ3hhzb8TubU6Ia+nv585Fs2rTry/MT3O59KW0T9/QcMuWqezP1Jht8d5VrM/t5z8GveEtj+csdcOxMq0v1MHCMeLF9I/ZRnqwZapvz/xp7kTy6jUP1hUKSYtety/SGZlfLXf1L/MPEvkbFeaP+mFujcuid0/fLyTFXBDx79V6M86B1TNP7MPC1b4uJk/aNu01pGnwj+1P5WdQJ7QPy12YN3NE8S/3U0zXg4Cxb/PMuk/QmXmP4Ur6DGFm+Q/ohFkigGV0r/N7x4Unau3P1PShPJeutI/0OARs+JftT/EvDojskPLv9Q6VT48Aqs/CvFoJeoSkr/C6n3msUjGv7SoeoZ+JpG/AgDvgmVkwr/m/9h9AXXXP7h646mRucw/66ZoDyH+hL+Ebw7kPlTcPzCdV39Abta/0Anw7w1Mwz8wthUr5Demv+flc6VpoOS/TVzviWFBtL+rYgIcWfjEvw4paWg1A7I/rW5vh8Anzr/SfTGJkZmYv2661G8TBuK/ov2lPKvCur/J11TjlRixP/F07dUXb7c/Q4owOE6awL8A2i0srypuP1aaHAGhfdK/jjO/9AP5oD/JIf85hK/QP4gEAXeMGs6/tu8ZcYCH4L/Kg+K7oHqSP7cojq5UNdy/qVEqFuaPzD+UXdQh2tZpv193orrtG8a/MiMmH6A60794AlykvKfYP4nP5XgKwcm/br1JyxYW0j8mAf5km37mP0UwZ+rq59g/ruw5qcMStb9yGrXhrlPEv+YwoX+tmbg/5CkOpaLJxr+baDu/w0+gv8NKKUt7/6i/QLaSZQCopb/Ik0Cbvo7GP96Rspgm5ti/2SxLZdNnYb87a69zXiuUP7ruymJCBdA/3eOOfEsgtz+fQEEnwUPYv0pOL/Z678o/K28GPG2orD8gzqnv2nOJP4Kb9Dbturw/REqQEQOevz8mO5IRzFfXPziccl6RZNO/kly3RG3dtL/lfQJ1LX+zP9JUihnTa9e/ypHM1BgSoD+AWO5utDa/P/se2YwKtsM/UbgTJ/Ewrz9jYdn+tLa6P/v4tOqVMMO/WMvbV4HY4z8ovcBs/KGnv7UitkW3MbS/y5bFKwlhtD/SFzr9ekKYvye4DiMNaa0/nrLzUWoExz855qokJJ68v2PvgeyTEWm/xYH6xSkExz/PcgW9Rty+Pw10ntE9Asq/4BvEIYdP7r+8d3cQzw3gv2QjMhtbP9+/OEetCM/szL+QIwUA/pvFP5S87SACTdq/KbMXgUbhoj8ELldKzdHWP+1pC51648q/5REZAhFYvj/j8DZLx4HIP4Ac0FX0TJE/LO0pioi1zL+uRiHOs1S0P3flHt8/j9G/fRRtwVgNz78fb7DBVQnbP+z4NUvNPMC/m/8BaBLLc7+WAFmh1j+6P3/WBRdRg9A/NARHb6ka2r9jzqq9B7Gxv8DP/fxx4cI/p3LkdkcxpT+qJaUi9JTGv7j/X/7uf6C/rzASqOr8vr83LI1QT4vYv9k6nkrjfLy/+BAwOJ4/sj/ZP7hOzvm4v5ERnutQ0qo/yP31LWBHyb+e/ww2w3HAv3MUSxJeb8E/GW7pGTqL0D+Zwd1ZdBLWPxxhfg5IDdq/QIOeoUKNuL8XJ5TM6YnBv2toanmimbS/FjgsnrBIzD8A1kN9bbbPPw60DLegxNS/C32mBNtUyz+x/v4jXHvev1HHfRMX5Ke/9qq0/0Y9yb9zcjmSOku6v6iGu7xtJMc/vyv9vwkkzj81F46v10XAv+SHd61Zark/SseeHRr3wT/gTEBjwErjv7hGnl4VDNS/Sb9ezYY9uL+SRk6In8jqP92EZzctRNK/amYnPVzr0r85ZmHAGWbTPw0pCfHU2d6/n3XffPQz27/R0p3DopbIvwT2IzaZO7+/7Y3ZvttDbL8fBNhiGLqGPxHJa79R8NC/4k6BcBp21T9ycySnchnSv+Jz/xXWkbw/QzMZSROG1L/xgvHZX7Dfv0PJgq1a15w/9QItlHGspb8qJFhl/TbSv1WX3kUUkNa/fWjH91ipxj8yLWIy3OS/P30EWJuVtbk/5KroDkdqw7/0vP9gckTUv2spzQcsFtO/8eVnieXuxr87U/cexBTIvwP6/+1a9do/sGF+RpwszD+pgFS9EuqkP8ED0p+iI9I/FzjVNRnAxL/LFzq4q3Lfvzt7NcVl47K/9T4Wik4Tsj/BKfz//hG7v8hGeXun6bS/s58NTgWi1T+EQzgyj2nWvzCg4f7j8Ma/nIuLBUMkrT9lTveU+E+6PwuV0HrK47M/h3KU6bsfur9aU6DJ00bKv0yTL5WkK86/g3qAmDXeoj9KV+qbbIfmP6MLA+9In9Y/YNWsWSNXpb9aRKUrWFunP76sDi8GcZG/HIsiZxIb07/cTHkEYhGtv0G3chIPXsm/ON6+/OoGzr+l7SRO6JXGP+fR7xlhTcm/4Xy6d6Qinb/s39BIxHCOPwdc4jaFKL8/alKFLz1Wzb97wmpNFYOVv3w5+Qq2Jtg/NF1RkUZIvb/cQOadak7LP98yIRGw95Q/6RncGzut2b8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            9
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            9,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzcwMTY3MDA4cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM3MDE2NzAwOHEBYS4yAAAAAAAAALVWWUDBlLQ/cMInvOlIwD+oKtyDFEfUP1aMSjxZOte/FwfxeCi02T9S4fTdsTnSP3LLRc73XZw/JR6THOfVyT/EoXsLYmjMvxSv8tCwUc6/Wm5Gp6Yvwz+3556oFpS4P6Y2qzEPkdY/ms4mftT2oD+ifnC1eMidv4lRx84Qssk/yFDcekH/u7/9SlKF2k/ZPy3KddvSwtY/POuEaai7yD/obewKDGbBPz5sevgET6O/XnfGoPKHqL9elxaSM2TXvzeXsNXcOKQ/9QsrqzMldT9dNY4QGoPAv8DdRaO+StC/xLBC6W/24r/AaH8uthLWv33EzrAlwNa/+YGv390d1T+r5hInmAHVP8obZrXK8sG/DbwhwMQd1D8gkqg263e3v7GOafa7/60/K2QYPskg1b8/VpyyVVq4v3lrXBM3Gau/ETJquc2b0b8pDJLbJDPOvydkaQFSStS/tk7AKRUGz7/6y8cnO+qsPw+XQRlByqE/mkieOGB9lj+2y8i+LW3gvwuBWa+9NNG/88+DrZcGlz8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc1MzMyMzg0cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM3NTMzMjM4NHEBYS5kAAAAAAAAAIPkEvZiwcI/izQ4MzS7wj9P9GZizcbHP4FqXbxatLk/8qwy0bvZpr8c1PpQbAypv8SvCHEzHqq/ebYQ0D//pL/g6WgXId3Cv2xgkwzynb2/FLKwfFFwpL9hkshIB8myP8T0iOwju6q/tDwuMU1+tD+ryUzDhki4P+QhDdh87Ls/zrlKCSnoxT9k9o5Xb6LFv9eBJFqpSrM//C1r51Hkub8T6FLO6ySqPzlTidMCHre/ZqNMz9jwkD8ybW1JgAyWP3MK+UMepqM/EQZsrJBzyj+P424rxLO4v9d1RFyC9rw/8GOgxlCRwT+kr1jv4GHJP+oP1Kuzf7s/ze0PyupaoL8ZpU30bo7Dv6QYupDT6bU/xzRhfI8jxT8i3ZxWjmSzP+B65EMb8aa/e81YxgZ+tj//hNV4A6zHP3gZQEtknrC/NxUhnnkvxz92Xj8Zr3OAv0sqWWfOca8/4KSr379Suz+dawd0MFjGP/M2MPgfWqU/3HwrN5cBwr+JDXP3pN2kP+PfhmQVSrQ/mjD1RPtqqj+9sIEXkPimv4CTHAHWr4w/9k/ICnW5qb/1HyNJHgeuP2ile8UN3JM/4GJmq1SCmb8Squ7iAbGNPwNOeireEcA/AE+DsWu5fD+I8ewb5cybv3NBQIfCbbA/q51M8DC7or8IcOuWsfexvyz99zR3ubM/uAlfP73Klj8Xy3fNtzu4v+pl9z2DdaG/LXB+E4R8vz9ONd8iKsGyP5PoC6BsN7G/fd0zWd2Nlb+u9/je/h2oP6Y5Ql0DrLK/NWflIUkbvL8YcCN044xwv6z7R0ap3aA/3DLzH+D1i7+5Hh52PnGcP4DeZTjm2Ye/5zywuZjnuz+XiY14CfOuv7lNvsMkoLS/Bid8xMjLsD8TRcxZZ8mzv4hAItwPbcG/fPYuw7XOsj+p5e5SQLmgv9TUDAtfcsA/8YXrZVhzpb+yXsSYnkC1vxBqK5atoZ2/2rhj6310qz9zH5VdmqFwP4R4heMaUr0/I9+qNDTakL8jlo3jq6y2P9moM+OlD8A/dIiHGauzvz+tM5vumTWxPywIWy2QNbc/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzY5OTk0NzIwcQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM2OTk5NDcyMHEBYS4CAAAAAAAAAHrYrkP6eco/xhV6M1NxkT8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    9,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        0.9565847577598379,
                        0.8430737654159021,
                        -3.401772384223322,
                        2.376972331879558,
                        -1.5023862753093797,
                        3.6328453116648305,
                        -0.7363103806189211,
                        0.629091967525428,
                        2.203185835923033
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9
                ],
                "values": [
                    0.9565847577598379,
                    0.8430737654159021,
                    -3.401772384223322,
                    2.376972331879558,
                    -1.5023862753093797,
                    3.6328453116648305,
                    -0.7363103806189211,
                    0.629091967525428,
                    2.203185835923033
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 15
    }
}