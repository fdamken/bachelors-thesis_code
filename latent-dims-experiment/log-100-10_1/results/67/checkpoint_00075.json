{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        9,
                        9
                    ],
                    "values": "eJwBiAJ3/U2RP9tiauw/kqKSm18ltz8sJ69252+DPyPfoFnr6rY/kRX46387rL+L/f4jz6u4PxYtZD5w75m/Vlsp5KTShL/zeWp3z7ifPyHPemlTFZo/CEHBDTsA6z/QCGYZMPhbv7Dla2rRS6C/cvaks40QVL+olOs8DoeDv/+HwRRqMqe/1nNFaZ7fl78ktdC8aSqoP1yKHNRqEKQ/w+C1xExJlz+EvaEo/s7rP7RhgF6ulqa/pp1iJ6ULjT9uOCp0rOCrvzEZB2GUhaQ/gAfXxjveM7+Qvq2JsH9nv9DKvfICkIM/YMyxFB8di78v3OgjjrWFvy1PukkOkew/gXyu+FtSgD/mCqGoNiyIP8A17f6Hv5E/llF7elnciz8xm9tirzulv6fl1ocElZO/ADRUtqq5oj+gvaqXgGC4P2JElSWitbA/nM2hDAK87D/qt5wAzgWqvwwMdLnKZqY/82ySPxWHq78pyp4VPauRv+Mbu4B4ZYS/jYZqhG/Zor/UpixNdYyqv3R/c478UKk/t4CdOJQhfj/Aq0CsGeXtP2Tx7H9ZM6O/cYQ59jE+pj8KPMjWrHaavz+mf+E1dJI/+/gi+sYasb+EuHWEzI+KP2bfJ9s5Vpk/8leL3Y9Ck78wsIwuoXpUPyuv6kg/ru0/tj6VJX2hgL/PwzEmvXSmP81uFWOdrJq/Zx63w1X4pr/NnQXFsHI/P7hV8xQMPKw/mgtglskcRL+Sxsvqu+KlP+Bx58TN9pm/eT1nV4Na7D9iGAOhzM2CP7quS098OpQ/FojOkiFUvz8wuB17AGCsv2F5+jKs2se/ohLIGTLEnr+v0jy359yJP2wAGSJh7EW/JHKS0LgGqT+0PQ7Z8qTrP3o7TRg="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "strides": [
                    8,
                    72
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.04479272949880854,
                    0.1691397036706557,
                    0.1151375513360283,
                    0.3059195337220649,
                    0.03907630353790944,
                    0.1348146986971016,
                    0.07992611745459785,
                    0.12957931895570726,
                    0.06261728866331236
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.02017136658579875,
                    0.007068767492231644
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "values": "eJxjeCOw6L3JMvsDLtKrpYo77RkYbk0umCuwn2HB/djg0Fogv26yqlW2PUNG0taZm5faM2ywTWD8X7CfwUJr9WOWEnuGhF1m4rvy4PrdbpaxzyvdaH9B4v6tzope+4bK6BjNmub9Cf3zmE7UTrK/EPRf/VzQIvsLiy+mixtPtffwEn9QHdiyf0HF9CPlbXn7YfbD9B8onheht2KzPYOBl6PX4Yb9DA2iR0K+quxniMr2U3282p5BITV2RlyqfYP+g7e71GbvZ3h98LD2vB64+2H2w/Vf+Jb+6eUOe4YFE513J2UA7ZMPTvvRC/TnnvVma9L3M0xwO7Qius+e4fwqTbWMaXD/w9wPtx+mX2giVxb3InuGB29PvL4J5Ee0xxfvnGrP8HaNKoNq634GlSyr11sz4eEH8z/c/TD7Yfo77u/rOXwAGK5r/hS/Bbr3z/4lTmfn7mdI2bmr/n05PPxh4QfzP9z9MPvh+h2LitNn2jMceZ3inFRoz/DmypcmnRB7WPzBwh8efjD/w9wPsx+qX6H0J5ND+2r7hox04R+Xq+HxD48/WPjDwg/mf5j7ofbD9F8ImRWQ+qXXHgBtTSR0"
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            9
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            9,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzcxMTY5Njk2cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM3MTE2OTY5NnEBYS4yAAAAAAAAAB5OOMq/u7M/waDtzN940r+PVyIDp5LiP4VBy9saC92/+wf3JWU87D//Oc0nIqrSvwjbE+4RLd4/C+B+GotXyb9nfAWYUxPevwJVCk83epA/vOmkdEf4mD+QlSmnE5jTP9qxuTYAlOk/2ITr7HK2qT85ZiRPIFm1PwrUb/gvS8Y/oCj3qh+ltD/hrijQFjrVP+Ip1JqqzMa/KLNbiNdO1z8/uWuS+sXDv5Ess7dkdJI/UkBsKXPL0z+214DC4tmSP9lm+9ZWqLW/ouKIl0s5yj+ImL3QD+G/P2C1C4a34d6/yy9MXIyc57/AAYBrDRDhvxwxsVzLleS/kGdfIITf4j8qs3IQbNzGP0abMQp/Gsy/NvabiDXfrz8vl8s3OzjWv/dkt8zSFMs/2wDFpGQ64L9Z445zByrSvwy6HZIX76S/PC/L4HjCxb9oy2xULL3Yv9gN1uSDV+2/KaoOjpt3qb8N9e29vOfSP8lr9neMJdO/1K7sNwFGmT/ggW+lkNHrv095mApl9Ni/EeOJBzTDyb8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc2NDMyNjcycQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM3NjQzMjY3MnEBYS5kAAAAAAAAAEX1YImCuM0/69Q/sWYNnD9I796uwzvUP0XhkXbTA3a/cKYGNrf5078ll1J9yxV1P1Ie70bsAaS/wuHKxO5en79NUySy+wGwv4h1YgEZr8C/5xV5OIT0cL/s3Xn3dL20P0qAiEL+Q7K/7Sw9XxHXyj8ExqFeNreHP+GNxkWORqk/9ucjHinm0j84ClvyiRu7vxnKvwuXGqs/BK6CWEnStr/AsGrEus2gP5WvWXz8wp+/abFMuA33sz+KFJR4O9yaP+J9GwTCYZU/o6Ilni0c1T8Yy7uintKYv+5hqVEkAXM/p3nZf3KvgD85hJlpKMrLP/e/VBY8KsI/9HYiHp/6rT/rLg5KG2GDv4YzpPJ4+aw/Fd73PKO/zT+Tez5E116VP60Cwm1P5bA/OBVf3tSrwz+d8qkkDsnNPxn0zjORXcK/rBaSDNhKxj9x71UA/lGSv62LpXS6E6g/Xee8vDNutr/eV81KoVvPPxwJWYJnSJ4/T2jV6kpGir8itzOdC9ihP6noogzp+ME/9W6vX/mVgb8hY/4g/mC0v31mAOvIBq0/mTo9LXnNo7/M6gJFREKfPzcUhbIGH8m/3QiEZPvHdL+QsiMHvh+FvxXQG32IKqA/ewDECveEsj+Mj9SR4BOFvx7GB8BZVXA/ucpgr+xZvL+dDjtboF/Av/UrRI3h6Ko/ozEcupyXib8qesXmQi6bv18cwBdkwoa/yuMTsMFuqD/Jci7hOMemP2ctx8JjG7C/PO6mDt83dr/SJv1OMpGmP3eLUFw1+LW/cXiUCgd7l78coXQHnQhUv+zplYGMJa8/167gIiEqmr/zoDNaouNhv9NuGxUZV6s/RrXmE50JoD8aEmzPWW2Uv7gE+1OOs76/fYg+AG+mkj/lFvOOaAxfP42Recl5q4O/oxwVLy+fqT+0Lcz00wi/vxL6pcMkco+/dewssUVHpT8xrraMlHHFv9I4GjefYby/OkaAMZhDeD9tL+KkH+WnPzwhEXNO2sM/Ud55NVkowb9YC8Z+exuhP6snS3lQUJK/HdHLiNJDbz9/8lS/Gfm2P1icYRgeOXC/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc1NTUyMDk2cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM3NTU1MjA5NnEBYS4CAAAAAAAAAMkKVDbYadY/3EsZroWWeT8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    9,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        5.815158593248986,
                        0.08759110228987994,
                        -2.0875497917123527,
                        8.097464305059123,
                        -3.3408986333905726,
                        8.920966748613228,
                        -3.8474894047463857,
                        1.1398559633348115,
                        0.4851989184819093
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9
                ],
                "values": [
                    5.815158593248986,
                    0.08759110228987994,
                    -2.0875497917123527,
                    8.097464305059123,
                    -3.3408986333905726,
                    8.920966748613228,
                    -3.8474894047463857,
                    1.1398559633348115,
                    0.4851989184819093
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 75
    }
}