{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        9,
                        9
                    ],
                    "values": "eJwBiAJ3/e5DnJFv1us/kj3S9/EGvD9JdhFRO/VzP+CYGwHwULo/sbmzkiRvr7/97BtlOs60P0V+mAOZAXy/pk5etNgmkr89nD68tMGnP9sPjn4bHZ8/lq2JZCaC6j9BORHsCQpSv26+3I/1haW/kW+CJvslQT8kJv4nYSSJvyOgrvA5qai/WHjJRevBnr+KzLH5en2pP56WsC3QX6U/WXH8ZSyekj9tOGwcQyvrP/eTB+rFHrK/QwaxFZlojj8weu+qi82pvxgHPnMjkag/1SZTQAm3cr8Fd7Zsco0iv+T6jpv2WI4/0gvDt2J5lL9SdUHFYWOOv9LbKxJ4Vus/U72snhZ5ez/zE3tsYGiHP10gbAzRTJg/5wRjUPkJij9gjEIBTJWjv8TH++6tS5S/KzWgBqXCsz9oygQttT26P0RTFraCObI/KiipHP6/7D9L3SiP8geyv0VLxDNILKs/8qkBsAXLqb/sZnm3/HKPv1nJkQ79Co6/eRufixZmp79vnZIBHFCrv2fG8yBuebE/UyAyzFaffj/Go6hk2rntP4Pg2GOW7KO/K8Ge2+hJpz8LojKz03Ggv8roDeQLk4Q/x8Zpsk31tL9HRXCYznabPwuHV+b9hrE/x16itc5bjb89h5LOFtN7vyIjAcFSRO0/Ul66Hgs6gr9Kg4eKtfWfP4yhFhoq6p+/JvfNEKplqL+DUKoQwuwwP7YU1MhUNas/z5RApqXCRL/LF2q0KSegP7yPyuo/tZy/U69dxTAh7D9ruM1+7F17P1xVR9LkEZw/QXfG++GYvz/WmswAdjeuvyisJti1AM6/IbaDucwWob+5P/XZQqSSPy4IlpaKDWK//QMbOeF0sT8yA4btkZHrPw5rRJA="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "strides": [
                    8,
                    72
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.029490740404543008,
                    0.14086133599314876,
                    0.08139244520403,
                    0.25434449569382594,
                    0.026969936122181872,
                    0.0832915458024695,
                    0.06888309959762563,
                    0.10449848897472745,
                    0.045027702395715324
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.02260988626872313,
                    0.00491859143555763
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "values": "eJxj+KF2dGvWAnuG5Wt47kwttWcoKJEy3pa9n0GBn9d8e6U9A8Oi6oXscfYMN05L2N+aZc+g8PmVxezU/QwLLnpsfFNrz3Dm/9dpVrlw/U+vhW1ZybXGnqFRrV27RXN/g558oMGauP0fQnbcXbKg3d5gVYl8e99ke58F/8omME62b+DrvHHZwcLewcRv/sowXYT9UP0Msy3iWcWXAd2xvTHnkZc9w53Ps7qnVOxnCGm87vJ3tj1Dw3+TNQy29gwOkv+3pzXtZ/jvXMx4vQrufpj9cP0u5tvZCrcC9R0/VHowAugf7rQt9hOA/PTX22cF7md44C7nm1hlz7C2WEH77AS4/2Huh9sP0y8Sm27cO9OeYcEJh8Q9RfsZrCbtmlUF1Ldj/xap2oL9DGrve5tOlMDDD+Z/uPth9sP03+k7Vle+zZ7hgexz9pay/QwdkrPCOSYA/eMqmLevER7+sPCD+x/mfpj9MP0svfEpFVOB4dMXl/2s3J5hi9eUPJ0Ye1j8wcIfHn4w/8PcD7Mfqv9Bd0ab+4sl9gx8k3br8obD4x8ef7Dwh4UfzP8w98Psh+pPkCzdaVHaZg8AaA4PlA=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            9
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            9,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc1NDc1ODcycQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM3NTQ3NTg3MnEBYS4yAAAAAAAAADoOJ8Rnbac/5feWcy/m1b8vkDrVx9zhP0WnuUbgv9+/ItxopKF67j9GsyBFGsvSv78AU2A8w+A/hmsKsrm+w78DngUFk8/cv4PY6yAW6Ie/+KGvv3Floj+wxL+jYzzTP2VAY88pZuo/cnGxh282nz9k36+W+C6kPy6vJ6EEGMA/MeQKkyS4qj/7jMzEE9vWP5jkEE0t78i/lsa/2Z102T/dmvoqQl7Mvy24IyqHzJO/M0NgekQs0T/TlmWEMZqqPwAHNxNj+8G/xnCMGXxSyz87+K4LrqjIPx2Wd2S17d6/XDnVd+d06b9f44sHWOTgv3Ru132jFee/J81T04qR4z/s6s+1W+nHP2x2xqY5B9G/MzX1d/Pctz8ohK2+KB3Tv6pCW4DDS8o/ylW1swfW4r8+l3/TpEjSvz3qSy8/TKC/1LlJ3v5Exr9nK7EKKK7Uv2syjpwmeO+/ewY4akLRnD8v8bgtCY3NP0DV7iIOBdO/OmB+a8onuD/6z/svRW7sv4BpmzoRCte/XwJIJrswx78="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzcxMDcxNDU2cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM3MTA3MTQ1NnEBYS5kAAAAAAAAAJzPT3ACzMs/7MTteBtAkT8VDQr0C0/WP2iM6CO6SJQ/x3xVPHl81r/emzT1F1qIP5toH65MV6i/iwMsMaL9nL8trHddVDaovwWC869jzru/WY+RDOPSXD+sATAQuC20P3jJT5bTP7e/mSyrGHZixz9YfmAVsomdP7AyeSiZoa0/F0hQrebx1D+rUUiQ93Ctv70lPFWHu7E/As1fQU5Au7+qHL8dokqaP76yOjnye56/vrkMc0NepD94uIHR7jVnP6CUogyv9JA/+1eRyUPp1T8QTBkvbmCkvzrlRuLgFJ8/I2aaf7Tvgr/PrxwBbMbNP9Vgh+gklsg/eIpqMazVrT8ItystIfqGv1qqJqGHLKo/54B/BKQbzj9CVUZbqn6Av/livkbRdLE/8HxGN541wD9jdbMbTR/QP9sKnxePvsW/m2tDnSV3wz8d8dbIWL+Mv5nmzbMGuLI/ElvEXno8wL9GhrAtc9TLP7bv16yH5lm/fV9LVOuteb+xfy/yMIWQP97puWrx2sU/pJjsk7PHm79jGBEok0W2vxiS8sy4jKM/VWnkQcNHor+kBEd750KdP40T/McTzse/3BNaMLdYRr+k2oS0YPuMvz+fRnVo9p4/4P3XVvWFrT9JTJXKEqyJvxjImX4ub6Y/qvy7Iw8+u78nkQy+9JvDv3D+O1fzpKI/uob5NEnyhz+8CQ202fefvwJIbTCvE4G/USl6W/Itpj/XMxyev4SoP4WgbME/TaG/OiWeisgGl79dRnKXdO+ZP/GDImonBrm/cwUodsMsob9AZvy9hc+kPxiArF58Y7A/i+cdVaVemr8eJ92ealOVv/bG4s2MLag/JUxKRPpSlT8cmP4aC0mjvzM5fSxBb7a/2t/ukkylpj/eowHgcYWkvwGpfiLJWZM/LpZ18pPDgz9S6RVgjX3AvxwAygGFQpS/5luJjG6/oz95u/CJIkrFv6qdIPQTC6u/b+cBZsPPiz8E7mKp+jWwP//OZE2YtcU/mZU6Gf1Twb8wCYm80Y2QP1+8TjLdBZO/FsUcUUNY7L6Fn2Nl0U23P7i9vHCkQH+/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzY5NDEzNDcycQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM2OTQxMzQ3MnEBYS4CAAAAAAAAAJLc4WXHRdc/3pRCgHLOhD8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    9,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        5.9802604455664925,
                        0.026403565107117,
                        -2.0908363285640363,
                        8.355283211363613,
                        -3.4196905688430754,
                        9.127153131685786,
                        -3.925889684252147,
                        1.1891644590159465,
                        0.4840848747884715
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9
                ],
                "values": [
                    5.9802604455664925,
                    0.026403565107117,
                    -2.0908363285640363,
                    8.355283211363613,
                    -3.4196905688430754,
                    9.127153131685786,
                    -3.925889684252147,
                    1.1891644590159465,
                    0.4840848747884715
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 85
    }
}