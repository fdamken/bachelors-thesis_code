{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        9,
                        9
                    ],
                    "values": "eJwBiAJ3/Xu5IRLcJuw/RnTd1chQpD99eymC/pWJP9EiX6gqQp8/BX57QwYxpL/SuSelZq6zP1EUGct1IJu/YX/4f7Zxir8EOq9kH9yYP5G1V0koyZY/BPiML/Ci6z+pzyG91dxWPxv0fpdUf5q/0KeNU/6GJT8Iy6dzjDmMv4r/SFvwEZ2/t2U50JBUk7+YrxU723mkPzoiomTtnak/coPp+rfckT84HNSR5VTsP/S0r1LONKC/de0VSQC4hT8xS8qDKa2tv4+TuSS9sKQ/QdgtNq83c79L1MN/ClNrPzq+pZPdOIg/APHL58Dvir/m3Ic53ryDv279WS0HNe0/EjH0PCinOz8Q4F9WPAOFP8hxCHvAbI4/UxuALsmchD8YJq2FD1acv/6JyzjWMp+/qogdk1stkD8XPxN2R+S2P8E8IQYrGJ0/x72kTKaJ7T8ohKYZmX2rv2OOdAMxbak/BDvXcy6Ipb+TJJHIk+Sbv8dKCDSMvm6/nd/hTzyQnb/3WKa1rrSkv9eZbA5FHKA/q4tKpz4nhT9TMkwtq/7tP+2wE6rPEpy/WrsLi80Ioj/5XZtpNn6Vv5biChJ5ipU//RhskpFrpr+11vxfdeR0P8uShUwjVD8/EnJWy4W/lL+D21yO+MQjPww7PWe1SO4/7I9dXctkb79xYfyLLaOkP/G/SYe8oqO/gCVIPGAPpb8La2hxc6J1P8vqwEi9oqE/lBbsM9JeeD8Qr2en3KeiP6XBF/LPRZO/XDkRoRm07D9hnTJKgKdHP9YH+074NJ0/GWphFa2svz+OEUQ0Uwmnv95GJQvKacS/GPC4nD5Ror8p5NwudsiAP+f0agVlGIu/I8xgB23RnD+LycSOD4/sP4AzPvw="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "strides": [
                    8,
                    72
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.10122371496394461,
                    0.2127752328226329,
                    0.16211453717879176,
                    0.3555416594374515,
                    0.0552661538021009,
                    0.2168322516221003,
                    0.08287200210718935,
                    0.16418495285297505,
                    0.07135685022966388
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.026492255391154684,
                    0.008466594492550371
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "values": "eJxj4Jg2adu1dfYJH9y8pwrMtWdgyJ1n+z1tP0PCqScl7hPsGRQ2343OTbZnmBcdkG65wZ4hYc2i5v0l+xlEjnG61JbYM+wIVTTsKIXrf7GKq9Hs9W57B5UJ5+Vm1wLVn9gtLW+y34B/lmtB0Tx7hco6toWsq+wl9Ju22JQutF9xYPL2RIsJ+x9kX3ysuqFgP8x+mP4D+v119xp22TOInV4TyjgJKH9/D2uo5n6G1RNSrOdstGdYEMJ8eqOnPUP5lTwBkYX7HU4aefPemIhwP9R+uH6Om5s9C/cD/WlXPbfEYz+DwjMZ1UszgPyCXfUJMfYMUV8Ci3hm2jMo8e9hT50H9z/M/XD7YfoP6E+LXbzcnkGg5/D6nlqguOeMFQHz7Rm2rp/81r53P0MId1PalUR4+MH8D3c/zH6Y/rb0U4eLjtkzfFj35EtBx36GXzLic27O38/w6llGunMzPPxh4Qf3P8z9MPth+ifnZMTpLrJnWLFNNOxKnj1DxrmcbzIJ9rD4g4U/LPzg/oe5H2Y/VH/CC2tjnfkb7BviROd8u9gBj39Y/MHDHxZ+MP/D3A+1H6Z/QozuvOb1k+0BU6URJA=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            9
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            9,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzY5Mzc3Mzc2cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM2OTM3NzM3NnEBYS4yAAAAAAAAAPAkD02+jpU/+rPk/PFf0L+nDeOC98TjP8wngTN5Pdy/OZbfTNo06j8c2J2BbIDLv/qb0dtEtdY/T6mX121/xb+hGfgdsn3evzFZ/hIp/XO/PCCVeSOMrT/Dr6LQhjDVP/QuLmeTfec/HvsKPiWooz8JzFW2zM+1P2M1Kg0FQcs/issCcLoJvj9tX8T9YhLQP639DML1+MK/Ahv2ennh2D9YfAOa/pi+v9wQjhbHrai/IlfXmFoa0j8AwwdmAEaXv5BqdfNBeo6/CPAXP7GMyD9WBIZXG+K0PyrtONdYJNy/2v2vRDrd5b9d3M5tFWzfv9DMKOz64eG/IadeRj644j8U2Q3s/d3FP/cYv+febcS/aX5KavVkxT9eYB2L+7HTv/2r7amEncU/lgvu+58r3r+rEzBem1DQv0dnQ7FmIbS/L/PiIB8Zx788jz55JKTbv1F6sROkquu/M9MONv2Gxr8bPu73KsbHPyQro4QlztK/oH8ehMGdib9iO8Zf4rXov46yx1jC2tm/Aqvg5KKlw78="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc1NTc4MDE2cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM3NTU3ODAxNnEBYS5kAAAAAAAAAMujRZ8K188/fcNRgo00lD/ThT+iBDjUP7bNVigr9Za/vwlOWhRx0b9VgH+298eOP9RaqzKhP5m/qKlgO4ZQnb97uZD9tHq5v/6dO3lpzMO/HAt+jJWpob+OGl3WFFC7Pyqc0T7ExrS/k6exBFaEyj9mX8VrLkCFP1/g0YpWfJ4/28iSqjzE0j9SDZvCm0S+vzDgb6PdKLA/l7MOC28Rvb85lbzhmyeVP/OiveYW06O/Dxe9KSePsD8kzcQldkeUP6YLZaJwqpE/AYZ0R6gI1T8vW0yd1jasv/yPzyUa6LA/RoxR051dmj+hBtp8u4jNPwUo7jQxQMM/BE+lRhF1pD+mUXcnt/Slv1BYR+Riq5A/vNSTdnhZzj/hnZwJa8SGP7cMB9SWprE/oqnVBHTwxD+4h/MNMBHPP78ArceCjMK/I2rFmlS5xT/SyGUKbZKWvy5Hdw6jv5Y/uNQNUL0pq7/i16chYnTQP77q3/J4xYy//4SxcQ3Hqb99JwhNhoqiP/KPa5XahsI/+Oc1WfASgj96iPbjlpSzv7Q8yhCPnqo/heRi/9pOpL9A0D9kSGSOvz79uHKm6Mm/mlSe5X/GkT8BPq63tPyVv02ymJN9UKM/uA+EuKILwj+B9rKziryCv4bvzjzTAoW/zkq8sSYfvL8zm6wEofDAv4rDPaatMKk/d2Ii2ByTRT/u3Y0YNYlpv5wRAFjTv4y/4gk3a0qgsz+4CCuMcmKjPznJ5vX+ELK/xekpFLvigz/mXIOa/66hPwSTFb/uN7q/7WtxfawIer9zcOoFt3VfPxRK5GS6uq0/qabzgv8Kq78ZG00N1qVyv+dOP531fp4/rClkM8jJoz/WZuWLbAaAP1WquPvM6cK/I0lghrtmlj9cMabw3ISDv7gUaSEdC5W/Wq6RQ35nsj+IDHRSy1i6v72huXspaZo/a+QjSnCqpz+eo7bAED/Fv9oA4fk31LS/QdbU5APggL+uPdRn8IKuPzpTK637rcA/mpvTgjEdv79vNj2p7ZGkP/PyjlRTwna/sxdTyfMcoD/Dxcgw2Nu3P61+7tud5Ys/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzY5Mzc1MzkycQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM2OTM3NTM5MnEBYS4CAAAAAAAAAHdqjgfiONY/LFYBLGPIZz8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    9,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        5.496489121016458,
                        0.13954996176919662,
                        -2.0572766007188306,
                        7.415700969546325,
                        -3.4431065931064797,
                        8.747493657103124,
                        -3.749224518042777,
                        1.1533569673600748,
                        0.577688380888029
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9
                ],
                "values": [
                    5.496489121016458,
                    0.13954996176919662,
                    -2.0572766007188306,
                    7.415700969546325,
                    -3.4431065931064797,
                    8.747493657103124,
                    -3.749224518042777,
                    1.1533569673600748,
                    0.577688380888029
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 65
    }
}