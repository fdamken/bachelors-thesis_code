{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        9,
                        9
                    ],
                    "values": "eJwBiAJ3/bBScTUmyes/8kCH7YsPuD+JqunitFJ7Py3HqfaVM8A/GzrUgP+asb9B8DCA56qzP1Ay6Flgb0o/jS5WC4S6or8vQ7VU6DmrP0W7MI0yh6E/u+Y5CwU46j9+oKDZ/aNvv7tDIJAZrq+/h9dJ+p/Icj8fen2/PbeLvwXbMdBhj6e/CR2VG1aPl7+qaxkfZLGpP2FqL2t3M6Q/S7TsB5z9kT+kFLaRsQTrP1eRq5RsZ7W/BrF/fs/WeD8PUOybzKqsv4D+jwSTy64/mLopL6kNhL93AAJ980J3P3YHgJNdD4k/BOgrmV2JlL/LVE7G6XSSv+8j4oIlx+o/oV0pAyZxez9d5rJncHyEP8SL4UH/xZ0/q7KBLGt+ij/WqOiRlL2iv1wguSWU14K/0rYpEGxQtT9XOr/08uS7Pxhopy+zsq4/Pwy+rFa47D/YWanThKuxv3ZlLr6P36k/W08fyFpirL94HHCNMi+Xv0T1Jxmsy5C/cK4HmHL2p790LP5vCqutv4to7AxVnrM/eSyzP4yNdj9YhNFsWMPtP+jAPudwdKS/IbIqsqePpz8klgZI8l+hv7+Jeg334oY/9DJBg7U+t79BjWLWe3+fP6O30cbncbQ/HvyexkzXf7+IUEZtO9x4v5v6FKDWJO0/rpghGYZcdb9ve2hQIoKXP3jwqaDiZpq/zHe+xv/Hp79Hixgh+7N1P7gNyyZP0KY/3qv7aq+OcT8Shkh5PVOYPzT/T+dHD5S/kOxWtgTt6z+CUbA5lBh2PwezrzIKQJw/teYX6lstwT+NUs2EaRGtv1/nzrT2MNC/IAiNl6vao7/YR8Mss5aVPzz/x00S0Yk/NY08bsWUrj9N6IMGdpfrP1MVSe8="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "strides": [
                    8,
                    72
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.02615120670144299,
                    0.12523102110733048,
                    0.07066389853336554,
                    0.24324350375365997,
                    0.022324933309261462,
                    0.06695476731860771,
                    0.06865193670832404,
                    0.09756719725077936,
                    0.03771393250373515
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.007780624139937572,
                    0.012726264806754045
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9,
                    9
                ],
                "values": "eJxjkOAotW+YY38p0NBu8YN0ewYF+xZjqaz9DAu6HBfPr7ZnYFAU4r/ja89QEHxim8A0ewaH1R8uLEnZz1DxSMMtvM6eoeJ2bIVFDlz/ysiXUg82rbKfID7fwaVe1f6Af6kQ/xLV/QZzpvnYLWy2/3HryPLFkpPsw+4ZrKgC0gx2k4wbj/nZB2g+2LbhrQPcfph+hsvOMi2eS+0ZGhYc2HbRz55hxlaPK6vK9jMkWJw/xT8bKN4t7dLlas/Q03JtUUrjfgbPrgN5/yvg7ofZD9e/4c6zY+Zb7BkOvFhw9TvQvwymDsZT+4D06W8Pk532M6x4kW/hUAz0J2PdBrA4xP8w98Pth+lv2FDsd3Qq0Lyex88PZu9nYDm/dW9tjz2DAG+1zYmc/QyL1ZX495fCww/mf7j7YfbD9E+xSlubCXJfzaHPJ/L2M2zY12vs1b+f4Zh1j9T1Bnj4w8MP5n+Y+2H2w/QvmdEtcWqyPQOH0EGp/HJ7BgnehZtcYu3h8QcNf3j4wfwPcz/Mfqh+Bemw5Q+4ltgzhESGNW52gcc/PP5g4Q8LP5j/Ye6H2Q/Vv2HOnKWi91vsAfRsETs="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            9
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            9,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzY5NDk1MzI4cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM2OTQ5NTMyOHEBYS4yAAAAAAAAAMiGshFhUKo/JTLMxZUg17/0TjxUXgDiP8sy2mOi296/PfExQjxf7z/rMJI6WYXTvw8Ykh+gJOI//JscK9ZRxL+Xib8HO+Tbv8ur6krUPn6/EcOFZWrGsz8Y5a7sAzvTP5bvMfzG0uo/U3BCIL/6rj+BzLP5ATK5P6c5Z7e7U7o/DXps02xpqD+SuQtMoQXYP2UfCNfQW8W/vHVs/Vse2T8dH4wvVZLFv1TmE1vApHk/jCK7ymOC0D9D2twON3C1P0MAE7A858W/yZI9nFW6zD+wKVQIvqzLP5Iq++x+JN6/Vbc3vbz06r9QOvRJABjhv/sRCOY2XOi/8aMT8HVx5D9CDBvTyO/HPyHJSthsQdK/n6iyhzESuj9Kj4s3uD/Wv89xTGp9ls4/t9gyuqz74b8NaJXSxeLRv7eFpYYsmZ2/4xyILzXSyb/jEZFE8snQvxh6sdCnzu+/M6gc8VNmqT8dFlopiJTRPykITWyrwNS/Gzw9EEoPvD9dfljdCKDsv16YM8Go7dW/Bbdyhh0vyr8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzc2MjY1MTg0cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM3NjI2NTE4NHEBYS5kAAAAAAAAAM1ib5+vy8o/pf2XCidSRr+RNun0Mz3XPzdlEytkQ3y/2XnAnyh41r/4AsZtS+qWP4YdeO4Y/qW/R+VUmaOTn7/ckxtKvfifv3t7YFnC8ru/XwhF3K3Rcr8cc+6E/xayP9sJFAtLPLC/5B3BJpglyT/SFeNkMsN7v69JY0UaTqY/piqp5cbg1T+V3WFKXwCyv4mfzalWfrA/45mxxohMur+GoFhxqzigP5wnUGy9j5K/6QjvzaCzqT+MctWdlp6jvxG/5/4BTW8/S+H+Rq/n1j/4xxV2ZdiivzByZWFpIJo/tPgyIGLaj7+hfukMw8vOPzOt83zw28s/gbyLO+3Qnj8MN86kp2eWvxaXguD4xLo/t32ZGXIzzz/r022hqUWDv+5B87vN47I/z/r2wLCgvz9TAxCoVbDQPxgWydZCdsa/OKrcOo1nwj+bZMGz5Sd9v/mG3KGTK6g/EoC9pSdrwb9r7y8viqLKP8rzTpsk0XE/lnk3so4bm79/N9VNS0OaP3XOGrGmxsc/K6VqPmUSir87drQMC0uwv16hpzMKsKE/LNvUGP+8oL8YrzKUhqSVPynlckhmIci/InREl46Idb9L7BJ6Cz6Rv8zZ6eYCn6Q/OPoq6LUFsz+3BtgGfVWVv3Hht+u2hoo/pEbgMRl1vb8H8/y5cybCvycPb3fFMaU/sgr0d8PFc7+981UhQ1Oiv+NcsTOscHa/LvQRkXnDlD/8HoB8qfuqP3c3+DxVAqm/U6QAy9UoSr+LncP6RQ+fP3eNjtoHo6+/xlgVrU8otL/B7LaOGp+aP6nu+OHwa7E/hdce5m0RVr9JBQIdYOyKv2tRtFBLZ6A/dzXT3n8ykT8/N1NLaaerv0Io3L1+t66/XG+dkeF5lz8yEozKcFenv6/Cd0Vog5I/7T1+n5sklj9x8JLxexbDvwF4nX9lwaW/Zo8EwpECoj/s4CjajHjGv51HdrsETLO/8unN96+9kD86SgwMhpCgPyEMmvxy2cU/8ueO4u4bu7/yOye657KZP7OzXpUReYC/4iqXeboNaz/5+B8W6yC4P/QsCWrSCpA/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzY5MzkxMzkycQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM2OTM5MTM5MnEBYS4CAAAAAAAAAKWPO3CyStg/GlXKPO/PjT8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    9,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        6.049770083429947,
                        -0.0012390787406389124,
                        -2.067994650303902,
                        8.450292312165836,
                        -3.5653049602674365,
                        9.30777558374684,
                        -4.01560515910655,
                        1.196495721028771,
                        0.49192805779925136
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    9
                ],
                "values": [
                    6.049770083429947,
                    -0.0012390787406389124,
                    -2.067994650303902,
                    8.450292312165836,
                    -3.5653049602674365,
                    9.30777558374684,
                    -4.01560515910655,
                    1.196495721028771,
                    0.49192805779925136
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 90
    }
}