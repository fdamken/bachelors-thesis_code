{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        6,
                        6
                    ],
                    "values": "eJwBIAHf/r+xlFenYfA/qGTkCbNvsj8hDtdIZ+SvP+17qBbXs3A/Z2JfPSSqpr+ji+tefwWTv8gABXgLzp6/XlIozTtf7j82F7ognJWrvxxdll8TGKG/c7LE+hb4jz/j3kMR1DeMPyLz8nLmKpc/21ibLxv8aj+SvnFAPvLsP0gx6t/egn4/SO4AX4twib8Qmpw+0m1eP+Eraw7fGaq/z5o7oHsfjL/bFVwIhemlv5SAhXHEBO4/1IK7vh2Vl78nihnj6CiRP2B0eVXkMLM/YqFIv0bSmj/m+jwa52WhP7tcmcyJ9q+/Rg7xVXu77j988thFIPupv2w3WHGIT62/+UAiPvKUqr+5FaZDa42hP2GmXXv/FJW/U7rJq+wmlj8KSVDl8YXuPyu+knU="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "strides": [
                    8,
                    48
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.07748335154051501,
                    0.11845534295788528,
                    0.35835575860905444,
                    0.1472034047537581,
                    0.0445735053753623,
                    0.04921777680363745
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.013190216905968555,
                    0.006779621550209981
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "values": "eJxj2C09J1F1qT3DxsXPeL1n7i84z+So+H7KfoYVEV0ZsVX2DAyJs8umLNzfEL5175rrM+HqGAwrWRlZ1ttvqNO5NPX+gv0MbWahQmpl9gwJMZ5PvjfYO8zwWCD7ZQPcPJi6tayK5jYlB+w/VHdv66vo2c9gX2HX+K54P8Oa+QHBn1IQ9kLNg6k7kKH2WjNukT3DmWyhkBOVQHVVCSpJ3vth7oPZCzcPpq5vX5290Xr7hm+cYsks0+xh/oC5D2EvxDyYOhP73OOifHvtAemjgG4="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            6
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            6,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzk2Njg0NTQ0cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM5NjY4NDU0NHEBYS4yAAAAAAAAAKmcJ/JYSdM/N0S0kvd40j/z6bxwDQvDPz8W0L6HCdK/bbOZXV0d5L8hm0VuL+bVPyLDs7Bbb9q/+kMMqDoQ1L/XLnIBZyTUP/OWMSrSdOM/qHViJ1UH1r/5jiplLS/RP7OxNHVKHdM/Ew+wzPd11L9P+m8OKfbIP2Bmqj38hNI/5tqxWndSvb9Vx45W57XjP6F48cfxdrY/Ojnc3fzW1j85VKtZK4HVPxPwHMSVhMA/AUTSDJe62b8x1++506DGv23HjHBWG9Q/wmzyrv3W9L/EiKM5jDCgP+JDQCbg/uE/YcZMIuDmxL+uVVN57Kfev6URlrhCdty/VOQwoHEN4b8M4vRGCGvCv+JLc9i9Jsk/2CgeSLD7s7/G7540L8ndv9LK00ySreU/9NPGO1mX178oLYPtXJHev1NHmsmAN8S/nU/F8s3n0z9w+4xoPwvdPxEio4VNWes/vkN0/qjB279Twj2sWwjgv4drreWK+eC/uEC8obXI278ZCYDSg/7FP79xlZ5CbdO/L3VyS8V5zj8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDA3MDM2NzM2cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTQwNzAzNjczNnEBYS5kAAAAAAAAAECytdx9r7o/iHZv5QhIcL8VtXhxtP+av7Q5WNbGZaA/TWWkW9d9oD9VW2YUDd3JPw+n60oTPZQ/FBnjAvZ8fr/zk5qJoOqmvz2tz+yZALG/tKRPFCwtzz+qHGCiT4SNP9mWmeOii6M/FGe/8wi/oD+H22syLRnTv+ZJAJlBk5G/B/Q7I0V1xT+SIn5PgRLSv6jYJU1h38Q/EcYSh+PJx7/Qo3HOMlmIPxTFzBzkKcS/jd8vNy4Fm794fMQMvFLFP0Cs0A4KhKw/PfIYV8CYzL+ypekPN9jCv2sMEWiVVrW/iZn43GgW0b8Y16O+kpWdP9QcmQnD08G/vM/kon1srD/J1C8+SYt3v3mNB1KGBrK/dYziU783gb/u7JidcCKxPxXS7mJQrri/8V3vOhBMl7+Q7XlU17vJv0QCUzcbc6c/A+XW06uVoD//w/+I6b6fv6tJ07JVSNE/sBUH8g1FtD8hU1wolJC3P6/FbHIBdH0/ITbDwQS0zL+Dmszn7hG6P+0h5qYTUrk/lGld+juGyb9Vw7qUfgmtvz3tfnTFQ2s/LAuEpt0Xmz+oyevwjdSqP71CjzBUWaW/b3iObTGfxr/8v0xiNqPEvzE0KffmAmq/Dr4pBzuyoT/YFLI1Hx+Qv8kIOZBEtME/MxWRw415xj+KgyxNfNyZP7+rU+YF2HO/OZFxhSdMh78zcoJO8Sdgv2glUBKxjZ6/foNH1J7rt7+HNTQr0/y5v2iz9/RjhJc/V3OHf9C/kr/8fUzLsrl0PzufYpe1Vaw/Cdt6qXZ6tb/zkuVAXB7RP54GR3I7NKU/GlI+pjR3r7/ismZo+Lewv06nQbRmK6s/az4Un5xorj9GbMlKqRa4P8gvUYnGKau/61zaml1xt7/PMe5XaqmXvzBslvGuG6a/xiR4rwR2cb8c3bIKuA+9v7+l2bcf/ca/ZvbYiFw2tL/XCBgwfUJgP2qBUv/QMJk/PLFd0iVJeb+w+E2vbYKxv0NCXzo497S/IMr8NPvzwb8wPVBSXCu5P0OwltA4mq2/s1fk5T0bwD+6kvXs82upP/fP62tkZ7q/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzk1NDQwNTc2cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM5NTQ0MDU3NnEBYS4CAAAAAAAAAO5rzHppNMg/MymkmQKJmL8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    6,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        3.1352954120037553,
                        -2.3984508503476354,
                        -0.12571342804381586,
                        1.57938914238265,
                        -4.417633344689728,
                        0.6712432004116364
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6
                ],
                "values": [
                    3.1352954120037553,
                    -2.3984508503476354,
                    -0.12571342804381586,
                    1.57938914238265,
                    -4.417633344689728,
                    0.6712432004116364
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 40
    }
}