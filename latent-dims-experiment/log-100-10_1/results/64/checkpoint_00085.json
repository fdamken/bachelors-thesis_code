{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        6,
                        6
                    ],
                    "values": "eJwBIAHf/o+QU0TdX+8/pcJmbUiDlT+hDA3bqDSkP4/OAC/0gaE/VKrdkwo2oL/YxT1E12Wev98+xXHyTIa/vpcxjepX7j/qtf2Zio6kv0ngyg2YBKu/KS3A554UoD+B16/sG8BMvyjotjLxWJw/zMavKvgQaz/39zCMvo3qPyOi264Kv6I/odY2/oxTkL+g2hUyZbqcv8Ue6eKhHbe/tnzswEXQkj+w730QpROVP5+M4dMis+4/8T4JkWpNpr9NTSLTsI2eP72j/qgFQ6A/yrmgIz+0gT9stN709a2gPxWwqB1gzoS/fF0y1ezi7T/YvXIIHpGjv+JnaXftUb2/pB/bd1Kjsr8EeIwVJpO/v5jbTV1O0qK/uuyTFX/Dpj8qb5HpKsTuP6jwnBg="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "strides": [
                    8,
                    48
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.04132501984374589,
                    0.01686101508723463,
                    0.031036604785085072,
                    0.0143355245521896,
                    0.009453980937326129,
                    0.008600473577107387
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.012044823820018792,
                    0.021629804771408714
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "values": "eJxj6GDqm6DfbM+g8LpEuax0P8MFjr6KzTn7GRjerFCotLZncLBlfX+/Yj/DAQ6jwHs5CHU/mm9Pb22zZ7gzs3sic9V+BofZPz2LS+wZEiRnG3Pk2zNcuRDwJKgBYR5MXffifaX8s+wZ5vlH3LoH5FdYPXZfmbyfYfuuTUznC+wR9kLNg6nbqP5//51OoPwqWZnMOHuGhi05++N898PdB7MXZh5MnYffx8MyQH0JJ/74LYi3h/sD5j6YvTDzYOp47hyaMK/NHgAHdnnj"
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            6
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            6,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDAxNDAyMzA0cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTQwMTQwMjMwNHEBYS4yAAAAAAAAABntHhsBP8w/pvNUyH9n2D9V+jnAorfRP7SLDjCKR9W//zqWNrp/4r8sqoQVOoPiP/zw1d428uC/LGXEqhqVu7+b53A2T2PbPzF/uDgZYus/jM9Kh1wo3b/dXSJwO0fBP+quj/3Ipb8/zemRZ6lw1L+1CNo9CZXbP5BmvrjJltY/nQ8krE9zvL88o78BOvnqP8IhnDQqld4/2i0kyDCB2j+McPG1lCHYP5LpnVu69mk/MIwzt7t247+a/bMCRjOxv9qkR3HEZNY/yKw1Vxua/L9Wp2d6nTzIPwhN+XEK+eU/US3F27dX0L+729hpZ1Dnv1Kw5cgjEuW/3TKbcosz47+Z17Y1lFOxv0vBqeMSK9g/X9oX4optxT+MdBW8aAjjv7QeXlaKw+o/gcv9a5Rz0r/jWzuCrjbUv1LBthJNRcW/XNZCTXRFtz+wkg9aMDDkPxSswQnHQABAx4NGSz7w2793XMadUdbRvxwHmePt/+i/Mf4LugZj+b/bJqh4jLTQP7bxUvTyocY/2IpZxCAzwz8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDAxNDAyODE2cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTQwMTQwMjgxNnEBYS5kAAAAAAAAAFJLprzOoLw/R0mrDXmpmr/ujCP5mkp1v0KlTIyVxou/ST+O9yO2fD/HIdlk6AvPP5HF6iKbQsI/CAw59PRTkT8XtlYrEG6xvwWR/ve8U4i/rSPh5BbHyD9ZWDi8mTqlvyZ8zSWUfZ8/wXs8LAq0fj/hUEEDImCyv3J1cOTUwGI/Jv2KNvGmxj+3V1L21DLMv0CWVR8oH8o/DzWQnpHKiz+MBQiZVhq6P3ErRp9Ecb2/WWk/IVAcOb/CgNepfdLCP/wBbdxsL7I/QRO/EJr00L9o58e1c3DEv1tLvKlSDcG/cwbNFIy70b/z+EqBou2bP558sb11zcS/XRctqUdunD/R3Kj+ujqvP9aVXnmJm4S/caKiezpAbL81wJf+PDOlv/j/KxHra7a/Xf4yrqX3wz++lmpfQKfGv5/vY2yvaLU/boxSw7HxnD9Ziq4NFjOivxnlCdAR8dM/rs4WeDagqz9bKpx5pmWuP1HJ45kfepA/eiURBpwA0b/6kyoSJHHDP986dNMwycE/KfzTsT1my7/LAyzg9Qe6v+Ob0ApLs1Q/g4eH95nqer/yz5qHmwNaPzSG+UOL0JK/WAZ5Zt4Bxb9cfIlnWjvFvy04+8Hy5JK/hhdvdgvQob84YUZCQnKrvwGx4q+tksE/G9yE3Ilxij8t10ZeiCBxP3vaJOqRX2K/+FV4Uu1jnb8aL5cELyh2P1xPZAiizhM/ggoLBs5l0L99R2v96xC2v6M1n2Nrt6E/+FHKJbB6sr/lPVyMlg6yP4lIihKd2a8/P9Q4tnTZs79c85S0tWXNP+ci+xTd1p0/a42wkX3/p78qbXE6Peyxv5OymOCKHoE/c8pGHBCWkz8KkeUIkKfFP9nEnc8ytH8/Iye/4eEgoL9r+btnO2iXv4EZ9Or5QIy/jV5WUse2nL8GWjt6oOvCv8ilFU0hWMK/R4tXldrksL9FY6Wj3vtxP6b5S1sq8J8/rysE0yqrkb8FeCV2vresv/F2W2mycpm/bjAoRKwxvL+VXRHe+q2kv0Qo6Whr8rG/UPvrUT+OuT/NmXu63fCvP4YLq4S2b7m/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDAxNDAzNTg0cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTQwMTQwMzU4NHEBYS4CAAAAAAAAAK1+nkTihc0/quyw+pPdh78="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    6,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        4.534507402187088,
                        -4.599568343617637,
                        0.4788748616951004,
                        1.8650433657138181,
                        -5.522722927008811,
                        2.5280102544470826
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6
                ],
                "values": [
                    4.534507402187088,
                    -4.599568343617637,
                    0.4788748616951004,
                    1.8650433657138181,
                    -5.522722927008811,
                    2.5280102544470826
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 85
    }
}