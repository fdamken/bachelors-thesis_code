{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        6,
                        6
                    ],
                    "values": "eJwBIAHf/l9ad/kthe8/Hz2ht0MxoT848SjC5xOrP3nAz4X9EZs/Fheh2NNToL9gFe2rfgOdv548K+bSdG0/5AuGyhR87j/7/9Qrwc6dv+8h4MBQMai/tnGJp3e8kj91gvwhrjh/P01PdWChmaI/K58oHVGjfj/y3z67gHXrP+qMwpMfi50/Y0tWwlY0jL8T9y2FAj+Iv9qmPYsucLO/9A8ON7bsfj+8yBgIy9hGvx7gz+ATiO4/oCHdKKKLqL9E+WbPfBagP+1jPz+LI7Q/Z0ALA23wij/yn4/pHiOkP9OjmRWNm5e/C6+80p1Y7j+vG0eEe8+mv0sT83YsG7W/xW/TeV/5qr8zdffECpCnv7yv6nrTC4O/EASV0m8Wnz8/p4+nAiXvPzKTkYg="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "strides": [
                    8,
                    48
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.08783766486626181,
                    0.05769700838435982,
                    0.12351029925469927,
                    0.04529214130390076,
                    0.02793915913673322,
                    0.03138911165253835
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.06143990984938318,
                    0.009876560117800182
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "values": "eJxjUNg2y2L3FHuGgqx+Pbnm/Qyxf5/dDOjaz3BgfmYsQ6o9Q4LqO44P/fsZ3ixvOSXViFDncfnF09Rp9gzn9oSk5vbtZ7iQu455bZE9w4SC801FpfYMHjGVe40nI8yDqftZmXpq6gb7hsO1bXpvW/YzfNC7l2ARZM8Q0mZyfEKJPdxeqHkwdQ2afhel9wHd2TD1ph5XrD3DD6XUQLdkhPtg9sLMg6l7wWI2o302UP39W1HpZfZwf8DcB7MXZh5M3StW8y8L59gDAGd8frE="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            6
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            6,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzk1NDEyMzUycQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM5NTQxMjM1MnEBYS4yAAAAAAAAAJ4p91IHXsg/hJDEuGKY1D9RfgFeWnzSP4H33yxsQ9m/VUtmrCjd4r8LIo6cwSPfPxJS5smzxNy/gQMmfoASxL86JQ5JzBfbP9AqtBdqWeg/xnUT0iYY2r9zTqJWerLJP6eaA/81/c0/zgJl1P4T079O0HrMWI3YP/0Xb8q5Adc/LQ0eyimNtL81JW3Y91LoP80LWj1wutM/PvJgYQvZ2z/zjoiG0qfYP6n3yUDzHqw/HSfnDbRA3r9iz9QCPDjBv+Lkh5lVXNY/TK3mJNVB879IIIe+YGLHP/NnsoMWe+M/7nGrp4rfzb/oif3lsR3jvwWWi3sL3OC/dqsSGo2n47+P/vRpSGDDvzDyADRp7tI/CkZQ5mU9tz8tJQ6pYVjfv6WhEvDbluc/fQeI6DZH1L+kO6sDHfTVv1+7Y8fG+7m/uCTNofNiwz8L1KFRrQviPx00iitXzPo/nY8xfypE3L+zjappVyHav7kTIGjgnue/Ya/TisyQ8L84sDgI8MXHP2IpxBA2yM6/ftomt29YzT8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzk2OTkxMjMycQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM5Njk5MTIzMnEBYS5kAAAAAAAAAPEP2J8neLs/r6PNajftkz/QE3Cy2QGkv66LMKdSOVM/w/2ihQNfoj/kLeOV8U3NP59dWneOSbg/EDkvvwWHXL8mRlEL7gOlv+xE+yNx2XW/rucHvwjlzD9CEN3RZRx4P3CibT6WrKQ/5qw0XBeeij+dLNJ/duzQv8XFSwMckVS/0xAY4bHfxT8SRhk8EkzTv+FZ2QTmT8g/NXibCLO8o79pk36Q/9+3P4u1iRCNKcO/atz4MwXVZr/CKjLBZzjBP203sVRfrKM/E5VAjOoJ0L8mFHgzatXEv3RCd5DtErS/z/UO44by0b+Nu/OMCWekP2DL377r4MG/5672gOCjwD8jEE2gATugP1muSQHarJ+/PWBRtckobT+CV5o5VHFYP6y9U4MUZbK/B7YnXGcRsD8kE3Pi9ZDEv0eR8RjjtKI/oo4OiendeL/3Tn6TpsGWP3tTgEVhBtM/K0JiwgXOsj89/elat+ecP3mrrCPEeIg/PvShm+sV0L8pfEWh8I6/P1c4WKQL7L8//4SSLJkXyb9Pl46VC2Kzv2FkAapPXJw/dyLZ6/a7pT8KnuHZn5SHP3zgRv3zzyY/MpgMr+pHxb8YTM1oRhG/v+x1MjkfCJa/8I5q7JONor8qbyq/hZucP0R9ulOH6MA/qoA0WvC6zT+OqPUMspmWP3EvVAjwbK6/B3Zas9f2r7+xSgXLVyesv146Optw3oq/G1mLFJtfyL8Ns/4QY6S2v5+XF5834ZS/kC7sXZ8Ior8i3GlcVYGsP+ZTwI4+G5o/TDOEDDVBvr/qnwTTJwzOP0f5GUrRCKA/+khcGXB9pr8mqa9zie+xv9qoAK2YdpM/J5lBZH9dmD874aljL5HCP4C2TvQUpGy/hzMLNEDTsr989LxdIDSov7jdneGv2Z+/kGfN3yh7gT/SJfTOhyK9vxqrKUOGwK+/gLfTIwKOqL/4WXekdUWfPxd7uP5vP4W/c3Obhl0ukb8w9dJKJdWtv9buDPFnnKO/LY+J7rins7+HxxJ6LHW0PzQgnvC3Y7G/ej5bT5Uxvj8ooi9eU9SuPwu2zmeWaLW/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzk1NDA5NDcycQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM5NTQwOTQ3MnEBYS4CAAAAAAAAAFLjhS+BsMs/8ik+TS9TjL8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    6,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        4.09437005594987,
                        -4.209048648682806,
                        0.7044388096160707,
                        1.860312244071193,
                        -5.022296905649628,
                        2.350278335316549
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6
                ],
                "values": [
                    4.09437005594987,
                    -4.209048648682806,
                    0.7044388096160707,
                    1.860312244071193,
                    -5.022296905649628,
                    2.350278335316549
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 60
    }
}