{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        6,
                        6
                    ],
                    "values": "eJwBIAHf/m+A7yPeTvA/RCpMGQjOuD+XKtWz8dGFP2Ro0IFI9YW/xZgP/kv+lL8+bRpzEDF1P/uAVk3U45+/NkdtbCaV7j9IG500Xg2Sv7iVnBiq6qC/d/mTtHmHcj8yWiHiK3iXPyfJuh8ERJI/r3pIMe9/gT9Drldry4ztP7de9RPo8Da/p5vMNsbEdD+QyGMsRWJuP2V2mke89X+/v9bi5TV0iz8kraboHF2Bv3qKfiFu0e0/sZg4r/helr8dBiqZXQuSP80qIe/qK64/u1uQF1GAiT++UEyC6KyoP0CZ/tsvjpu/225XFU/g7j+rNbCccxuov7MZH8r+8a6/xRDKfTgOq7//tH4wNHaHP9X9gqWCol8/2BiX/y1NVz/c7vLFl1DvP1QJktA="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "strides": [
                    8,
                    48
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.22293005671272184,
                    0.36249513522375265,
                    0.8273914658136997,
                    0.4607567026913327,
                    0.20473272696760098,
                    0.30441954062510473
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.024419230468693057,
                    0.00856148801614802
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "values": "eJxjEJLQ/9t42L7B3v7PzHOz9h/4td6jrmv7/gZnAwGes2v2K5QXs2s4Ht5/YMKvEIbtS+HqLmwL9Xjw+IC9w89F+i8vrd+/4LOv5rVnm/c31Inaf/4/2X7Gf+5MXYbDcPNg6gJW7X7p7XDZ/oHL/5mlxzbbM/Sf3eyzdqa9grtXZIjCTri9MPNg6jJyJnzzDrlpz1DDeuXE3b79DLF7NYLUptjD3AezF2YeTN2BhdKCcXpn7Rs2b8hZ77nCHuYPmPtg9sLMg6njELw/5/Lta/YAH1eSRw=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            6
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            6,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzk1NDYwMDk2cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM5NTQ2MDA5NnEBYS4yAAAAAAAAAHMeIairD9g/JTfSm/NRxD9DPLl12YSSP2BL/if2Pru/S1bLxg/k3r850fz5abHLP6+JzMIq28+/ngNQyS6c1L+RwUnwLnDHPxinviBL4uA/MXW5V+ow2r+cHC9pe0XUP5orv7pXhtw/ixgH7/0tx7/DxhkGHZqvv7wedhc339I/8wu8b8zuoL/BRwDoOMLbP7mHMy4C0Zo/uad3RCeFyz/wSaOXw1XRP7yXDMT3+cg/PTjDbNpW27+ANYfcnTrMv0zErJO6+70/PDlYtiar479gQmGW9tunv27GB8rCCeE/+xPqD+ckxr9kbbzxWnXZvz3jJCCUsd+/sAyc3gUH2r8EE71bcXyUv0xl+c5zYsE/uf0L5zd3zb/4TJVr0J7Sv5husWPgB+I/L/9N8AUc27/uVw4v1y/hvybr8cjlOse/9+QEgvGG2D9VLE8nx7nOPwqSCy0KGNg/pdt26OWN1L9LZSnYZKXgv307Or3C+9q/lTnjfJ5ptr91hg3wfPvIPy3loIyqwtO/VOHsSEW2vT8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDA2OTQ4MTYwcQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTQwNjk0ODE2MHEBYS5kAAAAAAAAAGTardNKvrc/hjU/9fy0kb+6w6QZzpS2v9N+dL+L9b4/m5EJV/Tluj+a42oGuIvEP9XhwwKyJIg/gSDVvPvxZj/IIsPacs2rv9lc6j14v6C/KTml3JyRzD+AshFTUqCxv+zZWO/JybI/lFEEE7S1qj9cLZ+MsNHNv6lIV1/XMqS/lVeU3FW0wD/JU2cxkEe7v6KYwtWCEMA/2MkJrGA0wL8zFA6D8Klwv6upW21aycG/a2UfgdYkrL/bIFVlDkjEP3fH8IQgg7c/TuCfJ7urxr9wobHLV77AvyQcs56BJKe/i3zv5nFvzr/q50amZpuMP45MPEvu4cW/yrUNCd+jsT99e0AV7Eekv4qxE4sODL+/HTtePp6xrr8vfvZ+7ZaxP2uZUrkvYbS/fn0TC87Klz+9pA0+6D7Hv8+Fk6qXRF4/ARMlYEoTnD9EiArB9mLDvzHK7D3s68w/hN2YL9XwtT9L8cV2mqnFPwQhrnTsXYO/4ta/c0WVx78ZbR7ZrJ20P50kTLJbJLU/yU5QomHMxL+HvGryIh+/v2rVv9pZWp4/17FP2u4doz9CKp4ddoOXvyPqoArAR6G/QQ6nU7IYwr/jPI3m8GfBv0esqX2BdaC/aNtbDKOVVb8aZZcJGCKkvySY9wrvM70/09j+5dyNwT+1fLmwR6CwPwV30CCgjJW/ACeydnUEpb9t1eaBEGyfvy3q17zzzqa//+XR4tSZqL+/lroTADC1v+kFxf7x5ps/ZH5HbsPxtL/3ZlMQeCKrv6LH98ilp8A/z1ztnSfcpL/k7HquG/XEPypPVYweoJY/OcCJzw0oqb8XvfRptr64v1FArkuHu7I/eFqs5wJqpj+jF/mobF+gP/limnvvD5q/d5ukZPKxv7+ENFOKLjW2vwEBFwCteq2/rV3Z82CmZj8SA2Q/k8i+vybYJCW6E8u/SCITTtFVpL+bVzViyBmEPxRXY62Onqk/4zf04Gqdkr//U/JvLQCivwABp2onjbu/EXkZk/9wqr8pJQTg9GW8P3YLjOMD/bO/DzH/PxcJuj8G03vCFrmlP3f4QSakkrm/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkzNzczMDU2cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM5Mzc3MzA1NnEBYS4CAAAAAAAAAK36MoPzRsI/qNERTT34cr8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    6,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        2.394021245824386,
                        -1.0500310162387159,
                        -2.3753768576944783,
                        1.3155705354409692,
                        -3.3404493532193276,
                        1.3298319722419176
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6
                ],
                "values": [
                    2.394021245824386,
                    -1.0500310162387159,
                    -2.3753768576944783,
                    1.3155705354409692,
                    -3.3404493532193276,
                    1.3298319722419176
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 20
    }
}