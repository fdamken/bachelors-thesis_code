{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        6,
                        6
                    ],
                    "values": "eJwBIAHf/ocSZfX9UvA/0P+BdVx1rT+qy5SyXK22P+N0UtwC25I/0G1LJbokpr9u41m3oseYvxluE1TY45K/q6aJJXFk7j/5e/om8hWvvxgnhoNfy6a/MB8FlLbfkT9tG9FtTOaHP3ANgypZAaM/2VWVMmtVhj9e0So0cq3sP07+PyXfCpY/zPRta8IDlL8g5lXZYCJTv8b2CwiZFbC/N/foSER9gr8kBq7muhGSvzWGDuwWRe4//VKAS7mSnL+kLpcB1beXPyuyQD6h4rY/JItEA5nVmz/qhHMWyhKlP2U4efTAd6S/bbrbk99E7j+UP1LftdOqv9vYJRlUL6W/X6Qk7euGor8WERtzOJuXP98w+aAmr4e/Lmzn8HSmkj9iHpgorQDvP6cSkP8="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "strides": [
                    8,
                    48
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.07720471737557383,
                    0.07800635699951347,
                    0.2421721528770538,
                    0.07976799167849885,
                    0.03212464945471162,
                    0.03372782953517995
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.012560001790583556,
                    0.03171677023633788
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "values": "eJxj0FOZfFx0nj3DL+Fv1ydM2N/wz9ls8reJ+xnOtKiaOhTaMzi8SdL4OW0/w+KqRcbaE+HqGP4/qtu8baF9gz+PzZlVQPkZzztyhMrsGTZck7ph3mLP8O3/1X+e8+HmwdRxpDW+8/XcYc/w7COrMEsXUN/jFU82x+5nuPH6XOV2N3u4vTDzoOoajkzk/WA8056B4dWzxZMC9zMImH3pDwlAuA9mL8w8mLp13Qc3XFtkz+AyObXcutge7g+o++D2wsyDqmsw/7Ip3Xe5PQD+ioh6"
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDAwMjQxNTM2cQJYAwAAAGNwdXEDTSwBTnRxBFEugAJdcQBYCgAAADE0MDAyNDE1MzZxAWEuLAEAAAAAAAD56v7zLAbrv1BmKeNU6qG/NOoHpGB0xr+kwP2LmUrSvw2ob1S608U/Q3nmwKBJrT/+qPLNEc2xP8fBCGKklb6/YKvGDsPd3r8fwg/IAjWsv5n/IvowB9i/2FObx9xk2r+l9y3sZw2nv/EjQHZ06KO/6uGrFWyMtr8QwUyU0G3OP9gzLzECGOK/EaDwu516rr8S0kehlsyzP1K61AwEJp8/tnBESJpX7L+EHUBVG7y2P7wXv6AAssk/cxjvPT/mw78hGRSMcSfDv4MS/6mmnLe/B6LufNEs7j/KLyzZaUPRv0DSLP7na6s/gz8NI5NoVT9EaIVS+P3Vv86erm0tmN6/D6G/y6u4zb+CH9/5G1bWP5s1EwA23cq/8qQ97fGnxj+r90534UDcPyMgd3LETMm/nIjC3WJaoL8ZusX4ygTEvy5IeuzXmuA/x0vVw0Aj179oX+HAJeidvztfx+ozLba/MTs3F7VY6D9v90swbSjKP30FW08yias/w/Lawfp6eD+c526ZXF12vzWxXKFpuJ6/syUH8struj+JRR5PvVzNPzZKiplhPN2/nMnS2XsR0j+0LgX8RKzKv0DHIv7Lm9A/cpGdULV/1b/mRe3/RCiWvxIBBmtrpsW/mFX3yskS87+JQ93CMg3Xv9IhcnsuR6Q/DVfi+BVp17/Zc9xAHFuqPz0DY9KQZMA/krIUO9Mz5r+Tj1ueGQTBv75ZlG3D9NA/IAAdXP8Fxr/lcFIh4pzOvz1GMleSsdm/W2joHCDk4z9ubyctK8yjv/xHGEp7qsS/b+fYcRXmoj9RDHRuJwXov9rk+K/dX8O/D1sD4hxYxT9TOGzArGe4v/0rcsciIr8/Whk7H981wb8WtyY65Kiuv1WpkLINuso/BlPf4ZQM5b8FI/AF+GWLP3zYBhqzFbK/w8QERGoGzr/R65d2aBPkP0MSbfhpNuG/4KvFKmf/1L8GyCrSP0q4P4TTlxsPZMA/pdhg2hI+1r9kMD2iyYfdPwd1gQiQHNA/ibf7MyQ0w7/A8rKWovHXv9AYSinOuL2/6mdTcbcJxT/IsfUp/Fyjv0WN9iP+YOC/ywP8pVKO2r/LQK5T3AHEP2rd1VD3f7+/kJmvb69bvT9ea83UNQrPPwvyBs8K0bu/1dBAbflkw79w5BVj75DMv9k2LY1TXtS/VyRquB4yWj+dTRWKniOqP//w8NDi0dq/KcfuWnrf3L8FfQE6O9HNv4MKXx4ViqE/WlJ2W1XIpj9jJ1xeITTov2dE22AY4ti/X1FakPjy078aIzcK+nfTP5yRU1J36tC/YFv4ptKNqT9WqTqDt7quv2ryPSEsscg/6GAoxD6OsT99pc7S4jm6P2TXgF1v+9g/RuH8mUBl4L8GN2ay99C/v+F6cdmTrbY/CTbnyCfj5D8Vds7ncqvLP4Ab5XLmt5M/PBsVcNOYuD+RPgVUpGTYP1xdyfFOBsg/lDgAzflv9D8dGVp2omXGP4ylj7dUb82/zBKIe3vZ2L/YNUwUIzTFP0rh3YrwUs4/sswmDmIS3r/igNud/SrQv65mkLTRNJ4/CCrYmaYS0b+h/yMODHC3P3SsrzgCqdW/UHEpt1Z1yj8hdMQdSoLhP+CdvZf4KOU/JgycdTxn8T+HKELSoZDbvwmoK/LZE+Y/QTSeg4VK6D9G3bsjkw3BP3VlPLPDkrI/CtnI5jHHur+WK1+3XVDSP19vYxK/n+G/YZp1v+7/c7989a9Tu+TAPzFtVskFHdQ/2CdgUdgFwz8s8eOTITObv76lm8Ri6+A/pQU+vNOd1j/B3B5kKkXGP3nCj/23ktM/9ve1Ngsto78n4JsYzy/HPy0hTMJ5ZuE/nMbxsvuAzT8OBbW68hm0P3M65YNfqdq/wLFFjX0f1r+oZK6veCDbv5s0YHB8CME/XyZn9b3Lyj9geoWhwTOgP8co0VC/aMA/oe9IhWdtxr+E1aiCu+K6P6hkhzlXadu/Xu0zT9hX4D9nGBikHaHIP7hEe0dJYta/MHp1+C89lT/PfURlHircvz4n3cgOobC/Xs/UZAR0Mz/bGUarETLMv6NSnl4eXMm/zWELTMcElT9zCjJN1fXTvyW/dgE/sOM/d7mb6/Jo3b/8B9/lD+nDP85juxsIGtK/og5vXlYw0T8CoReaGtekvxE31gCYjde/fX97P3rBwD/N5C+SjD26v0XKTrSiq6g/my8XfUS9zb+24dPYidDfPweWw9xNfMS/7lsVI+wd7L8fEjbIEB3UP1FNkTxfude/t7yGumQRtD+lnXXAQd3Hv30yvOgIDLI/aEomdh3i5z9DO+Ryr4anP53a5MYgXsQ/dqqHsGTOyz8QF3vLOLS3v/egJ+06xss/3M9dcPbTxb8Ftx6zm0PZP8sKehTLctO/xVHYaNWpsD/M+MXUBF7HP3yFN2jWcNA/QO3mguozzr8LDRbyhbC4PyXLVSHUtb6/cQ4JoqT9xT/3LRoUPMmZv7XbK8WKTdW/utlOTBcl0L+baKR/ydrJP5XaLQGVr7i/thedT5zr2L8jBbmNttizP4h0DpVzNdA/C6QrRdRA2L8+SlQJPa/Wv1MSl39ZTcU/TlLdRGA3hz8wZaNqidXdv+FpE7+8lLa/PgFCPGa6ub9T6hlVeJLCP1NklreLMbC/IBep0e9qpD90gB4R71DPPzapFn0Sht+/zqTu35X1r79J58mrzd7gvwmhadW3fPO/HGRyxUl4rz9C+ALE9jDrPxItCZ2+O+S/Ud47gFJuoD9/M2YYpiXUP4YRUBdfr7u/nnMCPDE9wD/R/1GT9ZO/P1ZaTLDe1OU/wyEvXTfqwL+zl2Th+gXMP28ezT+dWdq/j169CditqT9I68um+t7GP/jFxNIJSbg/ait0z4b25b9mquQdNLOsv7SV1rn3Nt6/na2ViaVhqb9LhP+0mljCPxf9KbgnX68/4/OJs1+U4b8ZV9m0bOTdP7pfrV0Y99Q/ksK6tAjHn7+le/ta8DHWv6N4x/We7+M/Mamxfm6fvT8qVfCGNTzGv9EaZSm8sb+/S4Zw2rJ1vT+bdkUVPQ3SP0RsBhkOCbY/y2iDuKqrw78NNnqmDqC3P41TtF1We+a/6ayl7Ytqxz9bYc9VZerGvxyEMWI7taw/hMdy2xy6bL+5S4I5bMDIPx3BZqEOEKi/ZVw1A5kFuD9lIV2pqTrSv5Hran8S9Yu/KzX89vA2xD8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            6
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            6,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDA2OTM4MjQwcQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTQwNjkzODI0MHEBYS4yAAAAAAAAAGG0m7gCPcg/ZdoWDGtM1D93PQIBa1PNP+k/6fm/u9W/Oqw1dZrj478d5Lxa3y/iP2exkBZpM9y/326LpiXay7/FtDkV7nfaP8HKatGcD+M/6j7e7rVZ2r+T0m5e44DMP+bgS0ydQM0/HS7o15zi2L/+Sh7ahnfTP9x8ciiwttQ/5bsn42YKvL+fohRs+dnlP0uUmeGrm8Y/22P5HnK+1z8PxEepy8XYP0vlRptO1bg/6nfukUAt2r/Mm027Pw7GvzfpeRMxedY/OOAPb15P8b9i4zT6d4nDPzIDFhkz3OI/1OCGtgS8xb/yDIs0KeDhv6wIblCB2dy/JW+FN35+4r9iMIWXbUC+vwaFWfybT9I/9hX3U/43fD+q4N8v193cv9oAszb16eU/8H55Uu7V1L+2Oiw9AgrZvx2osoMoj8S/KQc89Hhu0D+zKUVQbbjgP6cwL7bZQvY/88QwH8Mq3L9t4vGs3urcvzAXSxEc1uK/n8J+/ALR5b8BBZ8stTXMP/RpJ8QyP9K/ewMe7q3Ezz8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDAxNDA1Njk2cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTQwMTQwNTY5NnEBYS5kAAAAAAAAAObqBFD7Mrw/XCLXDk3Om780sv1xFLeiv0PvjQlD24U/bWYesLzMqj/E7fYntRDLP4I2zyFKx6w/f0kWLEjNmj/aY8YPxhWTv3UOm928NK6/8HBFDfNH0D+CpDX+sBSbP/npxO5HaV0/XmyRqVEZoT9sw1DYnGvQvxXgP95KQ5a/sDXSzlNcxD8I/vmUK5TUv5O6dKaAFsY/Ssl3fC5lxr+wJRxgZMSLP0s2aWeT38S/cw76v1pto7+1O+/Q1aLHP4NSnYwv36Y/u75XNijTzb+nChNk/CPFv+PBh6Lbzra/AMhuxiMG0b/PxwX+KHunP0TpW7UiNMK/3fZwmTgxxT80r1Wa5M+XPxpjzmuhRp+/1ULImGOiYD98+GrLsid9P8Tmr6c/q7i/hgqgN2GUsj/awsRFagrKvzu2p6P10nq/6ojygCS6TL81/Tx/oVmov742DSn25dE/CnqafMpywT8CHuaJgRuhP7Ec3Ep5Vo8/TxEr6iLrzb/KGl5sd8S7PwIJ59z1trs/sztKhg0myL8GUQbU/6yqv69No7xQHIS/xjdY5Radgr9Bh/WtxqafP0OrKOnMFaS/Nu84NczVxr9cvigxzozCv+lQSdWjk5y/ccCGGBz3Ob8ajSSElKOYP/oQZeEjlcE/sDLQH5gfxz+L2uO16pt/P/adKj93F50/IcUBzp/Qob+X2q7jlxeJPycEvRqt85+/qIFCH4QNvr8tHzczYs+5v3FhYE3hOJY/Gw1U38jUrL/ezbLnOSyDP86YrwEEb68/IYvkW72nur/bztebM/bQP5CX1yx0NqY/4FSmmo0bsL8R2TQOejCuv5uG6flzaKs/nSBX8Oj1rj+YutviH9C4P1DDzV5MoKE/xdYxjM99tL+xIVqoKnd8v/0++MQCK3o/eU9ZzyrNlb99pXL1UVu6v2s6Cub09b6/5mXGQTjPsr9Aw3QWWsBqv8S3VbpZups/S1HeuXv9gD/KirUnwAGyv7cJvDHxJrW/TPpdoelEw7+owioiN6O4P1ZMIqUomay/u7WodauJvz82ejCJE1ioPzl1B0ZJ8rW/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzk2MjY3MzI4cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM5NjI2NzMyOHEBYS4CAAAAAAAAADxesOiqb8k/YdJatE2Gmr8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    6,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        3.529854922625965,
                        -3.426008596811685,
                        0.7836216542983163,
                        1.7234220233796853,
                        -4.717438165002513,
                        1.4393630273204794
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6
                ],
                "values": [
                    3.529854922625965,
                    -3.426008596811685,
                    0.7836216542983163,
                    1.7234220233796853,
                    -4.717438165002513,
                    1.4393630273204794
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 50
    }
}