{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        6,
                        6
                    ],
                    "values": "eJwBIAHf/mi7LSZdHvA/LLOyY/6NsT8HpO4JyGiYP9Wg1tOAcYG/Rj/j7h7Zfr8Z0DdJ+xajP0UYsj8HXLC/SknQCc847z8VAsDpV46Yv0faroygBHS/WvLEt8z1fD+pFPyc56uRP/lzBokSqKY/1wAx0kbShD+rzTftNyDwP/WAIQ3zK2I/vf8LrhYFXz+cZ+fU9EaDv7PR1BVG7HM/8mD7NOe3jD+u11SE2tZ/P3/Fh7Ighe8/+a5hl+zmgb+BzNC8tB2BP0E62EArgaw/jWZu2ciml7+d8WHtZ/+TP8r6/TqIM3A/3F0UjGVM7z8tTZN0/9Cav1zhod/6H5i/B4UUvw07or9KBPoM74OMv5qhR87a6n0/R2kFpTYlbT+d0EYtIjjvP1RYleQ="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "strides": [
                    8,
                    48
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    1.1959186771016461,
                    1.0821672313241124,
                    1.262237959623501,
                    1.0171426403762753,
                    1.0067535767556326,
                    1.0653648749393978
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.03105468435405237,
                    0.02710332800401909
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "values": "eJw7w+BTtlr3lr1H/7nV0kdq9rf0xzLOKD+7f4WuyY7DqsvtH70vnSR468h+hmuZZ41Ve+DqCszqkyID79vLvPi0+nT5sf0VDUs8bjrMts+U7axkVd5jb//392NH66tw82DqeF7mMbLKPrNvOD/Lcz9Xrf2altSJV/9t2d8hEuiZPPUI3F6YeTB18qlxW+86vbWPeS7G++zjIvsD7NtFNDnq4e6D2QszD6Zu90FR3iPeL+wLPnqtnui4wB7mD5j7YPbCzIOpC4s7vfuIyjN7AND0j4c="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkzNTM4MzY4cQJYAwAAAGNwdXEDTSwBTnRxBFEugAJdcQBYCgAAADEzOTM1MzgzNjhxAWEuLAEAAAAAAACp1l6Jjunov462WZZu5MS/4nov0UlfzL/iOpdomKu8v9nGzYy725G/cCMsjT34sT9BLk732Y3WP+FpVf8cEdQ/wFSxbP20178InPCg8E3av8luucyeKtO/w52DdJPUt7/mya8DKhbFPz72fN/cO8g/d+vC8PLXx788W3gZgCKSP2rTtS1tEd6/YDXW6uNxsj/og3OgFyHGP1fQb7EYwK8/ttwFgN/K1L8anaXSIfjFP4LfJCQ+f7G/3kWLrZKGj7/BYj+OY2HQv3jcGxkzIMy/20xZJzOg3z+dUK/HK1nDv69VBWqqwKa/j6Uv+10Pzr9l37O6TefSvxs1yh34jMK/as7lr5nC1b9GCchAklGvv3xbKs2SVps/wZ7iaUJdxj/XlzDpkZDYPxJjo028H9K/bnoWyO2asL/MU1jaaEmyv9NBJJ/unNo/dEPIG9fdy796O5u4P76pv/aTfhk5/MS/KmZ/ZOgo2D9IFaleqtzRPxtxzDZKU7O/EbB0A3Nq178U7lj3BUu8P5mLxMyN4ro/wd1aw1VnzT/zmx/lsr18P5gn0ZvbjNK/pv9QbCqFzT9h5S8/ul+kv7VjhFHsG9g/GYclbok90b9k9b18/fPHv+nTqJJxEqg/QfFE9Wl9yL9W2/85rKnUv9p3SKkPg7w/4ZXO845kzL9PvxmLfDaqP/OuMYfZ+MK/xf0+fqfLm788Fjb+4u6tv8cDkaAGcM8/f0gJ4//kkb+2suUaLY7Sv5Zc+0qLyK+/duSjJ5aW2T+MYjSp2AbLv4mUBWgqndW/XyAyUoutvT8As8jnSsXgv6yOhKTh+Z4/JEokxp7BwD+DF9thdHbMvz2ztBpD+qS/628xAShjxT+UwWvEXpetP1TtpLrc4M8/TWaVAdHf0L98n48+XAXUPxTA+5HzctU/VXFg1/kVy7+/oURftxrFPxT1K+4GIdu/Uo/3N/eI2L9TKg4nsSLXP/JvMeGbItU/je0pR4md1L+eZgvLpRbBP/yEMCYP/dc/sMsQd4UkrD/gJ0NaewTTvxv0fZc2rdA/v/G0TpEs2b/wNNI2bMLAP76WLhiV+96/TawAhcOpor8O6mAFVPLMP15598ebaJA/lfpA0JD6uz+2G07X+dm6PyV+LhiO7re/Y8NO0LIIwr8O0rARV2epP7Xy8/WZ9LY/ZL7ZQh1LqL9m7gG21+nQv2+4C4NwZtm/Db9f+gFp3b8WxkkcM5zWv0Ftpf0USq4/+hbf01ELyT+N6ReM/Tjjv1tE7Y5PUdA/PMmi1j2fnr8NiXiOw4vOP796pFEswsq/0zPuuAGWvr+AhKa16Dm8v8AnUX+PTdI/7naPUyTTxj84AUaTUeC2vxsnX1gxvdE/MBKLbF3WvL+um5FDna3Rv0m9oihX3dc/LjocPaed3D8tgEY485I8P2TbwxC6sqw/v4lf6tfPzb8hKiURqUjcP/09ceq4rLc/IeWAMXke1z/x2hfszT7QPxfidFTLxcC/MfO6uOpa0b8/3mpZDmHFP2POJBEIJqc/y+QDBRJ8ob/HdWKd/k2/v+zRLr0Evp0/Key8ZtXKub9ycrrDxz62v8hTBZGC27S/7mJE1hgswT8eDDVG38zOv1VxC4DVVbY/zkpHhxHazj9htAR4Jfewv/C1twYLPNQ/jcIM4wxvvD9ytIshs5K8P0pPGtqizL0/plqV+vzXyD/PB65T5A+Wv6dTGZ6FkMO/3z3BL8B9yz88GTbw5jLIv9Icaxt9rr0/GhyGzIF5zT/7kdt19O2rP2CZNbW/o9U/q8XXGmZk5D9KxTarXWSxP8xBe6g18r+/HQwJzi5HxT8Mfl4pa57XP5HlrZav9tk/nv1QRpVm2D/ae89Hkq2dP3Wpecc+Qd+/hWpN47hH0b8nxdiff2vUv5wqxH/qFo8/CUP6LilxoL/bCkrog/BjP3KqVqz0BqK/0TTgx6lz0D8q7YnvsevHPz+FDQJ3ssi/Yp7Xwhg8wD8RUEJ+WF2oP15BxYpKkti/toleYoCvwD9DYUp1UE7Yv2irHyiIEsA/ukHPTUxcsr9sJ6yRGqfkv3rrczygM8a/B8HresMVyb8wDl2xsQGjv0LIiMFYTsU/ecY87gLmzb8/mjjwbY3MP23W+2IFZs+/t+Jk1//G1D/V3ISciv25v4eqZ6dR1ty/RMqy6EPXyL8aS/v1qSrHP8zsWiSMLdQ/RmDgLqzakj8k/ctOjuLYP2ShuPY7nta/iaMEnDD91b98wfrPLDrQP6eUUkLEDNW/AbBcdnYH0r+wGwodDLzEv08Ia04wklw/9mb0iNxJ1z81ss9q5QKsv48xe5sZQNA/AlLIjUvYrj9er/U1JyzJv5GcmuMhls4/FnExrvwO1j9rpzJ7AOLYP9AMyHc7atC/3FYOIlZFyL/JCdmj/BW1P/cT+yaUUNE/3zyde1ZX07+6vZEIn3PUPzkg307fJ6o/OHN2L4Omwj9GYuEYScS4v+wYRWb7Mr2/pBdlfEFjlT9lrL1xaaTFPwQjJMVfGLy/6jykCPbE4L/Y/veBxxS3PwEmWMPP8s4/eMR3m/z2Tj9xLrLK7JTXv538Xgpyg7s/pGgr+oKMwT/4UF2/Pu/dv83S8pfAs8M/myEMSihhxr9d/dlIOdrOP8c9mCo+lMI/ElBim2DZtL96Ti9UVCrFP9VqRJUHnNy/KgRnmBgdxD+cEaE40kjYv+yycHzKS8u/BEqGgvTryL94EwNuaYStvxi7/QzlttO/r2Mm10SX0z+eZ6adp9+4P7ZQR3xemdS/ZVrK5UnGuT/BEZaYLSfMPzn7hy7jHNk/BnWJ/XSsuj+jnEJhf/fQP7MSgCaf2dW/749FGcSzWz9nUaHszqHDP7E6trj+YMu/iy7jw8mp2b8AWkb8ZOyDv09RXVdJyeK/v6X/WgSkmT88qMOxesuSP0pU9cYPpca/JcaPzTBe4L+e3QzOQOTYP5vCqzYs9cW/F0KHmYWOyz9Iowz+xXHEP/gExsvTYto/qhJgn1YKw7+gN414F/zHvzZO2UaNZpe/lpWyIeq7eL/ecl412zS9PwcYSKfAo8Q/5dErQBCAu7+PjhUfuqvHP/PQ84DC2eC/oLrUf5lmvb8lwouQtGHHv7gi06VXjGW/qZl0qXApsD/6ncyIeCTSv34Ggeo4S6s/s93GCwgM1T8Um/l+T0bUv97pSEuSXsQ/QwOBQJiD2j8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            6
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            6,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzk3MDQ4MTI4cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM5NzA0ODEyOHEBYS4yAAAAAAAAAPw3GddNatI/qmlg60nFxL9pxw47PLvDv6C/2hmpZLS/w0hWT1+a1r+CzlVKDJPDP4g8KwbWxsy/4HSDnZNfvr9pRFEvhxikPzdiDHt3Q9I/H9c4UnDO0L+YjYZqImXSPxhTKDo+Z9w/OSnPu5CYsb8nZHAUYBTTvyuf9dv/ALQ/ay8CUdBN1z8XLAwEzIPVP291JJzmMrS/IN4N9KOuuz/6kxGZ+ALLP4in4wVfYrO/U/FugED52r8tHvOQlWfQv52JXtKJf7E/EeHFsokk3r8zY6WasyjMv68HIcjBvtY/XToUyNbbx79wuORj2dPQv1E2dwF9qNy/CSgpvFiq1L/kOsVPr+avv8qJOKh1CcQ/PKJ2mcYUz795iOA1v8uhv+rAeFZVtdk/3sgc2daH3r9+qj9oc3Piv+7odDxCX8C/KXRwX9Eb1T87FNLD42XGP8RDpyV/Ht8/Hdx+nQX+uL/o+FPuxAnXv/UXJ+vvQs2/4SKlmk7HiL/GdFG2yrXQPxsTVi3uLci//S7TEuugzD8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkzNTYzMjAwcQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM5MzU2MzIwMHEBYS5kAAAAAAAAAECjNx9dxKs/LEOAqZMOwL/1H3VkgXnIv+ww/wlOSsA/PbJ66dfYsz/2DLZQSam/P0lTWnI0Xqo/zOF3lz/BwT8f8geRYl+nv0aAoHDyYLG/raFiuW8gyj97IUCzV8O1v/kaT3RJzLI/k3Owcf/DtD/xYFjrFZ7Av3dcOFQT0ZW/QBhDMxiktD8xAz2Ed4+9v8paGbT3jMQ/TM0tJEqPvr8X+t1sk6ylv6fAe4lBYb+/bwhflaKTpj+TBbWssljBPwmtj/Ijhrs/8+Do61Xewb969/F03Me/v+A4/VkdQ56/FalDzGzSx78UL2kmSiNLP83jdC6/N8u/62w3o5MjwT+kHEAE8/2mv+5B2dPEHqi/vOe9YLSVrb8pTTOgch+uP5f6h1dGDaa/kYX6CeeDpD8d1htm8WbCv5M+tHPBq5m/xWV+tb/JmL8B+poXp7XEvxkn01TDCsg/hREP0O+jtD8aSTw/PHjJP2Fm2HomvIS/CW15KuHrxr8mySSU/+W4P2BvSQdyk64/9k62xb0TwL+A9Vrew8u9vwJLrQz3I0y/zxUGAJsFTD8cBzGH/U2Cv93SfWfZUqO/jgCWI+Gawb/mGFoQeabIv4dszHQYQ7W/tnKLuQbYp78rQZRR1HKXP3+mebyrYb4/H8IHfivOtj8nO4BnaailP1cpa2ICyp+/i5wIZfwHvr8GgI3LsKt3P0MEjCPRcJ+/xcOjorDXur/pyMW1flu3v0KvEHKlE60/pMpmhASSqr/WmeT3gDSwv8XPZ040Y7o/9bMCtFJShr/W8p0MUqCwP3n4QwKegZA/CpgGKLLRo78F0bUPJDC7v/IyqMZNYKs/wfylzmQnpT80Uyzg9ra6Pxjv0OHXK6K/Mb3MPxAZwr/flVG0fBbDv33XzRaEiaS/5Xp0C138jr8DwrroSn+7v73kJj81BcW/JDhFbdSfl7+RhQs8oJuWP87mFk10o7c/1vd2WUvilj/r+XgOB5Kdv9zeCNuKUbe/Meig/PiqhL937l61aOe5PyWMIZ3jFay/UeuymD2ttz9snmMuwxygP1ZqAA24E7u/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkzNjc2Mjg4cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM5MzY3NjI4OHEBYS4CAAAAAAAAAJcVXY+a2ro/i8h4XUPbUj8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    6,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        0.0696370136938802,
                        0.26000294897014936,
                        -1.65793733526704,
                        0.4246358474570381,
                        -0.3446743985944894,
                        0.6732607673403369
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6
                ],
                "values": [
                    0.0696370136938802,
                    0.26000294897014936,
                    -1.65793733526704,
                    0.4246358474570381,
                    -0.3446743985944894,
                    0.6732607673403369
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 5
    }
}