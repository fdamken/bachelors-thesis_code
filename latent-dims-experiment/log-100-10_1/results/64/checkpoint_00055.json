{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        6,
                        6
                    ],
                    "values": "eJwBIAHf/sJUw6Wm++8/kzguGsYFpT/UD3ZJG2OzPyXl2u6ygaE/vHRx7Ayvpr/WV0Mcq8Gav/FTmkxTGzi/svNVZY+V7j837WVvK5+ov0XbAf1mc66/ZbgMKHTCnT/vyWOaKmCCP2BrOD4NW6Q/HEj6Ztt1fj/5jgwFp/3rPzoJCW+z15s/n87v8RlSk7/gIxB+K+V9vwch46y+Pq+/0S3GToj0V79W39fEUttzv/Tt7I2XRe4/HFHilE6snb+IKtBKD/6bP+2+IlzRrbY/oEthTcPIlD/5x8sxcn6gP4hUw3+quaK/FvAsQE2c7j9qW8yDHaaqv+25lAqzprC/iKR/1ouWqr+E6WfpCtiMv4hAbZ7P9Ga/oJ26f4g/mD91BpsiWTHvPyNMl8g="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "strides": [
                    8,
                    48
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.08205909615837832,
                    0.06644359596096608,
                    0.16027304102351148,
                    0.06212019140964107,
                    0.030674422689222623,
                    0.031912003443187884
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.04025283153809505,
                    0.02305740969225269
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "values": "eJxjsLv53111hj3DhrguOYaO/Qy9zXYLWnr2M0R8YHzyO8OeweDj0T7RyfsZ9sx86iXehlC3zGr9e9E59g2ms02nuALlGya+iNAqtWcQePtJu6/GnsFxmuYB1hlw82DqaiTfhDYJbrZnOGTE+9y7bT/DAZW95ltc7BliLiZNSC23h9sLMw+qriHLVTDMapo9wwFmJt3JXvYMHmcXTMyKRrgPZi/MPJi6C0e8Fp+aD1QXbiDcU2IP9wfMfTB74eZB1dlxsnOaLrQHAOSJcuU="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            6
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            6,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzk3MjcyODMycQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM5NzI3MjgzMnEBYS4yAAAAAAAAAG3a3FHBfco/O1NQ9YxZ0z9Kc5yD/6XSP5V80ujNw9e/WdFl1n4+478+8wzLaAHfP/YUdyBEZ9y/sbVKa6QVyL/LPrlwBKzZP6FVPICf6+Q/5qn8H5i72r+EmqsVpQTLP47BceBZnc0/j3F4zdbD2r/9pHq39WbXP+g9sf9uFNY//BWU9v/VuL+hiFHnlUrnP4WugpzbbM4/aLJqtMuj2T/IMP6kehDVP7lAQlf1HrI/Mq3Tpz7F3b/T0EMJRzfHv8e/piwF2dY/9MMjdbsr8b/TRSPRkFvIP07NALxzreM/D8anQ5Fayr9t46EGZ8fhvxB03/Djt96/Ua6jFWuJ47/jN5mZxw/Dv+S3W0sPWtI/tCmxLQIGpD+B9s6pRRzev4or9h5cAOc/wCn0OWAz1L8BxcpF3HbXv2n2HYuozMK/FKH+fwoOxz8q6xgMZILiP1SKNDbo0fc/0dGXcTiE3L+sMhzgQO3bv0VCOagF0OW/48nUJhZ/67/qnePlqjzJP25Mj+XTbdG/PolH71+d0D8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzk3MDcyNzA0cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM5NzA3MjcwNHEBYS5kAAAAAAAAAKEjSBZkEro/IB1PWS4Rfj+wc/cgKjF/P3zv3alt1KM/DAxyhK0frj+yldbueXTMP9kjUQbUQLA/rsF8r2lphT+lcFPheCujv3lZhrxXi6q/Fheh+DmKzz9wGLSFe46hP43olYED1qs/EjE1Gk5iob+MRA5Ke2vSv3NaQEdTRX6/01UllmVKxT8gL3UNpBXVvwP65bWgdcc/wNI6SYZrxL8oz/A13GmrPz3uJ2URgsW/13BTfc9Rpr9bF9D3vuTDP8xLrlItKKc/2e+Fres2z794lJTRKRrFv4nn36Izhba/PfOrTU2Q0b+5K2FuBlilP16MAWvalcK/EBXUMxAVxD/Kbp4ZwT2fP45tAZ4075W/cgOo6JSPhL9R/WzPTn2TP/CS/lpFjbe/xYvK1KCktD8S1X40KGbIv+dzFaEeZZo/0eX7OsCHhb8M6da+BNakvz7KgBnol9I//bDPEpzQwD+FHl6P2+59Pwd7qW+0roA/bVCDrfhOz789Ps33MWa+P12V9UYRcr4/3/KnzVvCyL/Qkkp14Cavv7RO26r8aZg/dmvI6ISklL/N3ZU3p7mZPwZEtcCwJ6C/rV/l6oHfxb8kxp6auNnAv3BKLf4m4J6/mZp7HQ8Rlb9nqZAJfkBWPz3dGDUgnsE/4/qNG0c9yT+VT6BegMOdP8DqFIAZ5IE/tDGvezBksL/fZ1moc8dvP/MLrr7ykpW/ALzL0BWTxb97VIZ6+NW3v4TWyBUvOnw/xRnLbu/hX79WLJfafveZP+gCjhgzAKA/2UWU07uZvL8mxJKQ2gLQP3Tp7zdXYKI/zJXmBTHgpr//J95IX9eyvx7Qx6JkLZk/hJWjxPT3oT/f0uMB1hHBP3O6ymVjCI4/51UpNpiysr+EMMMA+r+jv2t/Qfx5lZ2/RO715C9qmb/EEtVzs067v7UzSgs/JLm/gVVGQJuTq7/z9AHpANSCv+B3R6Gm6pw/vPsY20Tqor8vLNaYWRawv/vl+uXjDa+/UXhfU+1uwr9EXueTJlO3P6aYZan2N7C/vUGGir/BwD/NElszMlCsP1xAi2yfibi/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzk2OTkyODMycQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM5Njk5MjgzMnEBYS4CAAAAAAAAAE6bsMmO08o/Y1UReLPYkr8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    6,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        3.9689940825227485,
                        -3.9481033985679796,
                        0.704152895180405,
                        1.8771263944921346,
                        -5.019057673275465,
                        2.0215714716903777
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6
                ],
                "values": [
                    3.9689940825227485,
                    -3.9481033985679796,
                    0.704152895180405,
                    1.8771263944921346,
                    -5.019057673275465,
                    2.0215714716903777
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 55
    }
}