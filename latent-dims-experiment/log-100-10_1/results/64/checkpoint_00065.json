{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        6,
                        6
                    ],
                    "values": "eJwBIAHf/j8eXHslV+8/oVEadJhonz/rrxCh1ZqnP9ck1N/iUKI/uvjXWwsbpL/dD6gQjoiWv2TzTCKXn3O/VaiF06F37j8jy2SnXbOdv9Xybnogoqu/di/Lv1YImz9y1GaYDFZWvyCaiUxGCqY/wgBnA969ij8vsfS7B0HrP2y9jCg3/qI/NUH/tSpNkb9LsrI+fBqWv/33EMLY0bW/PfIzcEPGij9okSQRTV6TPyUj0745ne4/fd6qgj1TpL+VjA63PnmfPzC4a6GLQrE/p4bHDF2mkj/qYNL2SYWnP9t+hj/yiZW/EYirG3ZY7j+wB9nh4AunvxZgdfshG72/gSLDpCHxrb8Yce3d2w+0v6Mb0r6penS/oQnom/hJkD/dn2LZ4QvvP44ckzM="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "strides": [
                    8,
                    48
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.08418715375557007,
                    0.048449817756778805,
                    0.08850621036223705,
                    0.036819805350131754,
                    0.024680146387010122,
                    0.02398091195452557
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.015432977209684395,
                    0.047593381268730924
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "values": "eJxjaImqXFM40Z7Boc+6Tqx+P0PqcvmJC9v2MzgcvL2/JcGeYYHJzYsTuoD8e6LKfyoQ6v4EXAovn2zPsKm3cjFD934GhiUfdqgX2zMUnFm062CBPcOFBzVW3hMQ5kHVzdi0bdau8rX2DU/OHoq+1LyfYcOrU3ETXewZvi389nVvmT3cXqh5cHVSD05kvpgEFI9wDLmSZM8wI65VZQOS+2D2wsyDqVui3uCnNMOe4cD8lTseltvD/QFzH8xemHkwdRsX+ZSpz7AHAA/DhcM="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            6
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            6,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDA2OTEwNjU2cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTQwNjkxMDY1NnEBYS4yAAAAAAAAAC/feOFy884/26Pi73SL1j8E3w9OZ4bTP3soz0y5Nde/kjmeK85j4787GYBAtPbcP4X1teDJRd+/ae+HF4nxxb/oD7JONt7aP0x/Fk4gnuk/9Rl1k1HS2b8rMorl0mfIPwsZYdHoNco/5N1LZmSs1L9iojdpn2jaPz/GrfHXk9k/AZwVr0/7t7+qyXGhmrPpP4DI5GpzPtY/ZuxEsg9x2z/VNwPVuP3YP2NM+6cCg50/9abuhBQX4L86KmJCKg+7v8wdJAD5W9c/Foq3/+wa9b/B/3wFC0rIPyr7cwhvl+M/ZstrQePkyb/EtD4IeW/jv694JlQrmuK/WCSGb6JG47/GtfDoqOW7vyrB8P9bj9Q/zuL9vOYbwD9Uk0UZrPzhv4Pse1dPJug/OXy9yn7Y07/dtStsvtvUv5kkBOI53MK/FC8j6syIxj9rfJTWC77jPyUgHOpwcPs/R4XsrMRV3L+catS0qaDZv23/Di5Ls+e/a2G830668r9W8ZG4XOLJP+AL0XiKA8S/FUpMFUSZzT8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDAxNDEyODAwcQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTQwMTQxMjgwMHEBYS5kAAAAAAAAACuI+ZuaeL0/o4IiE5mlej9jADiQsRi2v2jcbhaDAYE/rENzdhTyiD83bcDkUNTOP7n7yToC2r4/QAZ5VOYijz9iLwyC5PV6P5A7tz8dWo6/szFv4ImSzD8epYgGr16UP+HVw8yA/Ko/oqAGmeXmsj8El4+Y5R7Lv0v9A2RKcXG/J8ktbkzPxj/Za5XD0krTv43qkVOU6Mk/4nlZTWeefT9fD26ZfBawP2inH0p2k8K/I02DrgA0fj/VgnDxgBPBP8ezDMQRbqU/SMIgOyrX0L+rtC/bPWrGv64gonguc7i/AGC98gF50r/Jx3zf8BGqPyX/oIHEm8G/QaFop4u9sT9Iz+n1SLKgPxNVy0UnX4I/1YE3EiR7e7+Irpb7LFFrvwwOwkRZQbi/cq71/8GMvD/BHsyYtMnGv0rFj2ThB6w/1hkGc+A9lT/TekGtDfqGv82fZOah09M/miMl6ulIuj/POyHfeqaSP3jpM/uuOZ4/mKV2MSzj0L8cD0Qb9ezAP9GCQhk4j8E/jhZ54gYiyb+pqAkS/5i4v/1Q2r2QEpc/bCd1wgT0sj+HA76RyISaPyFRCpOh2oi/XEzzvC43xb92Y11Y9T7BvzcdTSGlm5S/+sq6CfAVdL+2QCAjqwqsv5XOuJ5p4L8/qQaihiHDxz876m6651KQPxu2GdYlxqQ/j3S3mNArpb+Ck90ytNmNP/pc1JXODYi/CsHy4uDVyb+nuicFIYO2v7gqQSiwRJY/oGV13cStsL/Y+v2cviO0Pw8nFyXnv5E/uAWlAeIWvb9zHSxvOvDLP8KgpoYgk58//UNoxgMQpL/YO/b0ZNuzvxaoArV/c5A/mNSSpn3olT8sFYtGwLXCP5cMBlvXP4e/ekNeBfLmsb/Q7G2GkG20v4HWqF/8Nqe/Zt/1PFiPrL8762Qalgy8v3BEe5tM5rS/aYoE1XsTob9V762Xs6R9P7pGx6OwHKQ/v5fPf/Lijb/hLSE64JWtv3KS8qTzha2//24+QHPopr/xW/0mujOxP6jHG2Rag7G/7ekY2aKBvT9IghlPwBCvPxkTMKs7Ebm/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzk2MjkzMjQ4cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM5NjI5MzI0OHEBYS4CAAAAAAAAAGTGTnECS80/LcN1ChtWi78="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    6,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        4.305251892654904,
                        -4.3902236200718185,
                        0.6394509653409632,
                        1.9239146862449985,
                        -5.217258117274891,
                        2.5081406060891216
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6
                ],
                "values": [
                    4.305251892654904,
                    -4.3902236200718185,
                    0.6394509653409632,
                    1.9239146862449985,
                    -5.217258117274891,
                    2.5081406060891216
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 65
    }
}