{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        6,
                        6
                    ],
                    "values": "eJwBIAHf/s7EgHbMavA/w/wktRjvrj+Ma7Vj3qq0P0tpsn71v4g/wXV3sdB2pb+v46YzCkuZvwR/hSg3lKG/JcRoYr5w7j/7uD9KaRywv6eFEvYN0aS/FrTq8lCakD8+iSFgbKuPP/ijf0mHpKA/EXTRaAqBcj8gvqEt9fPsP1QM3qOWTYU/Ale3sz1Fir/8G4uEC6JSv5MYZUuky7K/a+C2E513hr+CGK8OIAmiv6mE6l1LCO4/HsL044D+mr9GvzgUuwKXP1aXo22AsrM/7WK1O9jCoD9Uxx5my+2XP+WPbEfgXam/jaHGQi5h7j8yjs6aqCyqvyiJ6/odrq2/6plcdNk1rb9ko6RM3V2cP8LLSmVBH5q/46thglHDmj8PfMhAlLHuP/bUllM="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "strides": [
                    8,
                    48
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.07705245815533729,
                    0.0902981269485505,
                    0.29856874629456137,
                    0.10699064977812005,
                    0.03732179167719461,
                    0.035248307867710035
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.0477395650045637,
                    0.008486002238366836
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "values": "eJxj2CC//2zLQnuGBdsDrmdO2X/A0fDEsv8T9zO82K4jHVpqz9AQEeGfMWc/A4dcBafrFLg6Bo2vC3gfLLNv2DT1x8zm+fsZ/iyM3hVbZs9Q8YTl65YO+wNm/w1u+S6BmwdT53b0wLUNaXvsG25f15gl17OfQefu9yfcCfsd+LJ9tc2L7eH2Qs2Dq5vqt3siw1x7BouzcnbrMvczzLCbv2izL8J9UHth5sHVRRVZX7+0zJ5hibRW4ewSe5g/YO6D2wszD6quoPrplf8Wa+0BS22EBg=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            6
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            6,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzk3NjMwNTI4cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM5NzYzMDUyOHEBYS4yAAAAAAAAAGeOtEeakM0/8B4k1B2v0T8fniabBxzNP4WqSQR/VNa/eF5Fsx0R5L9ml6cpzFLeP8KoCJ3mudy/4l5Qz93Izr9aZY8Lfm7bP/nysPJ1/+M/wV+q+6zu178f/cUfOwvOP6mMFKkRq84/Eu6jr/8n179Fl0kmyP/PPy16D9uk/NM/hlxNUMiLu7871mJsD37kP1+WElHMKbw/VLmqlOp91z/TCjkQxA3WP8exvPbO9MA/5c0MNQUr2b8QFExogM7Evx2ZjbDLRtc/PjE+xi2B8b/LOXbDNdq1PykwpfuVvuI/8q2BIDN+xL9iTNR8oC3hvys8f/Mxddy/JpK50mmG4b/ajbAXbwnFvxcJcRhfE84/Ua0Vfc3qgr/0svPOTsHdvxd/myOQvuU/lIqGIUrP1r/+lYVpjHbdv7vEFJ01o8K/AomSAVoC0T+bDSlCxPvgP6+2SEtlgPI/AdwsTIwP3L9dcQEjXYLev9ibhgQuVeK/GzAfx1KY4b//PbVEx1LFPytvf5gmEdO/ATRjpI2ozz8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkzNzczNjMycQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM5Mzc3MzYzMnEBYS5kAAAAAAAAAM/2Z6C1+rk/rraGBQchkr+cca5F07+iv7Xy7gYSKYw/YwlOxt0+qz/Z7laxD5fJPwRtWtZc8qc/AwJB25dTgz+oTmdHDBWhv7WBzDWA2KC/joK5qq36zj9T0l9PWzScP0XGc6WBz5Y/xK0SF/owoj9DDPZn20fRvxXIuNjnM2Y/HNyd5MDCwz/ShWp2uQvTv/DBZBBNnsQ/9P++Pt5fxr/kYAgukmKQPwBBl0b5s8O/SQEF6URbmL86H+UWhWfFP/0UblYygqU/YCjp+AZazL8Ho4z6xyfDv7+L/aFZLbS/ZqK2iDd10L8x7x8XHXCfP44ek5SKt7+/wcJtRvVMtj/NVk97F6RgP4llCtzXzaS/W8ltEVE9mr9FQ1oXdE2iP2wakUdzeLi/DeKl8sv8Yj+6IIcIyAbJv7B77N5tM1q/W+4rw3aWYT+0xAIVHTacv8caaob6KNE/HdzOddXtwj9EPxpnXeCrP/Aglam2VXQ/EykVWKBxzL8gx6+Ks0S5P2kdOD5G1Lg/0fxoMXqlx78jtDTKMUatv4Va8C8zoJk/DK2jhQBIlD/ONuJNyLmZP3cpfnnwsaC/NPNSkBr3xr+gK9VDlkLCv4iWaNnXZ5O/OgYYFnjuoD906nAY9Kiiv4ZLgPauIcE/vUE8aR4CxT8VuAAECyRgv/NjNuM2JlA/5ylcQkBwlL+2Va2P/fSEv5dPKK+IKZ2/PLqMS0n0ur9+bplmRR66v4d46h1eLYw/XIpIx7AdoL/yawwY0dyBP8MAjoM9jrU/uyiDoC85t7+jVL1mtczQP+awod1guaY/r3fHuoADrb+3Lr6VcxSwvxSBWWUQZqs/Ih8y2tMerD9r3fMtVRe1P8yQi9F+Fpm/sEUT1s1mt79S/jujPOiGv9KYwYHtQJk/WAK3BzpYZL81wMC4BC++v6pwNCMZhsS/VWsm4gfTsb8vFDxuk3ecv07Ty+0qyqw/VFxZ0XbIlr9cjkdcRESyv17a0Ymv7ri/IaSiPIu9wL+bhKUcKWK4P1Cs6AkUFay/Il9Bt9Zjvz9Sfcjq/NSnP3a1h8y83be/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkzNzE1MzI4cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM5MzcxNTMyOHEBYS4CAAAAAAAAAMC7oZiz9cc/4uY/jV6Qm78="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    6,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        3.271882798205533,
                        -2.844091616662124,
                        0.49100036324344337,
                        1.5690141517083407,
                        -4.571730910227697,
                        0.8457617139356794
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6
                ],
                "values": [
                    3.271882798205533,
                    -2.844091616662124,
                    0.49100036324344337,
                    1.5690141517083407,
                    -4.571730910227697,
                    0.8457617139356794
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 45
    }
}