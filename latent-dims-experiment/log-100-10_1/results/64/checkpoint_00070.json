{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        6,
                        6
                    ],
                    "values": "eJwBIAHf/l3fSktRIO8/CbmnYNG4mj9smRVUmPmiP2tvpwc/oJg/R9cRU5ayoL9U0PrWbAuYv44FsBJ3GWm/pxOVaJto7j8ZQRoldJabv3/ZKm1a6ae/dSZt1Q6Zlz+cXo3NykZuv29RXJ7XLp8/6vy0zsY9gD+9Ds1kJbbqP/fW6C6JEaY/Spo4wzIKlL9ux+IgvTGYv5zMCWaaUbW/yooxHsmtiT8GV3dIRhyXP/FDOwmzq+4/OKheJyBJqL9HNZlXV+OjP0SB8HKbv6U/r19We9IBeD/LEokholWhPwygyrru5ZO/2sMX9HQi7j83otYFwh2kvxKhRw/jN76/Kp4jSfabsL8BbHT/2PG4v3/5ekSwBpi/assNRW6fnD8l47DdxbPuPxkmjxk="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "strides": [
                    8,
                    48
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.07724911933296617,
                    0.043217405615032546,
                    0.06686927438707978,
                    0.030150439416861255,
                    0.021845325835536146,
                    0.02018486177874872
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.047052843536936055,
                    0.006411477830108424
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "values": "eJxjuJG8t/5srz3DhMQs9+Tq/Qyz5IJNqhr3MzyIKbwaHGbPUND6+Hh5234Gj42urN4lCHUiLIni7RPtGcxfZD20ad/PcGH/MkOfUnuGA4uCJh7KsWc4orF/zsUehHlQdTP2zTdb57kCqO7+A526pv0MC3ZsnPXJcj+DUtUqCb4ye7i9cPMg6hpcBQy0lgHtW5D2NMcgGUhPdik+64VwH8xemHkwdRV/OoxSptozWPx3vtwONB/mD5j7YPbCzIOp65lRkPpnij0Ai4R9Mg=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            6
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            6,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzk2MDAzNTIwcQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM5NjAwMzUyMHEBYS4yAAAAAAAAACfkC7gJc9E/bMSVcWV72D+c1SqiSKrWP/qbXLExFte/v3cKwV7Y4r/bgNxxTXnjP5YKRERmreC/msvbScSYxb9IlxwpJtPaPyVQ394Rwek/S0xN1TBS2r8doFgBAuTHP0OuU3UKtcQ/MAzJZKjR1L/xZIhDx3HbPy1MbxkXVtc/FrsxKevetb++bNvu+JnqP4yUkf2quNo/K/FRrB8f2j+PBjNeumPXPzaFFk284pQ/a68QTgDu4L8uxWGQtu+8vybpnhxTdNk/NNQF0c3d97/qYyinN73JP8ProVNGBeQ/j4kv5hRDy79igb4Nme7jvylVagEQReO/9PqEsjXf4r+EWlanHki6v1Zun01w8tg/sA6B97umxj9mywPEB/zgvz08JaQCwug/kyJFsj0d1L8ucFC+zHjUv5BF4iFfIMi/mrdOlJH9wD/6dJEtYYziP/EbXBFCUP0/g5Rb5rZi3b/gToxJlrXYv819N4uyWem/tbUeqQHC9L9OxO00PVrMPxBXSQKKeqK/4WCac/NpzD8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkzNzYxNzkycQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM5Mzc2MTc5MnEBYS5kAAAAAAAAABJG0yjL270/DAjajEf8j7+efwc1xT+4v9NZRHtPTla/4v6lghj+f7+4V2cgHFbPP5ozEz/HXcE/Hoag/8sQlr/LBKRIOZmqv9ufKF/I0ZM/sAuZYXIGzD/k5taKBW6Pv1IUSLj3QqY/Rb4/ysF0cb+WCD4lR+/Hv3cL72Cix40/suZ9bV3oxj9ccYlEwbvSv4k0WUX5a8o/PgdfPmoZkT+Sx7zF6LaRP2JSvDcWbsG/q3VqAK3zc7+JuaabQovAP0OfXqO1p6c/02GDxQ0Z0b+FXZ13CpvHvxu0R35A5rO/c8NsrJR50r/ES9hL272uP/Z1dyC//MG/S8NvolaYoj/DzFyv4TynP+1A6zYZOae/0TwhuRM5qr9ER4tIB22hP5uS7d70vbW/D0q84n51sj8o56QaHxvHvx90Q21+Z4k//RYxwjSeiD8+HneRaa12v2xtnn2FFdQ/2sPBSs0EtT+zmsM4uWyFP8g2lgckoJw/CnLPxA8l0b/TqnDgmSDBPwiZEonGEsI/ZiEK4RSeyL8QhtspZr27v7NxceuVz5I/FBrWmp3/sj8JMib0u8mQPxP7UZ18ea+/+9Z9IGFMxr/hCrk/jK7Dv2mGXSVq23i/FFXT63afXL8UcH8kUoKnvx2/rSgCe8E/SmNwdq5gwz+Y9vMuELWgP53pBj1tCWG/j+BjQyKspb9PvD/YHfNxP0f9qFKByZS/CTI2XYzuyb9hSmlYx6a4vwvDnYD/glU/EhoSMMKPtL8rJ15hyaS2P+EYFoEUb7A/6ATmsMaov7/cEBi7aufLP6LmGyL/E6Q/tmiOE3AmoL9Dnhk/GTmyv9NIiSxACZg/j9YQtx0LhD/oHS8VXZnEP9jtqEPRm5W/1Qdq/20dtL8nIH13PMSuv85rpvzfN2w/rqTi9s7qdj9b5lLZosW+v1v3U/Kqir2/pb0fkWzsqL8bE6yk2wSgv7UuysYGKqI/WlCAFjZPdL/rAtxyJ/CwvxPXLNuODaW/2ZyR4dozm78DTTyB8xKuP4gYkxBGvK6/943WHzJVvz+WuDSsu8aqP2sMFcgJkLa/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkzNjk4MDQ4cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM5MzY5ODA0OHEBYS4CAAAAAAAAAC02w5/Jzs0/uzho3Oo/lr8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    6,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        4.3803905250800454,
                        -4.458853210149779,
                        0.6244720537628421,
                        1.8757108410076933,
                        -5.351518106499666,
                        2.4703510895150083
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6
                ],
                "values": [
                    4.3803905250800454,
                    -4.458853210149779,
                    0.6244720537628421,
                    1.8757108410076933,
                    -5.351518106499666,
                    2.4703510895150083
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 70
    }
}