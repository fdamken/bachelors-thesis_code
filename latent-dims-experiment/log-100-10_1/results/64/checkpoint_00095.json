{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        6,
                        6
                    ],
                    "values": "eJwBIAHf/gB1kSG/6u4/ypjcgSPjij+Lhns5wJijPyKSbxZz7pY/o1R/ZCinkb9y/IMsIjefv4AtWnbu2oo/sD56V6yK7j+72l5j9zimv1yB0f8byqa/Gy4fduQOlj/xR+87tX56v/CLNtSgS5o/kp0OdU9rNT+VkAfNH+jqPzeey6N0jKM/7HqkejKCk7/eo1rVok6iv/UQSIchcLq/c4KCouZqlj/POU8JTTBkP4On0W4Zc+4/7hbxrvB9qb8BSknhBeGmP2OZ0lQ6mJw/yocFXk/eXz9DTD6BR/eeP2YyfoNztY2/t5bqf0gk7j+rAJSbYsmdv9zPykg+Qbm/3IgusHZMsL9QiUm91aXBvz0Fq47vOKa/VdvCKGv8oT+KrfoYiWzuP7BilAo="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "strides": [
                    8,
                    48
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.028283130966446187,
                    0.011658733012442675,
                    0.022609210398304675,
                    0.007560473768867478,
                    0.005829787119188051,
                    0.006290002242995635
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.005915984701461639,
                    0.0165159632919939
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "values": "eJxjMGA/Jr+/zp5BgaFc3b9oP8OMML/OlpT9DAwel94Ea+xnEBBmOLapcD9DwEpehuB0hLoJfenc6fX2DFEzqj64Fexn+ODy/6Fnjj3Dg1fT17Hk2TNMsPSdWleKMA+qzqEm7fehZ1PsGUQlrJdtKgaab/FIrSNrP8O0FTfLI4Dmw+yFmQdTx1Sz+SBLE9D+x77hoklAWilpzks3hPtg9sLMg6mbcGh3onAz0NzzTsXWPvZwf8DcB7MXZh5MXYtH1n7ROnsA2G5uow=="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            6
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            6,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDAxMzE4NDY0cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTQwMTMxODQ2NHEBYS4yAAAAAAAAAI3vRgrC2tI/Fu+HcFCz2j+mOZfLZCfUPz+iK5hGPtm/6gRS64mP4r8ss8EsZ/PmP6WWTj27OOK/cBL1LkV6ub/tRiQ6knLZP1CbtZ5PoOw/Y3XtE6RI3b/My5GWR3W5PzaCe5jI7bg/UoLfU9M61L+rVbT5ZALdPz9LanMJW9g/uFvbcoDAuL9G3AoDBN3rPxH83gaE3eA/Ab8Vnm503j8IqqQwRcDZPzCbuRZ6tJO/V6aPHQJx5L9wOxXtT0uyv+30vYcqm9M/83HZyhbk/7/SbsmD/mfIP0dtljHE/eU/gss4wZTe0b8Wui/nlqTnvzMQfFSkI+W/CyRGj6OL5L+bVH0To460vzfZcsprRtk/jJs6/Hvrxj8q5TdJgnfhv83eromOs+s/96ksTV+k0r9Gu+pMV6rRv/KFG2y8aca/Ra01euFuwD9ASpZBARjkP4qVyM36tgBAS4efZIi33L/OQJ6+CvnSv9X1RGHaxeq/g94h/2V8+7+s2I7gX83NP44+AaCmD9I/cYpLdmZ9uj8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzk3MjgwMzg0cQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM5NzI4MDM4NHEBYS5kAAAAAAAAAAaP5Df/b8A/4wfaS8h/jL8iFnjnhXiSv7nAF9W1R5M/ZahNaM5Uiz998sEYuHHQPzDjvgru1MQ/VOqlLxAWkT9V5XsO7uCav3LyTIqpxaa/ayXlH7VKxj9guZHrYTZev4H8goQRgo4/URLFuGgonj95ApnfbEjAv3dlVXaUaHU/QgmxNCUUxz+OvSsJBFTLvxMtsdoz9cs/7bNrrzQ2pL/Y9R9Tqot9vweNrH1DpMK/2rRsPhBwpz9YXPNYT97EP+jnbIgQ96g/6OZbdJng0b84gxOlCqPIv/ikGGRHKr+/PsyOtcN00r8Rb9Vt7YyyP84IZr9dPLy/oUZj74HLqj/qsFofEtKlP55XtGlAnZe/qHOELH6Drr+m/X61sYWkv/mqmATlnbO/5wCRRAgHwz8E68ays3THvyv2B3alBXk/F4O+V2aCpz+J1t+WrM+fv6R9yDMR3dQ/zcnseijOrD8geLqHDHyrPxkE3q8npKI/DNWMaZvs0b9NukmifVnFPwbj3YQuocM/XlJFEsodzb91CU9evwC4v1wGAekyaJC/GMPNeTushL/KWiIF+iisP2irU1TIJJC/rMLN7GL5w79k9WV+MlLGv3C+DjeE75S/HjZWStgfaL+iewR8ZNKsv5O1Db2spbY/aAKL8vRIkz/i4WNB8C9TPxYO/gvSFpo/QnSXvqw2kb8ZHB5PDIeOv8Vx+Wwoyok/DyninNfTyL9g2kYCPgm0vwvgAwl5jZ4/MinE5jHoGj8Psi0EevW6P+4SLwwP06Y/xG19EphSsb+gcnde5FXPP6tXPBs5jZU/JTNfTs/pm78rO94rGTu1v0i8PhwCAGG/5L3zW/i9cj8IFLr5+erGP7BGgiyeh3C/8IKjN2Dfo7/YW5J5r86qvxgjgWrshJ2/m2wrvpG0nr+uIaGaevusv8tjJmFTlre/5ycnHh58sr+VDc98sFqZv4GXwYZxtKU/44XRmwWPkb848fx57JKovz4JswJ5Pmg/nTYPcvuNsr9MneVNPtuJvyQ2f2jUBLS/HQ3GM/JNsj98E92t3QqyP7h0/aDU+bu/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDA2OTMzOTUycQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTQwNjkzMzk1MnEBYS4CAAAAAAAAAAf5GwzhXc8/LhlCKDApbb8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    6,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        4.496537929174522,
                        -4.699428383665581,
                        0.612993798676327,
                        1.6362194118538813,
                        -5.609955929059944,
                        2.4827069625314238
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6
                ],
                "values": [
                    4.496537929174522,
                    -4.699428383665581,
                    0.612993798676327,
                    1.6362194118538813,
                    -5.609955929059944,
                    2.4827069625314238
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 95
    }
}