{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        6,
                        6
                    ],
                    "values": "eJwBIAHf/onXmboSxO4/5b9ZLbYTkz8BZ+WV9+eiP8MvL/2edZk/nxMIXQbTnL/mjxHzfwyav237MYKFBYI/OF2xUeeI7j9+NIaRIr2gv8SmDtSFM6m/0nIiZ4XCnD/ybu0dGkF8vzO/Rv68+6c/EbKw4JAohz+eswO4EuvqPzzHg1V7nqc/IntwU8jZlL+UEao+0x6lv7wJ+DATrLO/o1PKfplXoT8wVnRT4HabP3gGYv551e4/uRz6GLC5qL+DahbHf2+eP7YLlxgKbqc/NFtiWQf5kD9Mn1fdKPyjP0pXiDZtlou/8wwsAPvp7T/yqNtaNyOlv6zWk0PDhLy/KkDdutlvsL93dSLyYEO9v2MGkztTW6O/YN0UUPBFoz9XyGmbuFvuP3xekdA="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "strides": [
                    8,
                    48
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.050128370136099144,
                    0.025585674368070948,
                    0.03522168188935516,
                    0.01741815166964332,
                    0.012787753130052117,
                    0.011980760142092232
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.023051318721452843,
                    0.05447754302457031
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6,
                    6
                ],
                "values": "eJxjUBAt+SfQZs/QkJicWFKxn2GLbJhXXdZ+BgaeLt65pvYMDD6xMwrr9zN0MLP0VBcg1E3wWSJS0G3PYPni9DTlxv0MFl7S3dPK7RkM1J/f/1xoz1CQ5Ngo3IIwD6rOwfHWFdmWufYOlglCSnMb9jNs8DvU8SFzP8NbTwbTsBJ7uL1Q8+DqJP5yyb3rtWcQWMynPTPFniEhrZr9v8d+uPtg9sLMg6nbwcsmw99vz/DA59yL+lR7uD9g7oPZCzMPpq7KPbj9dbc9APpHbBo="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            6
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            6,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzk2NzM3NzI4cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTM5NjczNzcyOHEBYS4yAAAAAAAAAJC5tWUo5Mk/UXf5hxDA1z/M37d+cKLTP4S+BRAa3tm/u9n6i5If4r9xVWPCtO7hP6GYgQnPl+G/pUmwPSS7tL9y9lJlTA3aP939hrJOgOs/T4v1JCCL278EL0huH9HBP3G5G2VhR7k/XeVmhFob1L+ayZdFmf/bP1o8Gcg7O9o/VENoRoB7vr9AQrqZS6bqP+lXArkU498/NmV01ry42T+2NYSa9vrXP/mImpm+rZA/C2LYGmQ04r+oZpTfBjG4v8Yrml3MddY/Mrve5Dc6+79HaUoRB1nKP/HRtZ2qNuU/ceIqpgcLzb/GPuNhyobnv00MfNOLO+W/qNnmOl/c4r+057Rmu3Cuv/NUbPs64dc/YU5Lk+Qcxz+nhvzOyp3iv6Hy06T1Zek/Sc/2IaHo0r8F3+IG6BnVv75JTan8f8K/M8nXpl1juz9G2ylSWIHkP9PTlShbUf8/5nQnLl7X3L+xwIoTkUHVv0hT7PPFNOu/rmxSQ9ZN97993d3W4obPP1Rey+JxMKM/aBBUA8MrxD8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzkzNzE4NDAwcQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTM5MzcxODQwMHEBYS5kAAAAAAAAAPEOsqtRgb0/2Kgb9iz9s7+DNHf23u2Ov7cHtbcDXo6/lfj2LD5Fqj/un/yLY3LPP336V6uUHsY/Hk97jRHxij+Z0AkcSmyAvyVekDbXoX+/R0F8LKfJyT9cL3Q2u4GIP4OpfQdCK5m/ELSe6UFNrj82zBKsGeG/v1rcVtpsJIk/3AMpC2KtxT9YtD2AJwTQv8QpK5N4h8o/ydzahBBnkb9FdMY/XpW0P2oZG/AIM76/YUJCXiSNpT9QuJxGrqrDP06Zu/gJQas/+Am92nsn0b/rRu4XY6nFv/piBuBYC76/G7aG4Bct0r9gZydR1ZygPwpTAedH4sO/GQaj8waOkD8WT6A8U1OrP2iUA8fJD22/OR6Q1MAHq78u5N0RYWeZv78aeVdU/bu/YX8D/sQewz+uTb309WzFv9+/G+6suLY/szaGYjGDkr/Jyt0v1S2jv2qOB5nzI9Q/MOL7uhaIsT9kd8H2NUCrP6M3Cby0tKE/SPlwz30z0b8TkmTZsDrBP4QZ74n5LsI/Jfz6ohZZx78ncPxxp563v0+XWcZlsZI/VMJMtUI8YL+1DfPpP32nP7+du2IeYIm/dRvN84kXxL/s2w7awYHFvzVCFxLY730/kKNEJR6jf79qFv8YRFGhvyLun90O88A/Mb/EgEwKuj9wmCKL4UqXP7IroSGZ+4a/yH401Uxpmj+1CTDvQBmZP8aiZ/3q0XU/qxMhrsOnz79eHi/jdDm0v06KntXov4M/LShrz2U2rb8HzZ29EwyyP+ULLCVuv6w/TMI9GK4DuL/sPOwQCMvOP4pSvvjIfpY/A/n+vtz3mL8WfSxRfcmqvxYtYDmXCGM/vbhAaaQ1cr9rokqyM1nGP2G0/RkF8pQ/q1pSVHLysL9HSA/9Db62v25TedTAtqa/x/vYrevapb902yqAdNvBv7Ta4r/tzra/z8ur89M/rL8nc00sBpyfv39Nu/LitqQ/QUq1cxwHhL9CtARktAupv95CT8FZXW4/vW3Ht/rTmb+mDYWjZYWDv+NffnFwyLO/wbFjiEOwvD9ZC2dIcc6xPx148/WDeru/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMzk3MDE4ODE2cQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTM5NzAxODgxNnEBYS4CAAAAAAAAAOW9mdal680/BzVbZNdacr8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    6,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        4.535307876982773,
                        -4.6175086667427605,
                        0.5376991873128849,
                        1.8353054610232271,
                        -5.4893475842569215,
                        2.5825945083273805
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    6
                ],
                "values": [
                    4.535307876982773,
                    -4.6175086667427605,
                    0.5376991873128849,
                    1.8353054610232271,
                    -5.4893475842569215,
                    2.5825945083273805
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 80
    }
}