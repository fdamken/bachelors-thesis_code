{
    "result": {
        "estimations": {
            "A": {
                "base": {
                    "byteorder": "<",
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "shape": [
                        10,
                        10
                    ],
                    "values": "eJwBIAPf/C1vrX5vXe4/3h+Wix4igb8/hE1NKYuBP4b96dHMC12/Vl3x6FbeiD8CpL+PUAqLv53MhlrCN4I/WbrlfelZb78xgR5ecAhWP8TqbOKNRpS/CH2NXtoLTz8vcd1HPtbtP135u+1aOYy/O1LqV6zyhr/qD3MIrJGXP8NgwShCsIi/DCmoGRVxe7/Iya4ktfyRP7QlzS3Kdl8/69R2WQixkr+odv8nVO5wvxMxWsXcJqS/OlYGFQjX7j9yPx4Q4EZjv+Y21yH5LoG/X/zl0zoDcL9LliIUbJyAP7MZoYzqhpg/3G12fNSxdj802iZq2VGgP9KM7S/LxH+//z3DzQoYor8g/bnr4b2Tv4KvvPrDGe4/zZ+1URyjYb8lgrxgDQF/P6bE9kXc2Y8/9U0fkHnAjj+p58XTP3yOv8NdT89/rJg/a1eeTa7pcL+X98IItrhTP45xnZX0jp0/7ERVReK8nj/3+483U6fuP3rrg1trqaC/KpYK5AFgcz+mVUWsN5KPP8/smest1SQ/7YriTPI6mz+R3ugczVJQv05naI96dza/ECn1ZOTTcb8RiJIEcENuv0BtbzQ9TGK/FJ/RS+pC7z+uEGDNnZB+P9tF79OYypa/gwnYtrYonb+OuJqaMMuZvyxoVA4VEXU/w2FT7mjWYz+ZzHsktZlhv3LNz+3lZ3I/8ybXxIqZLr/2mTJI/S6SP30N+PfRc+4/lU3I9/rIh78YCDbnHEWRP7fMT7MLzXU/7uG6OsYrgr8zAaSa5uKUP7gDxbEAjoU/n6PkmKPOiz+5S5+3MYaWv98Pc3QEZIe/qvLIjaJlgL/iQ9mDIGruP+BxbFRqT4w/HuMaO21wlT+V7ZDDA6JXPwXGuT4jfnE/iqxwhSficD/FPOA7oIyRv4Q96lo3G24/+6gNHczzmr8r1p2GF/6PP+DuExMZcYc/cTTklxp07j+KcoflFutzvwRZy+nvBUm/nNwJ9xBTkb9N4PCj4mqfv7zdnbZe6Yu/UUh3s8MeoL/nbaWlAIKUP43F2F9T7YA/q20O7/hmg79LifN8kMNrv5XMKS1BGu8/aM6exQ=="
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    10,
                    10
                ],
                "strides": [
                    8,
                    80
                ]
            },
            "Q": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.8234543500485928,
                    1.377370661333822,
                    1.0240222373534549,
                    1.0388418057087814,
                    0.9101507376292215,
                    0.9884021170924635,
                    1.059623353083679,
                    0.9265339260270624,
                    1.0440985464593397,
                    1.085885944588593
                ]
            },
            "R": {
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "values": [
                    0.28092565212924453,
                    0.16849424706902316
                ]
            },
            "V0": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    10,
                    10
                ],
                "values": "eJw9kt1Lk3EYhn+UrHArMoIFzbFgadqHrmxlOZ/3wE4WoW7myMTCgyZEpSVqTeKN5jCcsMhi6MlqsWkM1K0W0cfzsg5KtM2MaB3M5tYnHqwoGNMF7WDP+w9c3Pd13wpZs8xdm4TK1Whp/alXEJer/32LvAamjag1d0aAKVdjg6PD8Gu3+/ua1hlkPfbWouAkdOy1aIdP2tCVuWGWloWASSp3yPseihxXhVJWMrEEbOqQvn2WR/ZDpz3Yb0dmyG7TOHsw7q6rX7SEQOidb2IxAbj+n7rlUTsIJQuTfR8fI2OFW2fW21HMk+ecqZhg0t9xYJHGceu1R8iuHD18rm0cuT3nrSl5LofZ9PTAQBBr2tlm74oPeVtL94s/AWR+rtAZ96DYi/IQhxuT3Hd8BVaQKFK+CyLbeaT4peYW8DrZCZcxAM/DnSrD/hx/fmVorsYPrDH9N71lGskP9aI8xFFljJeuJ8I5n3eT1u4AqIxjoYEuATy335aPzD1ArmB7Np4WQLhsMwd2vRE9kx+xVz4PcTqc1dmbjiXgl32K6ogXmy2LXXXZZ8CsEqVCfg/4de+tC5+CQHuRZ/JDvSgPcTZtPD7b9iEJVy+e1Z8OPUFebUqZygPIG7K1VV+mkHanvcgz+aFelIc4ntJwqirzGRoMg2XRY3b0+Yo7o0N+8T+0u7hX3jP5EXvl8xDHEeJiLfsSwBqapHpHL9IP6T/i7vm9yDP5oV6UR+RcWOtVbYjDf9ZBeG0="
            },
            "g_params": {
                "py/reduce": [
                    {
                        "py/type": "collections.OrderedDict"
                    },
                    {
                        "py/tuple": []
                    },
                    {
                        "_metadata": {
                            "py/reduce": [
                                {
                                    "py/type": "collections.OrderedDict"
                                },
                                {
                                    "py/tuple": []
                                },
                                null,
                                null,
                                {
                                    "py/tuple": [
                                        {
                                            "py/tuple": [
                                                "",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.0",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.1",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        },
                                        {
                                            "py/tuple": [
                                                "_pipe._pipe.2",
                                                {
                                                    "version": 1
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    null,
                    {
                        "py/tuple": [
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "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"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            10
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            10,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.0.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxMjk3MDcxODA4cQJYAwAAAGNwdXEDSzJOdHEEUS6AAl1xAFgKAAAAMTI5NzA3MTgwOHEBYS4yAAAAAAAAADyt6YhTO78/LWR5FO0IzD9fWoBlxFbRP/YkzUbq45o/V9KwZISgrb8lG5NJTGbYv7nG4aTwsL4/PrVWFcdQyj9m0FHte63Cv+jmaijZ3Le/ddpMWn/9wL+dyEGhc1LDv+S5OP9hL8K/HzqeDp5gwT+xJB/yBqSSP2So8hAV7Mw/bTp+giIJ1j/d2AoPdMTGv6camLItO9E/RU12dzPS179iDBJTDwvNP345X+sN/dC/0mY4ngiJzL+CzzLDHka3PyD2KaCat9A/Zf1B01OnyD8DAq32vmulP8G3+87botM/h2vXmOCXkb9Ff0ddgunSP2PWsTXO+bw/XzsGjHBXtL8g71Osy4C9v1TsQ8PrIbO/wJyYWJCN0T+qKWViRE/RPzbIRUqISdS/qjzjjrmowz9ja47QG4GNv9dov8hEnaO/5qpet1FCzD/rFeqa2bemv1ut1yfP3LS/KCoa6CbVvj8AdlHD5b/VP/K6HRBB7U0/scgcDrFbsj+BiPnQD661v3ZhF/pJR7Y/Pz8xh2E+xz8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.weight",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDAyMTM0ODgwcQJYAwAAAGNwdXEDS2ROdHEEUS6AAl1xAFgKAAAAMTQwMjEzNDg4MHEBYS5kAAAAAAAAAIm9HO0Hspy/apCjF/l/uL/rU4B6MAPAvzOJgOLneL0/Sqd9dKRZkj/Wb97tanNmPwAni0aatLm/IZiXmvLMvT+Yy/gPinKzPw8ZlCLke6Q/lIU8P7Tixj9eUlVeuQzDv6qaaAhW9IO/HNfOtcLOwD8o5s5LJPHKv48E7Q2GlMW/fcy1TTdVkj9UY5TDSs64P6PmrIQM0cA/FK3XYiXWwr/9TWIfrtC8PxlpNlxvxso/LRKvj2mcwb9ZV13oqDa/v1zn1eOSr8a/f5k2SCv1kL/F+vSCF9C3v6GSjK/5bru/Ze6+NdU4wz+j/ElDgym0P/EOPvL8jbq/rw04Z+Myx7/ExXsyjznEP3g8474xIIe/CJE9nAQVwb8O0zloz+vBPxUNmAp1+qo/8i03bACJxj8bxsyGHYq1v4yy0njno7q/J8ef74H5ub9ZPTF4RmWbv+ZIBsxR2H0/O8ZY2EdUvD9BkEOsUK61PxnSAs2cW7k/JiJYCTdOu7+prk6zgkjFP7e5b4lAO60/EfjoTuOvpz84xYii1g/AP9jgBwrKmJk/RM94h13koT+2AuLn3m2QP2sVjgTGIMG/tNGK2lFzrj+xCNCOG+mEP3wGrp5227+/AYkE/6NrvD9+vmSShHm8PwezshDP6Hu/0g65ZKorrb8UwkRn6C24P1GcRtgN/7c/qmqndr8Ttr95j6Xd16m4P8gJlnL73qe/IGi1NSQ8ub9EgmumrSWwv2w+2Bj8Rog/ZnBIxcs2tT82Gv7VHnikP815iD1gG7g/zNGCwWZQmr/w+bXA/k+5v9CjTCLEcqQ/4v7vUVsis7+HTwhHDiakvyPexNvvbri/OD/GS859wD+nwHSLKzXBP2vvJW1DeZe/q0+bYt5ltj9pbgkKQOCwP5KkXaN7X3s/Yz1EkAnEp79FjrEgLku4PxVIqiVdqn6/rLTrYK7Fcj8jeNPnEQg2Pxp0VPAlfK+/JgTVHlVbwj+yHFYcVjq5v37HQ4DrGLI/AVVhVGE/vb8SEdLzidOhP9OiwdN1za4/VvklFDVGsz/oLh5ruEaBvwdNhmvp27M/"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2,
                                                            50
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            50,
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "py/tuple": [
                                    "_pipe._pipe.2.bias",
                                    {
                                        "py/reduce": [
                                            {
                                                "py/function": "torch._utils._rebuild_tensor_v2"
                                            },
                                            {
                                                "py/tuple": [
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/function": "torch.storage._load_from_bytes"
                                                            },
                                                            {
                                                                "py/tuple": [
                                                                    {
                                                                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApEb3VibGVTdG9yYWdlCnEBWAoAAAAxNDAyNDk1MzYwcQJYAwAAAGNwdXEDSwJOdHEEUS6AAl1xAFgKAAAAMTQwMjQ5NTM2MHEBYS4CAAAAAAAAAGRM9Q9eXLG/HE3WKHoavD8="
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    0,
                                                    {
                                                        "py/tuple": [
                                                            2
                                                        ]
                                                    },
                                                    {
                                                        "py/tuple": [
                                                            1
                                                        ]
                                                    },
                                                    false,
                                                    {
                                                        "py/reduce": [
                                                            {
                                                                "py/type": "collections.OrderedDict"
                                                            },
                                                            {
                                                                "py/tuple": []
                                                            },
                                                            null,
                                                            null,
                                                            {
                                                                "py/tuple": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "latents": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    10,
                    500
                ],
                "values": ""
            },
            "m0": {
                "base": {
                    "dtype": "float64",
                    "py/object": "numpy.ndarray",
                    "values": [
                        1.5364590588546931,
                        -2.1034865692445996,
                        4.3742619425921125,
                        5.5925595020385215,
                        1.6742650305336235,
                        2.1931962580914974,
                        2.6540444446642892,
                        0.06882456798263742,
                        -3.1207223151312777,
                        4.574133236559966
                    ]
                },
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    10
                ],
                "values": [
                    1.5364590588546931,
                    -2.1034865692445996,
                    4.3742619425921125,
                    5.5925595020385215,
                    1.6742650305336235,
                    2.1931962580914974,
                    2.6540444446642892,
                    0.06882456798263742,
                    -3.1207223151312777,
                    4.574133236559966
                ]
            }
        },
        "input": {
            "observations": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            },
            "observations_noisy": {
                "byteorder": "<",
                "dtype": "float64",
                "py/object": "numpy.ndarray",
                "shape": [
                    1,
                    500,
                    2
                ],
                "values": ""
            }
        },
        "iterations": 35
    }
}